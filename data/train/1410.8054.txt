{
  "article_text": [
    "safety critical systems , such as aircraft , satellites , and electricity grids , often rely on sensors to measure their state and their environment .",
    "the true state of the system may not be measurable , or may be corrupted by noise , as quantified by a so - called observation process .",
    "the controller must choose actions based only on the information contained in the observation process .",
    "the nature of safety critical systems dictates a need for formal methods to accurately assess the system s ability to meet rigorous safety requirements , and also to synthesize controllers that guarantee performance to a desired level ( correct by design ) .",
    "it is therefore paramount that the controller exploit information from the observation process , to obtain theoretical safety guarantees that are as accurate as possible .",
    "reachability analysis , which determines whether a system s state remains within a given safe region and/or reaches a target set within some time horizon , has been used extensively as a tool for verification and controller synthesis for hybrid systems @xcite , @xcite , @xcite and extended to stochastic hybrid systems ( shs ) @xcite , @xcite .",
    "there has been little focus , however , on reachability analysis for partially observable shs .",
    "while there has been some work on deterministic hybrid systems with hidden modes @xcite or uncertain systems with imperfect information on a partial order @xcite , reachability analysis of a partially observable shs has been approached only theoretically @xcite , @xcite .",
    "this , along with our previous work @xcite provides the first computational results for both controller synthesis and verification of safety specifications for partially observable shs .",
    "existing computational results for reachability analysis of fully observable shs are also limited . the safety problem for a discrete time shs ( dtshs ) , which considers only whether the state of the system can be controlled to remain within a safe region of the state space , can be formulated as a multiplicative cost stochastic optimal control problem @xcite , and solved in the same manner as a markov decision process ( mdp ) .",
    "unfortunately , solutions via dynamic programming @xcite require evaluation of a value function over all possible states , which is infinite when those states are continuous .",
    "discretization procedures can be employed to impose a finite number of states , as in @xcite and @xcite , which present rigorous uniform and adaptive gridding methods for verification of dtshs .",
    "similarly , approximate abstractions of the original stochastic model to an equivalent system that has the same properties are presented in @xcite , @xcite , and @xcite .",
    "even so , current applications are limited to those with only a few discrete and continuous states .",
    "the safety problem for a partially observable dtshs ( podtshs ) can similarly be formulated as a partially observable mdp ( pomdp ) .",
    "however , pomdps are plagued by dimensionality on an even greater scale than mdps .",
    "the common approach to solving pomdps is to replace the growing history of observations and actions by a sufficient statistic , often called the belief state , which , for a pomdp with an additive cost function , is the distribution of the current state conditioned on all past observations and actions @xcite .",
    "this belief state is treated as the perfectly observed true state , and mdp solution methods can then be applied . however , with a continuous state space , the belief state is a function defined over an infinite domain , and it is impossible to enumerate over all such functions .",
    "therefore the study of efficient , approximate solutions to pomdps is essential .",
    "although finding the solution to a general pomdp is hard @xcite , many algorithms for approximating solutions to finite state pomdps have been developed .",
    "these mainly rely on point - based value iteration ( pbvi ) schemes that only consider a subset of the belief space to update the value function used in the dynamic program ( for a survey of pbvi algorithms , see @xcite ) . because the value function is piecewise - linear and convex @xcite ( and so equivalently represented by a finite set of vectors ) , sampling from the belief state provides a systematic way of storing a finite subset of those vectors .",
    "such methods must be tailored to continuous state pomdps because of the dimensionality of the belief state .",
    "other than discretizing the state space and solving an equivalent finite state pomdp , many existing methods for continuous state pomdps assume the belief state is gaussian ( e.g. @xcite , @xcite ) , and represent the belief state in a parameterized form which is then discretized and solved as a discrete state mdp .",
    "when the belief state can not adequately be represented using a single gaussian , a gaussian mixture may be used instead . an equivalent point - based algorithm for continuous - state pomdps using gaussian mixtures",
    "is presented in @xcite , and demonstrated on a stochastic hybrid system with hidden modes in @xcite .    the safety problem for a podtshs is further complicated because the belief state is not the conditional distribution of the current state of the system @xcite , @xcite , but must also include the distribution of a binary variable that indicates whether the state of the system has remained within a safe region up to the previous time step .",
    "this , coupled with the stochastic hybrid system dynamics , makes accurately representing the belief state as a single gaussian impossible .",
    "we formulate the safety problem for a podtshs as a pomdp , and investigate representations of the belief state in either vector or gaussian mixture form through finite- and continuous - state approximations to the podtshs .",
    "these representations allow us to exploit point - based methods developed for pomdps .",
    "this paper extends our previous work @xcite in several ways .",
    "first , we validate the use of pomdp solution techniques for reachability analysis of a podtshs , by demonstrating that the value function is convex and admits a function representation related to the piecewise - linear vector representation of a finite state pomdp .",
    "second , we present a finite state approximation to the dtshs ( presented in @xcite without proofs ) that allows the belief state to take vector form under certain conditions , and show convergence for the approximation .",
    "third , we preserve the continuity in the hybrid state space through a gaussian mixture representation for the belief state , and approximate the indicator function that represents the safe region using gaussian radial basis functions . in this case , we provide an error bound as a function of the integrated error ( 1-norm in the function space @xmath0 ) of the indicator function approximation .",
    "our solution method converges to the true solution from below , using either the finite or continuity - preserving belief state .",
    "we demonstrate both approaches on a temperature regulation problem .",
    "the rest of the paper is organized as follows .",
    "section [ sec : background ] relates the safety problem for a podtshs to optimal control of a pomdp .",
    "section [ sec : abstraction ] justifies the use of pomdp solution techniques , and presents the finite and gaussian mixture approximations to the safety problem for a podtshs ( as well as error bounds ) .",
    "section [ sec : pbvi ] describes the use of point - based approximation techniques , through sampling of belief states and discretization of the observations .",
    "we present a numerical example in section [ sec : example ] , and concluding remarks and directions for future work in section [ sec : conc ] .",
    "all proofs can be found in the appendix .",
    "a probability space @xmath1 consists of a sample space @xmath2 , a @xmath3-algebra @xmath4 defined over @xmath2 , and a probability measure @xmath5 that assigns probabilities to events in @xmath4 . for @xmath6 ,",
    "we presume @xmath7 , the borel @xmath3-algebra on @xmath8 .",
    "the probability measure @xmath5 maps elements @xmath9 to the interval @xmath10 $ ] .",
    "the density @xmath11 associated to @xmath5 is defined according to the lebesgue measure as @xmath12 .",
    "we denote expected value by @xmath13 . a probability measure or expected value induced by a control policy @xmath14 ( to be defined later ) , is @xmath15 or @xmath16 , respectively . for a space @xmath17",
    ", @xmath18 is the @xmath19-times product space of @xmath17 .",
    "the state of a system at time @xmath19 , @xmath20 , takes values in state space @xmath17 .",
    "we use @xmath21 to denote absolute value for @xmath22 and cardinality for a set @xmath2 .",
    "a vector or function norm is denoted with @xmath23 . unless otherwise specified , @xmath24 .",
    "a random variable @xmath25 follows a gaussian distribution with mean @xmath26 and covariance @xmath27 , and @xmath28 represents a gaussian density with mean @xmath26 and covariance @xmath27 evaluated at @xmath29 .",
    "finally , @xmath30 denotes an inner product , with @xmath31 for vectors @xmath32 , and @xmath33 or @xmath34 for appropriately defined functions @xmath35 , @xmath36 .",
    "the main results of this paper rely on framing a podtshs as a pomdp with a hybrid state space , and drawing upon existing results for finite state pomdps with additive cost objectives .",
    "we therefore present an overview of pomdps and efficient approximation techniques for their optimal control , and then express a podtshs with a safety objective as a pomdp with a multiplicative cost function .",
    "[ pomdpdef](pomdp @xmath37 ) a pomdp is a tuple @xmath38 where    1 .",
    "@xmath39 is a finite set of states 2 .",
    "@xmath40 is a finite set of possible control inputs 3 .",
    "@xmath41 is a finite set of observations 4 .",
    "@xmath42 $ ] is a state transition function that assigns a probability measure to state @xmath43 given state @xmath44 and control @xmath45 for all @xmath19 : @xmath46 5 .",
    "@xmath47 $ ] is an observation function that assigns a probability measure to observation @xmath48 given state @xmath44 and control @xmath49 for all @xmath19 : @xmath50 6 .",
    "@xmath51 $ ] is an initial probability measure over the state space @xmath39 : @xmath52    the state evolves stochastically and is markovian ( e.g. , the state at the next time step depends only on the current state and action ) .",
    "the information available to the controller at time @xmath19 is @xmath53 ; that is , the controller can not directly observe the state .",
    "the control input at each time step is selected according to a control policy @xmath14 , which maps the available information at each time @xmath19 onto @xmath54 .",
    "[ def : policy ] for a pomdp @xmath37 , a policy @xmath14 for some time horizon @xmath55 is a sequence of functions , @xmath56 , such that @xmath57 .",
    "we consider non - randomized policies , i.e. ones that assign a single control input to each possible @xmath58 , which are sufficient for the problem we consider @xcite .",
    "a control policy @xmath14 induces a probability space @xmath59 over the pomdp with state space @xmath60 , @xmath3-algebra @xmath61 on @xmath2 , and probability measure @xmath15 based on @xmath62 , @xmath63 , @xmath64 , and @xmath14 .",
    "the execution of a pomdp is as follows . at time @xmath65 , state @xmath66 is produced from initial distribution @xmath67 . at each subsequent time @xmath68 , an observation @xmath48 is produced according to @xmath69 , and added to the list of past observations and control inputs to produce @xmath70 @xmath71 .",
    "the control input is chosen according to @xmath72 , and cost @xmath73 is accrued .",
    "the next state @xmath43 is then generated according to @xmath74 .",
    "the goal is to minimize the expected sum of costs accrued according to function @xmath75 over a time horizon @xmath55 by optimally choosing control actions according to the policy @xmath14 .",
    "@xmath76\\ ] ]    equation can be solved using dynamic programming , much like for a markov decision process @xcite .",
    "the value function , @xmath77 , represents the expected sum of costs accrued from time @xmath19 to @xmath55 given that @xmath58 has been recorded thus far , and is computed recursively backwards in time . however , since the size of vector @xmath58 increases with @xmath19 , and is difficult to store , the optimal control input and value function can instead be expressed as a function of a belief state .",
    "the belief state is a _",
    "sufficient statistic _ for the information vector @xmath58 because it condenses all information necessary for making optimal decisions without sacrificing optimality . for an additive cost function @xmath75",
    ", the belief state is a function that describes the probability of being in state @xmath78 given all past observations and actions , @xmath79 $ ] @xcite . by treating the belief state as the true state of the system ,",
    "can be equivalently solved as an mdp over the belief state .",
    "the optimal policy @xmath80 is hence defined in terms of the belief state , with @xmath81 the space of all beliefs .",
    "the optimal policy can be found using a value function over the belief space , @xmath82 the transition operator @xmath83 provides the next belief state @xmath84 given the current observation , action , and belief state , @xmath85 and the likelihood of the observation is @xmath86 .",
    "sondik @xcite first showed that for a finite horizon @xmath87 , the value function at each time @xmath19 is piecewise linear and convex in the belief state , and thus can be expressed as @xmath88    the functions @xmath89 , or `` @xmath90-vectors '' , characterize the value of being in state @xmath91 at time @xmath19 when a specific action @xmath92 is taken , plus the expected sum of future rewards assuming all subsequent actions are chosen optimally .",
    "because each @xmath90-vector is associated with a specific action , selection of the optimal @xmath90-vector in defines the optimal policy for belief @xmath93 at time @xmath19 .",
    "the set @xmath94 of @xmath90-vectors needed to exactly represent the value function @xmath95 at time @xmath19 is finite , but grows exponentially , since computing @xmath94 requires calculation of @xmath96 @xmath90-vectors .",
    "an exact @xmath90-vector representation is therefore often infeasible , and approximate solutions are required .",
    "we draw upon methods in point - based value iteration ( pbvi ) @xcite , @xcite because they provide a lower bound to the value function , which is key for our safety verification problem . in the most general pbvi method ,",
    "a finite subset @xmath97 is selected , then one @xmath90-vector is generated for each belief point @xmath98 , @xmath99 , so that @xmath100 .",
    "the value at some @xmath93 not necessarily in @xmath101 can be approximated by @xmath102 ( as compared to ) with @xmath103 , since we presume that for any @xmath93 in a neighborhood of @xmath104 the same action will likely be optimal @xcite .",
    "hence @xmath105 can be generated recursively from @xmath106 without enumeration over all possible combinations of observations and subsequent @xmath90-vectors in @xmath106 , by using the backup operation    @xmath107    for each @xmath108 . essentially , the pbvi algorithm consists of selecting a set of belief points @xmath109 , and repeatedly applying to each element of @xmath101 . for @xmath55 finite ,",
    "the backup operator is applied to @xmath101 @xmath55 times . for pbvi methods that have been extended to pomdps with a continuous state space and discrete observation and action spaces @xcite ,",
    "the @xmath90-vectors are replaced by @xmath90-functions defined over the continuous space @xmath110 .",
    "since observations and actions are finite , the number of @xmath90-functions remains finite , and the value function is piecewise - linear and convex under the @xmath90-function representation .",
    "a podtshs has discrete and continuous states with interacting dynamics that are characterized by stochastic kernels , and observations that may also be hybrid .",
    "it can be expressed within the pomdp framework by extending definition [ pomdpdef ] .",
    "[ podtshs](podtshs @xmath111 ) .",
    "a podtshs is a class of pomdp , i.e. a tuple @xmath112 , in which    1 .",
    "@xmath113 is a hybrid state space with @xmath114 a finite set of states with cardinality @xmath115 and continuous state dimension @xmath116 2 .",
    "@xmath40 is a finite set of control inputs affecting both discrete and continuous state transitions 3 .",
    "@xmath117 is a hybrid observation space with @xmath118 and continuous observation dimension @xmath119 4 .",
    "@xmath120 $ ] is a stochastic transition kernel that assigns a probability measure over @xmath121 at time @xmath122 given @xmath44 and @xmath45 for all @xmath19 : @xmath123 with @xmath124 5 .",
    "@xmath125 $ ] is an observation function that assigns a probability measure over @xmath126 at time @xmath19 given @xmath44 for all @xmath19 : @xmath127 6 .",
    "@xmath128 $ ] is an initial probability measure over @xmath129 : @xmath130    while we presume @xmath131 is finite , a continuous or hybrid input set can be approximated as a finite set when computing safety probabilities and the optimal policy .",
    "the state transition kernel comprises a discrete component @xmath132 that governs mode updates , and a kernel @xmath133 for continuous state transitions . for modeling purposes , we choose to order such that the discrete mode @xmath134 updates first at each time step , and the subsequent mode @xmath135 influences the evolution of @xmath20 to @xmath136 .",
    "@xmath137 the functions @xmath63 and @xmath64 are also separated into discrete and continuous components , @xmath138 functions @xmath133 , @xmath139 , and @xmath140 are borel - measurable stochastic transition kernels over @xmath141 , and @xmath132 , @xmath142 , and @xmath143 are standard probability distributions over finite state spaces .",
    "we consider specifically a switched affine system , such that the continuous state @xmath29 evolves according to @xmath144 the @xmath145 are independent and identically distributed gaussian random variables for all @xmath19 , @xmath146 .",
    "the matrix @xmath147 and function @xmath36 change according to the mode @xmath135 .",
    "we assume the discrete observations @xmath148 depend only on @xmath149 , and the observations @xmath150 depend linearly on @xmath29 , corrupted by additive gaussian noise @xmath151 , with @xmath151 independent and identically distributed for all @xmath19 , @xmath152 .",
    "@xmath153    kernels @xmath133 , and @xmath139 admit gaussian densities @xmath154 , and @xmath155 .",
    "we also assume @xmath140 admits a gaussian density @xmath156 .",
    "for ease of notation , we let @xmath157 , @xmath158 , and @xmath159 @xmath160 for @xmath161 , @xmath162 , and @xmath163 .    we require that the following lipschitz properties hold , which are guaranteed for @xmath164 , @xmath165 , and @xmath166 , given that they are gaussian densities and @xmath131 is finite .",
    "@xmath167    we define the maximum values @xmath168 and @xmath169 .",
    "while we impose assumptions of linearity and additive gaussian noise in and to facilitate subsequent derivations , these assumptions can be relaxed in certain cases , which will be highlighted where appropriate .",
    "we use stochastic optimal control to find both a control policy that maximizes the probability of the state remaining within a safe region of the state space , as well as an estimate of that probability @xcite . for a compact borel set @xmath170 , terminal time @xmath55 , and predefined policy @xmath14 , the objective to optimize is @xmath171 $ ] .",
    "this objective can be expressed more commonly as an expected value of a multiplicative cost function , since for a random variable @xmath172 and event @xmath147 , @xmath173 = \\mathbb{e}[{\\bf 1}_a(x)]$ ] , with the indicator function @xmath174 if @xmath175 and @xmath176 otherwise , as shown in @xcite : @xmath177.\\ ] ]    the maximal safety probability and optimal policy @xmath178 are given by @xmath179 in the fully observable case , @xcite gives a dynamic programming formulation for optimizing , which returns both the maximal safety probability and optimal policy .",
    "we would like to take a similar approach to find both and .",
    "formally , we would like to solve the following problem .",
    "[ probstate ] for a podtshs @xmath180 with a safe set @xmath181 and time horizon @xmath182 , we wish to    1 .   compute the maximal probability of remaining within @xmath183 for @xmath55 time steps .",
    "2 .   compute the optimal policy @xmath178 given by .",
    "if the maximal probability and optimal policy can not be computed exactly ( which is quite likely @xcite ) , an approximation that produces a suboptimal policy and lower bound on the maximal safety probability is desired .",
    "we exploit the pbvi method to solve problem [ probstate ] , by transforming problem [ probstate ] into an optimal control problem for a pomdp .",
    "hence we first show the safety problem for @xmath111 can be reduced to a dynamic program , despite a non - standard belief state .",
    "we then show that the @xmath90-functions and belief states can be approximately represented in closed form and that finite collections of each may be generated and used to approximate , similar to a point - based pomdp solver .",
    "we present two approximations of problem [ probstate ] for the podtshs @xmath111 : the first discretizes @xmath39 to produce a finite state pomdp , and the second preserves continuity in @xmath39 by using a gaussian mixture approach , thus characterizing the podtshs by a collection of weights , means , and covariances .",
    "the multiplicative nature of the cost function for the safety problem renders the belief state for an additive cost pomdp inapplicable , and we derived a different sufficient statistic @xmath184 for problem [ probstate ] in @xcite .",
    "this sufficient statistic produces a modified conditional distribution of the current state that includes the probability that all past states are in the safe set @xmath183 .",
    "@xmath185\\ ] ]    we define the _ information state _ as the function @xmath186 ( where @xmath0 is the space of integrable functions ) associated with the probability distribution produced by @xmath187 , so that @xmath188 for all @xmath189 , @xmath190 .",
    "note that the information state is distinct from the belief state ( e.g. the conditional distribution of the current state ) .",
    "the information state updates recursively with a bounded linear operator @xmath191 ( for proof see @xcite ) @xmath192 where @xmath193 is given by @xmath194 in comparing to , the latter integrates over the compact hybrid set @xmath183 , as opposed to a summation over finite set @xmath39 .",
    "we define a dynamic programming recursion over @xmath3 as @xmath195 \\end{aligned}\\ ] ] with solution @xmath196 .",
    "the optimal policy is @xmath197 , with @xmath198 for all @xmath199 $ ] .",
    "[ lem : sigalpha ] for any @xmath19 , the value function can be written as @xmath200    lemma [ lem : sigalpha ] leads to the following representation of the value function evaluated at some @xmath201 .",
    "@xmath202 with @xmath203 used to denote the observation - dependent optimal @xmath90-function in @xmath204 that maximizes @xmath205 ( the value function @xmath206 ) for a specific observation @xmath207 .",
    "the set of @xmath90-functions at time @xmath19 is @xmath208 with @xmath209 the control inputs chosen according to .",
    "[ lem : sigconvex ] the value function is convex in @xmath3 for all @xmath210 , @xmath211 , @xmath212 @xmath213 and @xmath214 : @xmath215    lemmas [ lem : sigalpha ] and [ lem : sigconvex ] show that the value function is convex and admits an @xmath90-function representation , hence @xmath111 is amenable to pomdp solution techniques . however",
    ", we can not use lemma [ lem : sigalpha ] to solve problem [ probstate ] directly , since @xmath94 is not finite and the @xmath90-functions and information states have no common structure .",
    "we first consider a finite state pomdp @xcite , whose solution converges to the true safety probability and optimal policy .",
    "the state space @xmath39 is discretized to obtain a vector representation of @xmath90 and @xmath3 .",
    "the observation space is unchanged ( i.e. hybrid ) , because the set of observations only affects the finiteness of sets @xmath94 and @xmath216 .",
    "we defer discussion of producing finite collections of @xmath94 and @xmath216 to section [ sec : pbvi ] .    given safe set @xmath217 , let @xmath218 .",
    "denote @xmath219 , the finite lebesgue measure of @xmath220 .",
    "each @xmath221 is partitioned into a finite number of subsets , so that @xmath222 , with @xmath223 pairwise disjoint ( i.e. @xmath224 for all @xmath225 ) .",
    "finally , let @xmath226 be the diameter of partition @xmath223 so that @xmath227 , with @xmath228 .",
    "the partition of @xmath183 is denoted by @xmath229 with @xmath230 .",
    "each element @xmath231 has a representative point @xmath232 and the set @xmath233 is the discrete representation of @xmath183 .",
    "we do not consider here how the points @xmath234 are selected , but an example is provided in section [ sec : example ] .",
    "the function @xmath235 maps a state @xmath236 to its representative point @xmath234 and the function @xmath237 is the set - valued map from discrete point @xmath234 to its corresponding set @xmath231 .",
    "we will abuse notation slightly and interchangeably write @xmath238 and @xmath239 , since @xmath149 is mapped to itself , and hence the property of interest is the mapping from @xmath29 to @xmath240 .",
    "the discrete state space is defined as @xmath241 , with @xmath242 a single variable that represents all states @xmath243 .",
    "[ pomdpapprox](pomdp approximation to podtshs , @xmath244 ) .",
    "the pomdp approximation is a tuple @xmath245 where    1 .",
    "@xmath246 is a finite set of discrete states 2 .",
    "@xmath41 is as defined in definition 3 3 .",
    "@xmath40 is as defined in definition 3 4 .",
    "@xmath247 $ ] is a discrete state transition function that assigns probabilities to elements of @xmath246 5 .   @xmath248 $ ] is as defined in definition 3 , but is conditioned only on values @xmath249 rather than @xmath250 6 .",
    "@xmath251 $ ] is a function that assigns probabilities to elements of @xmath246 at time zero    we define the transition function as @xmath252 with @xmath253 , and the initial distribution @xmath254 on @xmath246 as @xmath255    the discrete probability space is @xmath256 with @xmath257 , @xmath258 the @xmath3-algebra on @xmath259 , and @xmath260 the probability measure uniquely defined by @xmath254 , @xmath63 , @xmath261 , and a control policy @xmath262 , @xmath263 , with @xmath264 the set of all information states @xmath265 defined on @xmath246 at time @xmath19 .",
    "we further define the operator @xmath266 and the intermediate vector @xmath267 for any @xmath268 , @xmath269 , @xmath270 as @xmath271 the safety problem for @xmath244 is to find latexmath:[$p_{\\mathrm{safe},\\delta}^n(\\rho_{\\delta } ; k_{\\delta } ) = \\sup_{\\pi_{\\delta}\\in\\pi_{\\delta } } \\mathbb{p}^{\\pi_{\\delta}}\\left [ z_n \\in k_{\\delta } , \\ , \\forall\\ , n=0,\\dotsc , n     state @xmath265 and the value function @xmath273 $ ] for @xmath210 .",
    "the discrete information state represents a probability mass function over @xmath246 , and can be expressed as an integral over an equivalent density ( just as @xmath274 ) .",
    "@xmath275 with @xmath276 given by @xmath277 this can be verified by substituting the expression for @xmath261 in terms of @xmath278 into and using an induction argument .",
    "the value function is @xmath279 the maximum probability of remaining within @xmath280 over @xmath55 time steps is @xmath281    the safety probability for the finite state approximation @xmath244 converges to the true solution as grid size parameter @xmath282 tends to zero . to show this , we first describe the error between the continuous information state @xmath283 and the vector approximation @xmath265 .",
    "[ thm : sigdiscrete ] the density @xmath284 defined in satisfies @xmath285 for all @xmath250 , @xmath286 , and @xmath287 given by @xmath288 with @xmath289 $ ] , @xmath290 .    to prove convergence of the value function @xmath291 to @xmath292",
    ", we must first show that integration over the infinite spaces @xmath293 and @xmath294 results in a bounded solution .",
    "consider the following two lemmas regarding integration of @xmath164 and @xmath165 over unbounded sets @xmath295 and @xmath296 , respectively .",
    "[ lem : finiteinty ] for any @xmath297 , for all @xmath298 , @xmath189 , the following holds : @xmath299 \\delta_{i , q}^x\\ ] ] with @xmath300 and @xmath301 .",
    "in other words , @xmath302 is the lebesgue measure of region @xmath223 mapped to the observation space @xmath303 via the matrix @xmath304 , and increased by @xmath305 in all directions , with @xmath306 the largest eigenvalue of @xmath307 .",
    "a similar result holds for the integral of @xmath165 over @xmath308 .",
    "[ lem : finiteintx ] for any @xmath297 , for all @xmath298 , @xmath189 , and any @xmath269 , @xmath309 , the following holds : @xmath310 \\delta_{i , q}^x,\\ ] ] @xmath311 and @xmath312 , with @xmath313 the largest eigenvalue of @xmath314 .    in order to show convergence of to , we require some additional definitions .",
    "first , similarly to @xmath315 , we define piecewise constant function @xmath316 as @xmath317 , so that @xmath318    we also define @xmath319 in the same manner as @xmath320 , except that it is directly related to @xmath321 , i.e. uses the same optimal control input @xmath92 , and the same combination of @xmath322-functions ( determined by @xmath203 ) . in other words , @xmath323 is identical to @xmath321 in terms of the optimal policy tree from time @xmath19 to @xmath55 , but the values are calculated using @xmath324 and @xmath325 , @xmath326 for a specific @xmath90-function @xmath327 associated with @xmath328 .",
    "the superscript @xmath327 for @xmath329 and @xmath330 indicates that the same choice of @xmath92 and combination of @xmath331 are used for both @xmath332 and @xmath333 .",
    "a bound on the difference between @xmath332 and @xmath333 is given in the following lemma .",
    "[ lem : alphatilde ] for any @xmath334 $ ] , and any function @xmath335 , the associated function @xmath336 defined in satisfies @xmath337\\delta^x\\ ] ] for all @xmath91 .",
    "the constants @xmath338 and @xmath339 are equal to @xmath340 and @xmath341 from lemmas [ lem : finiteinty ] and [ lem : finiteintx ] , respectively .",
    "we now can show convergence of the approximate safety probability over the discretized state space to the true safety probability .",
    "[ thm : valuefuncerrordisc ] for any time @xmath334 $ ] , and any @xmath342 , @xmath343 , the error between the value function and the value function based on the finite state approximation is bounded above by @xmath344 with @xmath345 .",
    "specifically , the safety probability for podtshs @xmath111 over time horizon @xmath55 satisfies @xmath346\\delta^x.\\ ] ]    theorem [ thm : valuefuncerrordisc ] shows that the finite state approximation @xmath244 provides a means to approximately compute through the safety probability for @xmath244 , . as @xmath347 , the finite state safety probability converges to the true value , and the policy @xmath348 converges to @xmath178 .    the linearity and additive gaussian noise assumptions for the continuous state dynamics and observations and are required only in the proofs of lemmas [ lem : finiteinty ] and [ lem : finiteintx ] , and also in the sense that they guarantee the lipschitz properties used in all proofs .",
    "therefore , nonlinear dynamics and non - gaussian noise are permissible , so long as is satisfied , and an equivalent bound on the integrals in lemmas [ lem : finiteinty ] and [ lem : finiteintx ] can be derived .",
    "we now consider a different approximation by representing the information state and @xmath90-functions as gaussian mixtures , such that each are characterized by a finite set of weights , means , and covariances , dependent on the mode @xmath149 .",
    "difficulty arises from the incorporation of the indicator function @xmath349 in and .",
    "integration over the compact set @xmath183 rather than all of @xmath39 violates the preservation of the gaussian form of @xmath3 under operator @xmath350 , and similarly for the @xmath90-functions . to preserve the gaussian mixture structure , we therefore propose a radial basis function ( rbf ) approximation @xcite to the indicator function , using gaussians as the basis function . for each @xmath221",
    ", we set @xmath351 typically , both the centers @xmath352 and the number of components @xmath353 are fixed beforehand . the weights and covariances can then be chosen to optimize the approximation .",
    "for simplicity we will denote @xmath354 by @xmath355 .",
    "this approximation is valid since the rbfs are dense in @xmath356 for @xmath357 @xcite , i.e. given any function @xmath35 in @xmath356 , a weighted combination of rbfs can approximate @xmath35 to arbitrary accuracy given enough components , and @xmath349 is in @xmath0 .",
    "however , the discontinuity in @xmath358 produces the gibbs phenomenon at the boundary of @xmath221 in the rbf approximation .",
    "although these oscillations will always exist for a finite number of components , they could possibly be mitigated @xcite .",
    "the oscillations can be constrained to a smaller region of @xmath183 ( shorter wavelength ) with the addition of more components , indicating that the integrated error may be reduced even if the pointwise error is not .",
    "because we are interested only in integrating over @xmath183 , this works to our advantage .",
    "we define a new operator @xmath359 and a new @xmath90-function @xmath360 by inserting the rbf approximation into and , respectively .",
    "we do not include the scaling factor @xmath361 in the operator @xmath359 , which is difficult to incorporate into a gaussian mixture .",
    "if the information state only represented the probability distribution over the current state of the system , we could simply ensure the weights all sum to one , but it includes the probability that past states were in @xmath183 , and hence is not guaranteed to integrate to one .",
    "once we implement pbvi in section iv , we are only concerned with finding the @xmath90-function that maximizes the inner product @xmath362 , which is unaffected by a constant scaling factor , and hence we lose nothing by disregarding it .",
    "we also presume continuous observations , as in section [ sec : abs_finite ] . @xmath363\\tau(s'|s , u)\\sigma_g(s)\\,dx \\label{eq : rbfphi}\\\\ \\alpha^g_{y , u,\\sigma}(s ) & = \\int_{\\mathcal{s } } \\alpha_{n+1,g}^{*(y)}(s')\\gamma(y|s')\\tau(s'|s , u)\\,ds'\\left[\\sum_{i=1}^{i_{q } } w_i(q ) \\phi_i(x ) \\right]\\label{eq : rbfalpha}\\end{aligned}\\ ] ]    we provide two lemmas stating that the operator @xmath364 and the @xmath90-function update @xmath360 preserve the gaussian mixture representation of @xmath365 and @xmath366 for all @xmath19 .",
    "these lemmas rely on the fact that @xmath165 and @xmath164 are gaussian , and that a product of gaussian distributions is again a gaussian .",
    "we need some additional assumptions , however , to simplify the derivations and make the following lemmas valid .",
    "[ ass : gauss1 ] the transition kernel @xmath132 does not depend on @xmath29 , i.e. the mode update is dependent only on the previous mode : @xmath367 .",
    "[ ass : gauss3 ] the matrices @xmath368 and @xmath304 in and are invertible for all @xmath369 .    without the first assumption",
    ", we would need to represent @xmath370 by a gaussian mixture , which can not be exact since we are approximating a function over discrete states by a continuous function @xcite .",
    "the second assumption allows us to express @xmath371 and @xmath372 as gaussian densities over @xmath29 . while these assumptions are quite restrictive , they can be relaxed at a cost of introducing additional error , as discussed later in remark [ rem : gauss ] .",
    "[ lem : phigauss ] the operator @xmath364 is closed under gaussian mixtures , i.e. for @xmath373 a gaussian mixture with @xmath374 components , @xmath375 is also a gaussian mixture with @xmath376 components for any @xmath269 , @xmath268 .",
    "[ lem : alphagauss ] the expression for @xmath360 is closed under gaussian mixtures , i.e. if @xmath377 is a gaussian mixture with @xmath378 components , @xmath379 is also a gaussian mixture with @xmath380 components , for any @xmath269 , @xmath268 , @xmath201 .",
    "lemma [ lem : phigauss ] implies that we can approximate @xmath3 through a gaussian mixture and use the equivalent update operator @xmath364 , hence the gaussian mixture approximation of @xmath3 is @xmath381 .",
    "similarly , the gaussian mixture of any @xmath90-function is written as @xmath382 for all @xmath19 .",
    "@xmath383 similarly , the gaussian mixture approximation of any @xmath90-function is written : @xmath384 the weights , means , and covariances are defined recursively .",
    "their exact representations can be found in the appendix .",
    "note that although the gaussian mixture representation of @xmath360 has a finite number of components given that the representation of @xmath385 is finite , the actual @xmath90-function , @xmath366 , is expressed as the integral of @xmath360 over @xmath41 .",
    "therefore , without the assumption that @xmath41 is finite , @xmath366 must have an infinite number of components ( by breaking the integral over @xmath41 into a summation over regions of size @xmath386 and taking the limit as @xmath387 ) .",
    "we take some liberty in overlooking this discrepancy , because it does not affect the proofs in this section .",
    "we impose a finite set @xmath41 in section [ sec : pbvi ] , which makes the gaussian mixture representation of the @xmath90-functions indeed valid , and discuss additional error implications .",
    "the subscript @xmath36 denotes that we are computing an estimate based on the gaussian mixture approximation .",
    "the value function @xmath388 is described through the recursion @xmath389    the safety problem for the gaussian mixture approximation is defined as @xmath390    since @xmath165 , @xmath164 , and @xmath166 are gaussian , and based on assumptions [ ass : gauss1 ] - [ ass : gauss3 ] made above , the gaussian mixture representations of @xmath90 and @xmath3 are exact , aside from the approximation of @xmath349 using rbfs . to quantify the error incurred from calculating @xmath391 as opposed to @xmath392 ( from integration of over @xmath39 rather than over @xmath183 ) , we define the error @xmath393 we first analyze the error between @xmath283 and @xmath365 , which is stated in terms of the 1-norm rather than the @xmath394-norm , to be consistent with considering the integrated error in .",
    "[ thm : sigconterror ] the gaussian mixture approximation @xmath365 of @xmath283 satisfies @xmath395 for any @xmath334 $ ] , @xmath268 , and @xmath269 , with @xmath396 and @xmath397 .    to show convergence of to , we define the function @xmath398 which utilizes the same policy tree as @xmath399 for a specific @xmath400 .",
    "this is equivalent to , except that @xmath398 is defined by replacing @xmath401 with .",
    "@xmath402\\ ] ] with @xmath329 the optimal control input associated with @xmath332 and @xmath330 indicating that @xmath403 is chosen according to the indices selected by @xmath203 for @xmath404 .",
    "note that the @xmath90-functions are no longer guaranteed to be equal to zero outside of @xmath183 , and also are not guaranteed to be bounded above by one .",
    "so long as is of bounded height , however , the @xmath90-functions also remain bounded , and we write @xmath405 .",
    "we could also adjust the weights in so that the @xmath90-functions can not exceed one , although this may increase the error @xmath406 .",
    "the following lemma describes the relation between @xmath321 and @xmath319 .",
    "[ lem : alphgtil ] for any @xmath334 $ ] , and any @xmath335 , the associated function @xmath407 defined in satisfies @xmath408 where @xmath409 .",
    "[ thm : valuefuncerrorgauss ] for any time @xmath334 $ ] , and any @xmath342 , @xmath410 , the error between the value function given @xmath283 and the value function given @xmath365 using the gaussian mixture approximation is bounded above by @xmath411 with @xmath412 .",
    "specifically , the safety probability for podtshs @xmath111 over time horizon @xmath55 satisfies @xmath413    theorem [ thm : valuefuncerrorgauss ] shows that the convergence of the gaussian mixture approximation of both @xmath3 and the value function depends on the integrated error between the indicator function over @xmath183 and the rbf approximation , rather than the pointwise error . although the pointwise error may not converge to zero for a finite number of components in the rbf , the integral of the error can be small , as we will show in section [ sec : example ] .",
    "[ rem : gauss ] the linearity and additive gaussian noise assumptions on the dynamics and , as well as assumptions [ ass : gauss1 ] - [ ass : gauss3 ] , are used in the gaussian mixture approximation to ensure that the only error in the value function and information state approximations comes from the approximation of the indicator function @xmath401 by a gaussian mixture . dropping these assumptions",
    "requires that we approximate @xmath165 , @xmath132 , and @xmath164 by gaussian mixtures , which is possible but introduces additional error that we have chosen not to consider .",
    "a numerical solution of problem [ probstate ] via either a discrete or gaussian mixture approximation additionally requires sets @xmath94 and @xmath216 to be finite , whereas we have sets of infinite size because of the uncountable nature of @xmath41 .",
    "however , a lower bound on the safety probabilities and can still be obtained , by characterizing the error that results from using @xmath414 and @xmath415 , finite collections of @xmath90-functions and information states , respectively .",
    "we again exploit point - based approximation methods described in section [ sec : back_pomdp ] .",
    "we examine the generation of subsets of the information states and @xmath90-functions , and prove that each guarantees a lower bound to the safety probability of whichever approximation of section [ sec : abstraction ] we choose .",
    "in contrast to most point - based solvers , we do not assume a finite set of observations , and hence discretize the observations merely for the computation of the @xmath90-functions .",
    "combining belief space sampling with discretized observations assures a lower bound to the safety probability .",
    "we characterize the error from using a sampled subset of @xmath216 for performing backup operations ( as in ) .",
    "presume that a finite set of information states @xmath416 has been generated according to one of the many methods available @xcite .",
    "we generate a finite set @xmath105 of @xmath90-functions , one for each @xmath417 .",
    "the convexity of the value functions guarantees that the subset @xmath105 provides a lower bound on @xmath292 .",
    "further , we can show that the error between the approximate value function @xmath418 ( represented by @xmath105 ) and the true value function @xmath292 ( represented by the complete set of @xmath90-functions @xmath94 ) depends on how densely we sample @xmath216 .",
    "we define an intermediate value function @xmath419 that generates @xmath105 recursively from @xmath204 , i.e. that introduces one point - based backup from the full set @xmath204 .",
    "then @xmath316 is written as a function of @xmath420 rather than @xmath421 .",
    "the value function @xmath418 is formally defined as @xmath422 @xmath423 so that @xmath418 is characterized by the finite set @xmath105 at each time step .",
    "we also define an intermediate value function @xmath424 that generates @xmath105 recursively from @xmath204 , i.e. that introduces one point - based backup from the full set @xmath204 .",
    "then @xmath316 is written as a function of @xmath420 rather than @xmath421 .",
    "@xmath425    we let @xmath426 denote the maximum hausdorff distance over @xmath19 between points in @xmath416 and points in @xmath216 with respect to the metric @xmath427 .",
    "@xmath428 in the following , we do not distinguish between the vector and gaussian mixture representations of @xmath3 and @xmath90 , because the results apply to both cases .",
    "[ lemma3 ] for any @xmath334 $ ] and @xmath286 , the error introduced in one iteration of point - based value iteration is at most @xmath426 .",
    "@xmath429    we now use lemma [ lemma3 ] to derive a bound between the true value function and the point - based approximation at any time @xmath19 .    [ thm1 ] for a set of information states @xmath216 , sampled set @xmath416 , and any time @xmath334 $ ] and @xmath286 , the error from using point - based value iteration versus full value iteration is bounded above by @xmath430    thus the error between the point - based approximation and the actual value function is directly proportional to how densely @xmath416 is sampled , and converges to zero as @xmath416 approaches @xmath216 .",
    "the proofs of lemma [ lemma3 ] and theorem [ thm1 ] are a straightforward extension of those appearing in @xcite , and are omitted .      over the uncountably infinite space @xmath41 , we can not calculate @xmath431 for all @xmath268 , despite a finite set of @xmath92 and @xmath3 .",
    "we therefore compute a subset of @xmath431 for the finite set @xmath432 , to approximate @xmath433 as @xmath434 .",
    "we discretize @xmath41 in a similar fashion to the discretization of @xmath39 in section [ sec : abs_finite ] .    however , since @xmath303 is not compact , we consider an expanded set @xmath435 defined so that the probability of observing a value @xmath207 for @xmath436 that is outside of @xmath437 is approximately zero , i.e. @xmath438 , @xmath439 .",
    "the sets @xmath440 are divided into disjoint subsets @xmath441 , @xmath442 .",
    "we also define @xmath443 , such that @xmath444 .    the partition of @xmath437 is denoted @xmath445 with @xmath446 .",
    "the diameter of partition @xmath441 is @xmath447 , with maximum diameter @xmath448 .",
    "each partition @xmath449 has a representative element @xmath450 and a set @xmath451 .",
    "the function @xmath452 maps observation @xmath268 to its representative value @xmath450 ; the set - valued function @xmath453 maps the point @xmath454 to the corresponding set @xmath455 .",
    "the finite observation space is @xmath456 . for the finite state approximation , the transition function @xmath457 $ ]",
    "is defined as @xmath458    for the gaussian mixture approximation , we define the transition function @xmath459 in the same fashion as , but with @xmath460 so that the @xmath90-functions will also be gaussian mixtures at each time step .",
    "note that @xmath461 , @xmath462 is a set of mesh points inside @xmath455 associated with @xmath463 , and @xmath464 is a weight proportional to the mesh spacing ( determined , e.g. , by the trapezoidal rule for numerical integration ) .",
    "we use @xmath465 and @xmath466 to denote the approximation using a finite subset of @xmath467 , with the important distinction that the subset is now generated by a finite collection of observations ( as opposed to @xmath416 , i.e. we assume here that the set @xmath216 is finite ) .",
    "the value function is then @xmath468 , where @xmath469 defined as in section [ sec : abs_finite ] , only with @xmath470 replaced by @xmath471 .",
    "@xmath472 with @xmath473 we again define the intermediate value function @xmath474 , with @xmath475 calculated using @xmath476 ( as opposed to @xmath477 ) to capture the error introduce in one backup iteration using discretized observations .",
    "we can then bound the error introduced in one iteration of approximating the @xmath90-vectors through discretized observations .",
    "[ lem : discobsalpha ] for any time @xmath334 $ ] and @xmath343 , the error between @xmath478 and @xmath474 satisfies @xmath479 given that the discretized observations @xmath463 are chosen so that @xmath480 and with @xmath481 the largest lebesgue measure of sets @xmath440 .",
    "lemma [ lem : discobsalpha ] requires defining the representative points @xmath461 so that the integral of @xmath482 over @xmath483 is greater than a piecewise constant approximation integrated over @xmath483 , which can be satisfied by picking the points @xmath484 where the gaussian density @xmath164 is minimized within cell @xmath441 . without this requirement , finding @xmath485 at a finite set of points",
    "still guarantees a lower bound to the value function for any time @xmath19 , and is intuitively more accurate as @xmath486 .",
    "lemma [ lem : discobsalpha ] leads to the following theorem regarding the error between @xmath478 ( based on continuous observations ) and @xmath487 ( based on discretized observations ) .",
    "we again use the notation @xmath488 to indicate that @xmath488 is represented by the set @xmath489 of @xmath90-functions calculated using the discretized observations .",
    "[ thm : discobsvf ] given discretized observation process @xmath490 with transition function , for any time @xmath334 $ ] , the error between @xmath478 calculated according to @xmath41 and @xmath487 calculated according to @xmath490 satisfies @xmath491 for any @xmath343 , with @xmath481 the largest lebesgue measure of sets @xmath440 .",
    "specifically , the safety probability for @xmath244 satisfies @xmath492      the results of discretizing the observations for the gaussian mixture abstraction are nearly identical to those for the finite state abstraction .",
    "the main difference arises in approximating the integral @xmath493 with a gaussian sum . to ensure the approximate value function",
    "provides a lower bound to @xmath494 , we must under - approximate the integral @xmath495 for each @xmath463 .",
    "we define @xmath496 similarly to @xmath466 , using discretized observations and the rbf approximation to the indicator function , @xmath497\\sigma_{n , g}(x , q)\\,dx\\right\\ } \\end{aligned}\\ ] ] and @xmath498 is the intermediate value function that finds the optimal @xmath499 , rather than in @xmath500 .",
    "we can bound the error between @xmath494 and @xmath498 , and between @xmath494 and @xmath496 , equivalently to lemma [ lem : discobsalpha ] and theorem [ thm : discobsvf ] , respectively .",
    "[ lem : gaussobsalpha ] for any time @xmath334 $ ] and @xmath410 , the error between @xmath388 and @xmath501 satisfies @xmath502 given that the observations @xmath463 are chosen so that @xmath503 and with @xmath481 the largest lebesgue measure of sets @xmath440 .",
    "[ thm : gaussobsvf ] given discretized observation process @xmath490 with transition function , for any time @xmath334 $ ] , the error between @xmath388 calculated according to @xmath41 and @xmath504 calculated according to @xmath490 satisfies @xmath505 for any @xmath410 , with @xmath481 the largest lebesgue measure of sets @xmath440 .",
    "specifically , the safety probability for the gaussian mixture approximation satisfies @xmath506    the proofs of lemma [ lem : gaussobsalpha ] and theorem [ thm : gaussobsvf ] follow directly from the proofs of lemma [ lem : discobsalpha ] and theorem [ thm : discobsvf ] .    to summarize , given either the finite state or gaussian mixture approximation , we can subsequently 1 ) sample @xmath207 from @xmath41 and @xmath92 from @xmath40 to generate the progressive subsets @xmath507 or @xmath508 , and 2 ) discretize @xmath41 and use the set @xmath490 to calculate @xmath509 or @xmath510 , which are then used to generate @xmath511 and @xmath512 .",
    "using sets @xmath507 and @xmath465 in place of @xmath264 and @xmath467 provides a lower bound to the safety probability @xmath513 that converges as @xmath426 and @xmath514 approach zero ( and similarly for @xmath508 and @xmath515 ) .",
    "the temperature regulation problem is a benchmark example for hybrid systems , and a stochastic version with perfect state information is presented in @xcite .",
    "we consider the case of one heater , which can either be turned on to heat one room , or turned off .",
    "the temperature of the room at time @xmath19 is given by the continuous variable @xmath20 , and the discrete state @xmath516 indicates the heater is on at time @xmath19 , and @xmath517 denotes the heater is off .",
    "the stochastic difference equation governing the temperature is given by @xmath518 with constants @xmath519 , @xmath520 , and @xmath521 , and @xmath145 i.i.d .",
    "gaussian random variables with mean zero and variance @xmath522 .",
    "the control input is given by @xmath523 with @xmath524 , but the chosen control is not always implemented with probability @xmath525 .",
    "instead , @xmath134 is updated probabilistically , dependent on @xmath49 and @xmath526 , with transition function @xmath527 . so while function @xmath528 deterministically returns a single control input , control input @xmath529 may not always be implemented .    to model this as a partially observable problem ,",
    "assume the actual temperature is unknown , and only a noisy measurement is available to the controller .",
    "the controller does , however , know whether the heater is on or off at time @xmath19 ( i.e. @xmath134 is perfectly observed ) .",
    "the observation @xmath530 is given by @xmath531 , with @xmath151 i.i.d .",
    "gaussian random variables with mean zero and variance @xmath532 .",
    "it is desirable to keep the temperature of the room between @xmath533 and @xmath534 degrees celsius at all times , hence the safe region @xmath535 $ ] does not depend on the discrete state @xmath134 ( so @xmath536 ) .",
    "we consider the probability of remaining within @xmath183 for @xmath537 time steps given initial temperature distribution @xmath166 normally distributed with varying mean @xmath538 and variance @xmath539 .",
    "the initial mode is given as @xmath540 .",
    "the finite state and gaussian mixture approximations are used in a pbvi algorithm in the style of perseus @xcite .",
    "we consider a uniform grid ( @xmath541 constant for all @xmath327 , @xmath149 ) over the region @xmath542 for the finite state approximation , with representative points at the end - point of each grid cell .",
    "for example , setting @xmath543 gives @xmath544 for @xmath545 and @xmath546 , and a total of @xmath547 cells @xmath223 .",
    "the function @xmath548 maps @xmath149 to itself , and maps @xmath29 to the nearest @xmath240 in absolute value .",
    "the gaussian mixture approximation utilizes an rbf approximation of the indicator function calculated using matlab s _ gmdistribution _ function .",
    "we used a reduction process to limit the number of components of each @xmath90 and @xmath3 for the gaussian mixture approximation .",
    "similar gaussians are combined into a single component based on the 2-norm distance between functions @xcite .",
    "each mixture was limited to 30 components to reduce overall computation time without overly sacrificing accuracy .",
    "this number can easily be changed , however , depending on the importance of speed versus accuracy .",
    "both approximations employ a sequence of sampled sets @xmath416 and a finite set of observations to calculate the @xmath90-functions for the pbvi algorithm . to generate the sets @xmath416 , we initialized a set of 40 states @xmath549 normally distributed with variance @xmath550 and mean @xmath551 randomly chosen uniformly on @xmath183 .",
    "each @xmath549 was updated according to @xmath364 or @xmath552 with @xmath92 chosen randomly and @xmath207 sampled from the corresponding @xmath549 ( i.e. @xmath553 ) .",
    "this process was repeated @xmath55 times , so that for each time step we had a set of 40 sampled @xmath3s .",
    "the finite set of observations were produced by a uniform grid over @xmath554 $ ] , again using end - points as the representative observations .    to compare performance of the finite state and gaussian mixture approximations , we present computation times and safety probability estimates for each , with varying @xmath282 , @xmath514 , and number of components in the indicator approximation .",
    "safety probabilities for varying initial distributions @xmath555 are presented in figs .",
    "[ fig : discretexcompare ] and [ fig : gaussindcompare ] for the finite state approximation and gaussian mixture approximation , respectively .",
    "the optimal policy at time zero is shown for varying @xmath555 in figs .",
    "[ fig : discretexcompareu ] and [ fig : gaussindcompareu ] for the finite and gaussian approximations , respectively .",
    "computation times for the gaussian mixture approximation are given in table [ table : gausstime ] , and for the finite state approximation in table [ table : discretetime ] .",
    "we also show sample rbf approximations to the indicator function @xmath349 in fig .",
    "[ fig : indcompare ] with varying numbers of components @xmath353 .",
    "the error between the rbf approximation and @xmath349 for varying @xmath353 is shown in fig .",
    "[ fig : l1err ] .",
    "as the number of components increases , the approximation becomes more accurate , although as seen in fig .",
    "[ fig : indcompare ] , oscillations remain at the endpoints of @xmath183 .",
    "the increasing accuracy is most apparent in fig .",
    "[ fig : l1err ] , and demonstrates the convergence towards zero of the error @xmath406 with increasing @xmath353 .",
    "we show safety probabilities for @xmath556 .",
    "decreasing @xmath514 causes a slight increase in the safety probabilities , as expected , but there is not a significant improvement in the probability estimates , although as seen in tables [ table : gausstime ] and [ table : discretetime ] , the increase in computation time is significant .",
    "this is likely problem - specific , and the value of @xmath514 may have a greater impact for some applications .",
    "the safety probability estimates for the finite state approximation are in general greater than for the gaussian mixture approximation .",
    "the mixture reduction method employed , as well as the indicator function approximation , make the gaussian method seemingly less accurate than the finite state approximation .",
    "however , over a finer mesh @xmath282 , the finite state method results in greater computation time .",
    "note also that for @xmath557 , the safety probabilities decrease relative to the probabilities for @xmath543 , which highlights that although sampling from the information space and discretizing the observations guarantees a lower bound , no such guarantee exists when discretizing the state space , and there is a chance the safety estimates do not bound the true safety probabilities from below .",
    "although the coarse grid produces similar results to the fine grid ( @xmath558 versus @xmath559 ) , in higher dimensional problems the number of grid cells becomes prohibitive even when @xmath282 is large , and the gaussian mixture approximation may be more computationally tractable .",
    "all scenarios produce a nearly identical optimal thresh - hold policy based on the initial mean @xmath551 , indicating that an optimal policy may be computed fairly quickly using any of the above methods .",
    "the computation time is unfortunately still quite high in both cases , and at this time each method is likely applicable to systems with only a few modes and continuous state dimensions of no more than two or three .",
    "it is likely , however , that computation time can be improved by using more sophisticated point - based solvers , such as @xcite .",
    "further gains may be possible through adaptive gridding techniques , similar to those in @xcite , to decrease the number of finite states required without sacrificing accuracy .    .",
    "[ cols=\"^,>,>,^ , > , > \" , ]     interestingly , increasing the number of components in the rbf approximation to the indicator function only slightly improves the safety estimates of the gaussian mixture approximation , although the error from increasing the number of components to 30 drops significantly .",
    "this may be caused by the mixture reduction technique , leading to a loss in the added benefit of an increased number of components when that number is again reduced . however , although the error with @xmath560 is large , we obtain safety estimates that are quite similar to the finite state approximation .",
    "this requires further investigation , but may help in decreasing computation time without losing significant accuracy by choosing @xmath353 to be small .",
    "we have presented the first numerical results for verification and controller synthesis for safety objectives , given a partially observable dtshs . we have considered two approximations that enable the use of a well - known pomdp optimization technique .",
    "the first approximation discretizes the state space over a compact set @xmath183 and enables a vector representation of the information states and @xmath90-functions .",
    "the second approximates the indicator function over compact set @xmath183 using a finite set of gaussian radial basis functions and enables a gaussian mixture representation of the information states and @xmath90-functions",
    ". we can apply point - based value iteration to either approximation , and guarantee a lower bound to the safety probability , which is proven to converge to the true safety probability of the original podtshs .",
    "a simple numerical example shows that both methods provide similar safety estimates .",
    "the finite state approximation is faster when a coarse discretization is used , but quickly becomes slower than the gaussian mixture approximation with a finer discretization .",
    "therefore , although the gaussian mixture produces lower safety estimates , it may be better suited to higher dimensional problems .",
    "although we present a switched affine system with additive gaussian noise , both approximations may be extended to non - gaussian systems .",
    "convergence results for the finite state approximation apply to arbitrary transition kernels @xmath133 and @xmath139 , given they still satisfy certain lipschitz conditions .",
    "the gaussian mixture approximation further requires approximating @xmath133 , @xmath132 , and @xmath139 with gaussian mixtures , and introduces additional error .",
    "we also focus on the safety problem , although the computational techniques presented will apply to other verification properties such as reachability , reach - avoid objectives , and others , by modifying the information state and @xmath90-functions slightly .",
    "we are currently working to formally extend these results to other verification objectives and more complex applications .",
    "because both methods are relatively slow , we plan to continue to refine them to decrease computation time , which is possible through the use of more sophisticated existing point - based solvers .",
    "we are also exploring more efficient computation by exploiting problem structure , through the use of adaptive gridding schemes and other representations of @xmath90 and @xmath3 beyond vectors and gaussian mixtures .    by induction . at time @xmath55 , @xmath561 by defining @xmath562 , we obtain the desired result . note that this definition of @xmath563 is in line with the definition given in section [ sec : back_pomdp ] , because although it does not represent a full policy tree ( being at the terminal time , there are no more branches on the tree ) , it does represent the immediate value of being in state @xmath564 , given by @xmath565 .",
    "next , assuming @xmath566 , @xmath292 can be written as @xmath567\\notag\\\\          & = \\max_{u\\in\\mathcal{u}}\\int_{\\mathcal{y}}\\sup_{\\alpha_{n+1}\\in\\gamma_{n+1}}\\langle \\alpha_{n+1 } , \\phi_{y , u}\\sigma_n \\rangle \\mathbb{p}(dy|\\sigma_n , u ) \\\\          & = \\max_{u\\in\\mathcal{u}}\\int_{\\mathcal{y}}\\sup_{\\alpha_{n+1}\\in\\gamma_{n+1}}\\left[\\int_k\\int_{{\\mathcal{s } } } \\alpha_{n+1}(s')\\gamma(y|s ' ) \\tau(s'|s , u)\\sigma_n(s)\\,ds'\\,ds\\right]dy.\\label{eq : vn }          \\end{aligned}\\ ] ] then for a specific observation @xmath207 , action @xmath92 , and function @xmath568 ( index @xmath327 used to identify a particular @xmath569 ) , the function @xmath570 can be defined as @xmath571 because @xmath570 does not depend on @xmath283 , we can redefine the supremum over all @xmath204 to be over all @xmath570 .",
    "@xmath572 for a specific @xmath3 , @xmath92 , and @xmath207 , we define @xmath573 with @xmath203 denoting the index @xmath327 of the @xmath90-function @xmath570 that maximizes the inner product .",
    "we further simplify @xmath292 as @xmath574 therefore , the set of all @xmath575 is described by @xmath576 with @xmath209 the control inputs chosen according to , and @xmath292 may be written as @xmath577    by induction . at time @xmath65 , @xmath578 and",
    "the inequality is trivially satisfied . for all @xmath579 , assume @xmath580 . at time @xmath581 , for any @xmath268 and any @xmath269 , @xmath582 we add and subtract @xmath583 and @xmath584 , apply the triangle inequality , and use the lipschitz inequalities .",
    "@xmath585\\notag\\\\      & \\hspace{10mm}\\leq \\min\\left\\ { \\frac{1}{p(y|\\sigma_n , u ) } , \\frac{1}{p(y|\\hat{\\sigma}_n , u)}\\right\\ }      \\left[\\vphantom{\\sum_{q\\in\\mathcal{q}}\\int_{k_q } }   h_y^{(2)}\\|x ' - \\xi(x')\\|\\phi_v^ *   + \\phi_w^*h_x^{(2)}\\|x ' - \\xi(x')\\|+ \\phi_w^*h_q\\|x - \\xi(x)\\|\\phi_v^*\\right . \\notag\\\\      & \\hspace{35 mm } \\left.+ \\phi_w^*|\\sigma_n - \\hat{\\sigma}_n|\\sum_{q\\in\\mathcal{q}}t_q(q'|s , u)\\int_{k_q}\\tau_x(x'|q',\\xi(s),u)\\,dx\\right ] \\label{eq : thmsig2 }      \\end{aligned}\\ ] ] since @xmath165 is bounded by @xmath586 , and the lebesgue measure of @xmath221 is at most @xmath587 , we obtain @xmath588 . \\\\",
    "\\end{aligned}\\ ] ] combining terms and applying the induction hypothesis gives the desired result .",
    "we exploit properties of the derivative of a gaussian distribution , which bounds the lipschitz constants for @xmath164 from above . for clarity of notation , we will write @xmath75 rather than @xmath304 , with dependence on @xmath149 implicit .",
    "the constant @xmath589 is the maximum value of the derivative of @xmath590 with respect to @xmath29 : @xmath591 recall that @xmath592 for @xmath147 a symmetric matrix .",
    "therefore @xmath593 . taking the derivative again with respect to @xmath594 and setting equal to zero",
    ", we see that the maximum of occurs at @xmath595 .",
    "although @xmath596 , we create a tighter bound for the case in which @xmath597 is greater than @xmath305 ( for @xmath598 such that there exists @xmath599 for which @xmath600 , the upper bound @xmath589 is attained ) using the following function .",
    "@xmath601 then , @xmath602 we use the change of variable @xmath603 , with @xmath604 , to rewrite the second term of , and apply an identity for integrals of polynomials . @xmath605 inserting into proves the lemma .    by induction . at time @xmath55 , @xmath606 since for any @xmath436 , by definition @xmath607 .",
    "assume for all @xmath608 , @xmath609\\delta^x$ ] .",
    "for @xmath610 , separate terms and apply the triangle inequality as in the proof of theorem [ thm : sigdiscrete ] .",
    "@xmath611\\delta^x+ n_q\\left[h_q + \\beta_1^xh_x^{(2 ) } + \\beta_2^x\\right]\\delta^x\\label{eq : alphatil2 }      \\end{aligned}\\ ] ] the second term of comes from lemma [ lem : finiteinty ] and noting that @xmath612 represents a probability that is bounded above by one .",
    "the third term comes from lemma [ lem : finiteintx ] and the lipschitz inequality for @xmath132 .",
    "the term @xmath401 does not affect the bound , and only indicates that both @xmath321 and @xmath319 are equal to zero for @xmath613 . applying the induction hypothesis to gives the desired result .    by construction .",
    "at any time @xmath334 $ ] , given @xmath614 and @xmath615 , we can rewrite the value function evaluated at @xmath3 in terms of @xmath90-functions .",
    "@xmath616 assume without loss of generality that @xmath617 .",
    "then , because @xmath618 by definition of the optimality of @xmath619 , we can write @xmath620 applying lemma [ lem : alphatilde ] to the first term of , and noting that the integral in the second term is in fact taken over @xmath183 rather than @xmath294 since @xmath621 is zero for all @xmath622 , we obtain @xmath623\\delta^x + n_q\\lambda\\eta_n^{\\sigma}\\delta^x\\ ] ] which completes the proof .",
    "the proof of both lemma [ lem : phigauss ] and lemma [ lem : alphagauss ] require the following gaussian density identities .",
    "first , the product of two gaussian densities is again a gaussian density , up to a constant factor .",
    "@xmath624 with @xmath625 second , for invertible matrix @xmath147 , constant @xmath93 , and variables @xmath29 and @xmath207 , @xmath626 both identities are easily shown directly .",
    "the proof then follows by construction .",
    "given @xmath627 , observation @xmath628 , and control input @xmath629 , the operator @xmath630 produces @xmath631\\tau(s'|s , u)\\sigma_{n , g}(s)\\,dx.\\end{aligned}\\ ] ] we use the notation @xmath632 , @xmath633 , and @xmath634 for the weights , means , and covariances of the indicator function approximation to distinguish them from the other gaussian mixtures representing @xmath3 and @xmath90 .",
    "replacing @xmath365 by its gaussian mixture representation in , and expanding @xmath482 and @xmath278 , gives @xmath635 t_q(q'|q , u)\\phi(x';ax+g(q',u),{\\mathcal{v } } ) \\notag\\\\ & \\hspace{30 mm}\\times\\left[\\sum_{l=1}^l w^{\\sigma}_{l , n}(q)\\phi(x ; \\mu^{\\sigma}_{l , n}(q ) , { \\mathcal{p}}^{\\sigma}_{l , n}(q))\\right]\\\\   & = \\sum_{q=1}^{n_q}\\sum_{l=1}^l\\sum_{i=1}^{i_q}w_i^i(q)w_{m , n}^{\\sigma}(q)y_{q}(y^q|q')t_q(q'|q , u)|c^{-1}|\\phi(x';c^{-1}y^x ; c^{-1}{\\mathcal{w}}c^{-t})\\notag\\\\ & \\hspace{20 mm}\\times \\int_{\\mathbb{r}^m}\\phi(x ; \\mu_i^i(q ) , { \\mathcal{p}}_i^i(q))\\phi(x ; \\mu_{l , n}^{\\sigma}(q ) , { \\mathcal{p}}_{l , n}^{\\sigma}(q))\\notag\\\\ & \\hspace{30 mm}\\times|a^{-1}|\\phi(x ; a^{-1}(x'-g(q',u ) ) , a^{-1}{\\mathcal{v}}a^{-t})\\,dx\\label{eq : phi1}\\\\ & = \\sum_{q=1}^{n_q}\\sum_{l=1}^l\\sum_{i=1}^{i_q}|a^{-1}||c^{-1}|w_i^i(q)w_{m , n}^{\\sigma}(q)y_{q}(y^q|q')t_q(q'|q , u)\\phi(x';c^{-1}y^x ; c^{-1}{\\mathcal{w}}c^{-t})\\notag\\\\ & \\hspace{20 mm}\\times\\phi(\\mu_i^i(q ) ; \\mu_{l , n}^{\\sigma}(q ) , { \\mathcal{p}}_i^i(q ) + { \\mathcal{p}}_{l , n}^{\\sigma}(q))\\int_{\\mathbb{r}^m}\\phi(x ; \\tilde{\\mu},\\tilde{{\\mathcal{p}}})\\notag\\\\ & \\hspace{30 mm}\\times \\phi(x ; a^{-1}(x'-g(q',u ) ) , a^{-1}{\\mathcal{v}}a^{-t})\\,dx \\label{eq : phi2}\\\\ & = \\sum_{q=1}^{n_q}\\sum_{l=1}^l\\sum_{i=1}^{i_q}|a^{-1}||c^{-1}|w_i^i(q)w_{m , n}^{\\sigma}(q)y_{q}(y^q|q')t_q(q'|q , u)\\phi(x';c^{-1}y^x , c^{-1}{\\mathcal{w}}c^{-t})\\notag\\\\ & \\hspace{20 mm}\\times \\phi(\\mu_i^i(q ) ; \\mu_{l , n}^{\\sigma}(q ) , { \\mathcal{p}}_i^i(q ) + { \\mathcal{p}}_{l , n}^{\\sigma}(q))\\phi(a^{-1}(x'-g(q',u ) ) ; \\tilde{\\mu } , \\tilde{{\\mathcal{p } } } + a^{-1}{\\mathcal{v}}a^{-t})\\label{eq : phi3}\\end{aligned}\\ ] ] line follows from , line from combining @xmath636 and @xmath637 according to , and from a second application of and setting the integral of a gaussian density over @xmath638 equal to one .    a final application of and gives @xmath639 which is again a gaussian mixture with @xmath640 components . specifically , @xmath641 with @xmath642,\\\\ { \\mathcal{p}}_{q , l , i , n+1}^{\\sigma}(q ' ) & = \\left[c^t{\\mathcal{w}}^{-1}c + \\left(a\\tilde{{\\mathcal{p}}}a^t+{\\mathcal{v}}\\right)^{-1}\\right]^{-1},\\end{aligned}\\ ] ] and @xmath643,\\\\ \\tilde{{\\mathcal{p } } } & = \\left[\\left({\\mathcal{p}}_i^i(q)\\right)^{-1 } + \\left({\\mathcal{p}}_{l , n}^{\\sigma}(q)\\right)^{-1}\\right].\\end{aligned}\\ ] ]    by construction .",
    "given @xmath644 for some observation @xmath628 , then @xmath645 for control input @xmath629 is written @xmath646\\label{eq : alph}\\\\      & = \\sum_{q'\\in\\mathcal{q}}\\int_{\\mathbb{r}^m}\\left[\\sum_{m=1}^m w_{m , n+1}^{\\alpha , y}(q')\\phi(x';\\mu_{m , n+1}^{\\alpha , y}(q ' ) , { \\mathcal{p}}_{m , n+1}^{\\alpha , y}(q'))\\right]\\notag\\\\      & \\hspace{20 mm}\\times y_q(y^q|q')\\phi(y^x ; cx',{\\mathcal{w}})t_q(q'|q , u)\\notag \\\\      & \\hspace{30 mm}\\times\\phi(x';ax+g(q',u),{\\mathcal{v}})\\,dx '   \\left[\\sum_{i=1}^{i_{q } }",
    "w_i^i(q ) \\phi_i^i(x ) \\right]\\label{eq : alph1}\\\\      & = \\sum_{q'=1}^{n_q}\\sum_{m=1}^m\\sum_{i=1}^{i_q}w_{m , n+1}^{\\alpha , y}(q')w_i^i(q)y_q(y^q|q')t_q(q'|q , u)\\notag\\\\      & \\hspace{20 mm}\\times \\phi(x;\\mu_i^i(q),{\\mathcal{p}}_i^i(q))|c^{-1}|\\phi(c^{-1}y^x ; \\mu_{m , n+1}^{\\alpha , y}(q ' ) , c^{-1}{\\mathcal{w}}c^{-t } + { \\mathcal{p}}_{m , n+1}^{\\alpha , y}(q'))\\notag\\\\      & \\hspace{30 mm}\\times\\int_{\\mathbb{r}^m}\\phi(x';\\hat{\\mu } , \\hat{{\\mathcal{p}}})\\phi(x';ax+g(q',u),{\\mathcal{v}})\\,dx'\\label{eq : alph2}\\\\      & = \\sum_{q'=1}^{n_q}\\sum_{m=1}^m\\sum_{i=1}^{i_q}w_{m , n+1}^{\\alpha , y}(q')w_i^i(q)y_q(y^q|q')t_q(q'|q , u)\\notag\\\\      & \\hspace{20 mm}\\times \\phi(x;\\mu_i^i(q),{\\mathcal{p}}_i^i(q))\\phi(y^x ; c\\mu_{m , n+1}^{\\alpha , y}(q ' ) , { \\mathcal{w}}+ c{\\mathcal{p}}_{m , n+1}^{\\alpha , y}(q')c^t)\\notag\\\\      & \\hspace{30 mm}\\times |a^{-1}|\\phi(x ; a^{-1}(\\hat{\\mu}-g(q',u ) ) , a^{-1}(\\hat{{\\mathcal{p}}}+{\\mathcal{v}})a^{-t})\\label{eq : alph3 }      \\end{aligned}\\ ] ] @xmath647 line follows from one application of , line from and another application of , and a final product of gaussian densities gives . hence @xmath360 is a gaussian mixture with @xmath648 components .    recalling that @xmath649 , it follows that @xmath650 with @xmath651\\\\ { \\mathcal{p}}_{y , q',m , i , n+1}^{\\alpha}(q ) & = \\left[\\left({\\mathcal{p}}_i^i(q)\\right)^{-1 } + a^t\\left(\\hat{{\\mathcal{p}}}+{\\mathcal{v}}\\right)^{-1}a\\right]^{-1},\\end{aligned}\\ ] ] and @xmath652\\\\ \\hat{{\\mathcal{p } } } & = \\left[c^t{\\mathcal{w}}^{-1}c + \\left({\\mathcal{p}}_{m , n+1}^{\\alpha , y}(q')\\right)^{-1}\\right]^{-1}.\\end{aligned}\\ ] ]    by induction .",
    "at time zero , @xmath653 , so that @xmath654 .",
    "assume that @xmath655 for all @xmath656 .",
    "then at time @xmath122 we have , for some @xmath268 and @xmath269 , @xmath657\\notag\\\\      & \\leq \\phi_w^*\\left [ \\vphantom{\\sum_{i=1}^{i_q}}\\left\\|\\sigma_n - \\sigma_{n , g}\\right\\|_1 + \\sum_{q\\in{\\mathcal{q}}}\\int_{\\mathbb{r}^m}\\left|{\\bf 1}_{k_q}(x ) -   \\sum_{i=1}^{i_q}w_i(q)\\phi_i(x)\\right|\\sigma_{n , g}(x , q)\\,dx\\right]\\label{eq : thmconterror1 }      \\end{aligned}\\ ] ] the first term of line follows because the integral over @xmath183 is less than the integral over all of @xmath39 , since @xmath183 is a compact subset of @xmath39 .",
    "the induction hypothesis completes the proof .      by construction . for any time",
    "@xmath334 $ ] , given @xmath286 and @xmath410 , we can rewrite the value function evaluated at @xmath3 in terms of @xmath90-functions . @xmath663 as in the proof of theorem [ thm : valuefuncerrordisc ] , assume without loss of generality that @xmath664 .",
    "@xmath665    define @xmath437 such that @xmath666 . then @xmath667 \\notag\\\\      & \\hspace{10 mm } + \\int_{\\mathcal{y}\\backslash\\overline{k}}\\sum_{z , z'\\in k_{\\delta}}\\alpha_{n+1,\\delta}^{*(y)}(z')\\gamma(y|z')\\tau_{\\delta}(z'|z , u^*)\\sigma_{n,\\delta}(z)\\,dy \\notag\\\\      & \\hspace{10 mm}- \\int_{\\mathcal{y}\\backslash\\overline{k}}\\sum_{z , z'\\in k_{\\delta}}\\alpha_{n+1,\\delta}^{*(\\psi_y)}(z')\\gamma(y|z ' ) \\tau_{\\delta}(z'|z , u^*)\\sigma_{n,\\delta}(z)\\,dy\\notag\\\\      & \\leq \\int_{\\overline{k}}\\sum_{z , z'\\in k_{\\delta}}\\left[\\alpha_{n+1,\\delta}^{*(y)}(z')\\gamma(y|z')\\tau_{\\delta}(z'|z , u^*)\\sigma_{n,\\delta}(z)\\,dy\\right.\\notag\\\\      & \\hspace{10 mm}\\left",
    "- \\alpha_{n+1,\\delta}^{*(\\theta(y))}(z')\\gamma(y|z')\\tau_{\\delta}(z'|z , u^*)\\sigma_{n,\\delta}(z)\\,dy \\right ]   + \\frac{\\epsilon}{n } \\label{eq : lemdiscobs2 }      \\end{aligned}\\ ] ] note that is nonnegative , meaning that using @xmath668 produces a lower bound to the actual value function given by @xmath669 .",
    "this follows because @xmath670 is chosen optimally for only a subset of @xmath41 ( at the points @xmath671 ) , and for all other @xmath268 , @xmath672 is suboptimal , producing a lower value .",
    "next , we can bound @xmath673 from below based on how the points @xmath463 are defined .",
    "@xmath674\\,dy + \\frac{\\epsilon}{n}\\\\      & \\leq n_q\\overline{\\lambda}h_y^{(1)}\\delta^y + \\frac{\\epsilon}{n }      \\end{aligned}\\ ] ]    by induction . at time @xmath55 ,",
    "@xmath675 since @xmath676 .",
    "assume for all @xmath677 that @xmath678 .",
    "then , at time @xmath19 , @xmath679 applying the induction inequality and combining terms completes the proof .",
    "m.  prandini and j.  hu , _",
    "stochastic reachability : theoretical foundations and numerical approximation _ ,",
    "lecture notes in control and information sciences.1em plus 0.5em minus 0.4emspringer verlag , 2006 , pp .",
    "107139 .    i.",
    "mitchell and j.  templeton , `` a toolbox of hamilton - jacobi solvers for analysis of nondeterministic continuous and hybrid systems , '' in _ hybrid systems : computation and control _ , 2005 , vol . 3414 , pp .",
    "480494 .",
    "r.  ghaemi and d.  del vecchio , `` control for safety specifications of systems with imperfect information on a partial order , '' _ ieee transactions on automatic control _",
    "59 , no .  4 , pp . 982",
    " 995 , 2014 .",
    "s.  soudjani and a.  abate , `` adaptive and sequential gridding procedures for the abstraction and verification of stochastic processes , '' _ siam journal on applied dynamical systems _",
    "12 , no .  2 ,",
    "pp . 921956 , 2013 .",
    "e.  brunskill , l.  kaelbling , t.  lozano - perez , and n.  roy , `` planning in partially - observable switching - mode continuous domains , '' _ annals of mathematics and artificial intelligence _ ,",
    "185216 , 2010 ."
  ],
  "abstract_text": [
    "<S> assuring safety in discrete time stochastic hybrid systems is particularly difficult when only noisy or incomplete observations of the state are available . </S>",
    "<S> we first review a formulation of the probabilistic safety problem under noisy hybrid observations as a dynamic program over an equivalent information state . </S>",
    "<S> two methods for approximately solving the dynamic program are presented . </S>",
    "<S> the first method approximates the hybrid system as an equivalent finite state markov decision process , so that the information state is a probability mass function . </S>",
    "<S> the second approach approximates an indicator function over the safe region using radial basis functions , to represent the information state as a gaussian mixture . in both cases , we discretize the hybrid observation process and generate a sampled set of information states , then use point - based value iteration to under - approximate the safety probability and synthesize a suboptimal control policy . </S>",
    "<S> we obtain error bounds and convergence results in both cases , assuming switched affine dynamics and additive gaussian noise on the continuous states and observations . </S>",
    "<S> we compare the performance of the finite state and gaussian mixture approaches on a simple numerical example . </S>"
  ]
}
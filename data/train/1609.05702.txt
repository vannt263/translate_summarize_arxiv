{
  "article_text": [
    "the inter - domain routing in the internet takes place over the -globally adopted- border gateway protocol ( bgp )  @xcite . autonomous systems ( ases ) use bgp to advertise routing paths for ip prefixes to their neighboring ases . since bgp is a distributed protocol and authentication of advertised routes is not always feasible , it is possible for an as to advertise illegitimate route paths for ip prefixes .",
    "these paths can propagate and  infect \" many ases , or even the entire internet , impacting thus severely the internet routing system and/or economy  @xcite .",
    "this phenomenon , called _ bgp prefix hijacking _ , is frequently observed  @xcite , and usually caused by router misconfigurations  @xcite or malicious attacks  @xcite .",
    "some examples of real bgp hijacking cases include : ( a ) a pakistan s isp in 2008 , due to a misconfiguration , hijacked the youtube s prefixes and disrupted its services for more than @xmath0 hours  @xcite ; ( b ) china telecom mistakenly announced @xmath1 ip prefixes ( corresponding to @xmath2 of the whole bgp table ) in 2010 , causing routing problems in the internet  @xcite ; and ( c ) hackers performed several hijacking attacks , through a canadian isp , to redirect traffic and steal thousands dollars worth of bitcoins in 2014  @xcite .    to prevent prefix hijackings , several proactive mechanisms for enhancing the bgp security",
    "have been proposed  @xcite .",
    "these mechanisms need to be globally deployed to be effective .",
    "however , despite the standardization efforts  @xcite , their deployment is slow due to political , technical , and economic challenges , leaving thus the internet vulnerable to bgp hijacks .",
    "therefore , currently , reactive mechanisms are used for defending against prefix hijackings : after a hijacking is detected , network administrators are notified ( e.g , through mailing lists  @xcite , or dedicated services  @xcite ) , in order to proceed to manual actions towards its mitigation ( e.g. , reconfigure routers , or contact other ases to filter announcements ) .",
    "a number of systems have been proposed for detecting prefix hijacking , based on control plane ( i.e. , bgp data ) and/or data plane ( i.e , .",
    "pings / traceroutes ) information  @xcite .",
    "most of them , are designed to operate as third - party services ( external to an as ) that monitor the internet , and upon the detection of a suspicious incident , notify the involved ases .",
    "although this approach has been shown to be able to detect suspicious routing events in many cases , two main issues still remain unsolved : ( i ) the detection might not be accurate , since the suspicious routing events might not correspond to hijacks , but be caused by , e.g. , traffic engineering ; and ( ii ) the mitigation is not automated , increasing thus significantly the time needed to resolve a hijack .    in this paper , we propose a reactive mechanism / system , which we call artemis ( _ automatic and real - time detection and mitigation system _ ) , that aims to be operated by an as itself , rather than a third - party , to timely detect and mitigate hijackings against its _ own _ prefixes in an automatic way .",
    "artemis ( i ) exploits the most recent advances in control - plane monitoring to detect in near real - time prefix hijackings , and ( ii ) immediately proceeds to their automatic mitigation ( section  [ sec : artemis ] )",
    ".    we then conduct several real hijacking experiments in the internet using the peering testbed and analyze the effect of various network parameters ( like , type of hijacking , hijacker / defender - as location and connectivity ) on the performance of artemis .",
    "we show that it is possible to detect and mitigate prefix hijacking within _ few seconds _ from the moment the offending announcement is first made .",
    "this is a major improvement compared to present approaches , which require slow procedures , like manual verification and coordination .",
    "the timely mitigation of artemis , prevents a hijacking from spreading to just , e.g. , 20%-50% of the ases that would be affected otherwise ( section  [ sec : evaluation ] ) .",
    "finally , we discuss related work in hijacking detection systems and measurement studies , and compare it to our study , in order to highlight the new capabilities that are offered with artemis ( section  [ sec : related ] ) .",
    "we conclude our paper by discussing the potential for future applications and extensions of artemis ( section  [ sec : conclusion ] ) .",
    "in this section , we first present the different sources that are used by artemis for control - plane _ monitoring _",
    "( section  [ sec : sources ] ) , and then describe the _ detection _ ( section  [ sec : detection ] ) and _ mitigation _ ( section  [ sec : mitigation ] ) services .      for the monitoring service ,",
    "artemis combines multiple control - plane sources to ( a ) accelerate the detection of a hijacking ( i.e. , minimum time of all sources ) , and ( b ) have a more complete view of the internet ( i.e. , from the vantage points of all the sources ) .",
    "artemis receives control - plane information from publicly available sources , namely , the bgpmon tool  @xcite , the live - streaming service of ripe - ris  @xcite , and the periscope platform  @xcite .",
    "artemis supports the bgpstream tool  @xcite as well .",
    "however , during our experiments , the bgpstream service was unavailable , and , thus , we do not use it in this  paper .    in the following ,",
    "we present the main features of these control - plane sources .",
    "* bgpmon  @xcite * is a tool that monitors bgp routing information in real - time .",
    "it is connected to , and collects bgp updates and routing tables ( ribs ) from bgp routers of : ( a ) the routeviews sites and ( b ) a few dozen of peers around the world ; at the time we conducted our study , bgpmon had @xmath3 vantage points , in total .",
    "bgpmon provides the live bgp data , as an xml stream .",
    "* ripe ris streaming service  @xcite . *",
    "the ripe s routing information system ( ris ) is connected to route collectors ( rcs ) in several locations around the world , and collects bgp updates and ribs . in the standard ripe ris  @xcite , the data can be accessed via the raw files ( in mrt format ) or ripestat .",
    "the delay for bgp updates is @xmath4 and @xmath5 for ribs .",
    "recently , ripe ris offers a streaming service  @xcite that provides live information from @xmath6 rcs via websockets .",
    "the live streaming service of ripe ris , which we use in artemis , has currently @xmath7 rcs in europe and @xmath8 rc in africa ; all of them are located in large ixps .",
    "* periscope  @xcite * is a platform that provides a common interface for issuing measurements from looking glass ( lg ) servers . through periscope ,",
    "a user can send a command to a number of chosen lgs to ask for control - plane ( _ show ip bgp _ ) or data - plane ( _ traceroute / ping _ ) information .",
    "the status and the output of the measurements can be retrieved at any time ( even before its completion ) .",
    "periscope currently provides access to @xmath9 lg servers .",
    "* bgpstream  @xcite * is an open - source framework for live ( and historical ) bgp data analysis .",
    "it enables users to quickly inspect raw bgp data from the command - line , or through a python and c / c++ api .",
    "bgpstream provides live access to routeviews and ripe ris data archives . while the delay of acquiring the data from these two services is considerable ( @xmath10min and @xmath11min , respectively , for bgp updates ) , bgpstream recently introduced a service for live access to a stream of bgp data from bmp - enabled routeviews collectors ( with only @xmath12min delay ) . in total",
    ", bgpstream receives data from @xmath13 route collectors , from all its providers .",
    "the detection service of artemis aims to detect hijacks in ( i ) _ real - time _ and ( ii ) _ without false positives _ , while monitoring the ( iii ) _ entire internet _ in a ( iv ) _ light - weight _ fashion .",
    "the detection service continuously receives from the @xmath7 control - plane sources ( see section  [ sec : sources ] ) information about the bgp route paths for the monitored prefixes , as they are seen at the different vantage points ( e.g. , route collectors , lg servers ) .",
    "this routing information is compared with a local file that defines the legitimate origin - asns for each ip prefix that is owned by the operator of artemis ; any violation denotes a hijacking .",
    "since operator has full knowledge on the legitimate origin - asns for its prefixes , the detection service returns _ no false positives_.    with the combination of @xmath7 sources , the detection can take place when an illegitimate route path is received by any of the sources .",
    "this is always faster than using only one source , and can decrease the time needed for detection .",
    "using multiple sources gives also the possibility to benefit from the _ large number of vantage points _ they have around the globe .",
    "this is important , because a hijacking might affect only a part of the internet , due to bgp policies and shortest - path routing  @xcite .",
    "finally , artemis aims to impose limited load on the used third - party services , so that potentially 100s ases ( that run artemis ) could use them in parallel .",
    "artemis needs to receive only the data ( i.e. , the part of the bgp tables , or specific bgp updates ) that correspond to the local prefixes . as a result , _",
    "the imposed load is low _ , since ( a ) bgpmon and ripe ris ( as well as , bgpstream ) are services / tools designed and optimized to provide streams of live data to many users simultaneously , ( b ) and periscope has already a limit in the rate of requests to avoid overloading of lg servers .",
    "similarly , _ the consumption of network resources is very low _ , allowing thus a single as to monitor many prefixes .",
    "the goals of a mitigation mechanism are to be ( i ) _ fast _ and ( ii ) _ efficient _ , and ( iii ) have _ low impact _ on the internet routing system .",
    "currently mitigation relies on manual actions , e.g. , after a network administrator is notified for a prefix hijacking , she proceeds to reconfiguration of the bgp routers , or contacts other administrators to filter the hijacker s announcements .",
    "as it becomes evident , this manual intervention introduces a significant delay ( e.g. , in the youtube hijacking incident in 2008  @xcite , a couple of hours were needed for the mitigation of the problem ) .",
    "hence , our primary focus is to accelerate the mitigation . to this end",
    ", we implement an automatic mitigation mechanism , which starts the mitigation _ immediately _ after the detection , i.e. , without manual intervention .",
    "specifically , when artemis detects a hijacking in a prefix , let _ 10.0.0.0/23 _ , it proceeds to its de - aggregation : it sends a command to the bgp routers of the as to announce the two more - specific prefixes , i.e. , _ 10.0.0.0/24 _ and _ 10.0.1.0/24_. the sub - prefixes will disseminate in the internet and re - establish legitimate route paths , since more specific prefixes are preferred by bgp .",
    "prefix de - aggregation , as described above , is efficient for _ /23 _ or less specific ( i.e. , _ /22 , /21 , ...",
    "_ ) prefixes . however , when it comes to hijacking of _ /24",
    "_ prefixes , the de - aggregation might not be always efficient , since prefixes more specific than _ /24",
    "_ are filtered by most routers  @xcite .",
    "although this is a shortcoming of the de - aggregation mechanism , it is not possible to overcome it in an automatic way ( manual actions are needed ) ; to our best knowledge , only solutions that require the cooperation of more than one ases could be applied  @xcite .    the de - aggregation mechanism of artemis , increments the number of entries in the bgp routing table by @xmath8 per hijacked prefix .",
    "however , since the number of concurrent hijackings is not expected to be large , and the duration of a hijacking is limited , the imposed overhead is low .    finally , since artemis monitors continuously the control - plane of the internet , from many vantage points , it becomes possible to monitor in real - time the process of the mitigation .",
    "this enables a network administrator to see how efficient the mitigation is , and if needed to proceed to further ( e.g. , manual ) actions or to rely exclusively on the de - aggregation mechanism .",
    "in this section , we conduct experiments in the internet , to investigate ( a ) the overall performance of artemis , and ( b ) the efficiency of the different sources presented in section  [ sec : sources ] for monitoring the control - plane of the internet . in section  [ sec : experimental - setup ] we provide the details for the setup of our experiments , and present the results in section  [ sec : experiments - results ] .",
    "in our experiments , we conduct _ real _ hijackings in the internet .",
    "we use the peering testbed  @xcite , which provides the possibility to announce ip prefixes from real asns to the internet ; both the ip prefixes and the asns are owned by peering , hence , our experiments have no impact on the connectivity of other ases .    specifically , we create a virtual as in peering , and connect it to one or more real networks .",
    "this as ( which we call `` legitimate '' as ) announces an ip prefix and uses artemis to continuously monitor this prefix .",
    "we also create another virtual as ( the `` hijacker '' as ) in peering , connect it to a real network in a different location , and hijack the prefix of the legitimate as .",
    "peering is a testbed that enables researchers to interact with the internet s routing system .",
    "it connects with several real networks at universities and internet exchange points around the world .",
    "the users of peering can announce ip prefixes using multiple asns owned by peering as the origin - as .    in our experiments , we use the connections of peering to three real networks / sites ( table  [ table : peering - sites ] ) organizations in ams - ix  @xcite .",
    "statistics for the number providers , customers , and peers for each as are from  @xcite . ] .",
    "we are given authorization to announce the prefix _ 184.164.228.0/23 _ ( as well as , its sub - prefixes ) , and use the as numbers _ 61574 _ ( for the legitimate as ) and _ 61575 _ ( for the hijacker as ) .    [ cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]      we test artemis in two different types of hijacking attacks : ( a ) exact prefix hijacks , and ( b ) sub - prefix hijacks .",
    "* exact prefix hijacking * is a common attack type where the hijacker announces the same prefix that is announced by the legitimate as .",
    "since shortest route paths are typically preferred , only _ a part of the internet _ that is closer to the hijacker ( in number of as - hops ) switches to route paths towards the hijacker .",
    "exact prefix hijacks typically infect a few tens or hundreds of ases  @xcite , from small stub networks to large tier-1 isps  @xcite . in our experiments , the legitimate as announces the prefix _ 184.164.228.0/23 _ ; then the hijacker announces the same prefix .",
    "to mitigate the attack , the legitimate as , announces the sub - prefixes _ 184.164.228.0/24 _ and _",
    "184.164.229.0/24_.    * sub - prefix hijacking * contributes around 10% of all stable hijackings in the internet  @xcite .",
    "the hijacker announces a more specific prefix , which is covered by the prefix of the legitimate as . since in bgp",
    "more specific prefixes are preferred , _ the entire internet _ switches to routing towards the hijacker for the announced sub - prefix .",
    "we configure artemis to monitor the _ 184.164.228.0/22 _ prefix .",
    "the hijacker announces the prefix _",
    "184.164.228.0/23_. the attack is mitigated by de - aggregating the hijacked prefix , i.e. , the legitimate as announces the two _ /24 _ prefixes .",
    "the experiment process comprises the following steps :    * ( 1 ) * the legitimate as ( _ as61574 _ ) announces the ip prefix , and we wait @xmath14min for bgp convergence .    * ( 2 ) * the hijacker as ( _ as61575 _ ) announces the ip prefix ( or , sub - prefix ) .    * ( 3 ) * artemis detects the hijacking .    * ( 4 ) * artemis starts the mitigation , i.e. , the legitimate as announces the de - aggregated sub - prefixes .    * ( 5 ) * we monitor the mitigation process for @xmath15min , and end the experiment by withdrawing all announcements .",
    "we conduct experiments for a number of different scenarios , varying the ( a ) _ location / site _ of the legitimate and hijacker ases , and ( b ) _ number of upstream providers _ of the legitimate as .",
    "we repeat each scenario / experiment @xmath16 times .",
    "the experiments took place in may - june 2016 .    while normally artemis proceeds immediately after a hijacking detection to its mitigation , in some experiments we add a @xmath15min delay between steps 3 and 4 , i.e. , we defer the mitigation .",
    "this allows us to investigate the efficiency of the different control - plane sources , i.e. , how much time each of them needs to detect the hijacking .",
    "_ bgpmon _ provides to artemis a stream of all the updates it receives from its peers .",
    "hence , configuration is not needed ; filtering and detection are internal services of artemis .    _",
    "_ needs only the information about the monitored prefix , and returns to artemis only the bgp messages that correspond to announcements for this prefix .    in _ periscope",
    "_ , due to the limit on the rate of measurements per user , only a subset of the total 1691 lg servers can be used . to conform to the rate - limit",
    ", we use @xmath17 lg servers , which we select based on their performance ( response time , availability ) and location .",
    "the selected set consists of @xmath18  lgs in europe , @xmath0 in asia , @xmath6 in north america , and @xmath8 in australia .",
    "the performance of artemis depends on the control - plane sources it uses . therefore , to obtain an initial understanding about the capabilities and limitations of artemis , we present in fig .  [",
    "fig : detection - mititgation ] experimental results that demonstrate the efficiency and characteristics of the different control - plane sources in hijacking detection ( fig .",
    "[ fig : boxplots - detection - delay - per - tool ] ) and mitigation monitoring ( fig .",
    "[ fig : mitigation - as - vs - time ] ) .    fig .",
    "[ fig : boxplots - detection - delay - per - tool ] shows how much time is needed by bgpmon , ripe ris , and periscope to observe an illegitimate route , after it has been announced from the hijacker as .",
    "we present the distribution of the times ( among different experiments ) for both attack types : prefix and sub - prefix hijacking .",
    "a first observation is that the streaming services ( bgpmon and ripe ris ) observe the hijack in @xmath19min in most cases , and are significantly faster than periscope ( @xmath8-@xmath0min ) , which monitors the control - plane by periodically issuing measurements from lg servers .",
    "this is due to the response delay of the lgs , as well as , a limit in the minimum time interval between consequent measurements imposed by periscope .",
    "the detection delay in the sub - prefix attack case ( sp ) is -on average- lower than in prefix hijacking ( p ) .",
    "this is because a sub - prefix hijacking appears in the whole internet , whereas prefix hijacking affects only a fraction of it .",
    "this partial infection of the internet can be faster observed by bgpmon that has more vantage points than ripe ris , as is indicated by the lower mean value and variance of bgpmon in the prefix hijacking case .    in fig .",
    "[ fig : mitigation - as - vs - time ] , we show the mitigation progress as it has been observed by the ases with a vantage point , i.e. , an rc feed or an lg server , in all sources .",
    "the average number of ases that have been infected by the hijacker and switched back to the legitimate routes , are @xmath20 and @xmath11 in the sp and p case , respectively . despite the differences ,",
    "both attacks can be quickly mitigated ; @xmath21 ( sp ) and @xmath22 ( p ) of the ases re - establish legitimate routes in @xmath16sec after the mitigation was launched , while almost complete mitigation is achieved in less than @xmath8min .",
    "furthermore , figs .",
    "[ fig : boxplots - detection - delay - per - tool ] and  [ fig : mitigation - as - vs - time ] hint to an interesting trade - off : more vantage points ( and , thus , ases ) can be monitored by periscope , however , this comes with an increase in the detection delay compared to bgpmon and ripe ris .",
    "we now proceed to test the efficiency of artemis under various scenarios of network connectivity .",
    "[ fig : detection - location ] illustrates the effect of the ( i ) hijacker site and ( ii ) number of upstream providers of the legitimate as . in the prefix hijacking case ( fig .",
    "[ fig : boxplots - delay - vs - location - prefix ] ) , when the hijacking is triggered by a well connected site , as in the case of ams that it peers with @xmath23 real networks , the detection of the hijacking can be done in around @xmath16sec .",
    "when the connectivity of the hijacker as is low , as in the gat case that there are less than a dozen of directly connected networks , the detection delay is always higher than @xmath11sec and can need up to @xmath8min ( the average detection delay is around @xmath15sec ) .",
    "these findings are intuitive and consistent with the conclusions of the simulation study in  @xcite ; adding to this , they quantify for the first time the effects of the hijacker s connectivity with real experiments .    in fig .",
    "[ fig : boxplots - delay - vs - location - prefix ] , we can also observe that when the connectivity of the legitimate as increases , i.e. , @xmath0 upstream providers , the detection delay ( slightly ) increases as well .",
    "this is due to the fact that with @xmath0 upstream providers , more ases are closer to the legitimate as ( in terms of as - hops ) than the hijacker , and thus the effect of prefix hijacking is lower ( and , consequently , its detection becomes more difficult ) .",
    "in contrast to the prefix hijacking case , when the hijacker announces a sub - prefix ( fig .  [",
    "fig : mboxplots - delay - vs - location - subprefix ] ) , the connectivity of the involved networks does not play a crucial role .",
    "the effect of the hijacking is large and the detection is always completed within @xmath16sec , and on average it needs only @xmath7sec !    in  @xcite it is shown that the `` detection delay '' of argus ( a state - of - the - art hijacking detection system ) is less than @xmath16sec for @xmath24 hijacks .",
    "however , this delay , let @xmath25 , refers to the time needed to infer that an observation of an illegitimate route corresponds to a hijacking attack ; i.e. , if argus uses the same control - plane sources as artemis , the total detection delay of argus is @xmath26 .      after presenting the hijacking detection efficiency , we study the gains of the automatic mitigation of artemis .",
    "specifically , fig .",
    "[ fig : percentage - mititgation ] shows the percentage of infected ases in relation to the time since the hijacking has been launched .",
    "each curve corresponds to a different `` mitigation start time '' @xmath27 , i.e. , the time between the hijacker s announcement and the de - aggregation .",
    "the two bottom linessec and @xmath15sec in fig .",
    "[ fig : salvaged - as - prefix ] , and @xmath28 and @xmath29 in fig .",
    "[ fig : salvaged - as - subprefix ] . ]",
    "correspond to the near real - time automatic mitigation with artemis ( we selected representative scenarios ; cf . fig .",
    "[ fig : detection - location ] ) .",
    "the two top lines are assumed to correspond to a timely ( but not real - time ) mitigation , e.g. , with manual actions .",
    "as it can be seen , artemis can significantly decrease the impact of a hijacking .",
    "for instance , in scenarios where the detection delay of artemis is @xmath16sec , the fraction of infected ases is @xmath30 and @xmath22 in the prefix and sub - prefix hijacking , respectively , while even a timely mitigation starting @xmath8min after the hijacking is not able to prevent the infection of all ases .",
    "moreover , with artemis the attack is completely mitigated in @xmath31min , whereas a mitigation that started after all ases are infected ( i.e. , top two lines ) needs around @xmath32min _ after the detection _",
    ", i.e. , @xmath33min .",
    "this fast and effective mitigation that artemis can achieve , is particularly important for short hijacking attacks , whose frequency increases  @xcite , and which can still cause serious problems  @xcite .",
    "detection mechanisms can be classified based on the type of information they use for detecting prefix hijackings as : ( i ) control - plane , ( ii ) data - plane , and ( iii ) hybrid approaches .",
    "control - plane approaches  @xcite collect information , like bgp updates or tables , from route servers and/or looking glass servers ( lgs ) , from which they detect incidents that can be caused by prefix hijackings .",
    "when , for example , a change in the origin - as of a prefix , or a suspicious change in a route path , is observed , an alarm is raised .",
    "data plane approaches  @xcite use ping / traceroute measurements to detect a prefix hijacking .",
    "they continuously monitor the data plane connectivity of a prefix and raise an alarm for hijacking , when significant changes in the reachability of the prefix  @xcite or in the paths leading to it  @xcite , are observed . a main shortcoming of data - plane mechanisms , is that a significant ( minimum ) number of active measurements is required to safely characterise an event as hijacking .",
    "hence , these systems can not be implemented in a light - weight fashion ; and if deployed by every as , they could introduce a large overhead  @xcite . finally , hybrid approaches  @xcite combine control and data plane information to detect , with higher accuracy  @xcite , multiple types of prefix hijacking  @xcite .",
    "argus  @xcite is the most recent among the aforementioned detection systems , and has few false positives / negatives , and near real - time detection .",
    "however , argus is based only on bgpmon for control - plane information  @xcite , whereas artemis receives data from multiple sources ( bgpmon , ripe - ris , bgpstream , periscope ) , which leads to a faster detection in more than @xmath34 of the cases ( as we observed in our experiments ) .",
    "the main difference between artemis and previous detection mechanisms is that most of the previous approaches are _",
    "notification systems_. they are designed to be operated by a third party and to monitor _ all _ the prefix the internet . upon detection of a suspicious event , they notify the involved ases about a possible hijacking .",
    "this process has two shortcomings : ( a ) it yields many false positives , since suspicious events can usually be due to a number of legitimate reasons , like traffic engineering , anycast , congestion of the data - plane , etc . ; and ( b ) it introduces significant delay , between the detection and mitigation of an event , as the network administrators of the involved as need to be notified and then have to manually verify the incident . on the contrary , artemis is designed to detect hijacks against owned prefixes ( for which the origin - as information is known ) and thus , overcomes the accuracy limitations , and eliminates the notification / verification delay .    among previous works ,",
    "only  @xcite is designed for detection of hijacks against owned prefixes .",
    "however , it is a pure data - plane mechanism , which as discussed above , introduces significant overhead ( especially , if deployed by many ases ) .",
    "in contrast , artemis , which is a pure control - plane mechanism , can be deployed simultaneously in many ases without significant overhead for the control - plane resources / tools ( see discussion in section  [ sec : detection ] ) . at the time",
    "the first of these mechanisms were proposed , the capability of the available bgp feeds for providing real - time information was limited . however , currently there exist several state - of - the - art _ publicly available _ control - plane sources / tools  @xcite that enable pure control - plane mechanisms , like artemis , to detect a prefix hijacking event in near real - time ( a few seconds  @xcite , or minutes  @xcite , as we show in section  [ sec : evaluation ] ) . to our best knowledge",
    "artemis is the first approach to exploit the streaming interfaces of ripe ris  @xcite and periscope  @xcite for prefix hijacking detection .",
    "previous studies have taken measurements either over real hijacking incidents that happened in the internet  @xcite or through simulations  @xcite .",
    "while the former correspond to the behavior of the internet and capture the real effects of hijacking , they are limited to the investigation of a few known incidents , which do not span all possible cases .",
    "the latter are able to perform an investigation over a wider range of scenarios and study the effect of different parameters , but do not capture accurately real - world effects , since the topology , routing , and policies of the internet can not be perfectly replicated in simulations . moreover , due to the absence of the ground - truth , i.e. , if a detected routing change is indeed a hijacking or not , previous studies refer to third party sources , e.g. , the route origin authorizations ( roa ) or internet routing registries ( irr ) , for the validation of their results .",
    "however , such information is usually incomplete and/or inaccurate  @xcite , and , this might have an impact on the findings .",
    "closer to our study is  @xcite that tested its performance in self - triggered hijacks ( for self - owned prefixes ) in the internet .",
    "nevertheless , only few experiments ( 15 hijacks ) were conducted , whereas in this paper we conduct a large number of experiments ( spread over 4 weeks ) with varying network parameters ( location and connectivity of the hijacking / legitimate as ) and types of hijacks .",
    "we have presented artemis , a system for near real - time detection and automatic mitigation of bgp hijacking attacks .",
    "the evaluation with extensive real hijacking experiments , showed that artemis can detect hijacks in a few seconds , and completely mitigate them in less than @xmath0min .    in this initial implementation of artemis",
    ", we detect _ origin - as _ inconsistencies in route paths , and combat them using the _ prefix de - aggregation _ method .",
    "although not a panacea , prefix de - aggregation can be also effective for adjacency / policy  @xcite or last - hop anomalies  @xcite , or even path interception attacks  @xcite .",
    "to extend artemis towards this direction , it suffices to modify only the detection algorithm ; the monitoring and mitigation services can remain intact .    finally , since the detection service of artemis is built on top ( and , independently ) of the monitoring service , the employed monitoring methodology and results ( e.g. , fig .  [ fig : detection - mititgation ] ) are generic and can be useful in a number of application related to control - plane monitoring , e.g. , to provide visibility to an as of the impact of the routing changes it triggers ( anycasting , traffic engineering , etc ) .                                      c.  zheng , l.  ji , d.  pei , j.  wang , and p.  francis , `` a light - weight distributed scheme for detecting ip prefix hijacks in real - time , '' in _ acm sigcomm computer communication review _ , vol .",
    "37 , pp .",
    "277288 , 2007 ."
  ],
  "abstract_text": [
    "<S> the border gateway protocol ( bgp ) is globally used by autonomous systems ( ases ) to establish route paths for ip prefixes in the internet . due to the lack of authentication in bgp , </S>",
    "<S> an as can _ hijack _ ip prefixes owned by other ases ( i.e. , announce illegitimate route paths ) , impacting thus the internet routing system and economy . to this end , a number of hijacking detection systems have been proposed . however , existing systems are usually third party services that -inherently- introduce a significant delay between the hijacking detection ( by the service ) and its mitigation ( by the network administrators ) . to overcome this shortcoming , in this paper , </S>",
    "<S> we propose artemis , a tool that enables an as to _ timely _ detect hijacks on its own prefixes , and _ automatically _ proceed to mitigation actions . to evaluate the performance of artemis , we conduct real hijacking experiments . to our best knowledge , </S>",
    "<S> it is the first time that a hijacking detection / mitigation system is evaluated through extensive experiments in the real internet . </S>",
    "<S> our results ( a ) show that artemis can detect ( mitigate ) a hijack within a few seconds ( minutes ) after it has been launched , and ( b ) demonstrate the efficiency of the different control - plane sources used by artemis , towards monitoring routing changes . </S>"
  ]
}
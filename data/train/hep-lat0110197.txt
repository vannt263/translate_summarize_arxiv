{
  "article_text": [
    "computer power requirements for lattice gauge theory ( lgt ) simulations have increased exponentially in the last 20 years .",
    "estimates of these requirements , in terms of computing power and memory needs for large scale simulations , such as studies of the hadronic spectrum with dynamical fermions close to the physical limit have been published recently @xcite and extensively debated at this conference @xcite .",
    "it is increasingly clear that unrestricted access to computing resources of several sustained tflops will be needed in the next few years . for about 15 years",
    ", a large fraction of the compute cycles used by lgt simulations have been provided by lgt - optimized massively parallel processors . however , presently available systems ( see @xcite for a recent review ) are unable to reach the required performance target .",
    "the development of yet another generation of dedicated lgt engines is still one open option , even if different approaches to the problem are currently discussed @xcite .",
    "this paper describes in detail one such project , apenext , carried out jointly by desy , infn and the university of paris - sud ( a similar project is described in @xcite ) .",
    "this paper is structured as follows : the next section introduces requirements and guidelines of the apenext architecture .",
    "section 3 outlines the proposed structure of the new system , at the hardware level , while section 4 discusses software issues .",
    "section 5 is a brief status report .",
    "our main goal is the development of a massively parallel system for `` compute intensive '' and `` memory intensive '' lgt simulations .",
    "the former case refers to dynamical fermions on not too large lattices ( typical sizes of @xmath0 corresponding to system of @xmath1 and @xmath2 ) and small dynamic quark masses , while the latter case corresponds to quenched simulations on very large lattices ( @xmath3 ) and large @xmath4 ( @xmath5 and @xmath6 ) relevant for @xmath7 physics with limited extrapolation in the mass of the heavy quark .",
    "these physical requirements translate into the capability to handle online data structures of the order of several hundred gbyte to 1 tbyte , allowing the use of optimized algorithms that trade memory for performance , and to transfer from disk to memory and viceversa the tens of tbyte corresponding to the full set of propagators needed for weak interaction studies ( see @xcite for an accurate estimate of these figures ) . in terms of computing power , we aim for systems delivering several tflops .",
    "we try to minimize architectural changes with respect to apemille and to leverage on technology improvements , but we introduce improvements in some key architectural areas :    * floating point arithmetics is upgraded to double precision . *",
    "typical lgt kernels have a ratio @xmath8 between the number of floating point operations and the required operands .",
    "apemille was able to provide enough memory bandwidth without any intermediate storage hierarchy between registers and main memory .",
    "in apenext longer memory latencies ( in units of processor clock cycles ) reduce effective bandwidths for data bursts of the size of gauge matrices or spin - color fields .",
    "we introduce additional features to handle this problem .",
    "* apemille is not able to overlap remote data transfer with computation , so the system must idle waiting for data from remote nodes to arrive . this loss of performance can be partially avoided , by allowing concurrent link activity and computations .",
    "we also support concurrent data transfers on more than one data link .",
    "the apenext architecture is based on a three - dimensional grid of processing nodes , connected by data links between first - neigbours with periodic boundary conditions .",
    "each node is a completely independent unit , with a processor and its memory bank .",
    "it executes independently its own copy of the same program , so the whole system is a spmd processor .",
    "data transfers between nodes follow the message - passing paradigm : the program on the destination node must explicitely receive data sent by the source node .",
    "this is done however with small latency ( @xmath9 ) .",
    "apenext is based on one building block , namely the j&t processor .",
    "it controls program flow , performs arithmetic operations and handles data links to neighbour nodes . a block diagram is shown in figure [ fig : chip ] .    j&t has several similarities with previous ape processors :    * an interface to main memory , through a data bus of 128 bits , plus error detection and correction bits . the memory interface supports double data rate ( ddr ) synchronous dynamic rams ( sdram ) , that will be widely used in standard pcs in the next two years .",
    "a set of 8 plus 1 memory chips provides 256 mbytes of main ( program and data ) memory for each node . * a large register file ( rf ) , holding 256 registers of 64 + 64 bits .",
    "there are three read ports , one write port and one bi - directional ports .",
    "three read ports feed data to the arithmetic box , results enter via the write port , and the bi - dirirectional port exchanges data with memory and the queue system ( see later ) . *",
    "the arithmetic box performs the `` normal '' floating - point operation @xmath10 on complex ( or pair of real ) numbers , corresponding to 8 ( or 4 ) standard floating point operations per clock cycle .",
    "we obtain 1.6 gflops peak performance with a 200 mhz clock .",
    "pipeline length is 10 clock cycles .",
    "the arithmetic box also performs arithmetic and logic operations on pairs of 64 bit integer values and conversions from / to floating point format .",
    "the new features of j&t include :    * a software - controlled program cache , where heavily used compute kernels are pre - loaded . * an address - generation unit , which operates independently of the arithmetic unit . * a serial control interface for initialization , exception handling and debugging . * a queue system for pre - fetching local and remote data .",
    "* seven data links with a bandwidth of 200 mbytes / s each .    here",
    "we discuss in some details the memory - queue system and the data links .",
    "the apenext memory interface has a peak bandwidth of 3.2 gbyte / sec ( one complex data word per clock cycle , able to sustain algorithms with @xmath11 ) . in practice ,",
    "a startup latency of about 12 cycles affects sustained performances .",
    "we plan to solve this problem through a program controlled prefetch mechanisms . during execution of iteration @xmath12 of a critical kernel",
    ", data structures needed for iteration @xmath13 are moved from memory to an intermediate storage element , a data queue , close ( in terms of bandwidth and latency ) to the register file .",
    "the size of the queue is 1024 complex words .",
    "the user program starts data transfers from memory to the queue .",
    "memory accesses are local ( from local memory to local queue ) or remote ( from memory to the queue in a neighbour processor ) and hence may have different transfer times . the queue system , however , ensures delivery of the data to the receiving register file in the same order in which memory accesses were scheduled .",
    "prefetch reduces substantially remote bandwith requirements .",
    "consider the evaluation of the wilson - dirac operator , for a lattice point on the border between two processing nodes .",
    "a total of 12 complex data words ( fermionic degrees of freedom ) plus possibly 9 complex data words ( gauge fields ) must be moved on a data link in the time interval used for the evaluation of the operator , corresponding to @xmath14 complex normal operations .",
    "if we ( unrealistically ) assume 100% efficiency , we require a transfer rate of about 1 byte per clock cycle , i.e. 200 mbytes / sec . sites at the edges ( corners ) of the physical region mapped onto each processor need two ( three ) data transfers .",
    "if the links in different directions operate concurrently bandwidth requirements are not increased .",
    "the apenext links are designed for the above requirements .",
    "each link delivers a block of data words to the destination queues .",
    "the transfer , proceeeds concurrently with local node operations .",
    "an interlock mechanisms stallss the receiving node if the latter tries to pop data not yet arrived at the destination queue .",
    "data communication provides a synchronization mechanism : the user program starts a data transfer to a remote node over one link . at the same time it enables data reception from another link",
    "if the sender is ahead in time with respect to the receiver , the former will be forced to wait till synchronization is achieved . in most cases relevant for lgt simulations ,",
    "data sends and receive are in opposite directions , but more general communication patterns , such as systolic paths , can be established .",
    "each node has 7 data links .",
    "six links make up the regular three - dimensional network , while the `` seventh '' link is available for i / o to the host system ( see later , for more details ) .",
    "each link uses cyclic redundancy check ( crc ) to identify errors .",
    "each data block is divided in packets of 128 bits ( plus 16 crc bits ) .",
    "corrupted packets are re - trasmitted .",
    "apenext machines use processing boards ( pb ) as the basic hardware building block .",
    "each pb has 16 processing elements ( an array of @xmath15 nodes ) .",
    "a set of 16 pbs is assembled in a crate , a system of @xmath16 nodes with communication links on the backplane .",
    "crates are connected by cable links , building larger systems of @xmath17 nodes .",
    "each node is also connected to the slow control interface .",
    "each pb can be connected to a host computer across the `` seventh link '' , which handles heavy data i / o . the number of hosts and of pbs using the `` seventh link '' is arbitrary .",
    "therefore the i / o bandwidth of apenext can be scaled according to the specific applications .",
    "apenext programs are written in the tao programming language , also used in earlier ape machines .",
    "our goal is almost complete compatibility , in the sense that old apemille program will only need to be recompiled .",
    "optimal efficiency on apenext will of course involve some machine specific tuning of the codes .",
    "in particular programs will have to handle the queues , which are accessible at tao level .",
    "we are also developing a c compiler , based on open source compilers .",
    "our target is to treat tao and c on almost equal footing , also from the point of view of efficiency . from first experiences with a prototype version",
    "we hope that c codes reach performances comparable with tao .    at the backend level of the compilation chain",
    ", we plan to use the instruction scheduling techniques used in apemille to optimize pipeline usage .",
    "we are also in the process of adopting further optimization tools at the assembly level .",
    "all apenext hardware building blocks are in an advanced stage of development : the first pb prototype has just been delivered , while the j&t processor will start to be fabricated at a silicon foundry later this year .",
    "we expect all prototype buiding blocks to be available next spring .",
    "our next important goal is a complete apenext crate ( 400 gflops peak processing power ) running at the end of 2002 .",
    "subject to funding availability , we look forward to tflops class machines in the year 2003 .    9 f. jegerlehner et al .",
    ", `` requirements for high performance computing for lattice qcd : report of the ecfa working panel '' , preprint ecfa/99/200 . c. bernard et al . ,",
    "these proceedings .",
    "n. christ , nucl .",
    "b ( proc . suppl . ) 8384 ( 2000 ) 103 .",
    "m. lscher , these proceedings .",
    "n. christ , these proceedings .",
    "the ape collaboration : r. alfieri et al .",
    ", hep - lat/0102011 ."
  ],
  "abstract_text": [
    "<S> apenext is a new generation ape processor , optimized for lgt simulations . </S>",
    "<S> the new project follows the basic ideas of previous ape machines and develops simple and cheap parallel systems with multi - tflops processing power . </S>",
    "<S> this paper describes the main features of this new development . </S>"
  ]
}
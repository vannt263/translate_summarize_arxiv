{
  "article_text": [
    "low density parity check ( ldpc ) codes have been shown to achieve near - capacity performance over several communication channels . typically , they are binary linear codes described by sparse , randomly , generated parity - check matrices . in @xcite and @xcite ,",
    "the performance of non - binary ldpc codes , defined over larger finite fields and over integer rings , is investigated and compared with that of binary ldpc codes . for several applications such as coded - modulation ,",
    "codes over higher alphabets are more appropriate for system design .",
    "the popularity of ldpc codes is due to their efficient and simple decoding .",
    "graph - based message passing iterative decoders have been shown to achieve near - capacity performance with complexity only linear in the length of the code . however , these iterative decoders are sub - optimal and discrepancies between iterative and maximum - likelihood ( ml ) decoding performance of short to moderate block length binary ldpc codes has been attributed to the presence of pseudocodewords of the ldpc constraint graphs ( or , tanner graphs ) @xcite .",
    "analogous to the role of minimum hamming distance , @xmath1 , in ml - decoding , the minimum pseudocodeword weight , @xmath2 , has been shown to be a leading predictor of performance in iterative decoding @xcite .",
    "furthermore , it has been observed that pseudocodewords with weight @xmath3 are especially problematic for iterative decoding @xcite . in this paper",
    ", we define pseudocodeword weights for @xmath0-ary ldpc codes when the channel is a awgn channel or a @xmath0-ary symmetric channel and obtain lower bounds for the minimum pseudocodeword weight .    the following section shows a tree - based lower bound on the minimum pseudocodeword weight of binary ldpc codes . in section iii , the pseudocodeword weight of @xmath0-ary ldpc codes is defined for the awgn and the @xmath0-ary symmetric channels .",
    "subsequently , the tree - based lower bound for binary ldpc codes is extended to the @xmath0-ary setting .",
    "we note here that we restrict our analysis to pseudocodewords arising from finite - degree graph covers as described in @xcite .",
    "since these pseudocodewords are the same as those occurring in the context of linear programming ( lp ) decoding , the results obtained here are applicable to pseudocodewords of lp decoding as well .",
    "section iv summarizes the paper and outlines some other techniques that are being investigated for bounding the pseudocodeword weight of @xmath0-ary ldpc codes .",
    "the tree bound of a @xmath4 left ( variable node ) regular bipartite ldpc constraint graph with girth @xmath5 is defined as    @xmath6 [ treebound_defn ]     _ let @xmath7 be a bipartite ldpc constraint graph with smallest left ( variable node ) degree @xmath4 and girth @xmath5 .",
    "then the minimum pseudocodeword weight @xmath2 is lower bounded by @xmath8 on the additive white gaussian noise ( awgn ) channel and the binary symmetric channel ( bsc ) . _",
    "[ thm1 ]    the proof of this result is presented in @xcite .",
    "the tree bound was originally derived by tanner in @xcite to lower - bound the minimum distance of the code .",
    "since the set of pseudocodewords includes all codewords , we have @xmath9 .",
    "let @xmath10 be a parity check matrix representing a @xmath0-ary ldpc code @xmath11 .",
    "thus , @xmath10 is sparse in the number of non - zero entries . the corresponding ldpc constraint graph @xmath7 that represents @xmath10 is an incidence graph of the parity check matrix as in the binary case .",
    "however , each edge of @xmath7 is now assigned a weight which is the value of the corresponding non - zero entry in @xmath10 .",
    "( in @xcite , ldpc codes over @xmath12 are considered for transmission over binary modulated channels , whereas in @xcite , ldpc codes over integer rings are considered for higher - order modulation signal sets . ) for convenience , we consider the special case wherein each of these edge weights are equal to one .",
    "this is the case when the parity check matrix has only zeros and ones .",
    "furthermore , whenever the ldpc graphs have edge weights of unity for all the edges , we refer to such a graph as a binary ldpc constraint graph representing a @xmath0-ary ldpc code @xmath11 .",
    "we first show that if the ldpc graph corresponding to @xmath10 is @xmath4-left ( variable - node ) regular , then the same tree bound of theorem  [ thm1 ] holds .",
    "that is , +    _ if @xmath7 is a @xmath4-left regular bipartite ldpc constraint graph with unity edge weights , girth @xmath5 , and represents a @xmath0-ary ldpc code @xmath11 .",
    "then the minimum distance of the @xmath0-ary ldpc code @xmath11 is lower bounded as @xmath13 _ [ q_ary_dmin ]    the proof is essentially the same as in the binary case .",
    "enumerate the graph as a tree starting at an arbitrary variable node .",
    "furthermore , assume that a codeword in @xmath11 contains the root node in its support .",
    "the root variable node ( at layer @xmath14 of the tree ) connects to @xmath4 constraint nodes in the next layer ( layer @xmath15 ) of the tree .",
    "these constraint nodes are each connected to some sets of variable nodes in layer @xmath16 , and so on .",
    "since the graph has girth @xmath5 , the nodes enumerated up to layer @xmath17 when @xmath18 is odd ( respectively , @xmath19 when @xmath18 is even ) are all distinct . since the root node belongs to a codeword , say @xmath20 , it assumes a non - zero value in @xmath20 .",
    "since the constraints must be satisfied at the nodes in layer @xmath15 , at least one node in layer @xmath16 for each constraint node in @xmath15 must assume a non - zero value in @xmath20 .",
    "( this is true under the assumption that an edge weight times a ( non - zero ) value , assigned to the corresponding variable node , is non - zero in the code alphabet . )    under the above assumption , there are at least @xmath4 variable nodes ( i.e. , at least one for each node in layer @xmath15 ) in layer @xmath16 that are non - zero in @xmath20 .",
    "continuing this argument , it is easy to see that the number of non - zero components in @xmath20 is at least @xmath21 when @xmath18 is odd , and @xmath22 when @xmath18 is even .",
    "this proves the desired lower bound .    a non - zero edge - weight times a ( non - zero ) value , assigned to the corresponding variable node , may be zero in certain code alphabets .",
    "since we have chosen the edge weights to be unity , such a case will not arise here .",
    "but also more generally , such cases will not arise when the alphabet and the arithmetic operations correspond to finite - field operations .",
    "however , when working over other structures , such as finite integer rings and more general groups , such cases could arise .",
    "we note here that in general this lower bound is not met and typically @xmath0-ary ldpc codes that have the above graph representation have minimum distances larger than the above lower bound .",
    "recall from @xcite that a pseudocodeword of an ldpc constraint graph @xmath7 is a valid codeword in some finite cover of @xmath7 . to define a pseudocodeword for a @xmath0-ary ldpc code",
    ", we will restrict the discussion to ldpc constraint graphs that have edge weights of unity among all their edges  in other words , binary ldpc constraint graphs that represent @xmath0-ary ldpc codes .",
    "a finite cover of a graph is defined in a natural way as in @xcite wherein all edges in the finite cover also have an edge weight of unity . for",
    "the rest of this section , let @xmath7 be a ldpc constraint graph of a @xmath0-ary ldpc code @xmath11 of block length @xmath23 , and let the weights on every edge of @xmath7 be unity .",
    "we define a pseudocodeword @xmath24 of @xmath7 as a @xmath25 matrix of the form @xmath26 , \\ ] ] where the pseudocodeword @xmath24 forms a valid codeword @xmath27 in a finite cover @xmath28 of @xmath7 and @xmath29 is the fraction of variable nodes in the @xmath30 variable node cloud , for @xmath31 , of @xmath28 that have the assignment ( or , value ) equal to @xmath32 , for @xmath33 , in @xmath27 .",
    "a @xmath0-ary symmetric channel is shown in figure  [ q_ary_sym ] .",
    "the input and the output of the channel are random variables belonging to a @xmath0-ary alphabet that can be denoted as @xmath34 .",
    "an error occurs with probability @xmath35 , which is parameterized by the channel , and in the case of an error , it is equally probable for an input symbol to be altered to any one of the remaining symbols .    following the definition of pseudocodeword weight for the binary symmetric channel @xcite",
    ", we provide the following definition for the weight of a pseudocodeword on the @xmath0-ary symmetric channel . for a pseudocodeword @xmath36 , let @xmath37 be the sub - matrix obtained by removing the first column in @xmath24 .",
    "( note that the first column in @xmath24 contains the entries @xmath38 . )",
    "then the weight of a pseudocodeword @xmath24 on the @xmath0-ary symmetric channel is defined as follows .",
    "let @xmath39 be the smallest number such that the sum of the @xmath39 largest components in the matrix @xmath40 , say , @xmath41 , exceeds @xmath42 .",
    "then the weight of @xmath24 on the @xmath0-ary symmetric channel is defined as @xmath43    note that in the above definition , none of the @xmath44 s , for @xmath45 , are equal to zero , and all the @xmath46 s , for @xmath45 , are distinct .",
    "that is , we choose at most one component from every row of @xmath40 when choosing the @xmath39 largest components .",
    "the following sub - section provides an explanation for the above definition of weight .",
    "suppose the all - zero codeword is sent across a @xmath0-ary symmetric channel and the vector @xmath47 is received",
    ". then errors occur in positions where @xmath48 .",
    "let @xmath49 and let @xmath50 .",
    "the distance between @xmath51 and a pseudocodeword @xmath24 is defined as @xmath52 where @xmath53 is an indicator function that is equal to @xmath54 if the proposition @xmath55 is true and is equal to @xmath56 otherwise .",
    "the distance between @xmath51 and the all - zero codeword @xmath57 is @xmath58 which is the hamming weight of @xmath51 and can be obtained from equation ( [ dist ] ) .",
    "the iterative decoder chooses in favor of @xmath24 instead of the all - zero codeword @xmath57 when @xmath59 .",
    "that is , if @xmath60 the condition for choosing @xmath24 over the all - zero codeword reduces to @xmath61 hence , we define the weight of a pseudocodeword @xmath24 in the following manner .",
    "let @xmath39 be the smallest number such that the sum of the @xmath39 largest components in the matrix @xmath40 , say , @xmath62 , exceeds @xmath42 .",
    "then the weight of @xmath24 on the @xmath63-ary symmetric channel is defined as @xmath64    note that in the above definition , none of the @xmath44 s , for @xmath45 , are equal to zero , and all the @xmath46 s , for @xmath45 , are distinct .",
    "that is , we choose at most one component in every row of @xmath40 when picking the @xmath39 largest components .",
    "the received vector @xmath47 that has the following components : @xmath65 , @xmath66 , for @xmath67 , will cause the decoder to make an error and choose @xmath24 over the all - zero codeword",
    ".    observe that for a codeword , the above weight definition reduces to the hamming weight . if @xmath24 represents a codeword @xmath20 , then exactly @xmath68 , the hamming weight of @xmath20 , rows in @xmath40 contain the entry @xmath54 in some column , and the remaining entries in @xmath40 are zero .",
    "furthermore , the matrix @xmath24 has the entry @xmath56 in the first column of these @xmath69 rows and has the entry @xmath54 in the first column of the remaining rows .",
    "therefore , from the weight definition of @xmath24 , @xmath70 and the weight of @xmath24 is @xmath71 .",
    "we define the @xmath0-ary minimum pseudocodeword weight of @xmath7 ( or , minimum pseudoweight ) as in the binary case , i.e. , as the minimum weight of a pseudocodeword among all finite covers of @xmath7 , and denote this as @xmath72 or @xmath2 when it is clear that we are referring to the graph @xmath7 .",
    "_ let @xmath7 be a @xmath4-left regular bipartite graph with girth @xmath5 that represents a @xmath0-ary ldpc code @xmath11 .",
    "then the minimum pseudocodeword weight @xmath2 on the @xmath0-ary symmetric channel is lower bounded as @xmath73 _ [ q_ary_wmin ]    @xmath18 odd .",
    "consider a single constraint node with @xmath74 variable node neighbors as shown in figure  [ spc ] .",
    "then , for @xmath75 and @xmath76 , the following inequality holds : @xmath77    now let us consider a @xmath4-left regular ldpc constraint graph representing a @xmath0-ary ldpc code .",
    "we will enumerate the ldpc constraint graph as a tree from an arbitrary root variable node , as shown in figure  [ tree ] .",
    "let @xmath24 be a pseudocodeword matrix for this graph .",
    "without loss of generality , let us assume that the component @xmath78 corresponding to the root node is the maximum among all @xmath79 over all @xmath80 .",
    "applying the inequality in ( [ eqn_spc ] ) at every constraint node in first constraint node layer of the tree , we obtain    @xmath81 where @xmath14 corresponds to variable nodes in first level of the tree . subsequent application of the inequality in ( [ eqn_spc ] ) to the second layer of constraint nodes in the tree yields @xmath82 continuing this process until layer @xmath83 , we obtain @xmath84    since the ldpc graph has girth @xmath5 , the variable nodes up to level @xmath83 are all distinct .",
    "the above inequalities yield : @xmath85(1-f_{0,0 } )   \\nonumber \\\\",
    "\\le \\sum_{i\\in\\{0\\}\\cup l_0\\cup\\dots l_{\\frac{g-6}{4 } } } ( 1-f_{i,0})\\le \\sum_{\\mbox { all } i}(1-f_{i,0 } ) \\label{fin_ineq}\\end{aligned}\\ ] ]    let @xmath39 the smallest number such that there are @xmath39 maximal components @xmath86 , @xmath87 , for @xmath88 all distinct and @xmath89 , in @xmath40 ( the sub - matrix of @xmath24 excluding the first column in @xmath24 ) such that @xmath90    then , since none of the @xmath44 s , @xmath45 , are zero , we have @xmath91@xmath92 hence we have that @xmath93@xmath94    we can then lower bound this further using the inequality in ( [ fin_ineq ] ) as @xmath93@xmath95(1-f_{0,0})\\ ] ] since we assumed that @xmath78 is the maximum among @xmath79 over all @xmath80 , we have @xmath96@xmath95(1-f_{0,0})\\ ] ] this yields the desired bound @xmath97 since the pseudocodeword @xmath24 was chosen arbitrary , we also have @xmath98 .",
    "the case @xmath18 even is treated similarly .    since the inequality in ( [ eqn_spc ] ) , in the proof of theorem  [ q_ary_wmin ] , is typically not tight , the above bound is rather loose .      following the definition of effective distance @xmath99 , between a pseudocodeword @xmath100 and a codeword @xmath20 on the awgn channel , presented in @xcite , the weight of a pseudocodeword @xmath101 is given by @xmath102 .",
    "on simplifying the expression in @xcite , the weight of pseudocodeword @xmath100 on the awgn channel is given by @xmath103 the above weight definition assumes @xmath0-ary pulse amplitude modulation , i.e. , the symbols sent across the channel belong to the signal set @xmath34 .",
    "now if we assume a two - dimensional signal set for transmission on the memoryless awgn channel , then under the assumption that the resulting signal - space code is geometrically uniform @xcite , we can derive the weight of a pseudocodeword @xmath24 as the effective distance of @xmath24 from the all - zero codeword in signal space .",
    "the pseudocodeword weight of @xmath24 is given by @xmath104 where @xmath105 is the coordinate in the two - dimensional signal set corresponding to the symbol @xmath106 , @xmath107,\\ ] ] @xmath108,\\ ] ] @xmath109,\\ ] ] and @xmath110 .",
    "note that for @xmath0-ary pulse amplitude modulation as described above , this weight definition reduces to the one in @xmath111 .",
    "suppose we assume @xmath0-psk modulation , then we have @xmath112 and @xmath113 .",
    "note that @xmath114 and @xmath115 .",
    "in addition , @xmath116 . therefore , the weight of a pseudocodeword @xmath24 on the awgn channel under @xmath0-psk modulation is given by : @xmath117 , where @xmath118 @xmath119@xmath120 }   .\\ ] ]      _ let @xmath7 be a @xmath4-left regular bipartite graph with girth @xmath5 that represents a @xmath0-ary ldpc code @xmath11 .",
    "then the minimum pseudocodeword weight @xmath2 on the awgn channel is lower bounded as",
    "_    @xmath121    [ q_ary_awgn_wmin ]    ( note that we assume a slightly unconventional definition of @xmath0-ary pam in that the symbol @xmath122 is mapped to the point @xmath122 rather than to the point @xmath123 as in the conventional definition , for @xmath124 . )    let @xmath101 be a pseudocodeword in @xmath7 . without loss of generality ,",
    "let @xmath78 be the maximum of @xmath125 over all @xmath80 .",
    "we will first lower bound the weight @xmath126 as @xmath127@xmath128    this lower bound is obtained by showing that the denominator in the weight expression can be upper bounded by using the cauchy - schwartz inequality as follows @xmath129 @xmath130 further , since @xmath131 , we obtain the lower bound in @xmath132 .",
    "+ since @xmath133 , we have @xmath134 now , the inequality ( [ fin_ineq ] ) from the proof of theorem  [ q_ary_wmin ] yields the desired lower bound @xmath135 for the case @xmath136 odd .",
    "( the case @xmath136 even follows similarly . )",
    "this paper examined the pseudocodeword weight of @xmath0-ary ldpc codes on the @xmath0-ary symmetric channel and the awgn channel .",
    "a definition for the pseudocodeword weight was derived on the @xmath0-ary symmetric channel and the awgn channel with two - dimensional @xmath0-ary modulation .",
    "the tree bound from @xcite for binary ldpc codes was extended to the @xmath0-ary case .",
    "more sophisticated bounding techniques for the pseudocodeword weight of @xmath0-ary ldpc codes remains an open problem .",
    "it would be useful to also derive a cost - function of the min - sum decoder for @xmath0-ary ldpc codes to give an insight into which pseudocodewords are problematic for iterative decoding .",
    "this work was supported in part by the nsf grant no .",
    "ccr - itr-02 - 05310 .",
    "d.  sridhara and t.  e. fuja .",
    "codes over rings for psk - modulation . , it-51(9):32093220 , 2005 . g.  d. forney , jr . , r.  koetter , f.  kschischang , and a.  reznik . on the effective weights of pseudocodewords for codes defined on graphs with cycles .",
    "in b.  marcus and j.  rosenthal , editors , _ codes , systems and graphical models _ , i m a vol .",
    "123 , pages 101112 .",
    "springer - verlag , 2001 .",
    "r.  koetter and p. 0 .",
    "graph - covers and iterative decoding of finite length codes . in _ proceedings of the ieee international symposium on turbo codes and applications _ , brest , france , september 2003 ."
  ],
  "abstract_text": [
    "<S> pseudocodewords of @xmath0-ary ldpc codes are examined and the weight of a pseudocodeword on the @xmath0-ary symmetric channel is defined . </S>",
    "<S> the weight definition of a pseudocodeword on the awgn channel is also extended to two - dimensional @xmath0-ary modulation such as @xmath0-pam and @xmath0-psk . </S>",
    "<S> the tree - based lower bounds on the minimum pseudocodeword weight are shown to also hold for @xmath0-ary ldpc codes on these channels . </S>"
  ]
}
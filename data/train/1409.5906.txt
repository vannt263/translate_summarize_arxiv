{
  "article_text": [
    "a _ numbering of a family of computable functions of @xmath7 variables _ is a computable partial function @xmath8 .",
    "we call @xmath1 a",
    "_ @xmath3-index _ or a _",
    "@xmath3-program _ for the function @xmath9 , which is denoted as @xmath4 .",
    "a numbering @xmath3 is _ universal _ if for all computable partial functions @xmath10 from @xmath11 to @xmath12 there is @xmath1 with @xmath13 .",
    "by @xmath14 we denote the minimal length of a @xmath3-program for @xmath10 ( _ kolmogorov complexity of @xmath10 with respect to @xmath3 _ ) .",
    "a numbering @xmath3 has _",
    "kolmogorov property _ , if for every other numbering @xmath15 there is a constant @xmath16 such that @xmath17 for all functions @xmath10 .",
    "a numbering @xmath3 is called a _ gdel numbering _ if for every other numbering @xmath15 there is a total computable function @xmath18 ( called a _ translator _ from @xmath15 to @xmath3 ) such that @xmath19 for all @xmath1 .",
    "a gdel numbering @xmath3 is called an _ optimal gdel numbering _ if for all numberings @xmath15 there is a translator @xmath18 from @xmath15 to @xmath3 that has additional property @xmath20 ( the translator is _ linearly bounded _ ) . here and",
    "further @xmath21 denotes the length of @xmath1 .",
    "every optimal gdel numbering has kolmogorov property but not the other way around .",
    "[ ex1 ] here is an example of an optimal gdel numbering @xmath3 of the family of computable functions of @xmath7 variables .",
    "let @xmath22 denote a universal numbering of the family of computable functions of @xmath23 variables .",
    "let @xmath24 denote a computable prefix encoding , for instance , @xmath25 .",
    "then @xmath26 is an optimal gdel numbering of the family of computable functions of @xmath7 variables .",
    "indeed , the mapping @xmath27 is a linearly bounded translator from the numbering @xmath28 to @xmath3 .",
    "the above definitions make sense also for @xmath29 . in this case",
    "@xmath4 is understood as @xmath30 if defined and as a special symbol @xmath31 otherwise .",
    "optimal gdel numberings for @xmath29 were called _ standard machines _ in  @xcite and we will use the same terminology .",
    "kolmogorov complexity @xmath32 of a string @xmath33 with respect to a standard machine @xmath34 is the usual kolmogorov complexity ( the minimal length of a @xmath34-program for @xmath33 ) .",
    "the paper  @xcite shows that for every standard machine @xmath34 , given a string @xmath33 we can find a short list of strings with a short program for @xmath33 : the size ( = cardinality ) of the list is @xmath35 and it contains a @xmath34-program for @xmath33 of length at most @xmath36 .",
    "is there a total algorithm that computes a short list with a short program for @xmath33 from any @xmath34-program for @xmath33 ?",
    "this question was asked recently by alexander shen  @xcite .",
    "notice that there is no total algorithm that maps any program for @xmath33 to @xmath33 ( otherwise the positive answer to the question would immediately follow from the cited result of  @xcite ) .",
    "we show that for every standard machine @xmath34 and for every function @xmath5 of @xmath1 there are infinitely pairs ( @xmath33 , its @xmath34-program @xmath1 ) such that the size of @xmath2 is exponential in both @xmath37 and @xmath38 provided @xmath2 has a program for @xmath33 of length at most @xmath39 .",
    "let @xmath40 denote the minimal length of a @xmath34-program @xmath41 for @xmath33 .",
    "[ th1 ] let @xmath34 be a standard machine and @xmath42 a total computable function mapping ( binary ) strings to finite sets of strings .",
    "then for some @xmath16 for all @xmath43 the following holds .",
    "there is a string @xmath33 and its @xmath34-program @xmath1 of length between @xmath43 and @xmath44 such that @xmath45 and @xmath46 .",
    "let @xmath47 be as in the theorem .",
    "let @xmath48 denote @xmath49 .",
    "then for infinitely many @xmath1 the size of @xmath2 is at least @xmath50 .",
    "moreover , for those @xmath1 s the size of @xmath2 is at least @xmath51 and @xmath52 .",
    "notice , that kolmogorov complexity is less than the length ( up to an additive constant ) and hence the corollary holds for @xmath53 as well .",
    "let @xmath54 be the pairs existing by theorem  [ th1 ] .",
    "the last inequality of the theorem implies @xmath55 and hence @xmath56 .",
    "let us stress that @xmath42 is assumed to be a total function . if we allowed @xmath42 to be defined only on those strings @xmath1 for which @xmath57 halts , then there would be a computable list @xmath2 of quadratic size ( in the length of @xmath58 ) with a program for @xmath33 of length at most @xmath36 , which follows from the result of  @xcite .",
    "this example provides a family of computable lists for which the lower bounds for the size of @xmath42 and for @xmath40 established in theorem  [ th1 ] are tight .",
    "the lower bound @xmath59 for @xmath40 is tight ( up to an additve constant ) for any list @xmath2 containing @xmath1 , for instance , for @xmath60 . for this list",
    "the lower bound for the size is tight too , however , this is not very impressive , as the list is too small .",
    "there is much larger computable list @xmath61 for which both lower bounds are tight .",
    "indeed , the length of the string @xmath33 in the theorem is @xmath62 , as @xmath63 and on the other hand @xmath64 .",
    "moreover , there are similar lists of any log - caridanilty between 0 and @xmath21 .",
    "fix any computable function @xmath65 and consider the computable list @xmath66 . for this list",
    "we have @xmath67 and @xmath68 if @xmath69 and @xmath70 otherwise .",
    "the parameters ( @xmath71 , @xmath72 ) for these lists are shown in the following picture ( where we drop the subscript @xmath34 ) :        [ p1 ] more specifically , they lie on the horizontal straight line segments on the border of the gray area @xmath73 .",
    "let us show that the lower bound of the size in the theorem is tight for all computable lists of the form @xmath74 .",
    "that is , we will show that the length of the string @xmath33 existing by the theorem is @xmath75 .",
    "as @xmath76 , we have @xmath77 and hence @xmath78 .",
    "if @xmath79 then we have @xmath80 and hence these inequalities are equalities up to an additive constant .",
    "otherwise @xmath81 and hence @xmath82 . in this case",
    "@xmath83 and again these inequalities are equalities up to an additive constant .",
    "theorem  [ th1 ] easily translates to optimal gdel numberings of functions of arbitrary number of variables . for general case",
    "the statement is the following .",
    "let @xmath84 denote the function defined only on the tuple @xmath85 with value @xmath33 .",
    "let @xmath86 denote the minimal length of a @xmath3-program @xmath41 for @xmath10 .",
    "[ th1b ] let @xmath3 be an optimal gdel function of @xmath87 variables and @xmath42 a total computable function mapping strings to finite sets of strings .",
    "then for some @xmath16 for all @xmath43 the following holds .",
    "there is a string @xmath33 and a @xmath3-program @xmath1 of length between @xmath43 and @xmath44 for the function @xmath84 such that @xmath45 and @xmath88 .",
    "theorem  [ th1b ] holds for numberings of enumerable sets with the singleton set @xmath89 is place of the function @xmath84 .",
    "the proof is entirely similar .    for the string @xmath1 from theorem  [ th1b ] we have @xmath90 indeed ,",
    "@xmath91 and @xmath92 . summing these inequalities",
    "we get  .",
    "theorem  [ th1b ] answers a question asked recently by teutsch and zimand .",
    "for a numbering @xmath3 of computable functions of one variable , teutsch and zimand  @xcite considered the set of minimal programs for @xmath3 , where @xmath1 is called _ minimal _ , if for all @xmath93 we have @xmath94 . here",
    "@xmath95 denotes the lexicographical ordering on binary strings ( more precisely , @xmath96 iff @xmath97 or @xmath98 and @xmath1 is lexicographically less than @xmath99 ) .",
    "the minimal @xmath3-program for a function @xmath100 is denoted by @xmath101 .",
    "teutsch and zimand showed the following .    *",
    "if @xmath3 is a gdel numbering and a computable function @xmath42 on input @xmath1 returns a list @xmath2 containing @xmath102 , then the size of that list can not be constant . * for every numbering @xmath3 with kolmogorov property , if a computable function @xmath42 on input @xmath1 returns a list containing @xmath102 , then the size of the list must be @xmath103 .",
    "* there exists an optimal gdel numbering @xmath3 such that if a computable function on input @xmath1 returns a list containing @xmath102 , then the size of that list must be @xmath104 .    in summary ,",
    "their results show that a computable list that contains the minimal @xmath3-program can not be too small .    along the lines of the second result teutsch and zimand asked the following question",
    ": is there an optimal gdel numbering @xmath3 with a computable list @xmath2 that contains @xmath102 and has size @xmath105 ?",
    "theorem  [ th1b ] implies the negative answer to this question .",
    "indeed , if @xmath106 for all @xmath1 then @xmath107 for all @xmath1 . by   for the pair @xmath54 existing by the theorem",
    "the size of @xmath2 must be at least @xmath108 .",
    "in other words , the third result of teutsch and zimand holds for _ all _ optimal gdel numberings @xmath3 .",
    "so far we were constructing for a given computable function @xmath42 inputs @xmath1 such that the list @xmath2 has large parameters @xmath109 and @xmath110 .",
    "let us consider the `` short list with short programs '' problem from the other end .",
    "are there @xmath1 s such that _ every _ short list @xmath42 computable from @xmath1 by a total algorithm has high parameters @xmath109 and @xmath111 ? in this form",
    "the question is trivial : we can hard - wire the shortest @xmath34-program @xmath99 for @xmath57 into a total algorithm which will return the list @xmath112 , which has optimal parameters .",
    "the question becomes reasonable if we restrict the complexity , say by @xmath113 , of the total algorithm producing the list from @xmath1 .    to make this question",
    "precise consider the _ total complexity _",
    "@xmath114 defined as the minimal length of a @xmath22-program of a total function that maps @xmath115 to @xmath116 . here",
    "@xmath22 is an optimal gdel numbering of computable functions of one variable .",
    "fix a natural @xmath117 ( the upper bound for total complexity ) .",
    "then for each @xmath1 consider the set @xmath118 where @xmath33 stands for @xmath57 .",
    "the larger this set is the better parameters may have lists @xmath42 with small @xmath119 . if @xmath120 then the list @xmath121 for @xmath122 and the list @xmath123 witness that the set @xmath124 includes the entire gray set @xmath73 on the picture from example  [ ex1 ] .",
    "the set @xmath124 may be much larger then the gray set @xmath73 .",
    "for instance , this happens when @xmath1 is a shortest program for @xmath58 . in this case",
    "the set @xmath124 coincides with the set of all points above the dashed line .",
    "are there infinitely many @xmath1 such that the set @xmath124 is close to the gray set @xmath73 in the picture ?",
    "in other words , are there infinitely many @xmath1 such that for every list @xmath42 with @xmath125 either @xmath126 , or @xmath127 ( with certain accuracy ) ?",
    "a positive answer is provided by the following    [ th2 ] let @xmath34 be a standard machine . for all @xmath128 and all @xmath129 there is a string @xmath33 with @xmath130 and its @xmath34-program @xmath1 of length at most @xmath131 such that for all @xmath132 and all @xmath42 with @xmath133 either @xmath134 or @xmath135 .",
    "notice that the inequality @xmath135 for @xmath136 implies that @xmath137 and hence @xmath138 .",
    "we first drop in theorems  [ th1 ] and  [ th1b ] the requirement @xmath139 . as a reward ,",
    "the lower bound for the list size will be a little bit stronger : @xmath140 in place of @xmath141 .",
    "let us first show that the statement of theorem  [ th1 ] is invariant : if it holds for some standard machine @xmath34 then it holds for any other standard machine @xmath142 .",
    "indeed , assume that theorem  [ th1 ] holds for a standard machine @xmath34 .",
    "to show theorem  [ th1 ] for another standard machine @xmath142 and a list @xmath143 , choose a linearly bounded translator @xmath18 from @xmath142 to @xmath34 and a linearly bounded translator @xmath144 from @xmath34 to @xmath142 .",
    "let @xmath145 be a constant with @xmath146 .",
    "apply theorem  [ th1 ] to the machine @xmath34 and the list @xmath147 . by theorem  [ th1 ] for all @xmath43",
    "there is a string @xmath33 and its @xmath34-program @xmath1 of length at most @xmath148 such that @xmath149 and the list @xmath2 does not contain any @xmath34-program for @xmath33 of length less than @xmath150 .",
    "let @xmath151 . by construction , @xmath152",
    "we also have @xmath153 finally the list @xmath154 does not contain any @xmath34-program of length less than @xmath150 for @xmath33",
    ". hence the list @xmath155 does not contain any @xmath142-program of length less than @xmath43 for @xmath33 .",
    "thus it suffices to prove theorem  [ th1 ] for the standard machine @xmath34 from example  [ ex1 ] , that is for @xmath156 where @xmath22 is a gdel numbering of the family of computable functions of one variable . we will let @xmath157 where @xmath99 is a string of length @xmath43 and @xmath158 does not depend on @xmath43 .",
    "the statement of the theorem will follow from the following properties of @xmath159 and the function @xmath160 ( of one variable ) :      notice that the string @xmath164 has all the required properties .",
    "it remains to find such @xmath165 and @xmath99 .",
    "the computable function @xmath161 and its @xmath22-program @xmath158 will be defined using the kleene fixed point theorem  @xcite . by that theorem",
    "we may assume that computing @xmath161 we have access to a @xmath22-program @xmath158 for @xmath161 .",
    "we construct an algorithm that enumerates the graph of @xmath161 .    *",
    "the algorithm enumerating the graph of @xmath161*. we maintain for all @xmath43 a string @xmath166 of length @xmath43 and a string @xmath167 . at the start",
    "let @xmath166 be any string of length @xmath43 and let @xmath167 be the empty string .",
    "enumerate all the pairs @xmath168 into the graph of @xmath161 thus letting @xmath169 .",
    "then we start an enumeration of the graph of @xmath34 .",
    "each time a new pair appears in that enumeration , we look if the current situation is good or not .",
    "we consider the current situation _",
    "@xmath43 if the pair @xmath168 has been enumerated into the graph of @xmath161 , @xmath170 and the list @xmath171 has no @xmath172-program for @xmath167 of length less than @xmath43 , where @xmath172 denotes the sub - function of @xmath34 consisting of all pairs enumerated so far .    at the start @xmath173 and thus the situation is good for all @xmath43 . each time a new pair appears in the enumeration of the graph of @xmath34",
    ", we look whether the situation has become bad for some @xmath43 .",
    "obviously that may happen only if a pair @xmath174 with @xmath175 and @xmath176 is enumerated . in that case pick a new string @xmath99 of length @xmath43 ( `` new '' means that @xmath99 has not been used as @xmath166 earlier ) .",
    "let @xmath128 be the integer with @xmath177 .",
    "for all strings @xmath33 of length at most @xmath128 consider the set @xmath178 of @xmath172-programs for @xmath33 of length less than @xmath43 .",
    "pick any string @xmath33 of length at most @xmath128 such that @xmath179 does not intersect the list @xmath180 .",
    "as @xmath181 and the number of @xmath33 s is @xmath182 , there is such @xmath33 .",
    "then let @xmath183 , @xmath184 and enumerate the pair @xmath185 into the graph of @xmath161 .",
    "the situation has become good for @xmath43 .",
    "* end of algorithm . *    by kleene s theorem for some @xmath158",
    "this algorithm enumerates the graph of the function @xmath186 .",
    "let us show that for each @xmath43 , starting from some moment the situation is good for @xmath43 . indeed , for any @xmath43 the situation may become bad less than @xmath187 times for @xmath43 , as that may happen only after a new pair of the form @xmath174 with @xmath175 has appeared .",
    "on the other hand , the number of strings @xmath99 of length @xmath43 is @xmath187 and hence we indeed are able to repair the situation @xmath188 times .    let @xmath189 stand for the nowhere defined function .",
    "there is a linearly bounded total computable translator @xmath18 mapping any @xmath34-program for @xmath190 ( for a standard machine @xmath34 ) to a @xmath3-program for the function @xmath84 .",
    "there is also a linearly bounded total computable translator @xmath144 mapping any @xmath3-program for @xmath84 back to a @xmath34-program for @xmath33 .",
    "given a list @xmath42 we just apply theorem  [ th1 ] to the list @xmath191 and @xmath150 , where @xmath145 is a constant with @xmath192 .",
    "it remains to prove theorems  [ th1 ] and  [ th1b ] as they are stated , that is , with the requirement @xmath139 and with the lower bound @xmath141 for the list size .",
    "given any computable list @xmath2 we add @xmath1 into the list and apply theorem  [ th1 ] in the proven form to the resulting list @xmath193 .",
    "the list @xmath193 does have a @xmath34-program for @xmath33 of length @xmath21 and has no @xmath34-program for @xmath33 of length less than @xmath43 .",
    "this implies that @xmath139 .",
    "the program @xmath1 fulfills theorem  [ th1 ] in the original form .      as jason teutsch observed , one can prove theorem  [ th1 ] without using the fixed point theorem . to this end",
    "we modify the construction of @xmath161 so that @xmath161 becomes a standard machine . specifically , we first let @xmath194 for all strings @xmath195 starting with zero , where @xmath34 is any standard machine",
    ". then we define @xmath196 so that for all @xmath43 there is a string @xmath197 of length @xmath198 such that            * the algorithm enumerating the graph of @xmath161*. this time we maintain for all @xmath43 a bunch of pairs @xmath208 .",
    "the length of @xmath209 is @xmath43 and the length of @xmath210 is @xmath128 . at the start let @xmath209 be the @xmath128th string of length @xmath43 and let @xmath210 be the first string of length @xmath128 ( independent of @xmath43 ) .",
    "enumerate all the pairs @xmath211 into the graph of @xmath161 thus letting @xmath212 .",
    "then we start an enumeration of the graph of @xmath34 and an enumeration of the graph of @xmath22 .",
    "we denote by @xmath172 and @xmath213 the sub - functions of @xmath34 and @xmath22 consisting of all pairs ( triples ) enumerated so far . for each @xmath43",
    "we look if the situation is _",
    "good for _ @xmath43 .",
    "this means that for all @xmath214 the pair @xmath211 has been enumerated into the graph of @xmath161 , @xmath215 and for all @xmath205 and all @xmath42 with @xmath216 and @xmath207 we have @xmath217 . here",
    "@xmath218 means the minimal length of @xmath1 such that @xmath219 is defined _ on all @xmath220 of length @xmath43 _ and @xmath221 .    at the start",
    "@xmath172 and @xmath222 are empty and thus the situation is good for all @xmath43 . each time a new pair ( triple ) appears in the enumeration of the graphs of @xmath34 or @xmath22 , we look whether the situation has become bad for some @xmath43 .",
    "this may may happen only if @xmath223 has become less than @xmath224 ( for some @xmath214 ) or a new list @xmath42 with @xmath225 appeared or for an old list @xmath42 the value @xmath226 has become less than @xmath227 ( for some @xmath214 ) . in all the cases we first change @xmath209 and then we change @xmath210 .",
    "the string @xmath209 is replaced by any a new string @xmath99 of length @xmath43 ( `` new '' means that @xmath99 has not been used as @xmath228 earlier ) .",
    "the string @xmath210 is replaced by any string @xmath33 of length @xmath128 such that @xmath229 and the set @xmath230 does not intersect the union ( over all @xmath117 ) of all lists @xmath42 of cardinality less than @xmath231 with @xmath232 .",
    "notice that for every @xmath1 there is only one list @xmath42 with @xmath221 thus the total number of strings in all these lists is less than @xmath233 .",
    "on the other hand , the number of strings @xmath33 of length @xmath128 with @xmath229 is more than @xmath234 .",
    "thus there is such @xmath33 .        *",
    "discovering a new @xmath1 of length less than @xmath237 such that @xmath28 is defined on all strings of length @xmath43 ( this may cause replacement of the whole bunch of @xmath209 s , for all @xmath214 ) , or * discovering a new @xmath34-program @xmath158 of length less than @xmath227 , which may cause the replacement of @xmath209 only if @xmath238 thus for a single @xmath128 , or * discovering a new halting @xmath34-program of length less than @xmath224 for @xmath210 , which again may cause the replacement of @xmath209 only for a single @xmath128 .      to prove the theorem let @xmath1 be the @xmath34-program of @xmath33 obtained from @xmath99 by translation from @xmath161 to @xmath34 .",
    "then @xmath240 .",
    "notice that @xmath241 .",
    "indeed , let @xmath144 be a linearly bounded translator from @xmath161 to @xmath34 .",
    "then @xmath242 is a computable function hence there is a total computable function @xmath18 with @xmath243 .",
    "if @xmath186 is total then so is @xmath244 .",
    "hence @xmath245 .",
    "* acknowledgments . *",
    "the author is sincerely grateful to alexander shen for asking the question and hearing the preliminary version of the proof of the result .",
    "the author is grateful to jason teutsch for the idea of how to omit the use of the fixed point theorem .",
    "the author is grateful to alexander rubtsov for discovering `` intermediate '' lists .",
    "the author is also grateful to the hospitality of the ims of university of singapore .",
    "bruno bauwens , anton makhlin , nikolay vereshchagin , marius zimand .",
    "short lists with short programs in short time . in proceedings",
    "28-th ieee conference on computational complexity ( ccc ) , stanford , ca , pages 98108 , june 2013 .",
    "eccc report tr13 - 007 .",
    "jason teutsch and marius zimand .",
    "on approximate decidability of minimal programs .",
    "available from http://arxiv.org/abs/1409.0496 and http://people.cs.uchicago.edu/  teutsch / papers / teutschpubs.html ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be an optimal gdel numbering of the family of computable functions ( in schnorr s sense ) , where @xmath1 ranges over binary strings . </S>",
    "<S> assume that a list of strings @xmath2 is computable from @xmath1 and for all @xmath1 contains a @xmath3-program for @xmath4 whose length is at most @xmath5 bits larger that the length of the shortest @xmath3-program for @xmath4 . </S>",
    "<S> we show that for infinitely many @xmath1 the list @xmath2 must have @xmath6 strings . here </S>",
    "<S> @xmath5 is an arbitrary function of @xmath1 . </S>"
  ]
}
{
  "article_text": [
    "solving computational tasks using teams of agents deployed in a network gives rise to many problems of coordinating actions of multiple agents .",
    "frequently , the communication capabilities of agents are extremely limited , and the exchange of large amounts of information between agents is only possible while they are located at the same network node . in the rendezvous problem ,",
    "two identical mobile agents , initially located in two nodes of a network , move along links from node to node , with the goal of occupying the same node at the same time . such a question has been studied in various models , contexts and applications  @xcite .    in this paper",
    "we focus our attention on heterogeneous agents in networks , where the time required by an agent to traverse an edge of the network depends on the properties of the traversing agent . in the most general case we consider",
    ", the traversal time associated with every edge and every agent operating in the graph may be different .",
    "scenarios in which traversal times depend on the agent are easy to imagine in different contexts . in a geometric setting",
    ", one can consider a road connection network , with agents corresponding to different types of vehicles moving in an environment .",
    "one agent may represent a typical road vehicle which performs very well on paved roads , but is unable to traverse other types of terrain .",
    "by contrast , the other agent may be a specialized mobile unit , such as a vehicle on caterpillars or an amphibious vehicle , which is able to traverse different types of terrain with equal ease , but without being capable of developing a high speed . in a computer network setting , agents may correspond to software agents with different structure , and the transmission times of agents along links may depend on several parameters of the link being traversed ( transmission speed , transmission latency , ability to handle data compression , etc . ) .    in general",
    ", it may be the case that one agent traverses some links faster than the other agent , but that it traverses other links more slowly .",
    "we will also analyze more restricted cases , where we are given some a priori knowledge about the structure of the problem .",
    "specially , we will be interested in the case of _ ordered agents _ , i.e. , where we assume that one agent is always faster than the other one , and the case of _ ordered edges _ , where we assume that if in a fixed pair of links , one agent takes more time to traverse the first link , the same will also be true for the other agent .",
    "we study the rendezvous problem under the assumption that each agent knows the complete topology of the graph and its traversal times for all edges , but knows nothing about the traversal times or the initial location of the other agent . in all of the considered cases , we will ask about the best possible time required to reach rendezvous , compared to that in the `` offline scenario '' , in which each of the agents also has complete knowledge of the parameters of the other agent . we will also study how this time can be reduced by allowing the agents to communicate ( exchange a certain number of bits at a distance ) at the start of the rendezvous process .",
    "let us consider a simple graph @xmath5 and its weight functions @xmath6 and @xmath7 , where @xmath8 is the set of positive integers .",
    "let @xmath9 , @xmath10 , be two distinguished nodes of @xmath11  the agents @xmath12 and @xmath13 starting nodes .",
    "we assume that initially an agent @xmath14 knows the graph @xmath11 , @xmath15 , @xmath16 and @xmath17 .",
    "thus , @xmath12 knows @xmath18 but it does not know @xmath19 , and @xmath13 knows @xmath19 but it does not now @xmath18 .",
    "we assume that the nodes of @xmath11 have unique identifiers and that @xmath11 is given to each agent together with the identifiers .",
    "the latter in particular implies that the agents have unique identifiers  they can ` inherit ' the identifiers of the nodes @xmath15 and @xmath16 . also , the agents do not see each other unless they meet .",
    "the weight functions indicate the time required for @xmath12 and @xmath13 to move along edges .",
    "that is , given an edge @xmath20 , an agent @xmath21 needs @xmath22 units of time to move along @xmath23 ( in any direction ) .",
    "we assume that both agents start their computation at time @xmath24 by exchanging messages . the time required to send and to receive a message is negligible .",
    "once an agent @xmath21 is located at a node @xmath25 , it can do one of the following _ actions _ :    * the agent can wait @xmath26 units of time at @xmath25 ; after time @xmath27 the agent will decide on performing another action , * the agent can start a movement from @xmath25 to one of its neighbors @xmath28 ; in such case the agent moves with the uniform speed from @xmath25 to @xmath28 along the edge @xmath29 and after @xmath30 units of time @xmath31 arrives at @xmath28 and then performs its next action .    while an agent is performing its local computations preceding an action",
    ", it has access to all messages sent by the other agent at time @xmath24 .",
    "we assume that the time of agent s computations preceding an action is negligible .",
    "we say that @xmath12 and @xmath13 _ rendezvous at time @xmath27 _ ( or simply _ meet _ ) if they share the same location at time @xmath27 ,    * they both are located at the same node at time @xmath27 , or * @xmath21 started a movement from @xmath32 to @xmath33 at time @xmath34 , @xmath35 , @xmath36 , @xmath37 , @xmath38 and @xmath39 ( informally speaking , the agents ` pass ' each other on @xmath23 as they start from opposite endpoints of @xmath23 ) , or * @xmath21 started a movement from @xmath28 to @xmath25 at time @xmath34 , @xmath40 , @xmath38 and @xmath41 ( informally speaking , both agents start at the same endpoint but the one of them ` catches up ' the other : @xmath42 and @xmath43 , or @xmath44 and @xmath45 ) .    observe that the last case is not possible in an optimum offline solution , as the agents could rendezvous earlier in the vertex @xmath28 .",
    "we are interested in the following problem :    * given two integers @xmath46 and @xmath27 , does there exist an algorithm whose execution by @xmath12 and @xmath13 guarantees that the agents send to each other at time @xmath24 messages consisting of at most @xmath46 bits in total , and @xmath12 and @xmath13 meet after time at most @xmath27 ?    given an algorithm for the agents , we refer to the total number of bits sent between the agents as the _ communication complexity _ of the algorithm .",
    "the _ rendezvous time _ of an algorithm is the minimum time length @xmath27 such that the agents meet at time @xmath27 as a result of the execution of the algorithm .",
    "the rendezvous problem has been thoroughly studied in the literature in different contexts . in a general",
    "setting , the rendezvous problem was first mentioned in @xcite .",
    "authors investigating rendezvous ( cf.@xcite for an extensive survey ) considered either the geometric scenario ( rendezvous in an interval of the real line , see , e.g. , @xcite , or in the plane , see , e.g. , @xcite ) or the graph scenario ( see , e.g. , @xcite ) .",
    "a natural extension of the rendezvous problem is that of gathering @xcite , when more than two agents have to meet in one location .",
    "[ [ rendezvous - in - anonymous - graphs . ] ] rendezvous in anonymous graphs .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in the anonymous graph model , the agents rely on local knowledge of the graph topology , only .",
    "nodes have no unique identifiers , and maintain only a local labeling of outgoing edges ( ports ) leading to their neighbors .",
    "when studying the feasibility and efficiency of deterministic rendezvous in anonymous graphs , a key problem which needs to be resolved is that of breaking symmetry . without resorting to marking nodes ,",
    "this can be achieved by taking advantage of the different labels of agents @xcite .",
    "labeled agents allowed to mark nodes using whiteboards were considered in @xcite .",
    "rendezvous of labeled agents using variants of universal exploration sequences was also investigated in  @xcite in the synchronous model , who showed that such meeting can be achieved in time polynomial in the number of nodes of the graph and in the length of the smaller of the labels of the agents .",
    "for the case of unlabeled agents , rendezvous is not always feasible when the agents move in synchronous rounds and are allowed only to meet on nodes .",
    "however , for any feasible starting configuration , rendezvous of anonymous agents can be achieved in polynomial time , and even more strongly , using only logarithmic memory space of the agent  @xcite . in the asynchronous scenario",
    ", it has recently been shown that agents can always meet within a polynomial number of moves if they have unique labels  @xcite .",
    "for the case of anonymous agents , the class of instances for which asynchronous rendezvous is feasible is quite similar to that in the synchronous case , though under the assumption that agents are also allowed to meet on edges ( which appears to be indispensable in the asynchronous scenario ) , certain configurations with a mirror - type symmetry also turn out to be gatherable  @xcite .",
    "[ [ location - aware - rendezvous . ] ] location - aware rendezvous .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    the anonymous scenario may be sharply contrasted with the case in which the agent has full knowledge of the map of the environment , and knows its position within it .",
    "such assumption , partly fueled by the availability and the expansion of the global positioning system ( gps ) , is sometimes called the _ location awareness _ of agents or nodes of the network .",
    "thus , the only unknown variable is the initial location of the other agent . in @xcite the authors study the rendezvous problem of location - aware agents in the asynchronous case .",
    "the authors of  @xcite introduced the concept of covering sequences that permitted location aware agents to meet along the route of polynomial length in the initial distance @xmath47 between the agents for the case of multi - dimensional grids .",
    "their result was further advanced in  @xcite , where the proposed algorithm provides a route , leading to rendezvous , of length being only a polylogarithmic factor away from the optimal rendezvous trajectory .",
    "the synchronous case of location - aware rendezvous was studied in  @xcite , who provided algorithms working in linear time with respect to the initial distance @xmath47 for trees and grids , also showing that for general networks location - aware rendezvous carried a polylogarithmic time overhead with respect to @xmath2 , regardless of the initial distance @xmath47 .",
    "[ [ problems - for - heterogenous - agents . ] ] problems for heterogenous agents .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    scenarios with agents having different capabilities have been also studied . in @xcite",
    "the authors considered multiple colliding robots with different velocities traveling along a ring with a goal to determine their initial positions and velocities .",
    "mobile agents with different speeds were also studied in the context of patrolling a boundary , see e.g. @xcite . in @xcite agents",
    "capable of traveling in two different modes that differ with maximal speeds were considered in the context of searching a line segment .",
    "we also mention that speed , although very natural , is not the only attribute that can be used to differentiate the agents .",
    "for example , authors in @xcite studied robots with different ranges or , in other words , with different battery sizes limiting the distance that a robot can travel .",
    "let @xmath48 , @xmath21 , denote the minimum time required by agent @xmath31 to move from @xmath28 to @xmath25 in @xmath11 with a weight function @xmath49 . if @xmath50 , then we write @xmath51 in place of @xmath52 , @xmath21 .",
    "in other words @xmath53 is the length of the shortest path from @xmath28 to @xmath25 in @xmath11 with weight function @xmath17 , where the length of a path composed of edges @xmath54 is @xmath55 .",
    "we use the symbol @xmath56 to denote the minimum time for rendezvous in the off - line setting where agents that are initially placed on @xmath15 and @xmath16 know all parameters .",
    "we will skip starting positions if it will not lead to confusion writing simply @xmath0 .",
    "denote also @xmath57 , @xmath21 , and let @xmath58 .",
    "all logarithms have base @xmath59 , i.e. , we write for brevity @xmath60 in place of @xmath61 .",
    "the following lemma , informally speaking , implies that we do not have to consider scenarios in which rendezvous occurs on edges , and by doing so we restrict ourselves to solutions among which there exists one that is within a constant factor from an optimal one .",
    "let @xmath62 denote the minimum time for rendezvous at @xmath25 , that is , @xmath63 .",
    "let any node @xmath28 that minimizes the @xmath64 be called a _",
    "rendezvous node_.    [ lem : meet_on_nodes ] for each graph @xmath65 and for each @xmath66 , if @xmath67 is the rendezvous node , then @xmath68 .",
    "if the two agents can achieve rendezvous on a node in time @xmath56 , then the lemma follows and hence we assume in the following that rendezvous occurs on an edge . for @xmath21 ,",
    "let @xmath33 be the last node visited by @xmath31 prior to rendezvous that the two agents achieve in time @xmath56 .",
    "observe that @xmath69 and @xmath70 .    in an optimum solution at least one of the agents traversed at least half of @xmath23 , so @xmath71 moreover , @xmath72 and @xmath73 , so @xmath74 if @xmath28 is a rendezvous node , then @xmath75 this , and prove the lemma .",
    "arbitrary weight functions might cause very bad performance of rendezvous ( see theorems  [ thm : arbitrary+comm+lower ] and  [ thm : case1+no - comm ] ) .",
    "thus , beside the arbitrary case , we will be interested in restricted cases , namely :    1 .",
    "[ arbitraryw ] @xmath18 and @xmath19 are _ arbitrary functions _ , 2 .   [ monotoneedges ] @xmath76 , 3 .",
    "[ monotoneagents ] @xmath77 or @xmath78 .",
    "case  [ arbitraryw ] reflects the situation where both agents and edges are not related in terms of time needed to move along them .",
    "whenever two functions have the property case  [ monotoneedges ] , we will refer to the problem instance as the case of _ ordered edges_. informally , in such scenario both agents obtain the same ordering of edges ( up to resolving ties ) with respect to their weights .",
    "the last case reflects the situation where one of the agents is always at least as fast as the other one .",
    "instances with this property are referred to as the cases of _ ordered agents_.      in this work we analyze the following two extreme scenarios . in the first scenario ( the middle column in table  [ tab : summary ] )",
    "we consider the communication complexity of algorithms that guarantee that rendezvous occurs in time @xmath79 regardless of the starting positions . in the second scenario ( the third column )",
    "we provide bounds on the rendezvous time in case when the agents send no messages to each other .",
    ".summary of results ( @xmath2 is the number of nodes of the input graph ) [ cols=\"<,<,<\",options=\"header \" , ]",
    "in this section we determine upper and lower bounds for communication complexity of algorithms that achieve rendezvous in asymptotically optimal time .",
    "section  [ sec : comm - compl ] is subdivided into three parts reflecting the three cases of weight functions we consider .",
    "we start by giving an upper bound on communication complexity of asymptotically optimal rendezvous .",
    "our method is constructive , i.e. , we provide an algorithm for the agents ( see proof of theorem  [ thm : arbitrary+comm_compl ] ) . then , ( cf . theorem  [ thm : arbitrary+comm+lower ] ) we give the corresponding lower bound .",
    "[ thm : arbitrary+comm_compl ] there exists an algorithm that guarantees rendezvous in @xmath79 time and has communication complexity @xmath80 for arbitrary functions .",
    "let @xmath81 $ ] , and for @xmath82 let @xmath83 $ ] .",
    "denote @xmath84 , where the vertices are ordered according to their identifiers .",
    "we first formulate an algorithm and then we prove that it has the required properties .",
    "we assume that @xmath12 is the executing agent and @xmath13 is the other agent ( the algorithm for @xmath13 is analogous ) .    1 .   for each @xmath85 ( in this order )",
    "send to @xmath13 the integer @xmath86 such that @xmath87 .",
    "2 .   after receiving the corresponding messages from @xmath13 ,",
    "construct @xmath88 such that @xmath89 3 .   find a node @xmath90 with minimum value of @xmath91 . if more than one such node @xmath90 exists , then take @xmath90 to be the one with minimum identifier .",
    "4 .   go to @xmath90 along a shortest path and stop .",
    "note that both agents compute the same function @xmath92 .",
    "this in particular implies that the same vertex @xmath90 , to which each agent goes , is selected by both agents .",
    "hence , the agents rendezvous at @xmath90 .",
    "the transmission of @xmath93 requires @xmath94 bits because @xmath95 for each @xmath21 and @xmath96 .",
    "thus , the communication complexity of the algorithm is @xmath97 .",
    "we now give an upper bound on the rendezvous time at @xmath90 . by definition , for each @xmath98 and for each @xmath21 we have @xmath99 thus , having in mind that @xmath100 , we obtain : @xmath101 now , let @xmath28 be a rendezvous node . by , the choice of index @xmath102 , again by and by lemma  [ lem : meet_on_nodes ] we obtain @xmath103 which completes the proof .",
    "[ thm : arbitrary+comm+lower ] each algorithm that guarantees rendezvous in time @xmath79 has communication complexity @xmath104 for some @xmath2-node graphs .",
    "let @xmath105 be a class of graph such that each @xmath106 is a complete bipartite graph @xmath107 with @xmath108 and @xmath109 , where @xmath110 , and , for each @xmath21 , @xmath111 for each @xmath112 and @xmath113 for each @xmath114 , where @xmath115 is a sufficiently big integer , e.g. , @xmath116 .",
    "note that for each @xmath106 , @xmath117 .",
    "moreover , @xmath118 if and only if there exists an index @xmath96 such that @xmath119 = @xmath120 . a problem to find such an index @xmath121 is equivalent to a known problem of set intersection  @xcite and requires @xmath104 bits to be transmitted between @xmath12 and @xmath13 .",
    "[ thm : monotone_edges+no - visibility ] there exists an algorithm that guarantees rendezvous in @xmath79 time and has communication complexity @xmath122 in case of monotone edges .",
    "let @xmath81 $ ] , and for @xmath82 let @xmath83 $ ] .",
    "for @xmath21 and a function @xmath123 let @xmath124 be the maximum integer such that the removal of all edges from @xmath11 with weights greater than @xmath124 disconnects @xmath11 in such a way that @xmath15 and @xmath16 belong to different connected components . for @xmath21 and @xmath125 , define @xmath126 .",
    "we now give a statement of an algorithm with communication complexity @xmath122 .",
    "then , we prove that its execution by each agent guarantees rendezvous in time @xmath79 .    1 .",
    "let @xmath12 be the executing agent and let @xmath13 be the other agent ( the statement for @xmath13 is analogous ) .",
    "send to @xmath13 the index @xmath127 such that @xmath128 ( this requires sending @xmath129 bits ) .",
    "set @xmath130 ( @xmath131 is in the corresponding message received from @xmath13 ) .",
    "2 .   send to @xmath13 the value of @xmath132 and , for each @xmath133 send to @xmath13 the values of @xmath134 and @xmath135 ( this requires sending @xmath136 bits in total ) .",
    "3 .   send to @xmath13 the value of @xmath137 ( this requires sending @xmath138 bits ) .",
    "4 .   after receiving the corresponding messages from @xmath13 construct a weight function @xmath139 as follows .",
    "first , sort the edges so that @xmath140 for each @xmath141 . denote @xmath142 then , @xmath143 for each @xmath144 ; @xmath145 for each @xmath146 ; and for each edge @xmath147 set @xmath148 if @xmath149 ( this can be deduced from messages received from @xmath13 ) .",
    "calculate the function @xmath150 ( i.e. , the function that @xmath13 constructs based on the information sent to @xmath13 ) . 6 .   find a node @xmath151 such that @xmath152 is minimum .",
    "if more than one such node exists , then take @xmath90 to be the one with minimum identifier . 7 .",
    "go to @xmath90 along a shortest path and stop .",
    "note that the communication complexity of the above algorithm is @xmath122 .",
    "also , both agents calculate @xmath150 and @xmath153 and hence the node @xmath90 is the same for both agents , which implies that the algorithm guarantees rendezvous .",
    "therefore , it remains to prove that @xmath154 due to lemma  [ lem : meet_on_nodes ] , it is enough to show that @xmath155 where @xmath28 is a rendezvous node . for @xmath21 and @xmath156 , let @xmath157 be the set of edges of a shortest path from @xmath158 to @xmath159 in @xmath11 with weight function @xmath17 and let @xmath160 be the set of edges of a shortest path from @xmath158 to @xmath159 in @xmath11 with weight function @xmath161 .",
    "note that follows from @xmath162 hence , we focus on proving the latter equation .",
    "first note that for each @xmath21 and @xmath163 it holds : @xmath164 thus , for each @xmath21 , @xmath165 because the edges in @xmath166 form a path which in particular gives @xmath167 .",
    "inequality implies that , for each @xmath21 , @xmath168    note that @xmath169 indeed , otherwise @xmath170 contradicting that @xmath28 is a rendezvous node ( the agent @xmath31 with @xmath171 can reach the starting position of the other agent in time not greater than @xmath172 ) .",
    "denote @xmath173 for each @xmath21 .",
    "we prove that @xmath174 suppose for a contradiction that @xmath175 and @xmath176 .",
    "assume without loss of generality that @xmath177 ( the analysis in the opposite case is analogous ) .",
    "by definition of @xmath178 , @xmath179 for each @xmath180 .",
    "since we consider the case of monotone edges , @xmath177 implies that @xmath179 for each @xmath181 .",
    "this however means that a subset of edges in @xmath182 gives a path whose each edge @xmath23 satisfies @xmath183 , contradicting the choice of @xmath127 .",
    "this completes the proof of .",
    "note that implies @xmath184    by the definition of @xmath185 and by we have @xmath186 recall that @xmath187 for each @xmath188 and @xmath21 .",
    "thus , @xmath189 since @xmath190 for each @xmath191 and @xmath21 , @xmath192 combining , and we obtain @xmath193 by definition of @xmath194 and , @xmath195 by , the choice of @xmath90 , and , @xmath196 this proves and completes the proof of the theorem .",
    "[ thm : case2+comm+lower ] each algorithm that guarantees rendezvous in time @xmath79 has communication complexity @xmath197 for some @xmath2-node graphs in case of ordered edges .",
    "let @xmath198 be a positive integer .",
    "we first define a family of graphs @xmath199 .",
    "each graph in @xmath105 has the same structure , namely , the vertices @xmath15 and @xmath16 are connected with @xmath198 node - disjoint paths but the graphs in @xmath105 have different weight functions associated with them .",
    "each of those paths consists of exactly @xmath200 edges ( see figure  [ fig : fig_case2 ] ) .",
    "and  [ thm : case2+no - comm ] ; the numbers give ordering of edges with respect to agents weight functions ]    thus , each graph in @xmath105 has @xmath201 nodes and @xmath202 edges .",
    "the edges are denoted by @xmath203 .",
    "the location of each edge in @xmath105 is shown in figure  [ fig : fig_case2 ] , where for improving the presentation we write @xmath204 in place of @xmath205 for each @xmath206 .",
    "we will set the labels of the edges so that @xmath207 for each @xmath208 .",
    "now , for each graph in @xmath105 , we put @xmath209 where @xmath210 . for @xmath206 and @xmath211",
    ", we set the weight function @xmath19 for @xmath212 as follows : @xmath213 note that @xmath214 and @xmath215 in each graph @xmath216 which ensures that all problem instances are cases of ordered edges .",
    "let @xmath216 . denote by @xmath217 the @xmath198 edge - disjoint paths connecting @xmath15 and @xmath16 , where @xmath218 is the path containing the edge @xmath219 incident to @xmath15 , @xmath220 .",
    "we argue that if @xmath12 and @xmath13 rendezvous on a path @xmath218 in time at most @xmath221 , then @xmath222 .",
    "first note that @xmath12 is not able to reach any vertex adjacent to @xmath16 in time @xmath221 . also , @xmath223 is not possible for otherwise @xmath13 would traverse one of the edges @xmath224 , each of weight at least @xmath225  a contradiction . now , suppose for a contradiction that @xmath226 .",
    "then , one of the agents traverses at least half of the path @xmath218 , i.e. , it traverses at least @xmath227 of its edges .",
    "if this agent is @xmath12 , then clearly rendezvous occurs not earlier than @xmath228  a contradiction .",
    "if this agent is @xmath13 , then it does not traverse any of the edges @xmath229 , since those belong to paths @xmath230 and we have @xmath226 .",
    "hence , by the definition of @xmath19 , we also have rendezvous after more than @xmath221 time units , which gives the required contradiction .",
    "we have proved that , in @xmath231 , rendezvous is obtained before time @xmath221 only if it occurs on the path @xmath231 .",
    "observe that for @xmath2 large enough it holds @xmath232 for each @xmath216 . to see that , let @xmath12 traverse the edge @xmath233 , and let @xmath13 traverse the remaining edges of @xmath231 , i.e. , @xmath234 and @xmath235 .",
    "we have @xmath236 and @xmath237 since @xmath210 , we obtain that @xmath238 for @xmath2 large enough .",
    "suppose for a contradiction that there exists an algorithm @xmath239 that guarantees rendezvous in time @xmath79 and has communication complexity @xmath240 .",
    "let @xmath241 be such a constant that the rendezvous time guaranteed by @xmath242 is bounded by @xmath243 .",
    "we will show that for @xmath244 , the algorithm @xmath239 that sends at most @xmath245 bits , where @xmath246 , can not guarantee rendezvous in time @xmath247 , which will give the desired contradiction .",
    "note that in each algorithm , and thus in particular in @xmath239 , if the agent @xmath12 receives the same message from @xmath13 in two different graphs in @xmath105 , then @xmath12 must traverse the same sequence of edges for both graphs .",
    "the number of all possible messages that @xmath12 might receive using @xmath248 bits is at most @xmath249 .",
    "observe that @xmath250 .",
    "indeed , @xmath251 implies the required inequality .",
    "thus , there must exist @xmath252 , a subset of @xmath105 , with at least @xmath253 elements such that @xmath12 traverses the same sequence of edges for all graphs in @xmath252 .    to traverse an edge adjacent to @xmath15 from @xmath254 , the agent",
    "@xmath12 requires @xmath255 units of time . in order to traverse any of the remaining edges",
    ", @xmath12 requires to traverse back the mentioned edge first using @xmath255 units of time again .",
    "hence , during @xmath256 time , @xmath12 is able to traverse at most @xmath241 edges adjacent to @xmath15 .",
    "it implies that there must exist an index @xmath121 such that @xmath257 and agent @xmath12 does not traverse an edge from @xmath231 adjacent to @xmath15 .",
    "it means that @xmath12 has not met @xmath13 in time @xmath258 , a contradiction .",
    "now we will present a general solution which achieves @xmath259 time without communication for the case of ordered agents .",
    "this property allows us to obtain our asymptotically tight bounds both for communication complexity of optimal - time rendezvous and for optimal rendezvous time with no communication .",
    "we point out that , unlike in previous cases , the algorithms for the agents are different , i.e. , @xmath12 and @xmath13 perform different ( asymmetric ) actions .",
    "we assume that the algorithm for the agent @xmath12 ( respectively , @xmath13 ) is executed by the agent whose starting node has smaller ( bigger , respectively ) identifier .",
    "note that , since both agents know the graph and both starting nodes , they can correctly decide on executing an algorithm .      tasks of agent @xmath12 :    1 .",
    "wait @xmath260 units of time , 2 .",
    "go to @xmath16 along an arbitrarily chosen shortest path ( according to the weight function @xmath18 ) from @xmath15 to @xmath16 , and return to @xmath15 along the same path and stop .",
    "tasks of agent @xmath13 :    1 .",
    "wait @xmath261 units of time , 2 .",
    "go to @xmath15 along an arbitrarily chosen shortest path ( according to the weight function @xmath19 ) from @xmath16 to @xmath15 and stop .",
    "[ lem : verysimpleprotocol ] for the case of ordered agents , simple algorithm guarantees rendezvous in time @xmath262 .    for sure , @xmath12 and @xmath13 will eventually rendezvous , as both of them reach @xmath15 and stay there .",
    "let @xmath263 be the time point at which the agents rendezvous .",
    "let us consider agent @xmath12 .",
    "it might meet @xmath13 while :    1 .",
    "waiting @xmath260 units of time at @xmath15 . in this case @xmath264 .",
    "2 .   moving towards @xmath16 or on the way back to @xmath15 .",
    "clearly @xmath265 .",
    "also , agent @xmath13 at time point @xmath263 is either at @xmath16 or is moving from @xmath16 to @xmath15 .",
    "thus , @xmath266 .",
    "3 .   arriving at @xmath15 , i.e. , rendezvous occurs at @xmath15 at the moment when @xmath12 returns to @xmath15 . clearly , @xmath267 .",
    "as the agents have not met at @xmath15 before @xmath12 started moving , we have @xmath268 .",
    "so , @xmath269 .",
    "waiting for @xmath13 at @xmath15 after the path traversals . clearly , @xmath270 . in this case , as the agents have not met at @xmath16 , we have @xmath271 .",
    "so , @xmath272 .",
    "we remark that the constant @xmath273 from lemma  [ lem : verysimpleprotocol ] might be reduced to @xmath274 if we would allow both agents @xmath12 and @xmath13 to wait a little longer in the initial state : @xmath275 and @xmath276 respectively .",
    "[ lem : ordered - agents ] in the case of ordered agents we have @xmath277    suppose that both agents rendezvous at @xmath159 after @xmath56 units of time .",
    "if rendezvous does not occur at a node , then with a slight abuse of notation we write @xmath278 to denote the time an agent @xmath31 needs to go from a node @xmath28 to @xmath159 .",
    "suppose without loss of generality that @xmath12 is a ` faster ' agent , i.e. , @xmath279 for each edge @xmath23 .",
    "this in particular implies that @xmath280 and hence it remains to provide the upper bound on @xmath260 .",
    "moreover , by first using the triangle inequality we have @xmath281 .",
    "now , due to lemmas  [ lem : verysimpleprotocol ] and  [ lem : ordered - agents ] , we are ready to conclude :    [ thm : orderedagents ] in the case of ordered agents ( case  [ monotoneagents ] ) there exists an algorithm that guarantees rendezvous in time @xmath259 without performing any communication .",
    "theorem  [ thm : arbitrary+no - comm ] below gives the upper bound on rendezvous time without communication .",
    "then , theorem  [ thm : case1+no - comm ] provides our lower bound for this case .",
    "[ thm : arbitrary+no - comm ] there exists an algorithm that without performing any communication guarantees rendezvous in time @xmath282 , where @xmath2 is the number of nodes of the network .",
    "we start by giving an algorithm .",
    "its first step in an initialization and the remaining steps form a loop .",
    "denote @xmath84 .    1 .   [ st:1 ] let initially @xmath283 .",
    "let @xmath31 be the executing agent .",
    "[ st:2 ] for each @xmath96 do : 1 .   if @xmath284 , then set @xmath285 and go to @xmath286 along a shortest path . otherwise , set @xmath287 .",
    "2 .   wait @xmath288 time units at the current node .",
    "3 .   return to @xmath158 along a shortest path .",
    "( this step is vacuous if @xmath289 . )",
    "wait @xmath288 time units .",
    "[ st:3 ] set @xmath290 and return to step  [ st:2 ] .",
    "let us introduce some notation regarding the above algorithm .",
    "we divide the time into _ phases _ , where the @xmath291-th phase , @xmath292 , consists of all time units in which both agents were performing actions determined in step  [ st:2 ] for @xmath293 .",
    "then , each phase is further subdivided into _",
    "stages _ , where the @xmath294-th stage , @xmath295 , of the @xmath291-th phase consists of all time units in which both agents were performing actions determined in step  [ st:2 ] for @xmath293 and @xmath296 . note that these definitions are correct since both agents simultaneously start at time @xmath24 .",
    "first observe , by a simple induction on the total number of stages , that at the beginning of each stage each agent @xmath21 is present at @xmath158 .",
    "we now prove that both agents are guaranteed to rendezvous at a rendezvous node @xmath25 in the @xmath291-th phase , where @xmath297 .",
    "consider the @xmath294-th stage of @xmath291-th phase such that @xmath298 .",
    "since @xmath297 , both agents reach @xmath25 in at most @xmath299 moves . due to the waiting time of @xmath300 of agent @xmath21 after reaching @xmath25 , we obtain that both agents are present at @xmath25 at the end of the @xmath299-th time unit of the @xmath294-stage in the @xmath291-th phase .",
    "this completes the proof of the correctness of our algorithm .",
    "it remains to bound the time in which the agents rendezvous .",
    "the duration of the @xmath291-th phase is @xmath301 .",
    "the total number of phases is at most @xmath302 .",
    "thus , the agents rendezvous in time @xmath303 lemma  [ lem : meet_on_nodes ] implies that the agents rendezvous in time @xmath282 as required .",
    "[ thm : case1+no - comm ] any algorithm that without performing any communication guarantees rendezvous uses time @xmath304 , where @xmath2 is the number of nodes of the network .",
    "let us consider the complete bipartite graph @xmath11 given in the proof of theorem  [ thm : arbitrary+comm+lower ] with @xmath305 and @xmath109 , where @xmath306    let @xmath307 for each @xmath308 and @xmath309 for each @xmath310 , where @xmath115 is some sufficiently big integer , say @xmath116",
    ". we will now give a partial definition of @xmath19 , starting with @xmath311 for each @xmath310 .",
    "this weight functions will be constructed in such a way that rendezvous at time @xmath312 is possible .",
    "informally , we will set only one edge in @xmath313 to have weight @xmath312 for the agent @xmath13 while the remaining edges will have weight @xmath115 .",
    "this is done by analyzing possible moves of the agent @xmath12 .",
    "now , we consider an arbitrary sequence of moves of agent @xmath12 during the first @xmath2 time units . clearly , after this time , agent @xmath12 is not able to reach @xmath314 .",
    "there also exists an edge @xmath315 that agent @xmath12 performed no move along it , i.e. , @xmath12 did not visit @xmath286 .",
    "we set @xmath316 and @xmath317 for all @xmath318 .",
    "it is easy to observe that @xmath56 is equal to @xmath312 and this time can be achieved only by a meeting at @xmath286 .",
    "however , @xmath12 and @xmath13 did not rendezvous during the first @xmath2 time units .",
    "thus , there exists no algorithm that guarantees rendezvous in time @xmath319 .",
    "[ thm : case2+no - comm ] in the case of ordered edges , any algorithm that guarantees rendezvous without performing any communication uses time @xmath320 , where @xmath2 is the number of nodes of the network .",
    "we will use the same family of graphs @xmath105 as constructed in the proof of theorem  [ thm : case2+comm+lower ] ; see also figure  [ fig : fig_case2 ] .",
    "recall that if @xmath12 and @xmath13 rendezvous on a path @xmath218 in time at most @xmath221 , then @xmath222 and @xmath321 for each @xmath216 .",
    "note that , the agent @xmath12 has the same input for each graph in @xmath105 since @xmath18 is the same for all graphs in @xmath105 .",
    "thus , for any algorithm @xmath239 , the agent @xmath12 traverses the same sequence of edges for each graph in @xmath105 .",
    "moreover , rendezvous time bounded by @xmath221 ( see the proof of theorem  [ thm : case2+comm+lower ] ) implies that there exist edges adjacent to @xmath15 that @xmath12 does not traverse .",
    "in other words , there exists @xmath211 such that @xmath12 traverses no edge of @xmath231 .",
    "therefore , we obtain that @xmath12 and @xmath13 can not rendezvous in @xmath212 in time less than @xmath221 . since @xmath322 and rendezvous can be achieved in time @xmath323 for each graph in @xmath105 the proof has been completed .",
    "it seems that the most interesting and challenging among the analyzed cases is the one of ordered edges without communication .",
    "there is still a substantial gap between the lower and the upper bounds we have provided and we leave it an interesting open question whether there exists an algorithm with a better approximation ratio than that of @xmath324 .",
    "it is also intersting if the upper bound @xmath325 on the weights of the edges affects the communication complexity for arbitrary functions and the cases of ordered edges .",
    "another interesting research direction is to analyze scenarios in which we allow agents to communicate at any time . to point out an advantage that the agents may gain in such case , note that the agents can rendezvous very quickly in graphs that we used for a lower bound in the proof of the theorem  [ thm : case2+comm+lower ]",
    "indeed , transmitting just one bit in the moment correlated with the index of the preferred ( optimal for rendezvous ) path would help the agents to learn which path they should follow .",
    "e.  bampas , j.  czyzowicz , l.  gasieniec , d.  ilcinkas , and a.  labourel .",
    "almost optimal asynchronous rendezvous in infinite multidimensional grids . in n.",
    "a. lynch and a.  a. shvartsman , editors , _ disc _ , volume 6343 of _ lecture notes in computer science _ , pages 297311 .",
    "springer , 2010 .",
    "a.  collins , j.  czyzowicz , l.  gasieniec , a.  kosowski , and r.  a. martin .",
    "synchronous rendezvous for location - aware agents . in d.",
    "peleg , editor , _ disc _ , volume 6950 of _ lecture notes in computer science _ ,",
    "pages 447459 .",
    "springer , 2011 .",
    "a.  collins , j.  czyzowicz , l.  gasieniec , and a.  labourel .",
    "tell me where i am so i can meet you sooner . in s.  abramsky , c.  gavoille , c.  kirchner , f.  meyer auf der heide , and p.  g. spirakis , editors , _ icalp ( 2 ) _ , volume 6199 of _ lecture notes in computer science _ , pages 502514 .",
    "springer , 2010 .",
    "p.  fraigniaud and a.  pelc .",
    "deterministic rendezvous in trees with little memory . in _ proceedings of 22nd international conference on distributed computing ( disc )",
    "_ , volume 5218 of _ lncs _ , pages 242256 , 2008 .",
    "s.  guilbault and a.  pelc .",
    "asynchronous rendezvous of anonymous agents in arbitrary graphs . in a.",
    "f. anta , g.  lipari , and m.  roy , editors , _ opodis _ , volume 7109 of _ lecture notes in computer science _ , pages 421434 .",
    "springer , 2011 .",
    "a.  ta - shma and u.  zwick .",
    "deterministic rendezvous , treasure hunts and strongly universal exploration sequences . in _ proceedings of 18th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 599608 , 2007 .",
    "x.  yu and m.  yung .",
    "agent rendezvous : a dynamic symmetry - breaking problem . in _ proceedings of 23rd international colloquium on automata , languages and programming ( icalp ) _ , volume 1099 of _ lncs _ , pages 610621 , 1996 ."
  ],
  "abstract_text": [
    "<S> we introduce a variant of the deterministic rendezvous problem for a pair of heterogeneous agents operating in an undirected graph , which differ in the time they require to traverse particular edges of the graph . </S>",
    "<S> each agent knows the complete topology of the graph and the initial positions of both agents . </S>",
    "<S> the agent also knows its own traversal times for all of the edges of the graph , but is unaware of the corresponding traversal times for the other agent . the goal of the agents is to meet on an edge or a node of the graph . in this scenario , we study the time required by the agents to meet , compared to the meeting time @xmath0 in the offline scenario in which the agents have complete knowledge about each others speed characteristics . </S>",
    "<S> when no additional assumptions are made , we show that rendezvous in our model can be achieved after time @xmath1 in a @xmath2-node graph , and that such time is essentially in some cases the best possible . </S>",
    "<S> however , we prove that the rendezvous time can be reduced to @xmath3 when the agents are allowed to exchange @xmath4 bits of information at the start of the rendezvous process . </S>",
    "<S> we then show that under some natural assumption about the traversal times of edges , the hardness of the heterogeneous rendezvous problem can be substantially decreased , both in terms of time required for rendezvous without communication , and the communication complexity of achieving rendezvous in time @xmath3 . </S>"
  ]
}
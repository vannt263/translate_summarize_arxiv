{
  "article_text": [
    "the problems of finding shortest paths and determining their lengths are fundamental in algorithms . they have been extensively studied in algorithmic graph theory .",
    "a central open question in this area is if there is a substantially subcubic in the number of vertices algorithm for the all - pairs shortest path problem for directed graphs with real edge weights ( apsp ) in the addition - comparison model @xcite . for several special cases of weights and/or graphs substantially subcubic algorithms for the apsp problem",
    "are known @xcite . however , in the general case the fastest known algorithm due to chan @xcite ( see also @xcite ) runs in time @xmath14 , achieving solely a moderate polylogarithmic improvement over the @xmath15 bound yielded by floyd - warshall and johnson s algorithms @xcite .",
    "the situation is different for directed graphs with real vertex weights .",
    "recently , chan has shown that the apsp problem for the aforementioned graphs can be solved in time @xmath16 @xcite and yuster has slightly improved the latter bound to @xmath17 by using an improved bound on rectangular multiplication @xcite .    the basic tool in achieving substantially subcubic upper bounds on the running time for the apsp for directed graphs with constrained edge weights or real vertex weights are the fast algorithms for arithmetic square and rectangular matrix multiplication @xcite .",
    "one typically exploits here the close relationship between the apsp problem and the so called distance or @xmath18 product @xcite .",
    "unfortunately , these fast algorithms for matrix multiplication , yielding equally fast algorithms for boolean matrix product , are based on recursive algebraic approaches over a ring difficult to implement .",
    "thus , another central question in this area is whether or not there is a substantially subcubic _ combinatorial _",
    "( i.e. , not relaying on ring algebra ) algorithm for the boolean product of two @xmath0 boolean matrices @xcite .",
    "again , the fastest known combinatorial algorithm for boolean matrix product due to bansal and williams @xcite running in time @xmath19 achieves solely a moderate polylogarithmic improvement over the trivial @xmath15 bound . on the other hand , several special cases of boolean matrix product admit substantially subcubic combinatorial algorithms @xcite .",
    "in particular , bjrklund et al .",
    "@xcite provided a combinatorial randomized algorithm for boolean matrix product which is substantially subcubic in case the rows of the first @xmath0 matrix or the columns of the second one are highly clustered , i.e. , their minimum spanning tree in the hamming metric has low cost .",
    "more exactly , their algorithm runs in time @xmath20 where @xmath21 is the minimum of the costs of the minimum spanning trees for the rows and the columns , respectively , in the hamming metric .",
    "it relies on the fast monte carlo methods for computing an approximate minimum spanning tree in the @xmath22 and @xmath23 metrics given in @xcite .",
    "the assumption that the input directed graph is highly clustered in the sense that the minimum spanning tree of the rows or columns of its adjacency matrix in the hamming metric has a subquadratic cost does not yield any direct applications of the algorithm of bjrklund et al .",
    "@xcite to shortest path problems , not even to the transitive closure .",
    "the reason is that the cost of the analogous minimum spanning tree can grow dramatically in the power graphs - th power graph there is an edge from @xmath24 to @xmath25 if there is a path composed of at most @xmath26 edges from @xmath24 to @xmath25 in the input graph .",
    "] of the input graph . in particular",
    ", we can not obtain directly an upper time - bound on the transitive closure of boolean matrix corresponding to that for the boolean matrix product from @xcite by applying the asymptotic equality between the time complexity of matrix product over a closed semi - ring and that of its transitive closure over the semi - ring due to munro @xcite .",
    "the reason is the dependence of the upper bound from @xcite on the cost of the minimum spanning tree .    in this paper",
    ", we extend the idea of the method from @xcite to include a mixed product of a real matrix with a boolean one .",
    "we combine the aforementioned extension with the ideas used in the design of subcubic algorithms for important variants of the apsp problem @xcite , in particular those for directed graphs with vertex weights @xcite , to obtain not only a substantially subcubic combinatorial algorithm for the transitive closure but also for the apsp problem in highly clustered directed graphs with real vertex weights .    for",
    "an @xmath0 @xmath1 matrix @xmath2 let @xmath3 be the complete weighted graph on the rows of @xmath4 where the weight of an edge between two rows is equal to their hamming distance .",
    "let @xmath5 be the weight of a minimum weight spanning tree of @xmath6 we show that the all - pairs shortest path problem for a directed graph @xmath7 on @xmath8 vertices with nonnegative real weights and an adjacency matrix @xmath9 can be solved by a combinatorial randomized algorithm in @xmath27 time .",
    "it follows in particular that the transitive closure of a directed graph @xmath7 can be computed by a combinatorial randomized algorithm in the aforementioned time .",
    "our algorithms are of monte carlo type and by increasing the polylogarithmic factor at the time bounds , the probability that they return a correct output within the bounds can be amplified to @xmath28 where @xmath29    _ since there are no practical or combinatorial substantially subcubic - time algorithms not only for the apsp problem but even for the transitive closure problem for arbitrary directed graphs at present , our simple adaptive method might be a potentially interesting alternative for a number of graph classes . _    as an example of an application of our method , we consider the apsp problem for uniform disk graphs , with nonnegative real vertex weights , induced by point sets of bounded density within a unit square .",
    "we obtain a combinatorial algorithm for this problem running in time @xmath30 , where @xmath31 is the radius of the disks around the vertices in a unit square .    the recent interest in disk graphs , in particular uniform disk graphs , stems from their applications in wireless networks . in this context , the restriction to point sets of bounded density is quite natural . in @xcite ,",
    "frer and kasiviswanathan provided a roughly @xmath32-time preprocessing for _ approximate _",
    "@xmath33-time distance queries in arbitrary disk graphs .",
    "our paper is structured as follows . in the next section ,",
    "we show a reduction of the apsp problem for directed graphs with real vertex - weights to a mixed matrix product of a distance matrix over reals with the @xmath1 adjacency matrix . in section 3",
    ", we present an algorithm for such a mixed product which generalizes that for the boolean matrix product from @xcite and runs in subcubic time if the input @xmath1 matrix is highly clustered . by combining the results of sections 2,3",
    ", we can derive our main results in section 4 .",
    "in the next section , we present the application of our method to uniform disk graphs induced by point sets of bounded density .",
    "we conclude with final remarks .",
    "formally , the all - pairs shortest paths problem ( apsp ) in a directed graph @xmath34 with real weights @xmath35 associated to vertices @xmath36 is to compute the @xmath37 distance matrix @xmath38 such that @xmath39 is the distance @xmath40 from @xmath24 to @xmath25 in @xmath41 i.e. , the minimum total weight of vertices on a path from @xmath24 to @xmath25 in @xmath42 an additional goal of the apsp problem is to compute a concise data structure representing the shortest paths .",
    "note that @xmath40 is equal to the minimum total weight of inner vertices on a path from @xmath24 to @xmath25 in @xmath7 increased by the weights of @xmath24 and @xmath43    we shall assume @xmath44 throughout the paper .",
    "for @xmath45 let @xmath46 be the distance from @xmath24 to @xmath25 on paths consisting of at most @xmath26 edges , i.e. , the minimum total weight of vertices on a path from @xmath24 to @xmath25 having at most @xmath26 edges in @xmath42 next , let @xmath47 be the @xmath37 matrix such that @xmath48 $ ] is equal to @xmath46 .    for convention",
    ", we assume @xmath49 and @xmath50 for @xmath51 hence , @xmath52 has zeros on the diagonal and @xmath53 otherwise . in @xmath54",
    "all the entries @xmath55 $ ] where @xmath56 are set to @xmath57 instead of @xmath53 . thus , both @xmath52 and @xmath58 can be easily computed in time @xmath59      let @xmath60 be an @xmath0 matrix over @xmath61 and let @xmath62 be an @xmath0 matrix with entries in @xmath63 the _ mixed right product _ @xmath4 of @xmath60 and @xmath62 is defined by    @xmath64=\\min \\ { a[i , k]|1\\le k\\le n\\ \\ & \\ b[k , j]=1\\}\\cup \\ { + \\infty \\}\\ ] ] .    if @xmath65\\neq + \\infty$ ] then the index @xmath66 such that @xmath65=a[i , k]$ ] ( and thus @xmath67=1 $ ] ) is called a witness for @xmath65.$ ] analogously , the",
    "_ mixed left product _",
    "@xmath68 of @xmath62 and @xmath60 is defined by @xmath69=\\min \\ { a[k , j]| 1\\le k\\le n\\ \\ & \\ b[i , k]=1\\}\\cup \\ { + \\infty \\},\\ ] ] and",
    "if @xmath70\\neq + \\infty$ ] then the index @xmath66 such that @xmath70=a[k , j]$ ] is called a witness for @xmath70.$ ]    an @xmath0 matrix @xmath71 such that whenever @xmath65\\neq + \\infty$ ] then @xmath72 $ ] is a witnesses for @xmath65 $ ] is called a witness matrix for the right mixed product of @xmath60 and @xmath73 analogously , we define a witness matrix for the left mixed product of @xmath62 and @xmath74      let @xmath9 denote the @xmath0 adjacency matrix of @xmath75 i.e. , @xmath76=1 $ ] iff @xmath77    [ lem : i+1 ] for an arbitrary @xmath78 @xmath79 can be computed on the basis of @xmath47 and the right mixed product of @xmath47 with @xmath9 or @xmath47 and the left mixed product of @xmath9 with @xmath47 in time @xmath59    it is sufficient to observe that for any pair @xmath80 of vertices in @xmath7 , @xmath81 $ ] is equal to @xmath82,\\min \\{d_g^i[v , x]+w(u)| 1\\le x\\le n\\ \\ & \\ a_g[x , u]=1\\ } \\cup \\ { + \\infty \\}\\}\\ ] ] symmetrically ,",
    "@xmath81 $ ] is equal to @xmath82,\\min \\{d_g^i[x , u]+w(v)| 1\\le x\\le n\\ \\ & \\ a_g[v , x]=1\\ } \\cup \\ { + \\infty \\}\\}\\ ] ]    the following lemma follows the general strategy used to prove theorem 3.4 in @xcite .",
    "[ lem : mix ] let @xmath7 be a directed graph @xmath7 on @xmath8 vertices with nonnegative real vertex weights .",
    "suppose that the right ( or left ) mixed product of an @xmath0 matrix over @xmath83 with the adjacency matrix @xmath9 of @xmath7 along with the witness matrix can be computed in time @xmath84 the apsp problem for @xmath7 can be solved in time @xmath85    we begin by computing @xmath86 for some @xmath87 $ ] which will be specified later .",
    "by lemma [ lem : i+1 ] this computation takes time @xmath88    it remains to determine distances between pairs of vertices where any shortest path consists of at least @xmath89 edges . for this purpose",
    ", we determine a subset @xmath62 of @xmath90 the so called bridging set @xcite , hitting all the aforementioned long paths .",
    "we apply the following fact to @xmath91 and sets of @xmath89 vertices on shortest consisting of exactly @xmath92 edges , similarly as in @xcite .",
    "* fact 1*. _ given a collection of @xmath93 subsets of @xmath94 where each subset has size exactly @xmath95 we can find a subset @xmath62 of size @xmath96 that hits all subsets in the collection in time @xmath97 _    since our application of fact 1 is analogous to those in @xcite , we solely sketch it referring the reader for details to the aforementioned papers .    note that for each pair @xmath98 of vertices for which any shortest path has at least @xmath89 edges there is a pair @xmath99 of vertices on a shortest path from @xmath24 to @xmath25 such that any shortest path from @xmath100 to @xmath101 has exactly @xmath92 edges . for all such pairs",
    "@xmath102 we can find a shortest path on @xmath92 edges , and thus on @xmath89 vertices , by backtracking on the computation of @xmath86 and using witnesses for the mixed products . in total , we generate @xmath103 such paths on @xmath89 vertices in time @xmath104 the application of fact 1 also takes time @xmath104    next , we run dijkstra s single - source shortest path algorithm @xcite for all vertices in the bridging set @xmath62 in the input graph @xmath7 and in the graph resulting from reversing the direction of edges in @xmath42 in this way , we determine @xmath105 $ ] for all pairs @xmath106    now , it is sufficient for all remaining pairs @xmath107 in @xmath108 to set @xmath109=\\min \\ { d_g^{t-1}(v , u ) , \\min_{b\\in b } \\",
    "{ d_g[v , b]+d_g[b , u]-w(b)\\}\\ ] ] in order to determine the whole @xmath110    the computation of @xmath86 takes @xmath111 time which asymptotically is not less than the @xmath112 time taken by the construction of the bridging set .",
    "the runs of dijkstra s algorithm and the final computation of @xmath38 require @xmath113 time . by setting @xmath114",
    ", we obtain the lemma .",
    "our algorithm for the right ( or , left ) mixed product relies on computation of an approximate minimum spanning tree of the columns ( or rows , respectively ) of the boolean input matrix in the hamming metric .      for @xmath115 and a finite set @xmath116 of points in a metric space , a _",
    "@xmath21-approximate minimum spanning tree for @xmath116 _ is a spanning tree in the complete weighted graph on @xmath117 with edge weights equal to the distances between the endpoints , whose total weight is at most @xmath21 times the minimum .    in @xcite ( section 4.3 ) and @xcite",
    "( section 3 ) , indyk and motwani in particular considered the bichromatic @xmath118-approximate closest pair problem for @xmath8 points in @xmath119 with integer coordinates in @xmath120 under the @xmath121 metric , @xmath122 they showed that there is a dynamic data structure for this problem which supports insertions , deletions and queries in time @xmath123 and requires @xmath124-time preprocessing . in consequence , by a simulation of kruskal s",
    "algorithm they deduced the following fact .",
    "* fact 2*. _ for @xmath125 a @xmath126-approximate minimum spanning tree for a set of @xmath8 points in @xmath119 with integer coordinates in @xmath120 under the @xmath22 or @xmath23 metric can be computed by a monte carlo algorithm in time @xmath127 _    in @xcite indyk , schmidt and thorup reported even slightly more efficient ( by a poly - log factor ) reduction of the problem of finding a @xmath126-approximate minimum spanning tree to the bichromatic @xmath118-approximate closest pair problem via an easy simulation of prim s algorithm .    note",
    "that the @xmath22 metric for points in @xmath128 with @xmath129-coordinates coincides with the @xmath8-dimensional hamming metric . hence , fact 2 immediately yields the following corollary .",
    "[ cor : ham ] for @xmath125 a @xmath126-approximate minimum spanning tree for a set of @xmath8 @xmath1 strings of length @xmath8 under the hamming metric can be computed by a monte carlo algorithm in time @xmath130      the idea of our combinatorial algorithm for the right mixed product @xmath4 of @xmath60 with @xmath62 and its witness matrix is a generalization of that from @xcite .",
    "let @xmath131 denote a priority queue ( implemented as a heap ) on the entries @xmath132 $ ] such that @xmath133=1 $ ] ordered by their values in nondecreasing order .",
    "first , we compute an approximate minimum spanning tree of the columns of @xmath62 in the hamming metric",
    ". then , we fix a traversal of the tree .",
    "next , for each row @xmath31 of @xmath60 , we traverse the tree , construct @xmath134 where @xmath135 is the first column of @xmath62 in the tree traversal and then maintain @xmath131 for the currently traversed @xmath24 by updating @xmath136 where @xmath25 is the predecessor of @xmath24 in the traversal . a minimum element in @xmath131",
    "yields a witness for @xmath137 $ ] .",
    "the cost of the updates in a single traversal of the tree is proportional to the cost of the tree modulo a logarithmic factor .",
    "0.5 cm    [ lem : 1 ] algorithm 1 is correct , i.e. , it outputs the witnesses matrix for the right mixed product of matrices @xmath60 and @xmath73    for an @xmath0 boolean matrix @xmath2 let @xmath3 be the complete weighted graph on the rows of @xmath4 where the weight of an edge between two rows is equal to their hamming distance .",
    "next , let @xmath5 be the weight of a minimum weight spanning tree of @xmath6    [ lem : 2 ] algorithm 1 can be implemented in time @xmath138 where @xmath139 is the time taken by the construction of the @xmath140-approximate minimum weight spanning tree in step 1 .",
    "step 1 can be implemented in time @xmath139 while steps 2,3 take time @xmath141 step 4 takes @xmath103 time .",
    "the block in step 5 is iterated @xmath8 times .",
    "the first step in the block , i.e. , the construction of @xmath134 takes @xmath142 time .",
    "the update of @xmath136 to @xmath131 takes @xmath143 time . note",
    "that @xmath144 is precisely the hamming distance between the columns @xmath24 and @xmath43 it follows by the @xmath140 approximation factor of @xmath145 that the total time taken by these updates is @xmath146    we conclude that step 5 can be implemented in time @xmath147    [ theo : mix ] the right mixed product of two @xmath0 matrices @xmath60 over @xmath148 and @xmath62 over @xmath149 can be computed by a combinatorial randomized algorithm in time @xmath150 analogously , the left mixed product of @xmath62 and @xmath60 can be computed by a combinatorial randomized algorithm in time @xmath151    by corollary [ cor : ham ] , an @xmath152-approximate minimum spanning tree can be constructed by a monte carlo algorithm in time @xmath153 ( observe that @xmath154 if @xmath155 ) .",
    "hence , by lemmata [ lem : 1 ] , [ lem : 2 ] , we obtain the theorem for the right mixed product .",
    "the upper bound on the time required to compute the left mixed product follows symmetrically .",
    "lemma [ lem : mix ] combined with theorem [ theo : mix ] yield our main result .",
    "[ theo : main ] let @xmath7 a directed graph @xmath7 on @xmath8 vertices with nonnegative real vertex weights .",
    "the all - pairs shortest path problem for @xmath7 can be solved by a combinatorial randomized algorithm in time @xmath156    by setting vertex weights , say , to zero , we obtain immediately the following corollary .    [ cor : tran ] the transitive closure of a directed graph @xmath7 on @xmath8 vertices can be computed by a combinatorial randomized algorithm in time + @xmath156    equivalently , we can formulate corollary [ cor : tran ] as follows .",
    "[ cor : tran2 ] the transitive closure of an @xmath0 boolean matrix @xmath62 ( over the boolean semi - ring ) can be computed by a combinatorial randomized algorithm in time @xmath157",
    "in this section , we consider uniform disk graphs that are induced by a set @xmath158 of @xmath8 points in a unit square in the plane that are @xmath159-dense , where @xmath160 formally , we say that @xmath158 is @xmath159-dense iff each cell of the regular @xmath161 grid within the unit square contains at most @xmath159 points .",
    "the vertices of such an induced disk graph are the points in @xmath158 , and two vertices are adjacent in the graph iff their euclidean distance is at most @xmath162 where @xmath31 is a positive constant not exceeding @xmath163 we shall term the aforementioned graphs as _",
    "uniform disk graphs induced by @xmath159-dense point sets_.    [ lem : area ] given two intersecting disks on the plane of the same radius @xmath31 with the distance @xmath164 between centers , the area of the symmetric difference is @xmath165 .",
    "\\(a ) at ( 0,0 ) ; ( b ) at ( 1.5 , 1.322875656 ) ; ( c ) at ( 1.5,0 ) ; ( d ) at ( 2,0 ) ; ( e ) at ( 3,0 ) ; ( f ) at ( 1,0 ) ; ( g ) at ( 1.5 , -1.322875656 ) ; ( 0.5,0 ) arc(0:41.41:0.5 cm ) ( 0.6,0.2 ) ( a ) circle(2 )  ( e ) circle(2 ) ; ( a )  ( b )  ( c )  ( g ) ( 1.5,0.2 ) ",
    "( 1.3,0.2 ) ",
    "( 1.3,0 ) ; ( a ) circle ( 2pt ) ( b ) circle ( 2pt ) ( c ) circle ( 2pt ) ( d ) circle ( 2pt ) ; ( e ) circle ( 2pt ) ( f ) circle ( 2pt ) ( g ) circle ( 2pt ) ;    \\(d ) arc(0:41.41:2 )  ( c )  cycle ; ( a ) circle ( 2 ) ;    \\(b ) arc(41.41:318.59:2 ) ( g ) arc(221.41:138.59:2 ) ; ( a ) circle ( 2 ) ;    \\(b ) arc(138.59:-138.59:2 ) ( g ) arc(-41.41:41.41:2 ) ; ( e ) circle ( 2 ) ;    @xmath166 .",
    "the area of the triangle @xmath167 is @xmath168    the area of the circular sector @xmath169 is @xmath170    the area of @xmath171 is @xmath172    the area of the symmetric difference @xmath173    finally , by using taylor series expansion @xmath174 and @xmath175 we get @xmath176    [ lem : eham ] let @xmath7 be a uniform disk graph induced by a @xmath159-dense point set . for each edge @xmath107 of @xmath41",
    "the number of vertices in @xmath7 that are a neighbor of exactly one of the vertices @xmath98 i.e. , the hamming distance between the two rows in the adjacency matrix of @xmath7 corresponding to @xmath24 and @xmath177 respectively , is @xmath178    the number of vertices of @xmath7 that are a neighbor of exactly one of the vertices @xmath24 and @xmath25 is at most the minimum number of cells of the regular @xmath161 grid within the unit square that cover the symmetric difference @xmath179 between the disks centered at @xmath24 and @xmath177 respectively , multiplied by @xmath180 the aforementioned number of cells is easily seen to be at most the area @xmath181 of @xmath179 divided by the area of the grid cell , i.e. , @xmath182 , plus the number of cells of the grid intersected by the perimeter of @xmath179 , i.e. , @xmath183 by lemma [ lem : area ] , we have @xmath184 .",
    "hence , the aforementioned number of cells is @xmath185    the following lemma is a folklore ( e.g. , it follows directly from the upper bound on the length of closed path through a set of points in a @xmath164-dimensional cube given in lemma 2 in @xcite ) .",
    "[ lem : sqrt ] the minimum euclidean spanning tree of any set of @xmath8 points in a unit square in the plane has total length @xmath186    combining lemmata [ lem : eham ] , [ lem : sqrt ] , we obtain the following one .",
    "[ lem : rug ] for a uniform disk graph @xmath7 induced by a @xmath159-dense @xmath8-point set , a spanning tree of the rows ( or , columns ) of the adjacency matrix of @xmath7 in the hamming metric having cost @xmath187 can be found in time @xmath59    construct a minimum euclidean spanning tree of the @xmath8 points forming the vertex set of @xmath42 it takes time @xmath142 and the resulting tree @xmath188 has total length @xmath33 by lemma [ lem : sqrt ] .",
    "form a spanning tree @xmath189 of the rows ( or , columns ) of the adjacency matrix of @xmath7 by connecting by edge the rows corresponding to @xmath24 and @xmath25 iff @xmath190 by lemma [ lem : eham ] and the @xmath33 length of @xmath191 the total cost of @xmath189 is @xmath192    by plugging lemma [ lem : rug ] into theorem [ theo : main ] , we obtain our main result in this section .",
    "[ theo : amain ] let @xmath7 be a uniform disk graph , with nonnegative real vertex weights , induced by a @xmath159-dense @xmath8-point set .",
    "the all - pairs shortest path problem for @xmath7 can be solved by a combinatorial algorithm in time @xmath193    in the application of the method of theorem [ theo : main ] yielding theorem [ theo : amain ] , we can use the deterministic algorithm of lemma [ lem : rug ] to find a spanning tree of the rows or columns of the adjacency matrix of @xmath7 instead of the randomized approximation algorithm from fact 2 .    by straightforward calculations ,",
    "our upper time - bound for apsp in vertex - weighted uniform disk graphs induced by @xmath120-dense point sets subsumes that for apsp in sparse graphs based on dijkstra s single - source shortest - path algorithm , running in time @xmath194 where @xmath195 is the number of edges , for @xmath196    finally , we can also easily extend theorem [ theo : amain ] to include uniform ball graphs in a @xmath164-dimensional euclidean space . in the extension , the term @xmath197 in the upper time - bound generalizes to @xmath198",
    "we can easily extend our main result to include solving the apsp problem for vertex and edge weighted directed graphs in which the number of different edge weights is bounded , say by @xmath199 this can be simply achieved by decomposing the adjacency matrix @xmath9 into the union of up to @xmath200 matrices @xmath201 in one - to - one correspondence with the distinct edge weights and consequently replacing each mixed product with @xmath202 such products in lemmata [ lem : i+1 ] , [ lem : mix ] . in the final upper bound , @xmath203 and @xmath204",
    "are replaced by @xmath205 and @xmath206 respectively .",
    "a. bjrklund and a. lingas . fast boolean matrix multiplication for highly clustered data .",
    "7th international workshop on algorithms and data structures ( wads 2001 ) , lecture notes in computer science , springer verlag .",
    "m. frer and p. kasiviswanathan .",
    "approximate distance queries in disk graphs .",
    "workshop on approximation and online algorithms ( waoa 2006 ) , lecture notes in computer science 4368 , pp .",
    "174 - 187 , 2006 .",
    "l. gasieniec and a. lingas , an improved bound on boolean matrix multiplication for highly clustered data .",
    "9th international workshop on algorithms and data structures ( wads 2003 ) , lecture notes in computer science 2748 , pp .",
    "329 - 339 , springer verlag .",
    "r.  m.  karp and j.  m.  steele .",
    "probabilistic analysis of heuristics .",
    "chapter  @xmath211 in _ the traveling salesman problem : a guided tour of combinatorial optimization _ , pp .",
    "181205 ( edited by e.  l.  lawler , j.  k.  lenstra , a.  h.  g.  rinnooy  kan , and d.  b.  shmoys ) .",
    "john wiley & sons ltd . , 1985 .",
    "e. kushilevitz , r. ostrovsky , and y. rabani .",
    "efficient search for approximate nearest neighbor in high dimensional spaces .",
    "siam j. comput .",
    "30 , 2 , pp .",
    "457 - 474 .",
    "( preliminary version in proc .",
    "30th stoc , 1989 . )    a. lingas .",
    "a geometric approach to boolean matrix multiplication .",
    "13th international symposium on algorithms and computation ( isaac 2002 ) , lecture notes in computer science 2518 , springer verlag , pp .",
    "501 - 510 ."
  ],
  "abstract_text": [
    "<S> we consider the problem of computing all - pairs shortest paths in a directed graph with real weights assigned to vertices .    for an @xmath0 @xmath1 matrix @xmath2 let @xmath3 be the complete weighted graph on the rows of @xmath4 where the weight of an edge between two rows is equal to their hamming distance . </S>",
    "<S> let @xmath5 be the weight of a minimum weight spanning tree of @xmath6    we show that the all - pairs shortest path problem for a directed graph @xmath7 on @xmath8 vertices with nonnegative real weights and adjacency matrix @xmath9 can be solved by a combinatorial randomized algorithm in time suppresses polylogarithmic factors and @xmath10 stands for the transposed matrix @xmath11 @xmath12    as a corollary , we conclude that the transitive closure of a directed graph @xmath7 can be computed by a combinatorial randomized algorithm in the aforementioned time .    </S>",
    "<S> we also conclude that the all - pairs shortest path problem for uniform disk graphs , with nonnegative real vertex weights , induced by point sets of bounded density within a unit square can be solved in time @xmath13 . </S>"
  ]
}
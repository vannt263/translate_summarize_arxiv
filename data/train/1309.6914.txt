{
  "article_text": [
    "moe - behrens explains @xcite that there is a trend to use the architecture of a silicon computer for building a biological computer .",
    "whatever happens in a living cell which resembles to computation ( in a more vague sense than turing computation ) is not necessarily implemented as in a silicon computer , though .",
    "instead , synthetic biology tries to import concepts from silicon computers into the bio realm , mainly because these concepts are already familiar .",
    "hence the accent on bits and boolean logic , although not exclusive ( other studies concern for example membrane computing , or neural networks , or continuously evolving dynamical systems ) .",
    "more important , all these studies seem to concentrate on imperative programming .",
    "functional programming is the other main programming paradigm , a very elegant one , receiving more and more attention in the competition with the more well known imperative programming .",
    "functional programming has its roots in the lambda calculus , one of the two pillars of computation , along with the turing machine ( of equivalent power , but with different philosophies behind ) .    in 1992",
    "berry and boudol @xcite introduce the chemical abstract machine , which models asynchronous concurrent computations ( in particular a concurrent lambda calculus ) by using a chemical metaphor .",
    "the chemical abstract machine has states which are seen as chemical solutions and the evolution from a state to another is ruled by chemical reactions , heating and cooling .",
    "chemical solutions are multisets of molecules , i.e. list of numbers of molecules of each type .    between 1994 - 1996 ,",
    "fontana and buss @xcite @xcite @xcite introduce the idea that lambda calculus is a kind of natural formalization of the bare bones of chemistry .",
    "individual molecules are seen as lambda terms , reactions between molecules are seen as the application operation in lambda calculus , and the abstraction operation from lambda calculus `` captures the role of functional groups embedded in the reactants '' , @xcite p. 11 .",
    "fontana and buss use lambda calculus with eta reduction , i.e. the terms ( or molecules ) are identified with functions , in the sense that the molecule @xmath0 is identified with the function @xmath1 .",
    "the work of fontana and buss started the `` algorithmic chemistry '' research field . in a sense , this can be seen as a part of an older research subject , the very difficult one , of course , concerning the organization and functioning of living systems .",
    "they cite in @xcite the seminal paper by varela , maturana and uribe @xcite .",
    "the chemical concrete machine is a graphic formalism which uses a chemical metaphor .",
    "it is a modification of graphic lambda calculus , introduced in @xcite .",
    "( see also the graphic lambda calculus http://chorasimilarity.wordpress.com/graphic-lambda-calculus/[web tutorial ] .",
    "moreover , there is already a http://chorasimilarity.wordpress.com/chemical-concrete-machine/[web tutorial for the chemical concrete machine ] . )",
    "the graphic lambda calculus has been constructed for reasons independent from any of the subjects evoked until now .",
    "it is a graph rewriting system which has a sector which is equivalent with untyped lambda calculus , but it has other interesting sectors as well , like the one which is equivalent with knot diagrams , or the one which contains finite differential calculus in spaces with dilations @xcite , i.e. emergent algebras @xcite .",
    "it is therefore turing complete , but in order to achieve this , it uses a global fan - out move .",
    "moves ( i.e. graph rewrites ) can be characterized as local , when they involve a fixed number of nodes and arrows in the graphs , or global , otherwise .    by modifying the graphic lambda calculus ,",
    "we obtain the chemical concrete machine , which is turing complete by using only local moves .",
    "another difference from graphic lambda calculus is that we reformulate the moves as chemical reactions between molecules ( represented by trivalent graphs made by 4 types of trivalent nodes ) .",
    "thus a computation in the chemical concrete machine is simply a chemical reaction network involving molecules and chemical reactions from the formalism .",
    "there are also some differences between the algorithmic chemistry of fontana and buss and the chemical concrete machine .",
    "the most important one is that that the application and the abstraction operations from lambda calculus are , in the chemical concrete machine , trivalent nodes ( say , like atoms which compose the molecules ) , and moves ( corresponding to reductions in lambda calculus ) are assimilated with enzymes , thus reductions are certain chemical reactions .",
    "also , the chemical concrete machine can be used for implementing lambda calculus without extensionality , mainly because the eta reduction appears as a global move in graphic lambda calculus , which does not seem possible to be replaced by local moves , as it has been done with the global fan - out .",
    "this leads to the last point : it is intriguing to search if `` extreme '' functional programming ( i.e. functional programming without extensionality ) is easier to be implemented in biological computing than imperative programming .",
    "already , lambda calculus looks like a kind of chemistry . in the chemical concrete machine the somehow esoteric application and abstraction",
    "are made concrete .",
    "moreover , because the chemical concrete machine uses the graphic lambda calculus formalism , it follows that simple spatial manipulations , like grouping molecules together , releasing them in some order or all of them simultaneously , are more straightforward to achieve in graphic lambda calculus than in the usual lambda calculus .    another possibility would be to try to implement the chemical concrete machine in silico , which will be discussed in another article .    [ [ acknowledgments . ] ] acknowledgments .",
    "+ + + + + + + + + + + + + + + +    i benefited from various discussions with the following ( in no particular order ) : stephen p. king , eugenio battaglia , gerd moe - behrens , louis kauffman , ine ( nickname in comments made at the chorasimilarity blog ) , lucius meredith , mike stay .",
    "the chemical concrete machine is a graph rewriting system , derived from graphic lambda calculus @xcite , which can be seen as a model of chemical , or why not biological , computing .",
    "the distinction from other such models is that it works with very specific graphs , called `` molecules '' , which interact in very specific ways .",
    "this is the source of the word `` concrete '' in the denomination , as opposed to the chemical abstract machine of berry and boudol @xcite .",
    "i hope it can be implemented in reality ( that is in a real chemical reaction network ) , but nevertheless it can be seen as a proof of principle for the fact that the chemistry of a very small number of molecules can manifest turing completeness . in this respect",
    ", the chemical concrete machine appears as applied algorithmic chemistry in a virtual world with chemistry rules which are made up by a mathematician .",
    "* molecules . * in the following i shall use the name `` molecule '' in the following sense . a molecule is seen as made by other smaller molecules ( for example atoms are molecules ) which are connected by chemical bonds , or by other molecules called `` arrows '' .",
    "therefore , a molecule is seen as a graph with nodes which are smaller molecules and arrows which connect those nodes .",
    "a collection of molecules is a molecule .",
    "the building block of molecules are the following elementary , or essential ones .    on the first row",
    "you see the list of essential molecules , named respectively    1 .",
    "`` application '' , corresponding to the application gate in graphic lambda calculus , or to the application operation in lambda calculus 2 .",
    "`` fan - out '' , corresponding to the fan - out gate in graphic lambda calculus 3 .   `` fan - in '' , which will replace the @xmath2 gate from graphic lambda calculus 4 .",
    "`` abstraction '' , corresponding to the @xmath3 gate in graphic lambda calculus , or to the lambda abstraction from lambda calculus .    on the second row",
    "we see a loop , an arrow ( which are considered molecules , as written before ) , and a molecule called `` terminal '' , which corresponds in graphic lambda calculus to the termination gate .",
    "we shall work also with a list of `` other molecules '' , which can react ( or not ) one with another , this is left to the choice of the user of the chemical concrete machine , which can add more reactions in the formalism .",
    "there is also a collection @xmath4 of garbage .",
    "the set @xmath5 of molecules is formed by all locally planar graphs which can be formed by using the essential molecules ( and the `` other molecules '' with unspecified valences ) as nodes , and arrows obtained by connecting the essential molecules such that they respect the arrows orientation .",
    "the graphs can have free arrows ( with one of the ends of an arrow not connected to any other molecule ) , also they can have several connected components ( i.e. a finite union of molecules is a molecule ) .",
    "loops and arrows are molecules .",
    "[ defmol ]    the rules of building molecules are exactly the ones for building graphs in the set @xmath6 described in section 2 @xcite , or go directly to the http://chorasimilarity.wordpress.com/graphic-lambda-calculus/[graphic lambda calculus tutorial ] , with the understanding that for the chemical concrete machine we use colored nodes instead of the gates from graphic lambda calculus , as described in the following figure .",
    "the only new thing is that we admit also a list @xmath7 of unspecified nodes with unspecified valences , which model `` other molecules '' .    here",
    "are some examples of molecules .",
    "we imagine that all molecules float inside a container",
    ". there may be several copies of the same molecule in the container .",
    "* enzymes and moves . * besides molecules , i shall also use `` enzymes '' .",
    "a chemical reaction will always involve a molecule and an enzyme .",
    "enzymes are not molecules . instead , enzymes are names of moves ( graph rewrites ) .",
    "what is to be noticed is that any enzyme comes in two flavors : `` + '' and `` - '' .",
    "the reason for this is the following . any chemical reaction which involves a molecule and",
    "an enzyme will correspond to a move in the list of moves of the chemical concrete machine formalism .",
    "the list of moves of the chemical concrete machine , which will be described soon , contains the local moves of graphic lambda calculus which involves the fan - out , application and abstraction gates , supplemented with a list of moves related to the fan - in gate , which replace the emergent algebra moves from the graphic lambda calculus .",
    "all the moves of the graphic lambda calculus are bi - directional . therefore , any such move can be seen as a pair of unidirectional moves . by convention ,",
    "the moves from left to right are denoted by names of enzymes with `` + '' and the moves from right to left are denoted by names of enzymes with `` - '' .",
    "we can not simply write chemical reactions as    _ molecules + enzyme = molecules + garb _    because these molecules may be complicated beasts ( graphs ) and because , as we shall see , the enzymes prefer to react with certain patterns ( subgraphs ) of molecules . for specifying how the reaction takes place",
    "we need :    1 .",
    "molecules 2 .",
    "an enzyme 3 .   and a `` reaction site '' , which is a small part of the initial collection of molecules .",
    "the reaction site have to be present in the molecule , otherwise the reaction can not happen .    in order to explain how to translate from the language of chemical reactions and enzymes to the language of moves of the chemical concrete machine , let s contemplate the following figure .",
    "i consider two examples of reactions ( which will turn out to correspond to http://chorasimilarity.wordpress.com/2012/12/13/the-graphic-beta-move-with-details/[graphic beta moves ] in the realm of graphic lambda calculus ) .    in the first row",
    "we see a reaction between a molecule and the enzyme @xmath8 , which results into two other molecules and some garb .",
    "there is a small region in the initial molecule , marked by a dashed red closed curve , which represents a reaction site for the @xmath8 molecule .    in the second row",
    "is written the same reaction , but in a simpler form .",
    "the red `` + '' sign is eliminated , the two molecules which are obtained are juxtaposes , as if they are floating in the 3d container , and the garb is ignored .",
    "moreover , the enzyme @xmath8 points towards the reaction site .",
    "the rows 3 and 4 describe another reaction . at closer inspection , it s a reaction which can be interpreted as the inverse of the first one .",
    "let s examine directly the 4th row ( which is obtained from the 3rd row by the same procedure as the 2nd row was obtained from the 1st ) .",
    "the reaction site of the enzyme @xmath9 is a pair of arrows from two different molecules , the resulting molecule is the same as the initial molecule from the previous reaction .",
    "here is the list of moves , with the names taken from graphic lambda calculus ( where it is the case ) , by using the dictionary for translation ( links to the web tutorials are given ) .",
    "1 .   http://chorasimilarity.wordpress.com/2012/12/13/the-graphic-beta-move-with-details/[graphic beta move ] and http://chorasimilarity.wordpress.com/2013/07/13/local-fan-in-eliminates-global-fan-out-i/[fan-in move ] :    1 .",
    "local http://chorasimilarity.wordpress.com/2012/12/17/fan-out-moves-co-comm-co-assoc-global-fan-out-local-fan-out/[fan-out moves ] :    1 .",
    "http://chorasimilarity.wordpress.com/2013/07/13/local-fan-in-eliminates-global-fan-out-i/[dist ] moves ( `` dist '' comes from the word `` distributivity '' ) :    1 .   http://chorasimilarity.wordpress.com/2012/12/17/pruning-moves/[local pruning ] moves :    1 .",
    "elimination of loops ( i.e. moving loops from and to @xmath4 )        [ defmov ]    while all of these moves define the chemical concrete machine , some of them , seen in isolation , appear in other parts .",
    "i do nt know if there is any , more profound , reason for this , but nevertheless here are some examples of such places :    1 .",
    "in @xcite , the merge move ( 2.28 ) section 2.6 looks like the pair of graphic beta move - fan - in move ; the blow up move ( 13.1 ) section 13.1 looks even more like the graphic beta move , 2 .   in @xcite ,",
    "the unzip move from section 3 looks almost alike the graphic beta move , 3 .   in @xcite , after definition 3.1.3 of a bialgebra in a monoidal category , a dist move and a loc pruning move appear under the form of graphical identities .",
    "of course , co - comm and co - assoc moves can be seen as related to co - commutative and co - associative comonoids .",
    "let s see what the chemical concrete machine can do .",
    "[ [ lists - and - locks . ] ] lists and locks .",
    "+ + + + + + + + + + + + + + + +    suppose you have a family of molecules which you want to free in the medium in a given order .",
    "this corresponds to having a list of molecules , which is `` read '' sequentially .",
    "i shall model this with the help of the zipper from graphic lambda calculus .",
    "suppose that the molecules we want to manipulate have the form @xmath10 , with @xmath0 and @xmath11 from the family of `` other molecules '' and @xmath12 an arrow . here",
    "are three zippers .",
    "the first zipper , called a @xmath13 zipper , behaves in the following way . in the presence of @xmath8 enzymes , there is only one reaction site available , namely the one involving the red and green nodes in the neighbourhood of the @xmath14 .",
    "so there is only one reaction possible with a @xmath8 enzyme , which has a a result the molecule @xmath15 and a new , shorter @xmath13 zipper .",
    "this new zipper has only one reaction site , this time involving nodes in the neighbourhood of @xmath16 , so the reaction with the enzyme @xmath8 gives @xmath17 and a new , shorter zipper .",
    "the reaction continues like this , freeing in order the molecules @xmath18 , then @xmath10 and @xmath19 .",
    "the second zipper is called a fan - in zipper ( or a @xmath20 zipper ) .",
    "it behaves the same as the previous one , but this time in the presence of the fan - in enzyme @xmath21 .    in the case of a mixed zipper ,",
    "he first molecule @xmath15 is released only in the presence of a @xmath21 enzyme , then we are left with a @xmath13 zipper .",
    "this can be used to lock zippers .",
    "look for example at the following molecule :    called a locked @xmath13 zipper . in the presence of only @xmath8 enzymes",
    ", nothing happens , because there is no reaction site compatible with the @xmath22 enzyme . .",
    "if we add into the reactor also @xmath21 enzymes , then the zipper unlocks , by releasing a loop ( that s seen as garbage ) and a @xmath13 zipper which starts to react with @xmath8 enzymes .",
    "the same idea can be used for keeping a molecule inactive unless both @xmath21 and @xmath8 enzymes are present in the reactor .",
    "say that w have a molecule @xmath10 which is made inactive under the form presented in the following figure    the molecule is locked , but it has two reaction sites , one sensible to @xmath8 , the other sensible to @xmath21 .",
    "both enzymes are needed for unlocking the molecule , but there is no preferred order of reaction with the enzymes ( in particular these reactions can happen in parallel ) .    [ [ sets . ] ] sets .",
    "+ + + + +    suppose now that we do nt want to release the molecules in a given order .",
    "we need to prepare a molecule which has several reaction sites available , so that multiple reactions can happen in parallel , as in the last example .",
    "mathematically , that could be seen as a representation of the set of molecules we want to free , instead of the list of them .",
    "this is easy , as described in the next figure :    on the first row we see what is called a @xmath13 set .",
    "it has 4 possible reaction sites with the enzyme @xmath8 , therefore , in the presence of this enzyme , the molecules @xmath10 , ... , @xmath23 are released at the same moment",
    ".    a fan - in , or @xmath20 set , behaves the same as the previous one , but this time in the presence of the fan - in @xmath21 enzyme .",
    "finally a mixed set releases different molecules , depending on the presence of @xmath21 or @xmath8 enzymes .",
    "[ [ pairs . ] ] pairs .",
    "+ + + + + + +    as another example , here is a more involved molecule , which produces different pairs of molecules , according to the presence of @xmath21 or @xmath8 enzymes .    in the following figure",
    "we see how we model a pair of molecules , then two possible reactions a represented .",
    "the idea is that we can decide , by controlling the amount of @xmath8 or @xmath21 , to couple @xmath0 with @xmath24 and @xmath25 with @xmath24 , or to couple @xmath0 with @xmath26 and @xmath25 with @xmath24 .",
    "multipliers and comultipliers . * multipliers and co - multipliers are molecules which self - multiply . more precisely , in the next figure we see the definition of those :    here @xmath0 and @xmath11 are molecules from the formalism of the chemical concrete machine and @xmath27 and @xmath28 are labels .",
    "the blue arrow means any finite sequence of chemical reactions ( moves ) from the formalism .    in certain configurations ,",
    "zippers are multipliers . in the following figure",
    "we see what happens in the presence of dist enzymes :    the reaction continues :    now , the zipper multiplied into two zippers , but they are still connected .",
    "we need more information about @xmath29 and @xmath30 .",
    "remark that :    in conclusion : if @xmath29 are multipliers and @xmath30 are co - multipliers , then the zipper is a multiplier . this will be used in the next section .",
    "the http://en.wikipedia.org/wiki/b,c,k,w_system[b,c,k,w system ] `` is a variant of http://en.wikipedia.org/wiki/combinatory_logic[combinatory logic ] that takes as primitive the combinators @xmath31 , and @xmath32 .",
    "this system was discovered by http://en.wikipedia.org/wiki/haskell_curry[haskell curry ] in his doctoral thesis '' .",
    "i shall explain first which are the correspondents of the b , c , k , w , combinators in the formalism of the chemical concrete machine .",
    "( via the red - green vs black - white change of notation , they can be deduced from their expressions in graphic lambda calculus , which are obtained by using the algorithm described in section 3 @xcite . )      1 .",
    "the b , c , k , w molecules are combinator molecules , 2 .",
    "if a , d are combinator molecules then the molecule ad , defined as in the next figure , is a combinator molecule , 3 .",
    "if a is a combinator molecule and b is another molecule obtained from a by the application of the moves of the chemical concrete machine , then b is a combinator molecule .            by theorem 3.1 and proposition 3.2 @xcite , using also the dictionary between the notations in graphic lambda calculus and those of the chemical concrete machine , it follows that the combinatory algebra ( in particular in the form of the b , c , k , w system ) can be expressed in the chemical concrete machine if :    1 .",
    "we replace the global pruning move from graphic lambda calculus with the management of the garb ( garbage ) class of molecules ( alternatively , we might simply neglect global pruning and we obtain something a bit more expressive than combinatory algebra ) , 2 .",
    "we add to the chemical machine list of moves the following global fan - out move :    here , the meaning of the red dashed circle is that the global fan - out move can be applied only if the molecule a has no arrows outside the red dashed circle , with the exception of the one connecting it with the fan - out molecule .    in proposition",
    "3.2 @xcite was used the s , k , i combinators system , instead of the b , c , k , w , but the theorem 3.1 @xcite shows that already untyped lambda calculus can be expressed with the chemical concrete machine , provided that the global fan - out move is added .",
    "the choice of the b , c , k , w system instead of the s , k , i system is only for exposition purposes .    the goal is to show that for any combinator molecule , the global fan - out move can be replaces by a finite chain of local moves of the chemical concrete machine . as a consequence , we do nt need the global fan - out move in order to have combinatory logic in the chemical concrete machine",
    ".        * step 2 .",
    "* is only left to prove that b , c , k , w are multipliers . by the conventions of the chemical concrete machine ,",
    "i mention here the enzymes which are involved in the reactions , instead of writing the moves , like in the graphic lambda calculus .        as a side remark ,",
    "notice how , in both cases , the reactions seem feasible , in the sense that they can be accomplished by a linear process , because at any step there is only one kind of reaction site available .          from the point of view of the feasibility in the real world ( provided a real implementation of the chemical concrete machine",
    "will appear ) , it seems hard to control the exact order of applications of co - assoc moves which gives the disentangle move as an effect .",
    "so , probably , we shall need a `` disentangle enzyme '' dedicated to this .      for practical ( or theoretical as well )",
    "purposes , it is enough to take this as a move . in other words ,",
    "what would get rid of needing a controlled sequence of co - assoc reactions for multiplying the molecule w is this : assume that the molecule which is connected to the `` y '' essential molecule ( i.e. to the input of a fan - out gate ) is a `` propagator '' .",
    "propagators are defined in the next figure :    propagators are different from multipliers , because they are molecules with one selected input and one selected output which `` propagate along a fan - out gate '' , while multipliers are multiplied by a fan - out gate .",
    "propagators can serve in fact as labels , or names , which propagate along a tree of fan - out gates .",
    "let s see , as an application , how the ifthenelse construct appear as a combinator molecule in the chemical concrete machine . in lambda calculus",
    ", there are terms called true , false and ifthenelse , which are the of the booleans true , false and if - then - else .",
    "the associated graphs in the chemical concrete machine are :      along this chain of reactions , there is no other choice than the ones from the figure , because at every step there is only one reaction site available to the enzyme @xmath22 .",
    "the result is , unsurprisingly , compatible with the lambda calculus version , with the exception that a and b are not supposed to be ( graphs corresponding to ) lambda terms .",
    "they can be anything , for example , from the family of `` other molecules '' .      with a little bit of imagination",
    ", if we look closer to what true , false and ifthenelse are doing , we see that it is possible to adapt the ifthenelse to a molecule which releases , under the detection of one molecule ( like true ) , the `` medicine '' a , and under the detection of another molecule ( like false ) the `` medicine '' b.                w.fontana and l.w.buss , the barrier of objects : from dynamical systems to bounded organizations , in : boundaries and barriers , j.casti and a.karlqvist ( eds . ) , pp.56116 , addison - wesley , 1996 http://fontana.med.harvard.edu/www/documents/wf/papers/objects.pdf[(pdf ) ] w.fontana and l.w.buss , the arrival of the fittest : toward a theory of biological organization , bull .",
    "56 , 1 - 64 ( 1994 ) http://fontana.med.harvard.edu/www/documents/wf/papers/arrival.pdf[(pdf ) ] w.fontana and l.w.buss , what would be conserved if ` the tape were played twice ' ? ,",
    "usa , 91 , 757761 ( 1994 ) http://fontana.med.harvard.edu/www/documents/wf/papers/tape.pdf[(pdf ) ]      g. moe - behrens , http://journals.sfu.ca/rncsb/index.php/csbj/article/view/csbj.201304003/272[the biological microprocessor , or how to build a computer with biological parts ] , computational and structural biotechnology journal , * 7 * , 8 ( apr 2013 ) e201304003"
  ],
  "abstract_text": [
    "<S> the chemical concrete machine is a graph rewriting system which uses only local moves ( rewrites ) , seen as chemical reactions involving molecules which are graphs made up by 4 trivalent nodes . </S>",
    "<S> it is turing complete , therefore it might be used as a model of computation in algorithmic chemistry .    </S>",
    "<S> [ section ]    [ theorem]proposition    [ theorem]lemma    [ theorem]corollary    [ theorem]definition    [ theorem]remark    [ section ] </S>"
  ]
}
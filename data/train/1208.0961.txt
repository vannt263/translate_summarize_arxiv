{
  "article_text": [
    "basing ourselves on the bamps code developed in frankfurt by c.greiner , z.xu et al . , we decided to study the interaction between the gluons of a gluon gas produced at the onset of heavy ion collisions @xcite .",
    "we use cuda as programming language to create the code cuba `` the boltzmann approach for many parton scattering written with cuda '' @xcite .",
    "we expect to get an improvement of the computational runtime .",
    "in addition , both codes are benchmarked with the riemann problem to compare the results of the two programs .    in this paper",
    "we investigate the physical concepts behind this program , the cuda language and finally the prior results obtained .",
    "we are specially interested in solving the riemann problem in viscous matter using the relativistic boltzmann equation which is as follows ,    @xmath0    to get a good compromise between computational runtime and physical accuracy , we used the application of microscopic theories together with strong assumptions like neglecting quantum mechanical effects .    the main idea for solving the boltzmann equation with the particles - in - a - cell - method ( pic )",
    "consists in dividing a certain volume into many cells with volume @xmath1 , where we have n particles , which will suffer movement- and collision - laws in a certain time interval @xmath2 .",
    "each particle will have its own position @xmath3 and momentum @xmath4 .",
    "so if the particle does not collide , its propagation is given by ,    @xmath5    the same is valid for the y and z directions .    on the other hand",
    ", it is important to consider that the collisions are binary and can only occur between particles in the same cell .",
    "therefore , the probabilty of collisions to occur is given by using the monte - carlo method in @xmath2 ,    @xmath6    being @xmath7 the total cross section , which is considered to be isotropic and @xmath8 the relative velocity given by , @xmath9 where s is the mandelstam variable , @xmath10 @xcite .    to reduce statistical fluctuations and to keep the accuracy of our pretended solution , we use the testparticle method .",
    "it consists in introducing @xmath11 with @xmath12 as a chosen factor , which increases the number of particles . to keep the mean free path @xmath13 independent of @xmath14 we reduce the probaility @xmath15 by the same @xmath12 . to get the direction of the outgoing momentum we boost from the plasma frame to the center of mass frame applying the lorentz transformation . in the center of mass frame",
    "we choose the momentum randomly .",
    "after that , we boost back to the orginial frame .",
    "if a particle collides with one of the six walls established by the box volume , it will be elastically reflected .",
    "cuda is a language for parallel programming in gpus , which recently started being used in numerical computations in physics , due to the potential performance increased by order of magnitude .",
    "the cuda logic is built by writing kernel functions , which calculate the physical matters , in the device and calling them using the host .",
    "the device is constituted by various grids which include about 65535@xmath16 blocks for fermi arquitecures and 65535@xmath17 blocks for older arquitectures .",
    "each block has 256 threads .",
    "the postion and momentum of each particle in @xmath2 is stored in a thread .",
    "so we point out that the big advantage of using cuda consists in the fast shared memory region that can be shared among threads @xcite @xcite .",
    "our code structure is presented in figure [ figure 1 ] .",
    "to test our code we have to take into account the initial conditions we choose .",
    "the two important parameters are the time variation @xmath2 and x variation @xmath18 , once we consider a transverse homogeneous plan .",
    "@xmath2 is always choosen to be smaller than @xmath18 to avoid large local variations in one time step .",
    "if we increase @xmath18 , we have to increase the testparticle number @xmath14 .",
    "the more testparticles we have , more the curve of the riemann problem approximates to the theoretical solution .",
    "a small testparticle number affects the fluctuations . to simulate an ideal fluid we may choose a very small viscosity .",
    "first , we check some numerical solutions for cuba considering various parameters . for starters",
    "we consider our box volume to be 32@xmath19 fm@xmath16 , the cross secion , @xmath7= 10 gev@xmath21 , dt=0.1 fm / c , with equal particle distribuition at the beginning and diferent temperatures on each side of the box , t@xmath22=0.4 gev and t@xmath23=0.2 gev .",
    "the conservation of the total energy is verified , just as it was expected .",
    "we observe the evolution in @xmath2 in figure [ figure 2 ] .    .",
    "the propagation of the two waves from the initial boundary of the riemann problem is clearly visible . ]    in addition , we observe in figure [ figure 2 ] the typical figure of the riemann problem .",
    "this problem consists of a propagating shock wave because the initial conditions impose different temperatures @xcite .    secondly , we range the cross section , considering the other variables constant and as previously refered .",
    "we observe the diferences in figure [ figure 3 ] .",
    "as we can verify , the slope undoes itself by increasing the cross section , which physically means to have a larger viscosity .    at last , to compare our results to the bamps code we choose the same initial conditions in both codes , which are the ones mentioned at the beginning of this section .        in figure",
    "[ figure 4 ] we can surely identify the overlapping of the results obtained with cuba ( blue points ) and bamps ( red points ) .    while the bamps code spents 12 minutes and 36 seconds to calculate the data , cuba just needs 58.09 seconds .",
    "the resulting data can be used to confirm the cpu code and improve the study of shocking particles . for",
    "now we can say that cuba is about 13 times faster than bamps .    in the near future",
    "we pretend to implement the parameter @xmath24 as variable and optimize our code in computational runtime .",
    "furthermore we will check our code with other initial conditions and compare it to bamps .    as final result",
    "we expect to obtain a code which is able to calculate any problem of this type and being as fast as cuda allows us .",
    "this work was financed by the fct contracts poci / fp/81933/2007 , cern / fp/83582/2008 , ptdc / fis/100968/2008 , cern / fp/109327/2009 , nvidia academic partnership and the crup / daad exchange a- 10/10 .",
    "nuno cardoso is also supported by fct under the contract sfrh / bd/44416/2008 .",
    "`` cuda by example : an introduction to general - purpose gpu programming '' , jason sanders and edward kandrot , published by addison - wesley professional , print isbn-10 : 0 - 13 - 138768 - 5 , print isbn-13 : 978 - 0 - 13 - 138768 - 3 , web isbn-10 : 0 - 13 - 218016 - 2 , web isbn-13 : 978 - 0 - 13 - 218016 - 0 , ( july 19 , 2010 )    i.  bouras , e.  molnar , h.  niemi , z.  xu , a.  el , o.  fochler , c.  greiner and d.  h.  rischke , a comparison of viscous fluid dynamics to kinetic theory ,  phys .",
    "c * 82 * , 024910 ( 2010 ) [ arxiv:1006.0387 [ hep - ph ] ] ."
  ],
  "abstract_text": [
    "<S> using cuda as programming language , we create a code named cuba which is based on the cpu code `` boltzmann approach for many parton scattering ( bamps ) '' developed in frankfurt in order to study a system of many colliding particles resulting from heavy ion collisions . furthermore , we benchmark our code with the riemann problem and compare the results with bamps . </S>",
    "<S> they demonstrate an improvement of the computational runtime , by one order of magnitude . </S>"
  ]
}
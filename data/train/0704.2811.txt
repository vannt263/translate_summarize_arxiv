{
  "article_text": [
    "with the discovery of deterministic list - decoding algorithms for several algebraic - geometric codes , most notably the guruswami - sudan @xcite algorithm , there has been renewed interest in algebraic decoding methods for other related @xmath0-ary codes such as the reed - muller @xcite and product - reed - solomon @xcite codes .",
    "however some of the existing correctness proofs for these algorithms use advanced algebraic geometric tools . in this paper",
    "we first derive a proof for a list decoding algorithm for a @xmath0-ary reed - muller code .",
    "our proof is from first principles and require only the most basic notions from finite field theory .",
    "we then proceed to propose new recursive list decoding algorithms for reed - muller and product - reed - solomon codes .",
    "these algorithms are rigorously shown to outperform the pellikaan - wu method in both complexity as well as error - correction - radius .",
    "the basic idea of our new proof for the pellikaan - wu algorithm is to `` lift '' a multivariate polynomial in @xmath6 $ ] to a univariate polynomial in @xmath7 $ ] using a deterministic mapping rule . this in turn results in a higher total degree polynomial .",
    "the increase in degree will not be high enough to render our list decoding strategy for reed - muller codes useless at meaningful rates .",
    "a higher degree for the lifted polynomial means that this reed - muller code list decoding algorithm has a lower relative error - correction radius ( as a function of the rate ) than a comparable rate reed - solomon list decoder based on the guruswami - sudan algorithm . in the following section we describe the mapping rule and the decoding algorithm in some detail .    in the final section we propose new algorithms for decoding reed - muller and product - reed - solomon codes .",
    "our algorithm is more efficient than the pellikaan - wu method by approximately a quadratic factor .",
    "furthermore it outperforms the pellikaan - wu algorithm in error - correction - radius over a wide range of code rates .",
    "let us begin by defining a @xmath0-ary reed - muller code .",
    "the @xmath0-ary reed - muller code @xmath1 of length @xmath2 is defined as the set of vectors given by : @xmath8\\ ; \\\\",
    "\\hspace{2ex }   |\\;\\;\\ ; \\varphi \\in { \\mathbb{f}}_q[x_1,\\ , x_2,\\ , \\ldots,\\ , x_m],\\ ; \\text{\\rm deg}(\\varphi ) \\leq \\ell\\;\\;\\ } \\label{rmeqn}\\end{gathered}\\ ] ] where @xmath9 are any set of @xmath10 distinct points in @xmath11 . here by @xmath12 we mean the total degree of the multivariate polynomial @xmath13 .",
    "the following well known property will be useful :    let @xmath14 be a basis for @xmath15 over @xmath16 and let @xmath17 \\;\\in\\ ; { \\mathbb{f}}_q^m$ ] . then the map @xmath18 defined as in ( [ isomorpheqn ] ) is an isomorphism . @xmath19 \\;\\mapsto\\ ; x { \\ensuremath{\\stackrel{\\text{\\rm def}}{=}}}\\sum_{j=1}^m a_j x_j \\label{isomorpheqn}\\ ] ]    for example one might as usual use a polynomial basis @xmath20 where @xmath21 is any primitive element in @xmath15 or even a normal basis of the form @xmath22 , where @xmath23 is a suitable primitive element in @xmath15 .",
    "therefore we arrive at this elementary conclusion :    let @xmath24 .",
    "the reverse isomorphism for ( [ isomorpheqn ] ) is : @xmath25^t { \\ensuremath{\\stackrel{\\text{\\rm def}}{=}}}{\\ensuremath{\\bm{a}}}^{-1}\\cdot [ x\\ ; x^q\\ ; x^{q^2 } \\;\\ldots\\ ; x^{q^{m-1}}]^t \\label{revisoeqn}\\ ] ] where @xmath26 is a non - singular ( invertible ) square matrix .",
    "[ reviso ]    since @xmath27 , and @xmath28 , we get @xmath29 using fermat s little theorem .",
    "it only remains to show that @xmath30 is non - singular .",
    "note that in general @xmath30 is _ not _ a vandermonde matrix .",
    "however by construction , the set @xmath14 is a basis for @xmath15 over @xmath16 .",
    "it then follows from ( * ? ? ?",
    "* corollary 2.38 , pp .",
    "58 ) that @xmath30 is non - singular .",
    "it follows from lemma [ reviso ] that there exist polynomials @xmath31 $ ] of degree at most @xmath32 such that @xmath33 . substituting for all @xmath34 in this manner",
    ", we have proved the following :    let @xmath2 . if @xmath3 then @xmath35 where @xmath36 is the reed - solomon code given by @xmath37 \\ ; \\\\ \\hspace{2ex } |\\;\\;\\ ; f\\in{\\mathbb{f}}_{q^m}[x ] , \\;\\text{\\rm deg}(f ) \\leq",
    "\\ell q^{m-1}\\;\\;\\}\\end{gathered}\\ ] ] where @xmath38 , and @xmath39 $ ] , @xmath40 are the points of evaluation for the reed - muller code .",
    "moreover if the information polynomial associated with the reed - muller code is given by @xmath41 then the information polynomial @xmath42 of degree at most @xmath43 associated with the reed - solomon code is : @xmath44 [ embedthm ]    let @xmath45 represent the hamming distance between the two vectors . using theorem [ embedthm ] and the guruswami - sudan algorithm @xcite for list decoding a reed - solomon code ,",
    "we have proved the correctness of the following deterministic list - decoding algorithm for reed - muller codes :     + @xmath46 ; @xmath47 \\in { \\mathbb{f}}_q^n$ ] .",
    "compute the parameter @xmath48 .",
    "2 .   using guruswami - sudan algorithm find a list @xmath49 of codewords @xmath50 such that @xmath51 .",
    "3 .   for every @xmath52 check if @xmath53 : 1 .   if no then discard @xmath54 from @xmath49 .",
    "2 .   if yes then check if @xmath55 : 1 .   if no then discard @xmath54 from @xmath49 .",
    "if yes then keep @xmath54 in the list @xmath49 .",
    "4 .      @xmath49 [ mainalgo ]    this algorithm was originally proposed by pellikaan - wu in @xcite , though their proofs were different .",
    "the complexity of our proposed algorithm is of the same order as the complexity of guruswami - sudan algorithm for decoding reed - solomon codes over the extension field @xmath15 .",
    "this is @xmath56 field operations in @xmath15 .",
    "the pellikaan - wu algorithm for decoding reed - muller codes by means of embedding into one - point algebraic - geometric codes was shown @xcite to achieve an error correction radius of @xmath57 .",
    "it is interesting to note that the error - correction radius demonstrated herein is always larger than that suggested by the pellikaan - wu formalism employing algebraic - geometric codes .",
    "however we believe that the more important contribution of this paper is the readily accessible correctness proof which relies on just a few basic notions from galois theory .",
    "product reed - solomon codes @xmath58 over @xmath11 can be thought of as the set of vectors whose @xmath59 coordinates consist of the @xmath59 evaluations of @xmath60-variate information polynomials with coefficients in @xmath16 and degree in the @xmath61-variable @xmath62 at most @xmath63 .",
    "@xmath60 is usually called the dimension of the product code .",
    "thus @xmath64 is contained in @xmath65 . when @xmath66 the list decoding algorithm given in algorithm [ mainalgo ] may be used essentially without any modifications .",
    "several product - reed - solomon algebraic list decoders , including a similar method as sketched above are described in @xcite . using algorithm [ mainalgo ] it is possible to achieve a relative error correction radius of @xmath67 , where @xmath68 .      from theorem [ embedthm ] , it is clear that @xmath69 being of degree at most @xmath43 , has at most @xmath43 zeros in @xmath15 , including multiplicities .",
    "therefore a non - zero multivariate polynomial @xmath70 of total degree @xmath71 has at most @xmath43 zeros in @xmath11 .",
    "this gives the famous demillo - lipton - schwartz - zippel@xcite lemma for polynomials over finite fields .",
    "note that the statement above appears to be stronger than the classical lemma in that this counts multiplicities too .",
    "moreover the proof also appears to differ from the traditional expositions which use probabilistic arguments .",
    "next we propose a lower complexity recursive algebraic decoder which outperforms the reed - muller decoder considered in this section .",
    ", scaledwidth=48.0% ]    for simplicity , let @xmath72 .",
    "a codeword in the code @xmath64 can be described within an @xmath60-dimensional cube of side length @xmath0 .",
    "see figure [ 2dprs ] .",
    "let a codeword @xmath54 ( correspondingly a received word , @xmath73 ) be so described",
    ". we will find it convenient to write this vector as @xmath74\\!\\!\\rangle\\!}}$ ] , where each of the indices @xmath75 take values in the range @xmath76 .",
    "we further use the notation @xmath77\\!\\!\\rangle\\!}}$ ] to denote the @xmath78-dimensional vector formed out of @xmath74\\!\\!\\rangle\\!}}$ ] when the coordinates indexed by @xmath79 are fixed at @xmath80 and the rest of the indices are free . by the nature of the product code ,",
    "@xmath77\\!\\!\\rangle\\!}}$ ] belongs to @xmath81 .",
    "now consider the following decoding algorithm for the code @xmath64 :     + @xmath82 ; @xmath83 , where @xmath84\\!\\rangle ; 1 \\leq i_j \\leq q$ ] .",
    "if @xmath85 do : 1 .   compute the parameter @xmath86 .",
    "2 .   using guruswami - sudan algorithm find a list @xmath87 of codewords @xmath88 such that @xmath89\\!\\!\\rangle\\ ! } } ) < t_1 $ ] .",
    "search @xmath87 for @xmath90 such that @xmath91\\!\\!\\rangle\\!}})$ ] is least .",
    "substitute in - place the positions corresponding to @xmath92\\!\\!\\rangle\\!}}$ ] in @xmath73 with @xmath90 and .",
    "2 .   for @xmath93",
    "set @xmath94\\!\\!\\rangle\\!}}$ ] 2 .",
    "set @xmath95 and @xmath96 3 .",
    "recursively decode @xmath97 using * prs - decoder * with input parameters @xmath98 ; @xmath99 .",
    "3 .   compute the parameter @xmath100 .",
    "4 .   for each @xmath101 tuple @xmath102",
    "do : 1 .   using guruswami - sudan algorithm find a list @xmath103 of codewords @xmath104 such that @xmath105\\!\\!\\rangle\\ ! } } < t_m $ ] .",
    "2 .   search @xmath103 for @xmath106 such that @xmath107\\!\\!\\rangle\\!}})$ ] is least .",
    "substitute in - place the positions corresponding to @xmath108\\!\\!\\rangle\\!}}$ ] with @xmath106 . 5 .",
    "resulting vector @xmath73 [ recprsalgo ]    the following recursive algorithm uses * prs - decoder * to decode @xmath1 .",
    "+ @xmath46 ; @xmath47 \\in { \\mathbb{f}}_q^n$ ] .",
    "+    1 .   for each possible @xmath60-tuple @xmath109",
    "do : 1 .   using * prs - decoder * with input parameters @xmath110 ; @xmath83 , decode @xmath73 as @xmath54 .",
    "2 .   add @xmath54 to a list @xmath49 of codeword candidates .",
    "@xmath49 [ recrmalgo ]    we have the following result concerning the decoding power of algorithm [ recprsalgo ] and algorithm [ recrmalgo ] .",
    "algorithm [ recprsalgo ] has a relative error correction radius of @xmath111 , where @xmath68 . moreover , there exist error patterns of weight above @xmath112 which can not be guaranteed to be efficiently decoded by algorithm [ recprsalgo ] .",
    "[ recalgothm ]     for a 2d prs code.[2dprsrad],scaledwidth=48.0% ]    our proof is by induction .",
    "when @xmath85 , the claim is trivially true .",
    "let us assume the claim to be true for some @xmath113 .",
    "we will now show it to be true for the case @xmath114 .",
    "let there be a maximum of @xmath115 errors . in step 2 of algorithm [ recprsalgo ]",
    ", let there be a maximum of @xmath116 recursions which fail to decode correctly .",
    "since by the induction hypothesis , this would mean that there are more than @xmath117 errors in these @xmath116 sub - recursions , we have that @xmath118 .",
    "substituting for @xmath119 and @xmath117 gives , @xmath120 .",
    "these errors will get corrected in step 4 of the algorithm .",
    "this proves the first part of the claim . for the 2d case ,",
    "the proof is concisely depicted in figure [ 2dprsrad ] .    to see the second part of the claim , we observe that an error pattern which is contiguously spread over an @xmath60 dimensional sub - cube of volume more than @xmath112 can not be guaranteed to be efficiently decoded by the proposed algorithm .",
    "this shows that the error correction radius predicted in the first part of theorem [ recalgothm ] is rather tight .",
    "let @xmath121 be the complexity of decoding an @xmath60-dimensional product - reed - solomon code using algorithm [ recprsalgo ] .",
    "then the complexity of decoding an @xmath122 dimensional code is @xmath123 .",
    "but @xmath124 field operations in @xmath16 .",
    "this gives , @xmath125 which is @xmath126 for large @xmath60 .",
    "the complexity of algorithm [ recrmalgo ] is @xmath127 field operations in @xmath16 .",
    "this is substantially better than the pellikaan - wu method in algorithm [ mainalgo ] .",
    "algorithm [ recrmalgo ] not only has a lower complexity , but also performs better over a wide range of rates . for example when @xmath128 , the pellikaan - wu algorithm is not effective , whereas the new algorithm is still useful .",
    "furthermore @xmath129 is larger than @xmath130 for most code rates and the advantage is more pronounced at higher code rates .",
    "figure [ pwsanthicompare ] shows the decoding power of algorithm [ recprsalgo ] .",
    "several iterative hard decision decoders for product - reed - solomon codes available in literature use some form of algorithm [ recprsalgo ] .",
    "usually such algorithms are described with no theoretical bounds on their error correction radii .",
    "these product code decoders find use in optical communication systems and lan / wan standards@xcite .",
    "several hardware implementations of such decoders are commercially available@xcite .",
    "soft decision iterative decoders for product codes utilizing the  turbo - principle  have also been discussed in literature@xcite .",
    "the performance of most of these hard decision iterative decoders can be very well characterized using theorem [ recalgothm ] .",
    "similar conclusions are obvious for the case of other product codes which have algebraic bounded distance decoders available for their component codes .",
    "theorem [ recalgothm ] implies the following for a general product code :    if for an @xmath60-dimensional product code @xmath131 , there exists bounded distance decoders for each of its component codes such that the @xmath61 component code s decoder achieves a error correction radius of @xmath132 errors , then there exists a decoding algorithm for the entire product code @xmath131 which can correct all errors up to a weight of @xmath133 .",
    "[ recalgocor ]    the decoding algorithm for the code @xmath131 mentioned in corollary [ recalgocor ] can be obtained from algorithm [ recprsalgo ] with some obvious and minor changes and as such is not repeated here .",
    "this result is , to the best of the author s knowledge , the only such theoretical guarantee on the error correction radius of a general algebraic product code decoder .",
    "however for specific cases there are some stronger results available , for instance see the result of lin - weldon@xcite for cyclic product codes . in another related example",
    ", tanner@xcite discusses bounds on a specific type of hard - decision decoder for product codes on graphs . in many cases of practical interest such bounds are difficult to apply because of their dependence on the knowledge of the girth of the underlying code graph",
    "in this paper , we presented a simple and easily accessible proof for the pellikaan - wu algebraic list decoding algorithm for reed - muller codes .",
    "our proof uses only the most fundamental properties of finite field arithmetic .",
    "we also proposed a low complexity recursive algorithm for reed - muller and product - reed - solomon codes .",
    "this new recursive algebraic decoding algorithm is then shown to have a significantly better error correction radius than the pellikaan - wu algorithm over a wide range of code rates .",
    "99 s. lin and e. j. weldon ,  further results on cyclic product codes ,  _ ieee trans .",
    "inform . theory _ , * 16 * , no .",
    "452 - 459 , jul .",
    "j. schwartz ,  fast probabilistic algorithms for verification of polynomial identities ,  _ journal of the acm _ , * 27 * , no .",
    "701 - 717 , oct .",
    "1980 .  a recursive approach to low complexity codes ,",
    " r. m. tanner , _ ieee trans .",
    "inform . theory _ , * 27 * , no .",
    "533 - 547 , sep .",
    "r. lidl and h. niederreiter , _ introduction to finite fields and their applications _ , university of cambridge press , cambridge , 1986 .",
    "r. pyndiah ,  near - optimum decoding of product codes : block turbo codes ,  _ ieee trans .",
    "_ , * 46 * , pp . 1003 - 1010 , aug",
    "v. guruswami and m. sudan , `` improved decoding of reed - solomon and algebraic - geometry codes , '' _ ieee trans .",
    "inform . theory _ , * 45 * , no . 6 , pp .",
    "1757 - 1767 , sep . 1999 .",
    "r. pellikaan and x .- w .",
    "wu , `` list decoding of @xmath0-ary reed - muller codes , '' _ ieee trans .",
    "inform . theory _ , * 50 * , no .",
    "679 - 682 , apr . 2004 .",
    "r. pellikaan and x .- w .",
    "wu , `` list decoding of @xmath0-ary reed - muller codes , '' expanded version of @xcite , manuscript available at http://www.win.tue.nl/~ruudp/paper/43-exp.pdf , nov .",
    "f. parvaresh , m. el - khamy , r. j. mceliece and a. vardy , `` algebraic list - decoding of reed - solomon product codes , '' unpublished note of jan .",
    "2006 , private communication .",
    "ieee 802 lan / man standards committee .",
    "website at http://www.ieee802.org/ the ieee 802.16 working group on broadband wireless access standards .",
    "website at http://www.ieee802.org/16/ ",
    "aha4540b 155 mbits / sec tpc encoder / decoder ic ,  specifications available at http://www.aha.com/show_prod.php?id=21 ",
    "ieee 802.16 compatible turbo product code decoder v1.1 ,  specifications available at http://www.xilinx.com/ipcenter/catalog/logicore/docs/tpc_decoder.pdf  very high - speed turbo product code decoder tc3404 ,  specifications available at http://www.altera.com/products/ip/dsp/error_detection_correction/m-tur-tc3404.html"
  ],
  "abstract_text": [
    "<S> we consider a list decoding algorithm recently proposed by pellikaan - wu @xcite for @xmath0-ary reed - muller codes @xmath1 of length @xmath2 when @xmath3 . a simple and easily accessible correctness proof is given which shows that this algorithm achieves a relative error - correction radius of @xmath4 . </S>",
    "<S> this is an improvement over the proof using one - point algebraic - geometric codes given in @xcite . </S>",
    "<S> the described algorithm can be adapted to decode product - reed - solomon codes .    </S>",
    "<S> we then propose a new low complexity recursive algebraic decoding algorithm for reed - muller and product - reed - solomon codes . </S>",
    "<S> our algorithm achieves a relative error correction radius of @xmath5 . </S>",
    "<S> this technique is then proved to outperform the pellikaan - wu method in both complexity and error correction radius over a wide range of code rates . </S>"
  ]
}
{
  "article_text": [
    "the bose - einstein condensate ( bec ) is an ideal system to study superfluidity at a macroscopic level : it is a highly controllable quantum system which admits a simple theoretical description using the gross - pitaevskii equation ( gpe ) @xcite .",
    "a great deal of attention has been lately devoted to the development of accurate numerical schemes to solve different forms of the gpe , from the classical ( stationary or time - dependent ) gpe , to systems of coupled gpes ( _ e.g. _ for two - component or spinor bec ) and more recent formulations ( _ e.g. _ with non - local interactions or fractional gpe ) . for recent reviews of numerical methods for gpe ,",
    "see @xcite .    among all these formulations , the stationary gpe",
    "is used either to numerically generate an initial condition for the simulation of real - time dynamics of bec , or to directly investigate physical features of experimentally observed bec . in the former case , the stationary ( ground state )",
    "solution which is the global minimizer of the gp energy is sought , while in the latter case , capturing local minima of the gp energy could be of interest since they represent excited ( or metastable ) states observed in experimental bec configurations .",
    "the most striking example of how numerical solutions of the stationary gp equation were used to investigate physics is the study of quantized vortices in rotating bec .",
    "since superfluidity in bec is closely related to the nucleation of quantized vortices , this topic has focused the attention of physical and mathematical communities during the last two decades .",
    "numerous experimental and theoretical studies were devoted to the investigation of three - dimensional properties of single ( straight or bent ) vortex lines , vortex rings or abrikosov vortex lattices ( for a review of such physical systems , see the dedicated volumes @xcite ) .",
    "numerical simulations of the stationary three - dimensional ( 3d ) gpe proved as a valuable investigation tool for all these topics , revealing properties of quantized vortices difficult to observe experimentally , suggesting new configurations , or supporting new physical or mathematical theories ( _ e.g. _ @xcite ; for a review , see @xcite ) .",
    "the difficulty in computing solutions of the stationary gp equation with rotation comes from the presence in a condensate of a large number of vortices , with large gradients of atomic density in the vortex cores .",
    "this explains the use in the literature of discretisation methods with high order spatial accuracy : fourier spectral @xcite , sixth - order finite differences @xcite , sine - spectral @xcite , laguerre  hermite pseudo - spectral @xcite , hybrid discontinuous galerkin discretisations based on polynomials and plane waves @xcite , etc .",
    "several software packages for the classical stationary gpe were deposited in the cpc program library .",
    "they use different numerical methods : iterative diagonalization method @xcite , optimal damping algorithm @xcite , crank - nicolson scheme @xcite , newton - like method with an approximate line - search strategy @xcite , fully - explicit fourth - order runge ",
    "kutta scheme @xcite , semi - implicit backward euler scheme @xcite , etc .",
    "the spatial discretization is generally based on spectral @xcite or finite - difference @xcite methods .",
    "provided programs are written in fortran @xcite , c @xcite or matlab @xcite .",
    "numerical methods based on standard finite elements are less represented in this field .",
    "vortex states in rotating bec were computed using finite elements with fixed meshes @xcite or dynamically adapted meshes @xcite , but only for 2d configurations . to the best of our knowledge ,",
    "no finite - element programs exist in the cpc program library for the gp equation with rotation .",
    "the purpose of this paper is thus to distribute a finite - element solver for computing steady solutions of the gpe with rotation , in both 2d and 3d settings .",
    "the code was built as a toolbox for freefem++ @xcite , which is a free software ( under lgpl license ) using a large variety of triangular finite elements ( linear and quadratic lagrangian elements , discontinuous @xmath0 , raviart - thomas elements , etc . ) to solve partial differential equations .",
    "freefem++ is an integrated product with its own high level programming language and a syntax close to mathematical formulations , making the implementation of numerical algorithms very easy . among the features making",
    "freefem++ an easy - to - use and highly adaptive software we recall the advanced automatic mesh generator , mesh adaptation , problem description by its variational formulation , automatic interpolation of data , colour display on line , postscript printouts , etc .",
    "freefem++ community is continuously growing , with thousands of users all over the world .",
    "the present freefem toolbox , called gpfem , provides two efficient numerical methods for computing stationary states with vortices , with the following novelties : + _ (",
    "i ) _ the steepest - descent algorithm based on sobolev gradients suggested in @xcite and tested for 2d configurations in @xcite was improved by adding an optimized line - search algorithm for the descent step and extended for 3d configurations ; + _ ( ii ) _ a novel minimisation method for 2d and 3d configurations was implemented based on the state - of - the - art optimisation library ipopt @xcite using the direct minimization interior point method ; + _ ( iii ) _ the mesh adaptivity algorithm suggested in @xcite for 2d configurations was extended in 3d and optimised by the use of anisotropic mesh adaptivity functions provided by * mshmet * @xcite and * mmg3d * @xcite softwares .",
    "+ from the programming point of view , the toolbox presents the following advantages : + _ ( iv ) _ the switch from different finite elements ( from linear @xmath0 to quadratic @xmath1 and high - order @xmath2 or @xmath3 finite elements ) implies the modification of a single instruction ( the definition of the finite - element space ) ; + _ ( v ) _ the scripts are easy to adapt for different mathematical or physical settings ( two different scalings are implemented ) ; + _ ( vi ) _ a graphical interface allows to run predefined 2d or 3d examples .",
    "the paper is organised as follows . in  2 ,",
    "we present different mathematical formulations of the gp equation and energy .",
    "two different scalings are introduced .",
    "numerical methods are presented in  3 and the important issue of setting the initial condition for the computation is described in  4 .",
    "the details of the derivation of closed formulae for the thomas - fermi approximation ( generally used as initial condition ) is deferred to appendix a. the structure of the provided software is described in great detail in  5 .",
    "various test cases for computing 2d and 3d configurations with vortices are presented in  6 .",
    "the optional user interface is also described in  6 .",
    "the main features of the software and possible extensions are summarised in  7 .",
    "we consider in this paper numerical methods for the direct minimization of the gross - pitaevskii energy . for a pure bec of @xmath4 atoms confined in a trapping potential @xmath5 rotating with angular velocity @xmath6 ,",
    "the energy of the system in the rotating frame is described by the functional : @xmath7 where @xmath8 is the classical field complex wave function , @xmath9 denotes its complex conjugate , @xmath10 is the atomic mass , @xmath11 the reduced planck constant and @xmath12 the coupling constant @xmath13 the kinetic momentum @xmath14 can be expressed as @xmath15 we consider in the following rotations along the @xmath16-axis ( _ i.e. _ @xmath17 and therefore only the @xmath16-component of the kinetic momentum appears in ( [ eq - gp - energ - gen ] ) for the rotation term : @xmath18 as a consequence , the form of the gross - pitaevskii energy considered in this paper is : @xmath19 with @xmath20 the total angular momentum : @xmath21 @xmath22 denotes the real part .",
    "we compute here minimizers of the energy ( [ eq - gp - energ ] ) with the constraint @xmath23 expressing the conservation of the number of atoms in the condensate . among these minimizers ,",
    "the ground state is defined as a global minimum , _",
    "i.e. _ @xmath24 . local minimizers with energy larger than that of the ground state are called excited states or meta - stable states .    using ( [ eq - gp - lzint ] ) , the energy ( [ eq - gp - energ ] ) can be written in the following form that will be useful in deriving numerical methods in the next section : @xmath25 where the effective trapping potential is corrected with the centrifugal term : @xmath26    another useful form of the energy corresponds to the grand potential of the system : @xmath27 where @xmath28 is the chemical potential of the condensate , introduced as a lagrange multiplier for the constraint ( [ eq - gp - cons ] ) . the euler - lagrange equation ( @xmath29 ) corresponding to ( [ eq - gp - energ - grandp ] ) leads to the stationary ( or time - independent ) gp equation : @xmath30 the ground state and excited states are therefore eigenfunctions of the nonlinear eigenvalue problem ( [ eq - gp - stat ] ) .",
    "we also consider in this paper two - dimensional ( 2d ) configurations corresponding to disk - shape ( or pancake ) condensates . the dimension reduction from 3d to 2d can be done by approximating the 3d wave function by a factorized ansatz @xmath31 . for the precise form of the ansatz",
    ", the reader is referred to review papers @xcite . for a mathematical justification of the dimension reduction from 3d to 2d equations ,",
    "see @xcite . by integrating out the @xmath16-dependence , previous forms of energy and stationary gpe stand , with @xmath32 replaced by @xmath33 , with the caution that the non - linear interaction constant @xmath12 expressed by ( [ eq - gp - g ] ) for the 3d setting has to be replaced by its",
    "_ reduced _ form in 2d .",
    "this constant will be prescribed as an input parameter of the computation .",
    "we consider in the following the gross - pitevskii model set on @xmath34 , with @xmath35 or 2 .",
    "various forms of scaling are used in the literature @xcite . to allow the switch between different scalings , we introduce a parameter @xmath36 and define a general length scale as : @xmath37 where @xmath38 is the harmonic oscillator length defined with respect to a reference trapping frequency @xmath39 . by setting @xmath40 and",
    "@xmath41 the dimensionless gp energy ( per particle ) becomes : @xmath42 \\",
    ", d\\vadim{\\vec{x}},\\ ] ] where @xmath43 from the conservation law ( [ eq - gp - cons ] ) we obtain that the wave function @xmath44 is now normalized to unity : @xmath45 the total angular momentum ( [ eq - gp - lzint ] ) is now scaled in units of @xmath11 : @xmath46    in this non - dimensional setting , the energy ( [ eq - gp - energ - agrad ] ) takes the form : @xmath47 \\ , d\\vadim{\\vec x},\\ ] ] and the grand potential ( [ eq - gp - energ - grandp ] ) becomes : @xmath48 the non - dimensional effective trapping potential corresponding to ( [ eq - gp - veff ] ) is defined as : @xmath49 finally , the dimensionless form of the stationary gp equation ( [ eq - gp - stat ] ) becomes with this scaling : @xmath50    for the trapping potential , we consider in the following a general _ quadratic+quartic _ form that allows to recover the expressions used in most of the theoretical and experimental studies of rotating bec .",
    "starting from the following physical form of the trapping potential ( harmonic potential + detuned laser beam , see @xcite ) : @xmath51 we obtain from ( [ eq - scal - ctrap ] ) and ( [ eq - scal - ctrap - eff ] ) the dimensionless effective potential : @xmath52 the non - dimensional coefficients are : @xmath53    the classical scaling used in the physical literature is recovered for @xmath54 . in some mathematical studies",
    "@xcite it was convenient to define @xmath36 as : @xmath55 this second scaling , referred as the aftalion - rivire ( ar ) scaling , is particularly appropriate for the thomas - fermi ( tf ) regime characterized by strong interactions ( the kinetic energy is negligible compared to the interaction energy ) .",
    "this regime is attained when @xmath56 , which is typically the case in experiments ( _ e.g. _ @xcite ) . in this case",
    ", @xmath36 is a small parameter ( @xmath57 in experiments ) . as a consequence",
    ", we notice from ( [ eq - scal - cg ] ) that @xmath58 and the gp energy ( [ eq - scal - energ - agrad ] ) becomes : @xmath59 \\",
    ", d\\vadim{\\vec x},\\ ] ] which is indeed dominated by the trapping and interaction terms .",
    "the ar scaling was successfully used in numerical simulation of 2d @xcite or 3d @xcite bec configurations with vortices .",
    "we present in this section two numerical methods to compute minimizers @xmath60 of the non - dimensional gp energy ( [ eq - scal - energ ] ) or ( [ eq - scal - energ - agrad ] ) , with the constraint ( [ eq - scal - cons ] ) .",
    "the problem is set on a bounded domain @xmath61 , and homogeneous dirichlet boundary conditions @xmath62 are imposed on @xmath63 .",
    "the dimensions of @xmath64 will be estimated from the thomas - fermi approximation ( see appendix a ) , in order to ensure that the condensate lies inside @xmath64 .",
    "the parameters of the minimization problem are the angular velocity @xmath65 , the non - linear interaction constant @xmath66 and the trapping potential @xmath67 . for the sake of simplicity",
    ", the tilde notation for non - dimensional variables will be dropped in the following .",
    "the first method implemented in our toolbox is the steepest descent method using the sobolev gradients suggested in @xcite .",
    "the algorithm starts from an initial state @xmath68 and iterates following @xmath69 where @xmath70 represents the gradient of the energy functional at step @xmath71 and @xmath72 the descent step .",
    "the idea introduced in @xcite was to define a gradient related to the form ( [ eq - scal - energ - agrad ] ) of the energy .",
    "a new hilbert space , denoted by @xmath73 , was defined and equipped with the inner product : @xmath74 where @xmath75 and @xmath76 denotes the complex inner product .",
    "it was proved in @xcite that the norm arising from the metric @xmath77 is equivalent to the standard sobolev @xmath78 norm .",
    "hence the completion of @xmath79 with respect to this metric consists of all members of @xmath78 . as a consequence ,",
    "the riez representation theorem in the hilbert space @xmath80 allows to define the sobolev gradient @xmath81 as the unique member of @xmath78 such that , @xmath82 : @xmath83 since the @xmath84 gradient of the gp energy can be easily derived from ( [ eq - scal - energ ] ) : @xmath85 the relationship ( [ eq - num - riesz ] ) allows to compute the @xmath86 gradient . before using this gradient in the descent method ( [ eq - num - descent ] )",
    ", it will be projected onto the tangent space of the constraint ( [ eq - scal - cons ] ) .",
    "an explicit projection formula is derived in @xcite .",
    "this technique is an alternative of the usual approach that re - normalise the solution @xmath87 after each descent step .",
    "compared to the descent method presented in @xcite , where a fixed value of the descent step was used , the present method introduces an efficient estimation of the optimal descent step . since general purpose line - search methods",
    "( brent , armijo , etc ) proved very time consuming for this problem , we finally used the particular line - minimisation analysis specific to the gp energy .",
    "the minimiser @xmath72 of the real function : @xmath88 is a root of the third order polynomial : @xmath89 with coefficients @xmath90 - 2 c_\\omega \\real\\left ( i \\grdgn^ * { a^t \\nabla}u_n \\right ) . &",
    "\\end{aligned}\\ ] ] in freefem++ , we can use the function * polycomplexsolve * ( from * gsl * library )  @xcite to calculate the three roots of the polynomial @xmath91 and then select the root realizing the minimum of the energy @xmath92 .",
    "the algorithm for the descent method can be easily identified in the freefem++ scripts , since appropriate macros were defined for the mathematical operators ( inner product , norms , etc ) .",
    "all variables are discretised using @xmath0 finite elements ; the non - linear term is represented with @xmath3 finite elements in 2d and @xmath1 in 3d .",
    "the following steps were programmed , with a syntax very close to mathematical relationships :    1 .",
    "suppose that the solution @xmath93 at iteration @xmath71 was built .",
    "we compute @xmath94 , solution of the variational problem corresponding to ( [ eq - num - riesz ] ) and ( [ eq - num - gradl2 ] ) : + @xmath95 + @xmath96 v.\\ ] ] 2 .",
    "we compute the projection of g over the tangent space of the unitary norm constraint ( see @xcite ) : @xmath97 where @xmath98 is solution of the variational problem : @xmath99 3 .",
    "we compute the optimal descent step : @xmath100 by finding the roots of the third order polynomial ( [ eq - num - jnp ] ) with coefficients ( [ eq - num - jnc1])-([eq - num - jnc4 ] ) and choosing the one realizing the minimum of the line energy .",
    "note that the factor @xmath101 appearing in the expression of the gradient ( [ eq - num - gradl2 ] ) was included in the expression of the optimal descent step @xmath102 .",
    "we build the solution @xmath87 at iteration @xmath103 : @xmath104 5 .   finally , we compute the relative error @xmath105 and call the mesh adaptivity algorithm suggested in @xcite ( see below ) .",
    "convergence to the stationary state is achieved if @xmath106 .",
    "freefem++ includes a powerful mesh adaptivity tool ( function * adaptmesh * ) using metric control algorithms suggested in @xcite .",
    "the main idea is to define a metric based on the hessian and use a delaunay procedure to build a new mesh such that all the edges are close to the unit length with respect to this new metric . in the steepest descent algorithm",
    ", we call this function after building @xmath87 in the step 4 of the previous algorithm .",
    "since our convergence criterion is based on the relative change of energy of the solution ( @xmath107 ) we use the same indicator to trigger the mesh adaptive procedure following the next algorithm ( see also @xcite ) :    1 .   choose a sequence of decreasing values @xmath108 , that represent threshold values for the mesh adaptivity ; 2 .",
    "set @xmath109 ; 3 .   if @xmath107 is decreasing and @xmath110 and @xmath111 , call the mesh adaptivity procedure ; the solution @xmath44 is interpolated on the new mesh and normalized to satisfy the unitary norm constraint ; 4 .   if @xmath107 is increasing , _",
    "i.e. _ large variations of the energy appear ( _ e.g. _ if new vortices enter the domain ) , reconsider the previous bounds by setting @xmath112 ; 5 .",
    "if step 3 was performed @xmath113 times , increase @xmath114 to @xmath115 . limiting the number of mesh refinements for the same threshold ,",
    "is necessary since , at step 2 , the interpolation on the new refined mesh and the normalization of the solution could lead to an increase of the value of @xmath107 .",
    "figure [ fig-2d - adapt ] illustrates the 2d mesh adaptivity procedure .",
    "it represents a test case where the initial field has an off - centred vortex and the final ( converged ) solution is expected to present a centred vortex ( the details of the parameters for this case are given in section [ sec - example ] ) .",
    "we plot in figure [ fig-2d - adapt](a ) the initial state , built with the thomas - fermi approximation . in figure [ fig-2d - adapt](b ) we plot the final solution converged with the sobolev gradient method .",
    "the corresponding zoom in the vortex area are displayed in figures [ fig-2d - adapt ] ( a1 ) and ( b1 ) .",
    "note that the mesh adaptivity procedure generated a denser mesh near the position of the vortex .",
    "similarly , the number of triangles was decreased near the border , where the solution is smoother .",
    "however , the de - refinement of the mesh must be used with caution for high rotation rates , when new vortices can nucleate in the condensate near the boundary .",
    "it was shown in @xcite that this procedure decreases the cpu time and the number of iterations when compared with computation on fixed refined meshes .            for 3d computations",
    ", freefem++ uses the function * mshmet * @xcite to compute the metrics and the function * mmg3d * @xcite to build the new mesh corresponding to this metric . in figure",
    "[ fig-3d - adapt ] , we plot a 3d mesh adapted to the solution presenting a vortex line with a `` s '' shape .",
    "we carried out the visualisation with * medit * , a mesh visualisation software @xcite interfaced with freefem++ .",
    "note that the mesh adaptation follows precisely the vortex line by adding triangles for a better accuracy . outside the vortex area , the mesh adaptation allowed us to have less triangles , with a bigger size .",
    "the optimisation library ipopt is based on an interior point minimisation method @xcite , a barrier functions tool @xcite and a filter line search @xcite .",
    "this powerful state - of - the - art optimisation library is interfaced with freefem++ @xcite and offers the possibility to solve constrained optimisation problems of the general form : @xmath116 @xmath117 where @xmath118 stands for _ lower bound _ and",
    "@xmath119 for _ upper bound_. if for some @xmath120 we obtain an equality constraint .    for the minimisation of the gross - pitaevskii energy ,",
    "the use of ipopt is quite simple : the conservation constraint ( [ eq - scal - cons ] ) is an equality constraint and , consequently , we take @xmath121 and @xmath122 in the previous general form .",
    "ipopt will then solve the euler - lagrange equation associated to the problem ( [ eq - ipopt - prob])-([eq - ipopt - probc ] ) : @xmath123 where @xmath124 is a lagrange multiplier and @xmath125 the constraint .",
    "note that , in our case , @xmath126 corresponds to the chemical potential .",
    "let us define @xmath127 ipopt first finds a descent direction @xmath128 by using the newton method .",
    "indeed , at each iteration @xmath71 it solves the system : @xmath129 then it advances at the next step : @xmath130 where @xmath131 $ ] is a descent step computed using the filter line - search method suggested in @xcite . the algorithm will stop when either the error @xmath132 or the number of iterations reaches a value defined by the user .",
    "as ipopt seeks for solutions in @xmath133 , we have to separate in the gross - pitaevskii energy functional the real and imaginary part .",
    "the problem to solve becomes : @xmath134 \\in ( h_0 ^ 1(\\mathcal d,\\mathbb r))^2 \\text { wich minimizes}\\ ] ] @xmath135\\\\   -\\,c_{\\omega}\\ , l_z(u_r , u_i),\\ ] ] with @xmath136.\\ ] ] then we can calculate the frechet derivative of @xmath137 as : @xmath138 & =   \\int_{\\mathcal{d } } \\left [ \\nabla u_r \\cdot   \\nabla v_r + \\nabla u_i \\cdot   \\nabla v_i        + 2 \\,c_{trap } \\ , ( u_r\\,v_r + u_i\\,v_i ) \\right]\\\\ \\nonumber        & + 2 \\,c_g \\,\\int_{\\mathcal{d } } ( u_r^2 + u_i^2 ) \\ , ( u_r\\,v_r + u_i\\,v_i)\\\\        & - c_{\\omega } l_z'(u_r , u_i)\\cdot[v_r , v_i],\\end{aligned}\\ ] ] with @xmath139 = & \\int_{\\mathcal{d } }   y \\,\\left [ - \\frac{\\partial u_r}{\\partial x}\\,v_i + \\frac{\\partial u_i}{\\partial x}\\,v_r - \\frac{\\partial v_r}{\\partial x}\\,u_i + \\frac{\\partial v_i}{\\partial x}\\,u_r\\right]\\\\   + & \\int_{\\mathcal{d } } x \\,\\left [ \\frac{\\partial u_r}{\\partial y}\\,v_i - \\frac{\\partial u_i}{\\partial y}\\,v_r + \\frac{\\partial v_r}{\\partial y}\\,u_i - \\frac{\\partial v_i}{\\partial y}\\,u_r   \\right].\\end{aligned}\\ ] ] finally , the calculus of the the second order frechet derivative of of e leads to : @xmath140,[w_r , w_i ] ) & =   \\int_{\\mathcal{d } } \\left [ \\nabla v_r \\cdot   \\nabla w_r + \\nabla v_i \\cdot   \\nabla w_i        + 2 \\,c_{trap } \\ , ( v_r\\,w_r + v_i\\,w_i ) \\right]\\\\ \\nonumber        & + 2 \\ , c_g \\,\\int_{\\mathcal{d}}\\left [ ( u_r^2 + u_i^2 ) \\ , ( v_r\\,w_r + v_i\\,w_i)\\right]\\\\ \\nonumber        & + 4 \\ , c_g \\,\\int_{\\mathcal{d}}\\left[(u_r\\,v_r + u_i\\,v_i ) \\ , ( u_r\\,w_r + u_i\\,w_i)\\right]\\\\        & - c_{\\omega } l_z''(u_r , u_i)\\cdot([v_r , v_i],[w_r , w_i]),\\end{aligned}\\ ] ] with @xmath141,[w_r , w_i ] ) = & \\int_{\\mathcal{d } }   y \\,\\left[- \\frac{\\partial w_r}{\\partial x}\\,v_i + \\frac{\\partial w_i}{\\partial x}\\,v_r - \\frac{\\partial v_r}{\\partial x}\\,w_i + \\frac{\\partial v_i}{\\partial x}\\,w_r\\right]\\\\   + & \\int_{\\mathcal{d } } x \\,\\left [ \\frac{\\partial w_r}{\\partial y}\\,v_i - \\frac{\\partial w_i}{\\partial y}\\,v_r + \\frac{\\partial v_r}{\\partial y}\\,w_i - \\frac{\\partial v_i}{\\partial y}\\,w_r   \\right].\\end{aligned}\\ ] ]",
    "the expression of the constraint functional is : @xmath142 and its gradient : @xmath143 = 2 \\ , \\int_{\\mathcal{d } } ( u_r \\ , v_r + u_i \\",
    ", v_i).\\ ] ]    with ipopt linked as an external library to freefem++ , we can not directly use mesh adaptivity in its internal algorithm . in exchange , we can couple the computation of the minimizer with the mesh adaptivity procedure .",
    "the following algorithm was implemented in the programs . set @xmath144 , the total number of mesh refinements to be done and @xmath145 and @xmath146 , the first and the last mesh adaptivity prescribed errors ( parameters of the freefem++ function * adaptmesh * ) .    1 .",
    "at step @xmath147 $ ] , run ipopt to find a solution @xmath148 $ ] .",
    "2 .   build a new mesh adapted to @xmath148 $ ] with a prescribed mesh adaptivity error @xmath149 3 .",
    "go to step @xmath150 .",
    "typical values used for 2d computations are @xmath151 , @xmath152 and @xmath153 . for 3d cases , as the computation is more difficult , it s more convenient to use a higher number of mesh adaptations and a lower ratio @xmath154 .",
    "typical values are @xmath155 , @xmath156 and @xmath153 .",
    "in computing stationary states for rotating bec , the initial approximation used to start the iterative methods is of crucial importance .",
    "it can not only affect the convergence speed , but also the topology of the stationary solution , especially when local minima ( meta - stable ) solutions are sought .",
    "we present in this section three methods to build initial states for the computation of stationary solutions : the thomas - fermi approximation , a rapid calculation of the ground state with ipopt for simplified configurations ( axisymmetric or non - rotating ) and , finally , an ansatz for a manufactured initial state with vortices .",
    "the thomas - fermi regime is characterized by strong interactions ( the kinetic energy is negligible compared to the interaction energy ) .",
    "this regime is attained when @xmath56 . if the healing length @xmath157 , with @xmath158 the atomic density , is defined as the length for which the kinetic and interaction energies are comparable , in the thomas - fermi regime the characteristic length scales are larger that the healing length .",
    "we give below some typical values from experiments of bec with vortices @xcite : @xmath159 & \\ll & 0.2 \\ , [ \\mu m ] & < & 0.3 \\ , [ \\mu m ]   & \\ll & 1 \\ , [ \\mu m ] & \\ll & 5 \\ , [ \\mu m ] , \\end{array}\\ ] ] where @xmath160 approximates the distance between atoms and @xmath161 is the radius of the condensate .",
    "the general form of the thomas - fermi approximation of the atomic density ( @xmath162 ) is obtained by neglecting the first term in the energy ( [ eq - scal - energ - agrad ] ) .",
    "the euler - lagrange equation of the corresponding grand potential ( [ eq - scal - grandp ] ) gives : @xmath163 we notice that this form is equivalent to the usual thomas - fermi approximation for non - rotating condensates , but with a trapping potential ( [ eq - scal - ctrap - eff ] ) corrected by the centrifugal term ( see also @xcite ) .",
    "following ( [ eq - gp - veff ] ) , for a harmonic trapping potential the radial trapping frequency @xmath164 is thus replaced by @xmath165 .",
    "it is also interesting to note from ( [ eq - scal - u ] ) and ( [ eq - scal - tf ] ) that the atomic density in numerical simulations using the ar scaling with typical value @xmath166 is amplified by a factor of @xmath167 , when compared to the classical scaling ( @xmath54 ) .",
    "this remark is important for setting the numerical value which will serve to identify a quantized vortex : since theoretically @xmath168 in the vortex centre , the low value @xmath169 of the iso - contour level used to represent vortices will depend on the scaling .",
    "we use in the following the thomas - fermi approximation to estimate the size of the computational domain and also to set the initial guess for the minimisation algorithms .",
    "we derive in appendix a closed formulae for the thomas fermi approximation corresponding to different types of potentials : harmonic , _ quartic+quadratic _ , _ quartic - quadratic_.      the main drawback of the thomas - fermi approximation , which is generally a truncated parabola , is the discontinuity of its first derivative on the border of the condensate where @xmath170 .",
    "this could trigger oscillations of the solution , when high - order ( spectral ) methods are used for the space discretisation .",
    "a smoother initial field can be obtained by directly computing with ipopt a minimizer of the gp energy .",
    "when simplified forms of the energy ( _ e.g. _ axisymmetric ) are used , this preliminary computation is very cheap in terms of computational time .",
    "we present below the approach of computing axisymmetric initial fields with ipopt , corresponding to the ground state without vortices or with a central vortex of given winding number .",
    "we consider the cylindrical coordinates @xmath171 and assume that the solution is axisymmetric ( @xmath172 ) and symmetric in the @xmath16-direction ( @xmath173 ) .",
    "this is also the case of the thomas - fermi approximation if @xmath174 in the trapping potential ( [ eq - scal - trap - v ] ) .    since @xmath175 we can infer that @xmath176 .",
    "then the energy becomes @xmath177 r dr \\",
    ", d\\theta \\ , dz.\\\\             & = 4 \\pi \\int_0^{r_{max}}\\int_0^{z_{max } }   \\left [ \\frac{1}{2 } \\left(\\mod{\\frac{\\partial u}{\\partial r}}^2 + \\mod{\\frac{\\partial u}{\\partial z}}^2 \\right )        + c^\\text{eff}_\\text{trap } \\lvert u \\rvert^2         + \\frac{1}{2 } c_g \\lvert u \\rvert^4 \\right ] r dr \\ , dz .",
    "\\end{aligned}\\ ] ] the 3d problem is now reduced to a 2d problem . in order to solve this 2d problem with ipopt",
    ", we need the frchet derivative of @xmath137 and its hessian : @xmath178 r dr \\ , dz,\\ ] ] @xmath179 =   4 \\pi \\int_0^{r_{max}}\\int_0^{z_{max } } \\left [ \\frac{\\partial v}{\\partial r }    \\frac{\\partial w}{\\partial r } + \\frac{\\partial v}{\\partial z }    \\frac{\\partial w}{\\partial z }        + 2 c^\\text{eff}_\\text{trap }   v w         + 2 c_g \\left(v w \\lvert u \\rvert^2 + 2 u v \\real(uw ) \\right ) \\right ] r dr dz.\\ ] ] in the case of a 2d simulation , the axisimmetry reduces the 2d problem to a 1d problem . in this case , the integration and the derivative with respect to @xmath16 must be omitted in previous formulations .",
    "figure [ figinitcomp ] shows a comparison between the thomas - fermi approximation and the axisymmetric solution computed with ipopt for two trapping potentials ( [ eq - scal - trap - v ] ) : harmonic potential , with @xmath180 and quartic potential , with @xmath181 . a third solution , obtained by using the full 2d formulation of the gp energy without rotation in ipopt , is also plotted for reference .",
    "we notice the regularity of the axisymmetric solution in the vicinity of @xmath182 and the good approximation it offers , when compared with the full 2d computation . for anisotropic potentials",
    ", we can still use the full ( 2d or 3d ) formulation of the gp energy without rotation to compute with ipopt an initial condition for the computations with rotation .",
    "sometimes it is necessary to manufacture initial states by artificially including vortices .",
    "this could be useful when local minima , corresponding to meta - stable solutions , are sought .",
    "if @xmath183 is the ground state without rotation ( set by the tf approximation or computed with ipopt ) , we can add vortices by multiplying @xmath44 in each plane ( @xmath184 by the following ansatz used in @xcite for 3d simulations : @xmath185}\\cdot e^{i\\theta_v},\\ ] ] where @xmath186 and @xmath187 are the polar coordinates taken from the imposed centre @xmath188 of the vortex and @xmath189 the vortex radius . in order to obtain a particular 3d shape of the vortex ( u - shaped or s - shaped vortex ,",
    "see figure [ fig-3d - example ] ) , we can prescribe the position of the vortex centre in each transverse plane @xmath190 .",
    "for example , a s - vortex lying in the major @xmath191 plane will have @xmath192 and @xmath193}{\\tanh(\\alpha_v ) } , \\",
    ", \\text {   if } z < 0,\\\\ \\displaystyle x_c(z ) = 1+\\frac{\\tanh\\left[\\alpha_v \\left(-1+\\frac{z}{\\beta_v}\\right)\\right]}{\\tanh(\\alpha_v ) } , \\ , \\text {   if } z \\geq 0,\\\\ \\end{array } \\right.\\ ] ] where @xmath194 and @xmath195 respectively control the curvature and the length of the vortex .",
    "the methods described previously were implemented in a 2d and a 3d toolbox based on the freefem++ software @xcite . using two input files",
    ", the toolbox offers to the user the choice between two scalings ( classical or aftalion - riviere ) , three ways of computing the initial approximation ( thomas - fermi , axisymmetric or non - rotating ) and two methods to compute the ground state ( sobolev gradient or ipopt ) .",
    "the main difference between the 2d and 3d codes is in the post - treatment part : we can automatically count the number of vortices in 2d while it is more difficult in 3d . also , the setting of input parameters is different : there are several additional parameters in 3d to control the shape of the vortex ansatz ( i - shaped",
    ", s - shaped or u - shaped ) and the shape of the initial mesh ( cylindrical or ellipsoidal ) .",
    "moreover , the user can choose to plot the evolution of the energy with * gnuplot * @xcite during the computation and the evolution of the solution with either the freefem++ plotting tool or using * medit * @xcite .",
    "in this section we first describe the architecture of the programs and the organisation of the files .",
    "then we focus on the list of input parameters and the structure of output files .",
    "figure [ figdiag ] gives a schematic overview of the content of the 3d toolbox .",
    "the 2d toolbox has similar architecture .",
    "all files are provided in a directory called _ bec_@xmath196d_toolbox_freefem _ where @xmath196 is the dimension 2 or 3 .",
    "this directory contains :    1 .",
    "the _ bec_@xmath196d_toolbox.edp _ file containing the main script .",
    "2 .   the _ input _ directory where two files allow the user to choose parameters : * _ bec_@xmath196d_physic_param.dat _ contains the parameters describing the physical case . *",
    "_ bec_@xmath196d_run_param.dat _ contain choices for the run .",
    "the _ include _ directory which contains 9 files : * _ bec_@xmath196d_macros.idp _ contains all the usefull macros and functions .",
    "* _ bec_@xmath196d_comput_param.idp _ reads the parameters files and builds constants . *",
    "_ bec_@xmath196d_comput_init_condition.idp _ compute an initial approximation using either thomas - fermi or ipopt . * _ bec_@xmath196d_ipoptaxi_init.idp _ contains the script to use with ipopt axisymmetric in dimension ( @xmath197 ) for the initial condition . *",
    "_ bec_@xmath196d_ipopt_init.idp _ contains the script to use ipopt in dimension @xmath196 without rotation to build the initial condition . *",
    "_ bec_@xmath196d_grads_method.idp _ solves the main problem with sobolev gradient method . *",
    "_ bec_@xmath196d_ipopt_method.idp _ solves the main problem with ipopt method . *",
    "_ bec_@xmath196d_plot_energ.idp _ builds a gnuplot script and runs gnuplot in order to plot the energy and other relevant quantities .",
    "* _ bec_2d_results.idp _ finds the number of vortices and gives their position in 2d .",
    "4 .   the _ examples _ directory . in 2d",
    ", this directory contains 8 examples of input files allowing the user choose between two cases of scaling , potential or method . to do so , in a terminal",
    "the user can write , for example , the command line : + freefem++ _ bec_@xmath196d_toolbox.edp _ + -run _ examples / grads_harm_run_param.dat _ + -param _ examples / ar_harm_physic_param.dat_. + this will run the program with an harmonic potential , the aftalion - riviere scaling and sobolev gradient method . in 3d , this directory contains 6 files to run examples to compute a s - shaped or a u - shaped vortex , using either the sobolev gradient method or ipopt",
    ". a more precise description of these examples is provided in section [ sec - example ] .",
    "glut _ directory contains a c++ script that must be compiled to create a user interface with glut .",
    "6 .   a makefile",
    "to compile the source code for the interface and a readme file .",
    "we focus now on the description of the input parameters .",
    "these are distributed in two files . in both files ,",
    "comments are preceded by the usual //",
    "symbol and key words by the @ symbol .",
    "if the user wants to set a parameter , he has to enter its value after the corresponding key word .",
    "if a key word is not written in a file , a default value is given to the corresponding parameter .",
    "some parameters must be specified by the user , otherwise the computation stops ( see bellow ) . by default",
    ", the user has to use the two files provided in the _ input _ directory .",
    "however , any input file can be used by entering the following command in a console : + freefem++ _ bec_@xmath196d_toolbox.edp _ -param _ name_physics _ -run _ name_run_. + here , _ name_physics _ is the name of the input file containing the physical parameters and _ name_run _ is the name of the input file containing the parameters for the computation .",
    "+ 1/ the first file in the _ input _ directory , _",
    "bec_@xmath196d_physic_param.dat _ , contains the physical parameters :    * @scaling , a string that can take the values _",
    "classical _ depending on which scaling is chosen .",
    "a value must be given to this parameter .",
    "* @kind , a boolean that takes the value 0 if one wants to set constants already built from , and , or the value 1 if one wants to set the corresponding physical parameters .",
    "a value must be given to this parameter .",
    "* if the 0 value was chosen for @kind the following parameters must be set to a real value : + @beta ( = @xmath198 ) , the coefficient in front of the non linear part of the equation ( see [ eq - scal - cg ] ) , + @omop ( @xmath199 ) , the coefficient of the angular momentum ( see [ eq - scal - com ] ) , + @ax , @ay , @az and @a4 are the coefficients in the potential @xmath200 ( see [ eq - scal - trap - ax ] ) . *",
    "if the value 1 was given to @kind one must give a real value to the following parameters : + @n , the number of atoms , + @m , the atomic mass , + @as , the scattering length , + @omega ( @xmath201 ) , the rotation speed , + @omegax ( @xmath202 ) , @omegay ( @xmath203 ) , omegaz ( @xmath204 ) , @omega2 ( @xmath205 ) , @omega4 ( @xmath206 ) , @u2 and @u4 are the coefficients in @xmath200 ( see [ eq - gp - trap - v ] ) .",
    "2/ the second file , _",
    "bec_@xmath196d_run_param.dat _ contains the parameters for the run :    1 .",
    "here are the parameters that must be set , * @method is a string to choose a method .",
    "the possible values are _ ipopt _ or _",
    "grads_. * @eps0 is a real corresponding to the final error to reach . * @init is a string with the name of the initial approximation to use .",
    "the possible values are _ tf _ ( thomas fermi ) , ipoptaxi ( axisymmetric approximation ) or ipoptnorot ( no rotation ) . + * all the parameters that follow are set by default : * * @gradsmaxiter is the maximum number of iterations in the sobolev gradient method .",
    "default value : 8000 .",
    "* @ipoptmaxiter is the maximum number of iterations between each mesh adaptation in ipopt method .",
    "default value : 50 .",
    "the following parameters are used for the outputs : * @dircase is a prefix of the name of the output directory .",
    "the form of potential and the name of the method used for computation are automatically added to this name .",
    "default value : bec_3d .",
    "* @scase is a prefix of the name of the output files .",
    "the values of @xmath207 and @xmath66 are automatically added to this name .",
    "default value : bec_3d .",
    "* @withplot is a boolean controlling the possibility of plotting the solution during the run .",
    "default value : 1 .",
    "* @savesol is a boolean controlling the possibility of saving the solution during the run .",
    "default value : 1 .",
    "* @iwait is a boolean controlling the possibility of waiting after each plot .",
    "default value : 0 .",
    "* @meditplot is a boolean controlling the possibility of plotting the solution with medit .",
    "default value : 0 .",
    "* @output is a string that takes the value _ vtk _ or _ tecplot _ for the outputs format",
    ". default value : _ tecplot_. * @itersave , @iternorm and @iterplot are integers corresponding to the frequency of iterations in sobolev gradient method to save , normalize or plot the solution .",
    "default value : 100 . *",
    "@savenergy and @plotenergy are booleans to save and plot the energy during the run .",
    "default value : 1 . * @countvortices ( only in 2d ) is a boolean to count the number of vortices and to give their position .",
    "default value : 1 .",
    "one can control how to build the initial mesh by setting the following parameters : * @ardom is a coefficient that multiply the thomas - fermi radius in order to have a larger domain .",
    "default value : 1.25 .",
    "* @nbseg is the number of segments on the border of the mesh .",
    "default value : 50 in 3d and 200 in 2d .",
    "* @meshkind ( only in 3d ) is a string that can take the values _",
    "cylindre _ or _",
    "ellipsoid _ and allows the user to choose between a cylindrical mesh or an ellipsoidal mesh in 3d .",
    "default value : _ ellipsoid_. * @hminsurf is the minimal size of the edge of a triangle on the surface of the ellipsoidal mesh .",
    "default value : 0.6 .",
    "* @hminvol is the minimal size of the edge of a tetraedra inside the ellipsoidal mesh .",
    "default value : 0.3 .",
    "the parameters for loading an old solution as an initial field are : * @ifilrst is a boolean , with true value if the user wants to load a restart file .",
    "default value : 0 .",
    "if ifilrst = 1 , the following 4 parameters have to be specified : * @keepmesh is a boolean to choose to keep the loaded mesh or not .",
    "* @dirload is a string with the name of the directory containing the restart mesh and solution .",
    "* @dmesh is a string with the name of the file containing the mesh to load .",
    "* @dsol is a string with the name of the file containing the solution to load .",
    "the following parameters control how to build the initial field for the wave function : * @mod is an integer . if @mod @xmath208 , a central vortex with winding number @mod is added in the axisymmetric approximation built with ipopt .",
    "default value : 0 .",
    "* @narray is the number of circles of vortices in the manufactured initial field ( see section [ sec - manuf ] ) .",
    "default value : 0 .",
    "+ if narray = 1 , the following 8 parameters have to be specified : * @nv , the number of vortices on each circle .",
    "* @rarr , the radius of the first circle . *",
    "@drarr , the distance between two circles .",
    "* @tharr , the orientation of the first circle .",
    "* @dtharr , a step between the orientation of each circle . * @shape ( only in 3d ) is a string controlling the shape of the ansatz vortex added in the initial condition ( see equation [ eq - anzatz - shape ] ) .",
    "it can be i , ux , uy , sx , sy .",
    "the x or y indicates if the vortex is in the plane ( o , x , z ) or ( o , y , z ) . default value : i. * @curvature @xmath209 , only in 3d ) is the parameter controlling the curvature of the ansatz vortex ( see [ eq - anzatz - shape ] ) .",
    "default value : 10 .",
    "* @length @xmath210 , only in 3d ) is the parameter controlling the length of the ansatz vortex ( see [ eq - anzatz - shape ] ) .",
    "default value : 2 . 6 .",
    "the user can control the mesh adaptivity process : * @ifiadapt is a boolean to choose to adapt the mesh of the initial field .",
    "default value : 1 .",
    "* @erradapti is the error in the mesh adaptation of the initial field .",
    "this parameter is used by the freefem function adaptmesh in 2d or mshmet in 3d .",
    "default value : 0.01 in 3d and 0.1 in 2d .",
    "* @ifradapt is a boolean to choose to adapt the mesh during the computation .",
    "default value : 1 .",
    "* @hminad is the minimal size of an edge in the new mesh .",
    "default value : 0.001 .",
    "* @hmaxad is the maximal size of an edge in the new mesh .",
    "default value : 1 .",
    "* @erradapt is the error in the mesh adaptation .",
    "it does change during a computation with sobolev gradient method .",
    "if the ipopt method is used for the computation , it corresponds to the parameter @xmath146 in ( [ eq - algo - ipopt ] ) .",
    "default value : 0.01 in 3d and 0.1 in 2d for sobolev gradient method and 0.008 in 3d and 0.005 in 2d for ipopt method .",
    "* @anisoadapt is a real value .",
    "if @anisoadapt @xmath211 , the mesh adaptation will be anisotropic and the ration between the size of the smallest and the biggest edges of each triangle will be bounded by @anisoadapt .",
    "default value : 10",
    "the following parameters are needed for the mesh adaptation in the sobolev gradient method only : * @epsad1 is the first value of the @xmath84 relative error the user wants to reach to make a mesh adaptation (= @xmath212 in [ sec - mesh - adapt ] ) .",
    "default value : 1e-2 .",
    "* @epsadmin is the last stage (= @xmath213 in [ sec - mesh - adapt ] ) .",
    "default value : 1e-9 .",
    "* @ipassal is the number of times a mesh adaptation is performed before changing the value of epsad1 ( @xmath214 in [ sec - mesh - adapt ] ) .",
    "default value : 2 .",
    "* @epsadstep is a factor to change the value of epsad1 .",
    "default value : 2 .",
    "* @iteradapt is the maximum number of iterations between two mesh adaptations . if @xmath215 , we do nt use this criterion .",
    "default value : 0",
    "the last parameters are for the mesh adaptation in ipopt method : * @niadapt is the number of times a mesh adaptation is performed with the same error @xmath216 ( see [ eq - algo - ipopt ] ) .",
    "default value : 1 .",
    "* @nbadapt is the total number of mesh adaptations made during the computation ( @xmath144 in [ eq - algo - ipopt ] ) .",
    "default value : 6 in 3d and 4 in 2d .",
    "* @maerr1 is the initial error in mesh adaptation ( @xmath145 in [ eq - algo - ipopt ] ) .",
    "default value : 0.01 .      when a computation starts , the _ output _ directory is created .",
    "it contains a directory , whose name includes the prefix ( defined by the parameter @dircase ) , the form of potential and the chosen method .",
    "this directory will contain an _",
    ".echo _ file with a summary of the main parameters , informations on the run , names of the output files , final energy and the cpu time .",
    "_ file will contain a gnuplot script that the user can run to plot the evolution of the energy , the error , the angular momentum or the @xmath84 norm of the solution .",
    "the _ .mesh _ and _ .rst _ file contains the mesh and the solution respectively",
    ". they can be used as a restart field . finally",
    ", the _ .tec _ or _ .vtk _ files contain the solution for a given iteration ( defined by the parameters iterplot ) in the format _",
    "tecplot _ or _",
    "to simplify the understanding of parameter files , some examples are provided in the directory _",
    "examples_. a user interface was implemented using the * glut * library @xcite to run these examples or to run the toolbox with predefined parameter files . in this section ,",
    "we first present the examples files and some results of computations .",
    "then , we focus on the use of the glut user interface .      the examples for 2d computations use two forms of the trapping potential .",
    "for each case , the use of both scalings and numerical methods is possible .    1 .",
    "the first case is the harmonic potential with @xmath217 ( see [ eq - scal - trap - ax ] ) , @xmath218 ( see eq .",
    "[ eq - scal - cg ] ) and @xmath219 ( see eq .",
    "[ eq - scal - com ] ) .",
    "we start with an initial approximation made with ipopt axisymmetric and we add one manufactured off - centred vortex , as in figure [ fig-2d - adapt](a ) . the final state we reach is a bec with one central vortex as in figure [ fig-2d - adapt](b ) . to run this example ,",
    "the following files from the directory _ examples _ have to be used : * _ ar_harm_physic_param.dat _ or _ classical_harm_physic_param.dat _ for the physical parameters , depending on which scaling is chosen , * _ ipopt_harm_run_param.dat _ or _",
    "grads_harm_run_param.dat _ for the computation parameters , depending on which method is chosen .",
    "2 .   the second case is a combined quartic / quadratic potential with @xmath220 ( see eq .",
    "[ eq - scal - trap - ax ] ) , @xmath218 and @xmath221 .",
    "we start with an initial approximation made with ipopt axisymmetric and we add a circle of manufactured vortices , as in figure [ fig-2d - example](a ) .",
    "both methods reach a bec with eleven vortices organised into an abrikosov lattice as shown in figures [ fig-2d - example](b ) and [ fig-2d - example](c ) . to run this example",
    ", the following files must be selected by the user in the directory _ examples _ : * _ ar_quart_physic_param.dat _ or _ classical_quart_physic_param.dat _ for the physical parameters , * _ ipopt_quart_run_param.dat _ or _",
    "grads_quart_run_param.dat _ for the chosen method .    in figures [ fig2dlat ] and [ fig2dgiant ] ,",
    "we provide two results with the same quartic+quadratic potential as in the 2d example illustrated in figure [ fig-2d - example ] : @xmath222 . in the case illustrated in figure",
    "[ fig2dlat ] , we set the rotation speed to @xmath223 and increase the non - linear constant @xmath198 from @xmath224 to @xmath225 .",
    "when this constant increases , the condensate becomes larger and the number of vortices increases significantly .",
    "they arrange in a triangular abrikosov lattice .",
    "the files used to perform this simulation are provided in the directory _ input _ as _ bec_2d_physic_param_latt.dat _ and _ bec_2d_run_param_latt.dat_.     and different values of the non - linear interaction constant : @xmath226 . ]    in the case of figure [ fig2dgiant ] , the non - linear constant @xmath218 is fixed and the rotation speed @xmath227 increases from @xmath228 to @xmath229 . the condensate is larger when the rotation speed increases and a giant vortex appears at the centre of the condensate .",
    "this case was simulated in @xcite .",
    "the size of the computational domain increases as the rotation speed increases .",
    "this illustrates the need of the use of the thomas - fermi approximation to estimate the size of the domain .     and",
    "different values of the rotation frequency : @xmath230 . ]",
    "the files used to perform this simulation are provided in the directory _ input _ under the names _ bec_2d_physic_param_giant.dat _ and _",
    "bec_2d_run_param_giant.dat_.          two examples with harmonic trapping potential with @xmath231 ( see eq .",
    "[ eq - scal - trap - ax ] ) , @xmath232 and @xmath219 are provided for 3d computations .",
    "they correspond to numerical tests used in @xcite .",
    "these tests have shown that , with the same physical parameters , one can get different final meta - stable states , by starting from different initial states . in the first case , illustrated in figure [ fig-3d - example](a ) , the computation starts with an axisymmetric approximation with a manufactured u - shaped vortex added at the centre .",
    "the final state , reached with both the sobolev gradient method and the ipopt method , presents a bended vortex with a u shape . in the second case of figure [ fig-3d - example](b ) , we start with an axisymmetric approximation with a manufactured central vortex with a s shape .",
    "the final converged state keeps a s - shaped vortex when using both numerical methods .",
    "according to @xcite the s - shaped vortices is a local minima of the energy .",
    "we conclude that both methods converge to the local minimum which is the closest to the initial guess provided .",
    "the input files used for these examples are provided in the directory _ examples _ as :    * _ vortexu_physic_param.dat _ and _ vortexs_physic_param.dat _ for the physical parameters , * _ vortexu_grads_run_param.dat _ and _ vortexu_ipopt_run_param.dat _ for the computation parameters of the u - shaped vortex case , * _ vortexs_grads_run_param.dat _ and _ vortexs_ipopt_run_param.dat _ for the computation parameters of the s - shaped vortex case .    the result shown in figure [ fig3dgiant ]",
    "was obtained using physical parameters from @xcite : @xmath233 ( see [ eq - scal - trap - ax ] ) , and @xmath221 .",
    "the ground state displays a giant vortex surrounded by eleven singly - quantized vortices .",
    "this simulation was carried out using ipopt for a quartic - minus - quadratic potential .",
    "the files used to perform this simulation are provided in the directory _ input _ as : _",
    "bec_3d_physic_param_giant.dat _ and + _",
    "bec_3d_run_param_ipopt_giant.dat_.     and @xmath221 . ]",
    "figure [ fig3dlattice ] illustrates other possible vortex states that can be obtained .",
    "an anisotropic harmonic potential with @xmath234 ( see [ eq - scal - trap - ax ] ) , and @xmath235 was used .",
    "the computation resulted in an abrikosov lattice with 31 vortices in 3d .",
    "the anisotropy makes the condensate to take an elongated shape following the x - axis .",
    "the files used to perform this simulation are provided in the directory _ input _ as : _",
    "bec_3d_physic_param_aniso.dat _ and _",
    "bec_3d_run_param_ipopt_aniso.dat_.     and @xmath235.,scaledwidth=90.0% ]      a simple user interface was made in c++ with the glut tool of the opengl library .",
    "the c++ source code for this interface is in the directory glut .",
    "it can be compiled using the makefile provided with the toolbox .",
    "this interface allows the user to easily run the examples or to run the toolbox using any modified input file .",
    "the screen capture of the interface in 3d is shown in figure [ figinter ] .",
    "on the top left corner one can see a terminal from which was run the executable `` runtoolbox '' .",
    "the window on the top right corner of figure [ figinter ] appears . by clicking on the right button of the mouse ,",
    "a pull - down menu allows the user to run the toolbox with one of the three example files provided , or using the input files from the _ input _ directory",
    ". then a gnuplot window appears plotting the evolution of the energy during the run .",
    "this window is on the bottom right corner of figure [ figinter ] .",
    "finally the bottom left corner of figure [ figinter ] shows the 3d solution plotted with medit .",
    "the user can also decide to plot it with the usual graphical interface of freefem++ .        in 2d , there are three menus to choose one of the examples previously described :    1 .",
    "_ potential _ allows to choose between the harmonic ( _ harm _ ) or the quartic+quadratic ( _ quart _ ) trapping potential example .",
    "method _ allows to choose between the ipopt ( _ ipopt _ ) or the sobolev gradient ( _ grads _ ) method .",
    "scaling _ allows to choose between the aftalion riviere ( _ ar _ ) or the classical scaling .    in the last menu ( _ run _ ) , the user can run either the selected example ( _ run example _ ) or run the toolbox with the input files which are in the _ input _ directory ( _ run input _ ) .",
    "we provide with this paper a finite - element software for 2d and 3d computation of stationary solutions of the gross - pitaevskii equation .",
    "the user has the choice between two robust and optimised numerical methods : a steepest descent method based on sobolev gradients and a minimization algorithm based on the state - of - the - art optimization library ipopt . for both methods ,",
    "mesh adaptivity strategies are implemented to reduce the computational time and increase the local spatial accuracy when vortices are present . the numerical system is tested and validated through various cases representing 2d and 3d configurations of bose - einstein condensates in rotation .",
    "a particular attention was paid to the physical interpretation of the computations .",
    "the main parameters of the run can be prescribed either in non - dimensional or physical form .",
    "thomas - fermi approximations are derived as closed formulae for a more accurate description of the initial field for the minimization procedures .",
    "energy and angular momentum are tracked during the computation and post - processing tools allow to identify quantized vortices in the final , equilibrium state .",
    "an optional graphical user interface is also provided with the software .",
    "it allows to easily run predefined cases or with user - defined parameter files .",
    "the programs were written as a toolbox to be used within the free software freefem++ .",
    "this offers the advantage that all technical issues related to the implementation of the finite element method are hidden , allowing to focus on numerical algorithms and their performance .",
    "automatic mesh generators , powerful mesh adaptivity functions and the availability of various types of finite elements with complex functions are the main features making freefem++ very appealing in implementing numerical methods for schrdinger type equations .",
    "the toolbox distributed with this paper is extremely versatile and can be easily adapted to deal with different physical models .",
    "a natural extension of this toolbox is the simulation of the time - dependent gross - pitaevskii equation : this is an ongoing work and will be reported in a further contribution .",
    "this work was supported by the french anr grant anr-12-monu-0007 - 01 becasim ( modles numriques call ) .",
    "we would like to acknowledge the use of computational resources provided by crihan ( centre de ressources informatiques de haute - normandie , france ) under the project 2015001 .",
    "we derive in this appendix closed relationships for the thomas - fermi approximation for different types of trapping potentials ( quartic @xmath236 quadratic ) .",
    "the thomas - fermi density ( [ eq - scal - tf ] ) can be rewritten using ( [ eq - scal - ctrap - eff ] ) as : @xmath237 we recall that @xmath54 for the classical scaling using the oscillator length @xmath38 as length scale .",
    "the constant @xmath238 will be determined by imposing the unitary norm constraint ( [ eq - scal - cons ] ) .",
    "we derive below different formulas for @xmath238 corresponding to the effective trapping potential ( [ eq - scal - trap - v ] ) .",
    "we drop in the following the tilde notation .      for this case , the effective trapping potential ( [ eq - scal - trap - v ] ) is reduced to @xmath239 the unitary norm constraint ( [ eq - scal - cons ] ) becomes @xmath240 to calculate @xmath241 analytically , we use the change of variables : @xmath242 , \\,\\ ,",
    "\\theta\\in [ 0 , 2\\pi],\\ ] ] and @xmath243 finally , the constant @xmath244 is expressed as : @xmath245 and the dimensions of the condensate follow : @xmath246      same analysis for the potential @xmath247 the constraint becomes @xmath248 to calculate @xmath241 analytically , wa use the change of variables : @xmath249\\\\ \\vspace{0.2 cm } \\theta & \\in & \\displaystyle [ 0 , \\pi]\\\\ \\phi & \\in & \\displaystyle [ 0 , 2\\pi ] \\end{array } \\right.\\ ] ] and @xmath250 finally , the constant @xmath244 is expressed as : @xmath251 and the dimensions of the condensate follow : @xmath252      we consider that the trap has radial symmetry ( @xmath253 ) and the trapping potential is @xmath254 note that @xmath255 , but @xmath256 can be either positive ( quartic+quadratic potential ) or negative ( quartic - quadratic potential ) .",
    "the border of the condensate is defined by the radius @xmath161 that satisfies : @xmath257        the constraint becomes in polar coordinates @xmath263 : @xmath264 or @xmath265 = \\frac{\\pi r^4}{6}\\left(3 a_2 + 4 a_4 r^2\\right).\\ ] ] consequently , we first have to calculate the root @xmath266 of the non - linear equation ( by a newton method by example ) : @xmath267 and then calculate @xmath268 the radius of the condensate is finally given by @xmath269 .        *",
    "if @xmath260 , has only one root @xmath261 , and the computation of @xmath244 is the same as above .",
    "we also infer that this case occurs when : @xmath271 * if @xmath272 , has two roots @xmath273 and the integration will be carried for @xmath274 $ ] ( there is a hole in the center of the condensate ) : @xmath275 or @xmath276\\ ] ] and using @xmath277 we obtain that @xmath278 and finally @xmath279 = \\frac{1}{4 a_4}\\left[\\left(a_4 ^ 2 a_\\eta\\right)^{2/3 } - a_2 ^ 2\\right].\\ ] ] since @xmath272 , this occurs if @xmath280        @xmath282 \\\\",
    "\\vspace{0.2 cm } \\mbox{$\\bullet$ else}\\\\   \\vspace{0.2 cm } \\mbox{calculate the root $ \\eta>0 $ of:}\\\\ \\vspace{0.2 cm } \\displaystyle f(\\eta)=4 a_4 \\eta^3 + 3 a_2 \\eta^2 - \\frac{6}{\\pi } \\left(c_\\text{s } \\right ) = 0,\\\\ \\vspace{0.2 cm }",
    "\\mbox{and then calculate}\\\\ \\displaystyle \\rho_{0 } = a_2 r^2 + a_4 r^4 \\end{array } \\right.\\\\ -- > \\mbox{compute the maximum radius of the condensate}\\\\ \\vspace{0.2 cm } \\displaystyle r_+ = \\left(\\frac{-a_2 + \\sqrt{a_2 ^ 2 + 4\\rho_{0 } a_4}}{2 a_4}\\right)^{1/2}. \\end{array}\\ ] ]      we consider a trapping potential with radial symmetry ( @xmath253 ) : @xmath283 note that @xmath284 , but @xmath256 can be either positive ( quartic+quadratic potential ) or negative ( quartic - quadratic potential ) .",
    "the border of the condensate is defined by : @xmath285      in this case , @xmath287 and we infer from that @xmath260 and it exists a single root @xmath288 which is the radius of the condensate in the central plane ( @xmath289 ) : @xmath290 consequently , the condensate extends in the central plane from @xmath291 to @xmath292 . using the @xmath16symmetry of the condensate",
    ", we calculate in cylindrical coordinates @xmath293 or using : @xmath294^{3/2 } rdr\\end{aligned}\\ ] ]    it is useful to calculate the integral @xmath295 after elementary integration by parts , we obtain : @xmath296 or in the more useful form : @xmath297.\\ ] ] we also notice that : @xmath298 using now the notation @xmath299 and the change of variables @xmath300 our integral becomes : @xmath301 introducing the parameter : @xmath302 and using and , we finally obtain : @xmath303,\\\\ & = & \\displaystyle \\frac{4\\pi}{3\\sqrt{a_z a_4 } } \\lambda^4 \\left[\\frac{3}{8}\\arccos\\frac{\\eta}{\\sqrt{1+\\eta^2 } } -\\frac{3}{8 } \\frac{\\eta}{1+\\eta^2 } -\\frac{1}{4 } \\frac{\\eta}{(1+\\eta^2)^2 } \\right].\\end{aligned}\\ ] ] using that : @xmath304 we obtain a non - linear equation in @xmath305 : @xmath306,\\\\ & = & \\frac{\\pi a_2 ^ 4}{a_z^{1/2}\\ , ( 4 a_4)^{5/2 } } \\frac{1}{\\eta^4 } \\left[(1+\\eta^2)^2 \\arccos\\frac{\\eta}{\\sqrt{1+\\eta^2 } } -\\eta^3 -\\frac{5}{3 } \\eta \\right].\\end{aligned}\\ ] ]          the integration is carried exactly in the same manner , the difference coming from the limits of the integration following @xmath314 .",
    "we obtain @xmath315 with @xmath316 .",
    "finally @xmath317 and @xmath318 @xmath319        * if @xmath272 , the condensate has a hole . we infer from that there are two roots @xmath321 @xmath322 and the condensate extends in central plane from @xmath323 to @xmath324 .",
    "+ the integration is carried exactly in the same manner , the difference coming from the limits of the integration following @xmath314 .",
    "we obtain @xmath325 and finally @xmath326 the value of @xmath244 results as : @xmath327 since @xmath272 , this case is obtained if : @xmath328 the dimensions of the condensate are @xmath329 @xmath330 * if @xmath260 , the condensate has only a depletion centered around @xmath289 ( the density profile has not any more the maximum at @xmath289 ) .",
    "this case occurs when : @xmath331 the computation is the same as for the case of `` quartic + quadratic '' potential , with the difference that the root @xmath305 is now negative . in particular @xmath332          a.",
    "minguzzi , s.  succi , f.  toschi , m.  p. tosi , p.  vignolo , numerical methods for atomic quantum gases with applications to bose - einstein condensates and to ultracold fermions , physics reports 395 ( 2004 ) 223355 .",
    "w.  bao , ground states and dynamics of rotating bose - einstein condensates , in p.  g. kevrekidis , d.  j. frantzeskakis , r.  carretero - gonzlez ( eds . ) , transport phenomena and kinetic theory : applications to gases , semiconductors , photos , and biological systems , series modeling and simulation in science , engineering and technology , birkhauser , 2006 , pp . 215255 .",
    "r.  p. tiwari , a.  shukla , a basis - set based fortran program to solve the gross - pitaevskii equation for dilute bose gases in harmonic and anharmonic traps , computer physics communications 174  ( 12 ) ( 2006 ) 966982 .",
    "d.  vudragovi , i.  vidanovi , a.  balaz , p.  muruganandam , s.  k. adhikari , c programs for solving the time - dependent gross - pitaevskii equation in a fully anisotropic trap , computer physics communications 183  ( 9 ) ( 2012 ) 2021  2025 .",
    "r.  caplan , nlsemagic : nonlinear schrdinger equation multi - dimensional matlab - based gpu - accelerated integrators using compact high - order schemes , computer physics communications 184  ( 4 ) ( 2013 ) 12501271 .                      c.  d. c.  dapogny , p.  frey , three - dimensional adaptive domain remeshing , implicit domain meshing , and applications to free and moving boundary problems , journal of computational physics 262 , pp .",
    "358 - 378 .",
    "h.  borouchaki , m.  j. castro - diaz , p.  l. george , f.  hecht , b.  mohammadi , anisotropic adaptive mesh generation in two dimensions for cfd , in : 5th inter .",
    "conf . on numerical grid generation in computational field simulations ,",
    "mississipi state univ . , 1996 ."
  ],
  "abstract_text": [
    "<S> we present a new numerical system using classical finite elements with mesh adaptivity for computing stationary solutions of the gross - pitaevskii equation . </S>",
    "<S> the programs are written as a toolbox for freefem++ ( www.freefem.org ) , a free finite - element software available for all existing operating systems . </S>",
    "<S> this offers the advantage to hide all technical issues related to the implementation of the finite element method , allowing to easily implement various numerical algorithms.two robust and optimised numerical methods were implemented to minimize the gross - pitaevskii energy : a steepest descent method based on sobolev gradients and a minimization algorithm based on the state - of - the - art optimization library ipopt . for both methods , </S>",
    "<S> mesh adaptivity strategies are implemented to reduce the computational time and increase the local spatial accuracy when vortices are present . </S>",
    "<S> different run cases are made available for 2d and 3d configurations of bose - einstein condensates in rotation . </S>",
    "<S> an optional graphical user interface is also provided , allowing to easily run predefined cases or with user - defined parameter files . </S>",
    "<S> we also provide several post - processing tools ( like the identification of quantized vortices ) that could help in extracting physical features from the simulations . </S>",
    "<S> the toolbox is extremely versatile and can be easily adapted to deal with different physical models .    </S>",
    "<S> freefem++ , ipopt , gross - pitaevskii , bose - einstein , finite element , mesh adaptivity , sobolev gradient .    * programm summary * + _ program title : _ gpfem + _ catalogue identifier : _ </S>",
    "<S> + _ program summary url : _ + _ program obtainable from : _ </S>",
    "<S> + _ licensing provisions : _ standard cpc licence , http://cpc.cs.qub.ac.uk/licence/licence.html + _ no . of lines in distributed program , including test data , etc . : </S>",
    "<S> _ 49177 + _ no . of bytes in distributed program , </S>",
    "<S> including test data , etc . : </S>",
    "<S> _ 450969 + _ distribution format : _ </S>",
    "<S> tar.gz + _ programming language : _ freefem++ ( free software , www.freefem.org ) + _ computer : _ pc , mac , super - computer . </S>",
    "<S> + _ operating system : _ windows , mac os , linux . </S>",
    "<S> + _ classification : _ 2.7 , 4.9 , 7.7 . </S>",
    "<S> + _ nature of problem : _ the software computes 2d or 3d stationary solutions of the gross - pitaevskii equation with rotation . the main application is the computation of different types of vortex states ( abrikosov vortex lattice , giant vortex ) in rotating bose - einstein condensates . </S>",
    "<S> the software can be easily modified to take into account different related physical models . </S>",
    "<S> + _ solution method : _ the user has the choice between two robust and optimised numerical methods for the direct minimization of the gross - pitaevskii energy : a steepest descent method based on sobolev gradients and a minimization algorithm based on the state - of - the - art optimization library ipopt </S>",
    "<S> . for both methods , mesh adaptivity strategies are implemented to reduce the computational time and increase the local spatial accuracy when vortices are present . + _ running time : _ </S>",
    "<S> + from minutes for 2d configurations to hours for 3d cases ( on a personal laptop ) . </S>",
    "<S> complex 3d cases ( with hundreds of vortices ) may require several days of computational time . </S>"
  ]
}
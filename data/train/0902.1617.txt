{
  "article_text": [
    "a bipartite graph @xmath16 with vertex set @xmath17 and edge set @xmath18 is said to be regular if every vertex has the same degree @xmath0 .",
    "we use @xmath19 to denote the number of edges in @xmath20 and @xmath8 to represent the number of vertices in @xmath21 ( as a consequence of regularity , @xmath21 and @xmath22 have the same size ) .",
    "regular bipartite graphs are a fundamental combinatorial object , and arise , among other things , in expander constructions , scheduling , routing in switch fabrics , and task - assignment  @xcite .",
    "a regular bipartite graph of degree @xmath0 can be decomposed into exactly @xmath0 perfect matchings , a fact that is an easy consequence of hall s theorem  @xcite , and is closely related to the birkhoff - von neumann decomposition of a doubly stochastic matrix  @xcite .",
    "finding a matching in a regular bipartite graph is a well - studied problem , starting with the algorithm of knig in 1916  @xcite , which is now known to run in time @xmath23 .",
    "the well - known bipartite matching algorithm of hopcroft and karp  @xcite can be used to obtain a running time of @xmath24 . in graphs where @xmath0 is a power of 2",
    ", the following elegant idea , due to gabow and kariv  @xcite , leads to an algorithm with @xmath4 running time .",
    "first , compute an euler tour of the graph ( in time @xmath4 ) and then follow this tour in an arbitrary direction .",
    "exactly half the edges will go from left to right ; these form a regular bipartite graph of degree @xmath25 .",
    "the total running time @xmath26 thus follows the recurrence @xmath27 which yields @xmath28 . extending this idea to the general case proved quite hard , and after a series of improvements ( eg . by cole and hopcroft  @xcite , and",
    "then by schrijver  @xcite to @xmath29 ) , cole , ost , and schirra  @xcite gave an @xmath4 algorithm for the case of general @xmath0 .",
    "their main interest was in edge coloring of general bipartite graphs , where finding perfect matchings in regular bipartite graphs is an important subroutine .",
    "very recently , goel , kapralov , and khanna  @xcite , gave a sampling - based algorithm that computes a perfect matching in @xmath0-regular bipartite graphs in @xmath5 expected time , an expression that is bounded by @xmath6 .",
    "the algorithm of  @xcite uses uniform sampling to reduce the number of edges in the input graph while preserving a perfect matching , and then runs the hopcroft - karp algorithm on the sampled graph .",
    "[ [ our - results - and - techniques ] ] our results and techniques : + + + + + + + + + + + + + + + + + + + + + + + + + + +    we present a significantly faster algorithm for finding perfect matchings in regular bipartite graphs .",
    "there is an @xmath30 expected time algorithm to find a perfect matching in a @xmath0-regular bipartite graph @xmath20 .    as a function of @xmath8 alone ,",
    "the running time stated above is @xmath31 . since the @xmath4 running time is guaranteed by the algorithm of cole , ost , and schirra , we are only concerned with the case where @xmath0 is @xmath32 . for this regime , our algorithm reduces the perfect matching problem on a regular bipartite graph @xmath20 to the same problem on a ( not necessarily regular ) sparse bipartite graph @xmath33 with @xmath10 edges .",
    "this reduction takes time @xmath34 .",
    "we then use the hopcroft - karp algorithm on @xmath33 to recover a perfect matching .",
    "a black - box use of the analysis of the hopcroft - karp algorithm would suggest a running time of @xmath35 .",
    "however , we show that the final sampled graph has some special structure that guarantees that the hopcroft - karp algorithm would complete in time @xmath36 whp .    for every pair @xmath37 , we define a _ witness set _",
    "@xmath38 to be the set of all edges going from @xmath39 to @xmath40 . of particular interest",
    "are what we call _ hall witness sets _ , which correspond to @xmath41 ; the well - known hall s theorem  @xcite says that a bipartite graph @xmath42 contains a perfect matching iff @xmath43 includes an edge from each hall witness set . thus any approach that reduces the size of the input bipartite graph by sampling must ensure that some edge from every hall witness set is included in the sampled graph ; otherwise the sampled graph no longer contains a perfect matching .",
    "goel , kapralov , and khanna  @xcite showed that no _ uniform sampling _ scheme on a @xmath0-regular bipartite graph can reduce the number of edges to @xmath44 while preserving a perfect matching , and hence their @xmath6-time algorithm is the best possible running time achievable via uniform sampling followed by a black - box invocation of the hopcroft - karp analysis .    in order to get past this barrier ,",
    "we use here a two - stage sampling process .",
    "the first stage is a uniform sampling ( along the lines of  @xcite ) which generates a reduced - size graph @xmath45 that preserves not only a perfect matching but also a key relationship between the sizes of `` relevant '' witness sets and cuts in the graph @xmath20 . the second stage is to run the non - uniform benczr - karger sampling scheme  @xcite on @xmath46 to generate a graph @xmath47 with @xmath48 edges while preserving a perfect matching w.h.p .",
    "since this step requires @xmath49 time , we crucially rely on the fact that @xmath46 does not contain too many edges .    while our algorithm is easy to state and understand , the proof of correctness is quite involved .",
    "the benczr - karger sampling was developed to generate , for any graph , a weighted subgraph with @xmath48 edges that approximately preserves the size of all cuts in the original graph . the central idea underlying",
    "our result is to show that there exists a collection of _ core _ witness sets that can be identified in an almost one - one manner with cuts in the graph such that the probability mass of edges in each witness set is comparable to the probability mass of the edges in the cut identified with it .",
    "further , every witness set in the graph has a `` representative '' in this collection of core witness sets .",
    "informally , this allows us to employ cut - preserving sampling schemes such as benczr - karger as `` witness - preserving '' schemes .",
    "we note here that the natural mapping which assigns the witness set of a pair @xmath50 to the cut edges associated with this pair can map arbitrarily many witness sets to the same cut and is not useful for our purposes .",
    "one of our contributions is an uncrossing theorem for witness sets , that we refer to as the _ proportionate uncrossing theorem_. informally speaking , it says that given any collection of witness sets @xmath51 such that the probability mass of each witness set is comparable to that of its associated cut , there exists another collection @xmath52 of witness sets such that ( i ) the natural mapping to cuts as defined above is _ half - injective _ for @xmath52 , that is , at most two witness sets in @xmath52 map to any given cut , ( ii ) the probability mass of each witness set is comparable to the probability mass of its associated cut , and ( iii ) any subset of edges that hits every witness set in @xmath52 also hits every witness set in @xmath51 .",
    "the collection @xmath52 is referred to as a proportional uncrossing of @xmath51 . as shown in figure  [ fig : cross](a ) , we can not achieve an injective mapping , and hence the half - injectivity is unavoidable .",
    "we believe the half - injective correspondence between witness sets and cuts , as facilitated by the proportionate uncrossing theorem , is of independent interest , and will perhaps have other applications in this space of problems .",
    "we also emphasize here that the uncrossing theorem holds for all bipartite graphs , and not only regular bipartite graphs . indeed",
    ", the graph @xmath46 on which we invoke this theorem does not inherit the regularity property of the original graph @xmath20 .",
    "as another illustrative example , consider the celebrated birkhoff - von neumann theorem  @xcite which says that every doubly stochastic matrix can be expressed as a convex combination of permutation matrices ( i.e. , perfect matchings ) . in some applications , it is of interest to do an iterative decomposition whereby a single matching is recovered in each iteration .",
    "the best - known bound for this problem , to our knowledge , is an @xmath53 time algorithm that follows from the work of gabow and kariv  @xcite ; here @xmath54 denotes the maximum number of bits needed to express any entry in @xmath55 .",
    "the following theorem is an easy consequence of our proportionate uncrossing result .",
    "[ thm : bvn ] given an @xmath13 doubly - stochastic matrix @xmath55 with @xmath14 non - zero entries , one can find a perfect matching in the support of @xmath55 in @xmath56 expected time .",
    "the proof of this theorem and a discussion of known results about this problem are given in section  [ sec : bvn ] .",
    "though this result itself represents only a modest improvement over the earlier @xmath53 running time , it is an instructive illustration of the utility of the proportionate uncrossing theorem .",
    "it is worth noting that while the analysis of goel , kapralov , and khanna was along broadly similar lines ( sample edges from the original graph , followed by running the hopcroft - karp algorithm ) , the proportionate uncrossing theorem developed in this paper requires significant new ideas and is crucial to incorporating the non - uniform sampling stage into our algorithm .",
    "further , the running time of the hopcroft - karp algorithm is easily seen to be @xmath57 even for the 2-regular graph consisting of @xmath58 disjoint cycles of lengths @xmath59 respectively ; the stronger analysis for our special case requires both our uncrossing theorem as well as a stronger decomposition . as a step in this analysis , we prove the independently interesting fact that after sampling edges from a @xmath0-regular bipartite graph with rate @xmath60 , for some suitable constant @xmath61 , we obtain a graph that has a matching of size @xmath62 whp and such a matching can be found in @xmath63 augmenting phases of the hopcroft - karp algorithm whp .    [ [ organization ] ] organization : + + + + + + + + + + + + +    section  [ sec : prelim ] reviews and presents some useful corollaries of relevant earlier work . in section  [ sec :",
    "proportion ] , we establish the proportionate uncrossing theorem . in section  [ sec : algo ] , we present and analyze our two - stage sampling scheme , and section  [ sec : improved - runtime ] outlines the stronger analysis of the hopcroft - karp algorithm for our special case . section  [ sec : bvn ] contains the proof of theorem [ thm : bvn ] and a discussion of known results on finding perfect matchings in the support of double stochastic matrices .",
    "in this section , we adapt and present recent results of goel , kapralov , and khanna  @xcite as well as the benczr - karger sampling theorem  @xcite for our purposes , and also prove a simple technical lemma for later use .",
    "let @xmath64 be a regular bipartite graph , with vertex set @xmath65 and edge set @xmath66 .",
    "consider any partition of @xmath21 into @xmath67 sets @xmath68 , and a partition of @xmath22 into @xmath69 .",
    "let @xmath70 denote the ( not necessarily regular ) bipartite graph @xmath71 where @xmath72 .",
    "we will call this a `` decomposition '' of @xmath20 .    given @xmath73 and @xmath74 , define the witness set corresponding to the pair @xmath50 , denoted @xmath38 , as the set of all edges between @xmath39 and @xmath40 , and define the cut @xmath75 as the set of all edges between @xmath76 and @xmath77 .",
    "the rest of the definitions in this section are with respect to some arbitrary but fixed decomposition of @xmath20 .",
    "an edge @xmath78 is relevant if @xmath79 for some @xmath80 .",
    "let @xmath81 be the set of all relevant edges .",
    "a pair @xmath50 is said to be relevant if    1 .",
    "@xmath82 and @xmath83 for some @xmath80 , 2 .",
    "@xmath41 , and 3 .",
    "there does not exist another @xmath84 , @xmath85 , such that @xmath86 , @xmath87 , and @xmath88 .",
    "informally , a relevant pair is one which is contained completely within a single piece in the decomposition , and is `` minimal '' with respect to that piece . the following lemma is implicit in  @xcite and is proved in appendix  [ append : relevant - only ] for completeness .",
    "[ lem : relevant - only ] let @xmath51 denote all relevant pairs @xmath50 with respect to a decomposition of @xmath89 , and let @xmath81 denote all relevant edges .",
    "consider any graph @xmath90 .",
    "if for all @xmath91 , we have @xmath92 , then @xmath93 has a perfect matching .",
    "the benczr - karger sampling theorem  @xcite shows that for any graph , a relatively small _ non - uniform _ edge sampling rate suffices to ensure that every cut in the graph is hit by the sampled edges ( i.e. it has a non - empty intersection ) with high probability .",
    "the sampling rate used for each edge @xmath94 inversely depends on its strength , as defined below .",
    "[ sec : benczur - karger ]    @xcite a @xmath67-strong component of a graph @xmath33 is a maximal vertex - induced subgraph of @xmath33 with edge - connectivity @xmath67 .",
    "the strength of an edge @xmath94 in a graph @xmath33 is the maximum value of @xmath67 such that a @xmath67-strong component contains @xmath94 .    given a graph @xmath95 ,",
    "let @xmath96 } = ( v , e_{[j]})$ ] denote the subgraph of @xmath33 restricted to edges of strength @xmath97 or higher , where @xmath97 is some integer in @xmath98 .",
    "it is easy to see that whenever a cut in a graph @xmath99 contains an edge of strength @xmath67 , then the cut must contain at least @xmath67 edges .",
    "furthermore , for any @xmath100 , each connected component of graph @xmath96}$ ] is contained inside some connected component of @xmath101}$ ] .",
    "the benczr - karger theorem utilizes these properties to show that it suffices to sample each edge @xmath94 with probability @xmath102 .",
    "we now extend this sampling result to any collection of edge - sets for which there exists an injection ( one - one mapping ) to cuts of comparable inverse strengths .",
    "the statement of our theorem  [ thm : benczur - karger ] closely mirrors the benczr - karger sampling theorem , and the proof is also along the same general lines . however , the proof does not follow from the benczr - karger sampling theorem in a black - box fashion , so a proof is provided in appendix [ append : bk ]    [ thm : benczur - karger ] let @xmath99 be any graph on @xmath8 vertices , and let @xmath103 denote the set of all possible edge cuts in @xmath33 , and @xmath104 $ ] be a constant .",
    "let @xmath105 be a subgraph of @xmath33 obtained by sampling each edge @xmath94 in @xmath33 with probability @xmath106 where @xmath107 denotes the strength of edge @xmath94 , and @xmath61 is a suitably large constant .",
    "further , let @xmath108 be a collection of subset of edges , and let @xmath109 be a one - one ( not necessarily onto ) mapping from @xmath108 to @xmath110 satisfying @xmath111 for all @xmath112 .",
    "then @xmath113 \\leq \\frac{1}{n^2}.\\ ] ]    the result below from  @xcite bounds the number of edges chosen by the sampling in theorem  [ thm : benczur - karger ] .",
    "[ thm : benczur - karger2 ] let @xmath99 be any graph on @xmath8 vertices , and let @xmath105 be a subgraph of @xmath33 obtained by sampling each edge @xmath94 in @xmath33 with probability @xmath114 where @xmath107 denotes the strength of edge @xmath94 , and @xmath61 is any constant .",
    "then with probability at least @xmath115 , the graph @xmath105 contains at most @xmath116 edges , where @xmath117 is another suitably large constant .",
    "we conclude with a simple property of integer multisets that we will use later .",
    "a similar statement was used in @xcite ( lemma 4.5 ) . a proof is provided in appendix  [ append : strength ] for completeness .",
    "[ lem : strength ] let @xmath118 and @xmath119 be two arbitrary multisets of positive integers such that @xmath120 for some @xmath121 .",
    "then there exists an integer @xmath97 such that @xmath122",
    "consider a bipartite graph @xmath64 , with a non - negative weight function @xmath123 defined on the edges .",
    "assume further that we are given a set of `` relevant edges '' @xmath124 .",
    "we can extend the definition of @xmath123 to sets of edges , so that @xmath125 , where @xmath126 .",
    "[ def : gamma_thick ] for any @xmath127 and @xmath37 , the pair @xmath50 is said to be @xmath128-thick with respect to @xmath129 if @xmath130 , _ i.e. _ , the total weight of the relevant edges in @xmath38 is _ strictly _ more than @xmath128 times the total weight of @xmath75 . a set of pairs @xmath131 where each @xmath132 and each @xmath133 is said to be a @xmath128-thick collection with respect to @xmath129 if every pair @xmath134 is @xmath128-thick .",
    "the quantities @xmath135 and @xmath81 will be fixed for this section , and for brevity , we will omit the phrase `` with respect to @xmath129 '' in the rest of this section .    before defining proportionate uncrossings of witness sets",
    ", we will informally point out the motivation for doing so . if a pair @xmath50 is @xmath128-thick for some constant @xmath128 , and if we know that a sampling process where edge @xmath94 is chosen with probability @xmath123 chooses some edge from @xmath75 with high probability , then increasing the sampling probability by a factor of @xmath136 should result in some relevant edge from @xmath38 being chosen with high probability as well , a fact that would be very useful in the rest of this paper .",
    "the sampling sub - routines that we employ in the rest of this paper are analyzed by using union - bound over all cuts , and in order to apply the same union bound , it would be useful if each witness set were to correspond to a unique cut .",
    "however , in figure  [ fig : cross](a ) , we show two pairs @xmath50 and @xmath137 which are both @xmath138-thick but correspond to the same cut ; we call this a `` crossing '' of the pairs @xmath50 and @xmath137 , drawing intuition from the figure .",
    "in general , we can have many witness sets that map to the same cut .",
    "we would like to `` uncross '' these witness sets by finding subsets of each witness set that map to unique cuts , but there is no way to uncross figure  [ fig : cross](a ) in this fashion .",
    "fortunately , and somewhat surprisingly , this is the worst case : any collection of @xmath128-thick pairs can be uncrossed into another collection such that all the pairs in the new collection are also @xmath128-thick ( hence the term proportionate uncrossing ) , every original witness set has a representative in this new collection , and no more than two new pairs have the same cut .",
    "figure  [ fig : cross](b ) shows two @xmath139-thick pairs that can be uncrossed using a single @xmath139-thick representative , @xmath140 . we will spend the rest of this section formalizing the notion of proportionate uncrossings and proving their existence .",
    "the uncrossing process is algorithmically inefficient , but we only need to demonstrate existence for the purpose of this paper .",
    "the arguments in this section represent the primary technical contribution of this paper ; these arguments apply to bipartite graphs in general ( not necessarily regular ) , and may be independently interesting .",
    "-thick pairs @xmath50 and @xmath137 that have different witness sets but the same cut ( i.e. @xmath141 but @xmath142 ) .",
    "the pairs in ( a ) can not be uncrossed , whereas the pairs in ( b ) can be uncrossed by choosing the single pair @xmath140 as a representative.,height=172 ]      [ define : uncross ] a @xmath128-uncrossing of a @xmath128-thick collection @xmath51 is another @xmath128-thick collection of pairs @xmath52 that satisfies the three properties below :    p1 : : :    for every pair @xmath91 there exists a    pair @xmath143 such that @xmath144 ,    and @xmath145 .",
    "we will refer to @xmath146 as a representative    of @xmath50 .",
    "p2 : :    for every @xmath147 , there exists    @xmath148 such that    @xmath149 . p3 : : :    _ ( half - injectivity ) : _ there can not be three distinct pairs    @xmath150 and @xmath151 in    @xmath52 such that @xmath152 .",
    "since @xmath52 has the same ( or larger ) thickness as the thickness guarantee that we had for @xmath51 , it seems appropriate to refer to @xmath52 as a proportionate uncrossing of @xmath51 .",
    "[ define : partial ] a @xmath128-partial - uncrossing of a @xmath128-thick collection @xmath51 is another @xmath128-thick collection of pairs @xmath52 which satisfies properties p1,p2 above but not necessarily p3 .",
    "the following three lemmas follow immediately from the two definitions above , and it will be useful to state them explicitly . informally , the first says that every collection is its own partial uncrossing , the second says that uncrossings can be composed , and the third says that the union of the partial uncrossings of two collections is a partial uncrossing of the union of the collections .",
    "[ lem : self - uncross ] if @xmath51 is a @xmath128-thick collection , then @xmath51 is a @xmath128-partial uncrossing of itself .",
    "[ lem : compose ] if @xmath153 is a @xmath128-partial uncrossing of a @xmath128-thick collection @xmath51 , and @xmath52 is a @xmath128-uncrossing of @xmath153 , then @xmath52 is also a @xmath128-uncrossing of @xmath51 .",
    "[ lem : union ] if @xmath154 and @xmath155 are two @xmath128-thick connections , @xmath156 is a @xmath128-partial - uncrossing of @xmath154 , and @xmath157 is a @xmath128-partial - uncrossing of @xmath155 , then @xmath158 is a @xmath128-partial - uncrossing of @xmath159 .      the main technical result of this section is the following :    [ thm : uncross ] for every @xmath128-thick collection @xmath51 , there exists a @xmath128-uncrossing of @xmath51 .",
    "the proof is via induction over the `` largest cut '' corresponding to any pair in the collection @xmath51 ; each inductive step `` uncrosses '' the witness sets which corresponds to this largest cut . before proving this theorem ,",
    "we need to provide several useful definitions and also establish a key lemma .",
    "define some total ordering @xmath160 over all subsets of @xmath161 which respects set cardinality , so that if @xmath162 then @xmath163 . overload notation to use @xmath164 to denote the set of cuts @xmath165}. analogously , use @xmath166 to denote the set of witness sets corresponding to pairs in @xmath51 . since @xmath75 may be equal to @xmath167 for @xmath168 , it is possible that @xmath169 may be smaller than @xmath170 .",
    "in fact , if @xmath51 and @xmath169 are equal , then @xmath51 is its own @xmath128-uncrossing and the theorem is trivially true .",
    "similarly , it is possible that @xmath38 is equal to @xmath171 for two different pairs @xmath50 and @xmath146 in @xmath51 . however , suppose @xmath172 and @xmath173 for two different pairs @xmath50 and @xmath146 in @xmath51 . in this case",
    ", we can remove one of the two pairs from the collection to obtain a new collection @xmath174 ; it is easy to see that a @xmath128-uncrossing of @xmath174 is also a @xmath128-uncrossing of @xmath51 .",
    "so we will assume without loss of generality that for any two pairs @xmath50 and @xmath146 in @xmath51 , either @xmath175 or @xmath176 ; we will call this the _ non - redundancy _ assumption .",
    "we will now prove a key lemma which contains the meat of the uncrossing argument .",
    "when we use this lemma later in the proof of theorem  [ thm : uncross ] , we will only use the fact that there exists a @xmath128-partial - uncrossing of @xmath51 , where @xmath51 satisfies the preconditions of the lemma .",
    "however , the stronger claim of existence of a @xmath128-uncrossing does not require much additional work and appears to be an interesting graph theoretic argument in its own right , so we prove this stronger claim .",
    "[ lem : uncross ] if @xmath51 is a @xmath128-thick collection such that @xmath177 , @xmath51 satisfies the non - redundancy assumption , and @xmath164 contains a single set @xmath178 , then there exists a @xmath128-uncrossing @xmath52 of @xmath51 .",
    "further , for every pair @xmath179 , we have @xmath180 .",
    "let @xmath181 .",
    "since @xmath182 for all @xmath80 , we know by the non - redundancy assumption that @xmath183 for @xmath184 .",
    "we break the proof down into multiple stages .    1 .",
    "_ definition of venn witnesses and venn cuts .",
    "_ for any @xmath185-dimensional bit - vector @xmath186 , define @xmath187 + we overload notation and use @xmath188 to denote the witness set @xmath189 and @xmath190 to denote the cut set @xmath191 .",
    "a node @xmath192 belongs to @xmath193 if it is in every set @xmath194 such that @xmath195 and not in any of the sets @xmath194 for which @xmath196 .",
    "thus , each @xmath193 corresponds to one of the regions in the venn diagram of the sets @xmath197 , and the analogous statement holds for each @xmath198 .",
    "hence , we will refer to the sets @xmath188 and @xmath190 as the venn - witness and the venn - cut for @xmath54 , respectively , and refer to the pair @xmath199 as a venn pair . also , we will use @xmath200 to refer to a vector which differs from @xmath54 in every bit .",
    "2 .   _ the special structure of venn witnesses and venn cuts . _ consider an edge @xmath201 that goes out of @xmath193 .",
    "suppose that edge goes to @xmath202 where @xmath203 and @xmath204 .",
    "then there must exist @xmath205 such that @xmath206 and @xmath207 . since @xmath206 , either @xmath208 ( if @xmath209 ) or @xmath210 ( if @xmath211 ) . in either case",
    "the edge @xmath201 does not belong to the cut @xmath212 , and since all pairs in @xmath51 have the same cut @xmath178 , we conclude that @xmath213 . on the other hand , since @xmath207 , either @xmath214 ( if @xmath215 ) or @xmath216 ( if @xmath217 ) . in either case",
    "the edge @xmath201 belongs to the cut @xmath218 and hence to @xmath178 , which is a contradiction .",
    "thus , _ any edge from @xmath193 goes to either @xmath198 or @xmath219_. + if the edge @xmath201 goes to @xmath198 then it does not belong to any witness set in @xmath166 , any venn witness set , any venn cut , or @xmath178 .",
    "if @xmath201 goes to @xmath219 then it belongs to @xmath178 , to the venn witness set @xmath188 , to the venn cuts @xmath190 and @xmath220 , and to no other venn witness set or venn cut .",
    "this edge also belongs to @xmath221 for all @xmath80 such that @xmath222 .",
    "these observations , and the definitions of venn witnesses , cuts , and pairs easily lead to the following consequences : @xmath223 @xmath224 @xmath225 @xmath226 @xmath227 and finally , @xmath228 3 .   _",
    "the collection @xmath52 . _",
    "define @xmath52 to consist of all @xmath128-thick venn pairs @xmath229 where @xmath54 is not the all zero vector .",
    "proving that @xmath52 is a @xmath128-uncrossing of @xmath51 . _ * ( p1 ) : * fix some @xmath230 .",
    "since @xmath51 is a @xmath128-thick collection , it follows from the definition that @xmath231 must be a @xmath128-thick pair . from equations  [ eq : venn - witness - union ] and  [ eq : venn - witness - disjoint ] , we know that @xmath232 .",
    "we also know , from equations  [ eq : venn - cut - disjoint ] and  [ eq : venn - cut - union ] , that @xmath233 . hence , there must be some @xmath234 such that @xmath222 and @xmath199 is @xmath128-thick , which in turn implies that @xmath199 is in @xmath52 .",
    "this is the representative of @xmath235 and hence @xmath52 satisfies p1 .",
    "* ( p2 ) : * this follows trivially from equation  [ eq : venn - cut - union ] . * ( p3 ) : * from equation  [ eq : venn - cut - disjoint ] we know that there are only two possible venn pairs ( specifically , @xmath199 and @xmath236 ) that have the same non - empty cut @xmath190 .",
    "observe that our definition of @xmath128-thickness involves `` strict inequality '' , and hence venn pairs where the venn witness set and the venn cut are both empty ca nt be @xmath128-thick and ca nt be in @xmath52 .",
    "_ proving that @xmath237 for all pairs @xmath238 . _",
    "any cut @xmath239 is of the form @xmath190 for some @xmath185-dimensional bit vector @xmath54 .",
    "each @xmath240 , from equation  [ eq : venn - cut - union ] .",
    "we will now show that this containment is strict .",
    "suppose not , _",
    "i.e. _ , there exists some @xmath241 . by equation  [ eq : venn - cut - symmetry ] , @xmath242 as well .",
    "since @xmath243 , either @xmath54 or @xmath244 must have two bits that are set to 1 ; without loss of generality , assume that @xmath245 . from equations  [ eq : venn - witness - disjoint ] and  [ eq : venn - witness - cut ] , we know that @xmath190 ( and hence @xmath178 ) is the disjoint union of @xmath188 and @xmath246 . any edge in @xmath188 must belong to both @xmath247 and @xmath248 , whereas any edge in @xmath246 can not belong to either @xmath247 or @xmath248 .",
    "hence , @xmath249 which contradicts the non - redundancy assumption on @xmath51 .",
    "therefore , we must have @xmath250 . @xmath251    theorem  [ thm : uncross ] the proof will be by induction over the largest set in @xmath164 according to the ordering @xmath160 .",
    "let @xmath252 denote this largest set .",
    "for the base case , suppose @xmath252 is the smallest set @xmath178 under the ordering @xmath160",
    ". then @xmath178 must be singleton , @xmath164 must have just a single set @xmath178 , and @xmath166 must also have a single witness set , which must be the same as @xmath178 since @xmath51 is @xmath128-thick . by the non - redundancy assumption , @xmath51 must have at most one pair , and is its own @xmath128-uncrossing",
    ".    for the inductive step , consider any possible cut @xmath178 and assume that the theorem is true when @xmath253 .",
    "we will show that the theorem is also true when @xmath254 , which will complete the inductive proof .",
    "suppose there is a unique @xmath91 such that @xmath255 .",
    "intuitively , one would expect this to be the easy case , since there is no `` uncrossing '' to be done for @xmath178 , and indeed , this case is quite straightforward .",
    "define @xmath256 .",
    "let @xmath257 denote a @xmath128-uncrossing of @xmath51 , which is guaranteed to exist by the inductive hypothesis .",
    "since @xmath257 is @xmath128-thick , so is @xmath258 .",
    "the pair @xmath50 clearly has a representative in @xmath52 ( itself ) , and any @xmath259 has a representative in @xmath257 and hence also in @xmath52 .",
    "thus , @xmath52 satisfies property p1 for being a @xmath128-uncrossing of @xmath51 .",
    "every set in @xmath260 is a subset of some cut in @xmath261 ( by property p2 ) and @xmath75 is also in @xmath164 , and hence @xmath52 satisfies property p2 for being a @xmath128-uncrossing of @xmath51 .",
    "every set in @xmath257 is smaller than @xmath75 according to @xmath160 and @xmath257 satisfies property p3 .",
    "hence , @xmath52 also satisfies property p3 .",
    "thus , @xmath52 is a @xmath128-uncrossing of @xmath51 . if there are exactly two distinct pairs @xmath50 and @xmath146 in @xmath51 such that @xmath262 , then the same argument works again , except that @xmath263 and @xmath264 .",
    "we now need to tackle the most interesting case of the inductive step , where there are more than two pairs in @xmath51 that correspond to the same cut @xmath178 .",
    "write @xmath265 where @xmath266 for all @xmath267 and @xmath268 for all @xmath269 .",
    "recall that for two different pairs @xmath50 and @xmath146 in @xmath155 , we must have @xmath175 by the non - redundancy assumption . from lemma  [ lem :",
    "uncross ] , there exists a @xmath128-partial - uncrossing , say @xmath270 , of @xmath155 with the property that for every set @xmath271 , we have @xmath272 , and hence @xmath273 . by lemma  [ lem : self - uncross ] , we know that @xmath154 is its own @xmath128-partial - uncrossing .",
    "further , by definition of @xmath154 , every set @xmath274 must satisfy @xmath273 .",
    "define @xmath275 . by lemma  [ lem : union ]",
    ", @xmath153 is a @xmath128-partial - uncrossing of @xmath159 , _",
    "i.e. _ , of @xmath51 .",
    "further , for every cut @xmath276 , we have @xmath277 .",
    "hence , by our inductive hypothesis , there exists a @xmath128-uncrossing of @xmath153 ; let @xmath52 be a @xmath128-uncrossing of @xmath153 .",
    "by lemma  [ lem : compose ] , @xmath52 is also a @xmath128-uncrossing of @xmath51 , which completes the inductive proof .",
    "[ rm : other - approach ] an alternate approach to relating cuts and witness sets is to suitably modify the proof of the benczr - karger sampling theorem , circumventing the need for the proportionate uncrossing theorem .",
    "the idea is based on the observation that karger s sampling theorem also holds for vertex cuts in graphs .",
    "since benczr - karger sampling theorem is proved using multiple invocations of karger s sampling theorem , it is possible to set up a correspondence between cuts and witness sets using a vertex - cut version of the benczr - karger sampling theorem .",
    "however , we prefer to use here the approach based on the proportionate uncrossing theorem as it is an interesting combinatorial statement in its own right .",
    "we present here an @xmath11 time randomized algorithm to find a perfect matching in a given @xmath0-regular bipartite graph @xmath89 on @xmath1 vertices . throughout this section ,",
    "we follow the convention that for any pair @xmath50 , the sets @xmath75 and @xmath38 are defined with respect to the graph @xmath20 .",
    "our starting point is the following theorem , established by goel , kapralov , and khanna  @xcite corresponds to theorem 2.3 in  @xcite , part 2 is proved as part of the proof of theorem 2.1 in  @xcite , and part 3 combines remark 2.5 in  @xcite with karger s sampling theorem  @xcite . ]",
    "[ thm : gkk09 ] let @xmath89 be a @xmath0-regular bipartite graph , @xmath278 any number in @xmath279 , and @xmath61 a suitably large constant that depends on @xmath278 . there",
    "_ exists _ a decomposition of @xmath20 into @xmath280 vertex - disjoint bipartite graphs , say @xmath281 , such that    1 .",
    "each @xmath70 contains at least @xmath25 perfect matchings , and the minimum cut in each @xmath70 is @xmath282 .",
    "2 .   let @xmath51 denote the set of relevant pairs with respect to this decomposition , and @xmath81 denote the set of relevant edges .",
    "then for each @xmath50 in @xmath51 , we have @xmath283 .",
    "3 .   let @xmath284 be a random graph generated by sampling the edges of @xmath20 _ uniformly _ at random with probability @xmath285 .",
    "then with probability at least @xmath286 , for every pair @xmath287 , @xmath288    the last condition above says that in addition to all cuts , all relevant witness edge sets are also preserved to within @xmath289 of their expected value in @xmath46 , with high probability .",
    "we emphasize here that the decomposition highlighted in theorem  [ thm : gkk09 ] will be used only in the analysis of our algorithm ; the algorithm itself is oblivious to this decomposition .",
    "our algorithm consists of the following three steps .",
    "( s1 ) : :    generate a random graph @xmath45 by sampling edges of    @xmath20 _ uniformly _ at random with probability    @xmath290 where @xmath291 is a    constant as in theorem  [ thm : gkk09 ] .",
    "we choose @xmath278 to be any fixed    constant not larger than @xmath292 .",
    "( s2 ) : :    the graph @xmath46 contains    @xmath293 edges w.h.p .",
    "we now run the    benczr - karger sampling algorithm  @xcite that takes    @xmath294 time to compute the strength    @xmath107 of every edge @xmath94 , and samples each edge    @xmath94 with probability @xmath295 ; ,    but this only affects the running time and the number of edges sampled    by a constant factor . ] here @xmath295 is as given by    theorem  [ thm : benczur - karger ] with @xmath296 .",
    "we show below that w.h.p .",
    "the graph    @xmath297 obtained from this sampling    contains a perfect matching .",
    "( s3 ) : :    finally , we run the hopcroft - karp algorithm to obtain a maximum    cardinality matching in @xmath298 in    @xmath299 time since by    theorem  [ thm : benczur - karger2 ] , @xmath298 contains    @xmath300 edges w.h.p .",
    "[ [ running - time ] ] running time : + + + + + + + + + + + + +    with high probability , the running time of this algorithm is bounded by @xmath301 .",
    "since we can always use the algorithm of cole , ost , and schirra  @xcite instead , the final running time is @xmath302 .",
    "this reduces to @xmath4 if @xmath303 ; to @xmath304 when @xmath305 ; and to at most @xmath31 in the narrow range @xmath306 .",
    "[ [ correctness ] ] correctness : + + + + + + + + + + + +    to prove correctness , we need to show that @xmath298 contains a perfect matching w.h.p .",
    "[ thm : correctness ] the graph @xmath298 contains a perfect matching with probability @xmath307 .    consider the decomposition defined in theorem  [ thm : gkk09 ] .",
    "let @xmath51 denote the set of relevant pairs with respect to this decomposition , and let @xmath81 denote the set of all relevant edges with respect to this decomposition .",
    "we will now focus on proving that , with high probability , for every @xmath91 , @xmath308 ; by lemma  [ lem : relevant - only ] , this is sufficient to prove the theorem .    for convenience , define @xmath309 and @xmath310 .",
    "assume for now that the low - probability event in theorem  [ thm : gkk09 ] does not occur .",
    "thus , by choosing @xmath311 , we know that for @xmath312 , every relevant pair @xmath91 satisfies @xmath313    let @xmath314 denote the strength of @xmath94 in @xmath46 . recall that @xmath315}=(v , e'_{[j]})$ ] is the graph with the same vertex set as @xmath46 but consisting of only those edges in @xmath316 which have strength at least @xmath97 .",
    "define @xmath317}(a , b)$ ] to be the set of all edges in @xmath318}$ ] ; define @xmath319}(a , b)$ ] analogously .",
    "define @xmath320 . since @xmath321 , by lemma  [ lem : strength ]",
    ", there must exist a @xmath97 such that @xmath322 which implies that @xmath50 is @xmath128-thick with respect to @xmath323 } , t , e_r)$ ] , as defined in definition  [ def : gamma_thick ] .",
    "partition @xmath51 into @xmath324}$ ] , @xmath325 } , \\ldots , { { \\mathcal r}}_{[n]}$ ] , such that if @xmath326}$ ] then @xmath50 is @xmath128-thick with respect to @xmath323 } , t , e_r)$ ] , breaking ties arbitrarily if @xmath50 can belong to multiple @xmath327}$ ] . consider an arbitrary non - empty @xmath327}$ ] .",
    "let @xmath52 represent a @xmath128-uncrossing of @xmath327}$ ] , as guaranteed by theorem  [ thm : uncross ] . by property p3 ,",
    "no three pairs in a @xmath128-uncrossing can have the same cut ; partition @xmath52 into @xmath156 and @xmath157 such that every pair @xmath328 has a unique cut @xmath319}(a , b)$ ] and the same holds for @xmath157 .",
    "we focus on @xmath156 for now . for any @xmath329 ,",
    "define @xmath330}(a , b)\\cap e_r$ ] .",
    "define @xmath331 .",
    "for any @xmath332 , define @xmath333}(a , b)$ ] for some arbitrary @xmath334 such that @xmath335 .",
    "the function @xmath109 is one - one by construction , and since @xmath50 is @xmath128-thick , we know that @xmath336 .",
    "thus , @xmath108 satisfies the preconditions of theorem  [ thm : benczur - karger ] .",
    "further , the sampling probability @xmath295 in step * ( s2 ) * of the algorithm is chosen to correspond to @xmath337 .",
    "thus , with probability at least @xmath338 , @xmath339 is non - empty for all @xmath332 , _",
    "i.e. _ , @xmath317}(a , b ) \\cap e_r \\cap    e^{''}\\neq \\emptyset$ ] for all @xmath328 .",
    "since @xmath315}$ ] is a subgraph of @xmath46 , we can conclude that @xmath340 for all @xmath328 with probability at least @xmath338 .",
    "since the analogous argument holds for @xmath157 , we obtain @xmath341 for all @xmath342 with probability at least @xmath343 . since @xmath52 is a @xmath128-uncrossing of @xmath327}$ ]",
    ", we use property p1 to conclude that @xmath344 for all @xmath345}$ ] , again with probability at least @xmath343 . applying the union bound over all @xmath97 ,",
    "we further conclude that @xmath346 for all @xmath91 with probability at least @xmath347 . as mentioned before",
    ", this suffices to prove that @xmath298 has a perfect matching with probability at least @xmath347 , by lemma  [ lem : relevant - only ] .",
    "we assumed that condition 3 in theorem  [ thm : gkk09 ] is satisfied ; this is violated with probability at most @xmath348 , which proves that @xmath298 has a perfect matching with probability at least @xmath349 .",
    "as presented above , the algorithm takes time @xmath350 with high probability , and outputs a perfect matching with probability @xmath351 .",
    "we conclude with two simple observations . first .",
    "it is easy to convert this into a monte carlo algorithm with a worst case running - time of @xmath352 , or a las vegas algorithm with an expected running - time of @xmath352 . if either the sampling process in steps * ( s1 ) * or * ( s2 ) * returns too many edges , or step * ( s3 ) * does not produce a perfect matching , then ( a ) abort the computation to get a monte carlo algorithm , or ( b ) run the @xmath4 time algorithm of cole , ost , and schirra  @xcite to get a las vegas algorithm .",
    "second , by choosing larger constants during steps * ( s1 ) * and * ( s2 ) * , it is easy to amplify the success probability to be at least @xmath353 for any fixed @xmath354 .",
    "in this section we give an improved analysis of the runtime of the hopcroft - karp algorithm on the subsampled graph , ultimately leading to a bound of @xmath355 for our algorithm .",
    "the main ingredients of our analysis are ( 1 ) a decomposition of the graph @xmath20 into @xmath63 vertex - disjoint @xmath356-edge - connected subgraphs , ( 2 ) a modification of the uncrossing argument that reveals properties of sufficiently unbalanced witness sets in the sampled graph obtained in step * s2 * , and ( 3 ) an upper bound on length of the shortest augmentating path in the sampled graph relative to any matching of size smaller than @xmath357 .      theorem [ thm : ss ] below , which we state for general bipartite graphs , requires a variant of the uncrossing theorem that we formulate now .",
    "we introduce the definition of combinatorial uncrossings :    [ define : comp - uncross ] let @xmath51 be any collection of pairs @xmath358 .",
    "a combinatorial uncrossing of @xmath51 is a tuple @xmath359 , where @xmath52 is another collection and @xmath360 is a mapping from @xmath51 to subsets of @xmath52 , such that the following properties are satisfied :    q1 : : :    for all @xmath361    +    1 .",
    "@xmath362    are disjoint ;    2 .",
    "@xmath363    are disjoint ;    3 .",
    "@xmath364    are disjoint ;    4 .",
    "@xmath365 for all    @xmath366 ;    5 .",
    "@xmath367 q2 : : :    ( half - injectivity ) there can not be three distinct pairs    @xmath368 in    @xmath52 such that    @xmath369 .    the proof of existence of combinatorial uncrossings is along the lines of the proof of existence of @xmath128-thick uncrossings , so we omit it here .    for a graph @xmath33",
    "we denote @xmath370 and @xmath371 , and omit the subscript when the underlying graph is fixed .",
    "[ thm : ss ] let @xmath93 be a graph obtained by sampling edges uniformly at random with probability @xmath372 from a bipartite graph @xmath373 on @xmath1 vertices with a minimum cut of size @xmath374 .",
    "then there exists a constant @xmath375 such that for all @xmath376 if @xmath377 then w.h.p . for all @xmath378 , and @xmath379",
    ", we have @xmath380    define @xmath51 as the set of pairs @xmath381 .",
    "denote a combinatorial uncrossing of @xmath51 by @xmath359 .",
    "we first prove the statement for pairs from @xmath52 , and then extend it to pairs from @xmath51 to obtain the desired result .",
    "consider a pair @xmath382 .",
    "denote @xmath383 .",
    "we shall write @xmath384 and @xmath385 instead of @xmath386 and @xmath387 in what follows for brevity .",
    "we have by chernoff bounds that for a given pair @xmath382 @xmath388<\\exp\\left[-\\left(\\frac{{{\\epsilon}}|c(a , b)|}{|w(a , b)|}\\right)^2 \\frac{p|w(a , b)|}{2 } \\right]\\\\ \\leq \\exp\\left[-{{\\epsilon}}^2 \\left ( \\frac{p|c(a , b)|}{2 } \\right ) \\right ] \\end{split}\\ ] ] since @xmath389 .",
    "since @xmath52 satisfies q2 , we get that @xmath390\\\\ & < \\sum_{w(a , b)\\in w({{\\mathcal t } } ) } \\exp\\left[-{{\\epsilon}}^2 p|c(a , b)|/2\\right]\\leq 2\\sum_{c(a , b)\\in c({{\\mathcal t } } ) } \\exp\\left[-{{\\epsilon}}^2 p|c(a , b)|/2\\right]=o(n^{-r } ) \\end{split}\\ ] ] for @xmath391 by corollary 2.4 in @xcite .",
    "this implies that for @xmath392 we have with probability @xmath393 for all @xmath382 latexmath:[\\[\\label{ab - bound }     now consider any pair @xmath361 .",
    "summing over all @xmath395 and using properties q1.1 - 5 , we get @xmath396 for all @xmath361 as required .",
    "corollary [ cor : unbalanced - ws ] , which relates the size of sufficiently unbalanced witness sets in the sampled graph to the size of the corresponding cuts is the main result of this subsection .",
    "it follows from theorem  [ thm : ss ] and a stronger ( than  @xcite ) decomposition of bipartite @xmath0-regular graphs that we outline now .",
    "[ thm : decomposition ] any @xmath0-regular graph @xmath20 with @xmath1 vertices can be decomposed into vertex - disjoint induced subgraphs @xmath397 , where @xmath398 , that satisfy the following properties :    1 .",
    "the minimum cut in each @xmath70 is at least @xmath399 .",
    "2 .   @xmath400 .    to prove theorem [ thm : decomposition ] , we give a procedure that decomposes the graph @xmath20 into vertex - disjoint induced subgraphs @xmath401 , @xmath402 , @xmath398 such that the min - cut in @xmath403 is at least @xmath399 and at most @xmath8 edges run between pieces of the decomposition .",
    "the procedure is as follows .",
    "initialize @xmath404 , and set @xmath405 .    1 .",
    "find a smallest proper subset @xmath406 such that @xmath407 .",
    "if no such set exists , define @xmath70 to be the graph @xmath408 and terminate .",
    "2 .   define @xmath70 to be the subgraph of @xmath408 induced by vertices in @xmath409 , i.e. @xmath410 . also , define @xmath411 to be the graph @xmath408 with vertices from @xmath409 removed .",
    "increment @xmath80 and go to step 1 .",
    "we now prove that the output of the decomposition procedure satisfies the properties claimed above .",
    "[ lm : mincut ] the min - cut in @xmath70 is greater than @xmath399 .    if @xmath70 contains a single vertex the min - cut is infinite by definition , so we assume wlog that @xmath70 contains at least two vertices .",
    "the proof is essentially the same as the proof of property * p1 * of the decomposition procedure in @xcite ( see theorem 2.4 ) .",
    "suppose that there exists a cut @xmath412 in @xmath70 where @xmath413 and @xmath414 , such that @xmath415 ( note that it is possible that @xmath416 and @xmath417 ) .",
    "we have @xmath418 by the choice of @xmath409 in ( 1 ) .",
    "suppose without loss of generality that @xmath419 . then @xmath420 and @xmath421 , which contradicts the choice of @xmath409 as the smallest cut of value at most @xmath422 in step ( 1 ) of the procedure .",
    "[ lm : edges - removed ] the number of steps in the decomposition procedure is @xmath423 , and at most @xmath8 edges are removed in the process .",
    "we call a vertex @xmath424 _ bad _ if its degree in @xmath70 is smaller than @xmath25",
    ". note that for each @xmath425 either @xmath70 contains a bad vertex or @xmath426 .",
    "note that since strictly fewer than @xmath422 edges are removed in each iteration , the number of bad vertices created in the first @xmath97 iterations is strictly less than @xmath427 .",
    "hence , during at least half of the @xmath97 iterations at least @xmath0 vertices were removed from the graph , i.e. @xmath428 this implies that the process terminates in at most @xmath429 steps , and the number of edges removed is at most @xmath430 .",
    "theorem [ thm : decomposition ] the proof follows by putting together lemmas [ lm : mincut ] and [ lm : edges - removed ] .",
    "we overload notation here by denoting @xmath431 for @xmath37 .",
    "the main result of this subsection is    [ cor : unbalanced - ws ] let @xmath432 be a graph obtained by sampling the edges of a @xmath0-regular bipartite graph @xmath373 on @xmath1 vertices independently with probability @xmath372 .",
    "there exists a constant @xmath375 such that if @xmath433 then whp for all pairs @xmath358 , @xmath434 one has that @xmath435 for all @xmath436 .",
    "in particular , @xmath93 contains a matching of size at least @xmath357 whp .",
    "set @xmath437 , where @xmath438 are the pieces of the decomposition obtained in section [ subsec : decomp ] . for each @xmath231",
    "such that @xmath70 is not an isolated vertex we have by lemma [ lm : mincut ] and theorem [ thm : ss ] @xmath439 if @xmath70 is an isolated vertex , we have @xmath440 .",
    "since the latter estimate is stronger than the former , we shall not consider the isolated vertices separately in what follows .",
    "adding these inequalities over all @xmath80 we get @xmath441 denote the set of edges removed during the decomposition process by @xmath442 .",
    "denote @xmath443 and @xmath444 .",
    "since @xmath445 and @xmath446 , this implies @xmath447 likewise , since @xmath448 , we have @xmath449 since @xmath434 , we have @xmath450 , so @xmath451 by similar arguments @xmath452 , i.e. @xmath453 .",
    "hence , we have @xmath454 which implies @xmath455 for @xmath436 .",
    "this completes the proof .",
    "[ rmk : logd ] the result in corollary [ cor : unbalanced - ws ] is tight up to an @xmath456 factor for @xmath457 .    the following construction gives a lower bound of @xmath458 .",
    "denote by @xmath459 the graph from theorem 4.1 in @xcite and denote by @xmath460 a graph obtained by sampling edges of @xmath459 at the rate of @xmath461 for a constant @xmath375 .",
    "define the graph @xmath20 as @xmath0 disjoint copies of @xmath462 , and denote the sampled graph by @xmath93 .",
    "note that by theorem 4.1 the maximum matching in each copy of @xmath463 has size at most @xmath464 whp , and since the number of vertices in @xmath20 is @xmath465 , the maximum matching in @xmath93 has size at most @xmath466 whp .      in this section",
    "we derive a bound on the runtime of the hopcroft - karp algorithm on the subsampled graph obtained in step * s2 * of our algorithm .",
    "the main object of our analysis is the alternating level graph , which we now define .",
    "given a partial matching of a graph @xmath373 , the alternating level graph is defined inductively .",
    "define sets @xmath467 and @xmath468 , @xmath469 as follows .",
    "let @xmath470 be the set of unmatched vertices in @xmath21 and let @xmath471 .",
    "then let @xmath472 , where @xmath473 is the set of neighbours of vertices in @xmath474 , and let @xmath467 be the set of vertices matched to vertices from @xmath468 .",
    "the construction terminates when either @xmath475 contains an unmatched vertex or when @xmath476 , and then we set @xmath477 .",
    "we use the notation @xmath478 .",
    "we now give an outline of the hopcroft - karp algorithm for convenience of the reader .",
    "given a non - maximum matching , the algorithm starts by constructing the alternating level graph described above and stops when an unmatched vertex is found .",
    "then the algorithm finds a maximal set of vertex - disjoint augmenting paths of length @xmath479 ( this can be done by depth - first search in @xmath4 time ) and performs the augmentations , thus completing one augmentation phase .",
    "it can be shown that each augmentation phase increases the length of the shortest augmenting path .",
    "standard analysis of the run - time for general bipartite graphs is based on the observation that once @xmath480 augmentations have been performed , the constructed matching necessarily has size at most @xmath480 smaller than the maximum matching .",
    "we denote the graph obtained by sampling edges of @xmath20 independently with probability @xmath481 for a constant @xmath375 by @xmath93 .",
    "note that @xmath93 is obtained from @xmath20 by _ uniform _ sampling .",
    "we will make the connection to non - uniform sampling in theorem [ thm : runtime ]",
    ". for @xmath474 denote the set of edges in the cut @xmath482 in @xmath20 by @xmath483 and the set of edges in the same cut in @xmath93 by @xmath484 .",
    "similarly , we denote the vertex neighbourhood of @xmath39 in @xmath20 by @xmath473 and the vertex neighbourhood in @xmath93 by @xmath485 .",
    "we consider the alternating level graph in @xmath93 and prove that whp for any partial matching of size smaller than @xmath357 for each @xmath486 either @xmath487 or @xmath468 expands by at least a factor of @xmath488 in either forward or backward direction ( @xmath489 or @xmath490 ) .",
    "this implies that @xmath491 , thus yielding the same bound on the length of the shortest augmenting path by virtue of corollary [ cor : unbalanced - ws ] .",
    "the main technical result of this subsection is    [ lm : main ] let the graph @xmath93 be obtained from the bipartite @xmath0-regular graph @xmath20 on @xmath1 vertices by uniform sampling with probability @xmath372 .",
    "there exist constants @xmath492 such that if @xmath493 , then whp for any partial matching in @xmath93 of size smaller than @xmath357 there exists an augmenting path of length @xmath494 .",
    "the following expansion property of the graph @xmath93 will be used to prove lemma [ lm : main ] :    [ lm : expansion ] define @xmath495 . for all @xmath496 there",
    "exists a constant @xmath375 that depends on @xmath123 and @xmath497 such that if @xmath93 is obtained by sampling the edges of @xmath20 independently with probability @xmath498 , then whp for every set @xmath73 , @xmath499 ( resp .",
    "@xmath74 , @xmath500 ) @xmath455    consider a set @xmath73 , @xmath499 . for @xmath501",
    "denote the indicator variable corresponding to the event that at least one edge incident on @xmath54 and going to @xmath39 is sampled by @xmath502 , i.e. @xmath503 . denote the number of edges between @xmath54 and vertices of @xmath39 by @xmath504 .",
    "we have @xmath505=1-(1-p)^{k_b}\\geq 1-\\exp(-k_b p)\\geq k_b p \\gamma(t),\\ ] ] since @xmath506 and @xmath507 for @xmath508 $ ] .",
    "hence , @xmath509\\geq p\\sum_{b\\in b } k_b \\geq p|\\delta(a)| \\gamma(t).\\ ] ]    there are at most @xmath510 subsets @xmath39 of @xmath21 of size @xmath511 and @xmath512 for all @xmath39 , so we obtain using chernoff bounds and the union bound @xmath513<\\sum_{s=1}^n n^s\\exp\\left(-{{\\epsilon}}^2 p d s \\gamma(t)\\right)\\\\ = \\sum_{s=1}^n \\exp\\left(s(1-c \\gamma(t))\\ln n\\right)=o(n^{2-c \\gamma(t ) } ) , \\end{split}\\ ] ] which can be made @xmath514 by choosing @xmath515 for any @xmath516 .",
    "lemma [ lm : main ] first note that since the partial matching is of size strictly less than @xmath357 , by corollary [ cor : unbalanced - ws ] there exists an augmenting path with respect to the partial matching .",
    "in order to upperbound the length of the shortest augmenting path , we will show that for each @xmath97 , at least one of the following is true :    1 .",
    "@xmath517 ; 2 .",
    "@xmath518 ; 3 .",
    "@xmath519 ; 4 .",
    "@xmath520 ; 5 .",
    "@xmath521 .",
    "it then follows that for each @xmath97 there exists @xmath522 such that @xmath523 and @xmath524 .",
    "hence , there can not be more than @xmath525 levels in the alternating level graph , so there always exists an augmenting path of length @xmath494 .    for each @xmath486 , where @xmath479 is the number of levels in the alternating level graph",
    ", we classify the edges leaving @xmath468 into three classes : ( 1 ) @xmath526 contains edges that go to @xmath527 , ( 2 ) @xmath528 contains edges that go to @xmath467 , and ( 3 ) @xmath81 contains edges that go to @xmath529 .",
    "at least one of @xmath530 has at least @xmath531 edges by lemma [ lm : expansion ] .",
    "we now consider each of these possibilities .",
    "* case ( a ) : * first suppose that @xmath532 contains at least @xmath531 edges .",
    "note that since the partial matching has size smaller than @xmath357 by assumption , we have that @xmath533 .",
    "hence , by corollary [ cor : unbalanced - ws ] the number of edges going from @xmath467 to @xmath475 is at least @xmath534    suppose first that @xmath535 .",
    "then by lemma [ lm : expansion ] one has that @xmath536",
    ". let @xmath537 .",
    "observe that since one edge going out of @xmath467 yields at most one neighbor , at most @xmath538 neighbours of vertices of @xmath467 are outside @xmath475 .",
    "setting @xmath539 , we get that @xmath475 contains at least @xmath540 neighbours of @xmath541 , i.e. @xmath542 ( this corresponds to case 3 above ) .",
    "now if @xmath543 , one can find @xmath544 such that @xmath545 and at least @xmath546 edges going out of @xmath547 go to @xmath475 , which implies by the same argument that @xmath548 ( this corresponds to case 2 above ) .    * case ( b ) : * suppose that @xmath528 contains at least @xmath549 edges .",
    "then by the same argument as in the previous paragraph ( after first weakening our estimate to @xmath550 ) we have that @xmath551 if @xmath552 .",
    "this is impossible when @xmath553 since @xmath554 .",
    "hence , @xmath555 by same argument as above , and hence @xmath517 ( this corresponds to case 1 above ) .",
    "* case ( c ) : * suppose that @xmath81 contains at least @xmath549 edges . by the same argument as above we have that either @xmath520 ( this corresponds to case 5 above ) or @xmath556 ( this corresponds to case 4 above ) .",
    "this completes the proof .",
    "we can now prove the main result of this section :    [ thm : runtime ] let the graph @xmath93 be obtained from @xmath20 using steps * s1 * and * s2 * in the algorithm of section [ sec : algo ] .",
    "then step * s3 * takes @xmath557 time whp , giving a time of @xmath558 for the entire algorithm .",
    "we analyze the runtime of step * s3 * in two stages : ( 1 ) finding a matching of size @xmath357 , and ( 2 ) extending the matching of size @xmath357 to a perfect matching .",
    "note that the strength of edges in @xmath46 obtained after * s1 * does not exceed @xmath559 , the maximum degree , with high probability , for a constant @xmath375 .",
    "hence , the combination of sampling uniformly in * s1 * and non - uniformly in * s2 * dominates sampling each edge with probability @xmath560 , so we write @xmath561 , where @xmath562 is obtained from @xmath161 by sampling uniformly with probability @xmath481 for a sufficiently large @xmath375 . the constant @xmath375 can be made sufficiently large so that lemma [ lm : main ] applies by adjusting the constant in the sampling in steps * s1 * and * s2*. denote @xmath432 and note that the proof of lemma [ lm : main ] only uses lower bounds on the number of edges incident to vertices in a given set , as well as the number of vertex neighbours of a set of vertices . hence , since all bounds apply to @xmath93 , the conclusion of the lemma is valid for @xmath47 whp as well , and we conclude that the maximum number of layers in an alternating level graph , and hence the length of the shortest augmenting path , is @xmath563 .",
    "as each augmentation phase takes time proportional to the number of edges in the graph , this implies that the first stage takes @xmath557 .",
    "finally , note that each augmentation phase increases the size of the matching by at least @xmath564 , and thus @xmath63 augmentation suffice to extend the matching constructed in the first stage to a perfect matching .",
    "this takes @xmath565 time , so the runtime is @xmath557 for step * s3 * , and @xmath566 overall .",
    "theorem [ thm : runtime ] as well as lemma [ lm : main ] can be slightly altered to show that the runtime of the hopcroft - karp algorithm on the subsampled graph from @xcite is @xmath567 .",
    "this shows that the approach in @xcite yields an @xmath568 algorithm , which is better than @xmath569 stated in @xcite .",
    "[ thm : lowerbound ] for any function @xmath570 there exists an infinite family of @xmath571-regular graphs with @xmath572 vertices such that whp the algorithm in section [ sec : algo ] performs @xmath573 augmentations in the worst case .    in what follows",
    "we omit the dependence of @xmath0 on @xmath8 for brevity .",
    "define @xmath574 , @xmath575 , to be a @xmath576-regular bipartite graph with @xmath577 .",
    "the graph @xmath20 consists of @xmath123 copies of @xmath578 , which we denote by @xmath579 , where @xmath580 , and @xmath581 vertices @xmath582 and @xmath583 .",
    "each of @xmath582 is connected to all @xmath0 vertices in the @xmath584-part of @xmath585 , and for @xmath586 , the vertex @xmath587 is connected to all vertices in the @xmath588-part of @xmath589 .",
    "the remaining connections are established by adding @xmath590 edge - disjoint perfect matchings between the @xmath588 part of @xmath589 and the @xmath584 part of @xmath591 for all @xmath592 .",
    "set @xmath593 .",
    "note that the strength of edges in @xmath589 is at least @xmath422 , so whp there exists a perfect matching in subgraph of @xmath589 generated by the sampling steps * s1 * and * s2 * , for @xmath594 .",
    "suppose that at the first iteration of the hopcroft - karp algorithm a perfect matching is found in each @xmath589 , thus leaving unmatched the vertices @xmath582 and @xmath583 . then from this point on , the shortest augmenting path for each pair pair @xmath595 has length @xmath97 , and each augmentation phase of the hopcroft - karp algorithm will increase the size of the matching by @xmath564 .",
    "hence , it takes @xmath123 augmentations to find a perfect matching .",
    "the number of vertices is @xmath596 .",
    "an @xmath13 matrix @xmath39 is said to be _ doubly stochastic _ if every element is non - negative , and every row - sum and every column - sum is 1 .",
    "the celebrated birkhoff - von neumann theorem says that every doubly stochastic matrix is a convex combination of permutation matrices ( _ i.e. _ , matchings ) .",
    "surprisingly , the running time of computing this convex combination ( known as a birkhoff - von neumann decomposition ) is typically reported as @xmath597 , even though much better algorithms can be easily obtained using existing techniques or very simple modifications .",
    "we list these running times here since there does not seem to be any published record .",
    "after listing the running times that can be obtained using existing techniques , we will show how proportionate uncrossings can be applied to this problem to obtain a slight improvement .    1 .",
    "an @xmath598-time algorithm for finding a birkhoff - von neumann decomposition can be obtained by finding a perfect matching in the existing graph using augmenting paths ( in time @xmath23 ) , assigning this matching a weight which is the weight of the smallest edge in the matching , subtracting this weight from every edge in the matching ( causing one or more edges to be removed from the support of @xmath39 ) , and continuing the augmenting path algorithm without restarting .",
    "when a matching is found , if we remove @xmath67 edges then we need to find only @xmath67 augmenting paths ( finding each augmenting path takes time @xmath4 ) to find another matching , which leads to a total time of @xmath598 .",
    "2 .   let @xmath54 be the maximum number of significant bits in any entry of @xmath39 .",
    "an @xmath53-time algorithm for finding a single perfect matching in the support of a doubly stochastic matrix can be easily obtained using the technique of gabow and kariv  @xcite : repeatedly find euler tours in edges where the lowest order bit ( say bit @xmath97 ) is 1 , and then increase the weight of all edges going from left to right by @xmath599 and decrease the weight of all edges going from right to left by the same amount , where the directionality of edges corresponds to an arbitrary orientation of the euler tour ; this eliminates bit @xmath97 while preserving the doubly stochastic property and without increasing the support .",
    "3 .   an @xmath600-time algorithm to compute the birkhoff - von neumann decomposition can be obtained using the edge coloring algorithm of gabow and kariv  @xcite .",
    "we now show how our techniques lead to an @xmath601-time algorithm for finding a single perfect matching in the support of a doubly stochastic matrix . in realistic scenarios , this is unlikely to be better than @xmath602 above , and we present this primarily to illustrate another application of our proportionate uncrossing technique .",
    "first , define a weighted bipartite graph @xmath64 , where @xmath603 corresponds to rows of @xmath39 , @xmath604 corresponds to columns of @xmath39 , and @xmath605 iff @xmath606 .",
    "define a weight function @xmath607 on edges , with @xmath608 .",
    "let @xmath51 be the collection of all pairs @xmath609 .",
    "since @xmath39 is doubly stochastic , the collection @xmath51 is @xmath138-thick with respect to @xmath610 . let @xmath52 be a @xmath138-uncrossing of @xmath51 . performing a benczr - karger sampling on @xmath20 will guarantee ( with high probability ) that at least one edge is sampled from every witness set in @xmath611 , and hence running the hopcroft - karp algorithm on the sampled graph will yield a perfect matching with high probability .",
    "the running time of @xmath612 is just the sum of the running times of benczr - karger sampling for weighted graphs  @xcite and the hopcroft - karp matching algorithm  @xcite .",
    "we would like to thank rajat bhattacharjee for many useful discussions on precursors to this work , and michel goemans for suggesting an alternate proof mentioned in remark [ rm : other - approach ] .",
    "10    g.  aggarwal , r.  motwani , d.  shah , and a.  zhu .",
    "switch scheduling via randomized edge coloring . , 2003 .",
    "andrs  a. benczr and david  r. karger . approximating _",
    "s - t _ minimum cuts in @xmath613 time .",
    ", pages 4755 , 1996 .",
    "g.  birkhoff .",
    "tres observaciones sobre el algebra lineal . , 5:147151 , 1946 .",
    "b.  bollobas . .",
    "springer , 1998 .",
    "r.  cole and j.e .",
    "hopcroft . on edge",
    "coloring bipartite graphs .",
    ", 11(3):540546 , 1982 .",
    "r.  cole , k.  ost , and s.  schirra .",
    "edge - coloring bipartite multigraphs in @xmath614 time .",
    ", 21(1):512 , 2001 .",
    "gabow and o.  kariv .",
    "algorithms for edge coloring bipartite graphs and multigraphs . , 11(1):117129 , 1982 .",
    "a.  goel , m.  kapralov , and s.  khanna .",
    "perfect matchings via uniform sampling in regular bipartite graphs . , 2009 .",
    "hopcroft and r.m . karp .",
    "an @xmath615 algorithm for maximum matchings in bipartite graphs .",
    ", 2(4):225231 , 1973 .",
    "d.  karger .",
    "random sampling in cut , flow , and network design problems . , 24(2):383413 , 1999 .    d.  karger and m.  levine .",
    "random sampling in residual graphs .",
    ", 2002 .",
    "david  r. karger and clifford stein .",
    "a new approach to the minimum cut problem .",
    ", 43(4):601640 , 1996 .",
    "d.  knig .",
    "uber graphen und ihre anwendung auf determinententheorie und mengenlehre .",
    ", 77:453465 , 1916 .",
    "r.  motwani .",
    "average - case analysis of algorithms for matchings and related problems .",
    ", 41:13291356 , 1994 .",
    "r.  motwani and p.  raghavan . .",
    "cambridge university press , 1995 .",
    "a.  schrijver .",
    "bipartite edge coloring in @xmath616 time .",
    ", 28:841846 , 1999 .",
    "j.  von neumann . a certain zero - sum two - person game equivalent to the optimal assignment problem .",
    ", 2:512 , 1953 .",
    "consider any @xmath50 where @xmath617 . define @xmath618 and @xmath619 . fix an @xmath80 such that @xmath620 such that @xmath621 , and @xmath622 . by the assumption in the theorem",
    ", there exists an edge @xmath623 . since @xmath624",
    ", it follows that @xmath625 .",
    "this edge is in @xmath93 , and goes from @xmath194 to @xmath626 , _",
    "i.e. _ , from @xmath194 to @xmath627 , and hence , from @xmath39 to @xmath40 . since the only assumption on @xmath50 was that @xmath41 , we can now invoke hall s theorem to claim that @xmath93 has a perfect matching.@xmath251",
    "as mentioned before , the proof is along very similar lines to that of the benczr - karger sampling theorem , but does not follow in a black - box fashion and is presented here for completeness .",
    "the proof relies on the following result due to karger and stein  @xcite :    [ lem : karger ] let @xmath99 be an undirected graph on @xmath8 vertices such that each edge @xmath94 has an associated non - negative weight @xmath628 .",
    "let @xmath629 be the value of minimum cut in @xmath33 under the weight function @xmath628 . then for any @xmath630 , the number of cuts in @xmath33 of weight at most @xmath631 is less than @xmath632 .    theorem  [ thm : benczur - karger ] we will choose @xmath633 .",
    "the first part of the proof shows that it is sufficient to bound a certain expression that involves only cuts .",
    "the second part then bounds this expression .",
    "for the first part , let @xmath634 denote the expected number of edges chosen from @xmath635 by the sampling process .",
    "if a set @xmath636 contains an edge @xmath94 with @xmath637 , then that edge will definitely be chosen , and that set does not contribute to @xmath638\\ ] ] and can be removed from @xmath108 . hence , assume without loss of generality that @xmath639 for every edge in @xmath640 .",
    "define @xmath641 .",
    "now for any set @xmath636 ,    @xmath642 =    \\prod_{e\\in x}(1-p_e ) \\le \\prod_{e\\in x}e^{-p_e } \\le e^{-\\mu(x)},\\ ] ]    where @xmath643 since @xmath109 is a one - one function , it is sufficient to provide an upper - bound on @xmath644 .    for the second part ,",
    "let @xmath645 be a non - decreasing sorted sequence corresponding to the multi - set @xmath646 .",
    "define @xmath647 .",
    "consider an arbitrary cut @xmath648 .",
    "any edge in @xmath648 can have strength at most @xmath649 , and hence @xmath650 , and therefore , @xmath651 .",
    "so the sum of @xmath652 for the first @xmath653 cuts in the sequence is bounded by @xmath654 .",
    "we now focus on the remaining cuts . by lemma  [ lem :",
    "karger ] , we know that for any @xmath630 , we have @xmath655 .",
    "hence @xmath656 which in turn implies that @xmath657 .",
    "thus    @xmath658 \\leq \\sum_{c\\in{\\mathcal c}}e^{-\\tilde{\\mu}(c ) } \\leq \\sum_{k=1}^{n^2 } q_k + \\sum_{k >",
    "n^2 } q_k \\leq   n^{-c+2 } +    \\sum_{k > n^2 } k^{-c/2 } = o(n^{-c+2}),\\ ] ] giving us the desired result when we choose @xmath633 .",
    "assume by way of contradiction that no such integer @xmath97 exists for some pair of multisets @xmath118 and @xmath119 .",
    "let @xmath659 be the largest integer in @xmath660 , and let @xmath661 and @xmath662 denote the number of occurrences of @xmath80 in the multisets @xmath118 and @xmath119 respectively .",
    "then for all @xmath663 , we have @xmath664 summing the above inequality for all @xmath665 , we get @xmath666 which is a contradiction since latexmath:[$|s_1| > \\gamma"
  ],
  "abstract_text": [
    "<S> we consider the well - studied problem of finding a perfect matching in @xmath0-regular bipartite graphs with @xmath1 vertices and @xmath2 edges . while the best - known algorithm for general bipartite graphs ( due to hopcroft and karp ) takes @xmath3 time , in regular bipartite graphs , a perfect matching </S>",
    "<S> is known to be computable in @xmath4 time . </S>",
    "<S> very recently , the @xmath4 bound was improved to @xmath5 expected time , an expression that is bounded by @xmath6 . in this paper </S>",
    "<S> , we further improve this result by giving an @xmath7 expected time algorithm for finding a perfect matching in regular bipartite graphs ; as a function of @xmath8 alone , the algorithm takes expected time @xmath9 .    to obtain this result , we design and analyze a two - stage sampling scheme that reduces the problem of finding a perfect matching in a regular bipartite graph to the same problem on a subsampled bipartite graph with @xmath10 edges . </S>",
    "<S> the first - stage is a sub - linear time uniform sampling that reduces the size of the input graph while maintaining certain structural properties of the original graph . </S>",
    "<S> the second - stage is a non - uniform sampling that takes linear - time ( on the reduced graph ) and outputs a graph with @xmath10 edges , while preserving a matching with high probability . </S>",
    "<S> this matching is then recovered using the hopcroft - karp algorithm . while the standard analysis of hopcroft - karp also gives us an @xmath11 running time , we present a tighter analysis for our special case that results in the stronger @xmath12 time mentioned earlier .    </S>",
    "<S> our proof of correctness of this sampling scheme uses a new correspondence theorem between cuts and hall s theorem `` witnesses '' for a perfect matching in a bipartite graph that we prove . </S>",
    "<S> we believe this theorem may be of independent interest ; as another example application , we show that a perfect matching in the support of an @xmath13 doubly stochastic matrix with @xmath14 non - zero entries can be found in expected time @xmath15 . </S>"
  ]
}
{
  "article_text": [
    "various forms of authentication are used in our everyday life .",
    "some of them employ a pin , i.e. a string of digits with fixed length , usually between 4 and 6 .",
    "pins are used in various applications : for cardholder verification in financial services @xcite , for authorized personnel verification in physical access control systems , for sim ( subscriber identity module ) card owner verification in mobile phones , etc .",
    "the ubiquitous nature of pins and the fact that a simple numpad is often the only practical option in various environments mean that pins stay here as a viable authentication method for a long time .",
    "the security of pin based authentication depends on multiple factors and subjects involved in a particular application .",
    "a comprehensive description of issues in pin management throughout its entire life cycle can be found in iso standard 9564 @xcite or standards proposed by pci security standards council , such as @xcite .",
    "practically oriented guidelines on pin security can be found in @xcite .",
    "a user of an application usually controls only his / her own pin and not other security measures",
    ". therefore there are some common recommendations for users , such as never share your pin with anyone , memorize your pin ( do not write it down ) , select a pin that can not be easily guessed , be aware of shoulder surfing , etc .",
    "recently published study on frequency of 4-digit pins @xcite reveals that most people fail at the one of the basic recommendation : your pin should be unguessable .",
    "however the recommendations give almost no hints on how to actually choose a pin .",
    "they say how _ not _ to select a pin , e.g. using sequential digits such as 1234 ( ranking as the most frequent pin in the cited study ) , repetitive digits such as 1111 or 0000 ( five spots in top 10 ) , birthdays or anniversaries ( each 19 ? ?",
    "combination can be found in the top 20% of the dataset in the cited study ) , etc . in an ideal world",
    "everyone would use and remember randomly and uniformly generated pins of required length .",
    "nevertheless , our ability to memorize random pins is limited , even more so when an individual must remember multiple pins for distinct applications .",
    "the problem can be approached from two different sides :    1 .",
    "methods of generating easy to remember pins , usually with some alpha - numeric aids ( e.g. various tips of this kind can be found in @xcite ) .",
    "the advantage of this approach lies in easy to apply techniques . on the contrary",
    ", it is usually difficult to assess the entropy of pins constructed this way .",
    "a variant of this approach is using pins derived from passwords @xcite .",
    "2 .   methods to memorize randomly chosen pins .",
    "this ensures highest entropy of used pins . on the other hand ,",
    "an individual must develop or learn some memorization technique in order to deal with large number of pins .",
    "for example , there are several known techniques usually aimed at remembering a long sequences of digits , such as major system or dominic system .",
    "these techniques are also useful in situations when a user is not allowed to change the pin",
    ".    low entropy of a pin yields higher success probability of the guessing attack .",
    "a common security measure is to limit the number of unsuccessful authentication attempts , usually to three , and block the access or the device after reaching this number .",
    "even with such measure in place , users should use as unpredictable pins as possible .",
    "[ [ our - contribution - and - results ] ] our contribution and results + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this paper we focus on the problem of choosing a pin .",
    "formally , a pin is an element from the set @xmath0 , for an integer @xmath1 .",
    "the value @xmath1 is the _ pin length _ and we use the most common values @xmath2 and @xmath3 in our experiments .",
    "a _ pin word _ is a string of alphabetic characters of length @xmath1 that is translated by some mapping into a pin .",
    "we mostly use the common mapping from letters to numbers offered by keyboards of atms , point - of - sale ( pos ) terminals or mobile phones .",
    "other mappings can be easily employed in applications by using pictures attached to an authentication dialog or by customizing the keyboard of an authentication device .",
    "the contribution of the paper can be summarized as follows .",
    "we experimentally estimate the entropy and the coverage of the pin space for dictionary pins , i.e. pins obtained from pin words of the corresponding length from a dictionary ( section [ sec - stats ] ) .",
    "we analyze dictionaries of various sizes and languages ( english , french , german and slovak ) .",
    "even though the results are significantly influenced by the size of a dictionary , obtained entropies and pin space coverings are unsatisfactory in comparison to ideal values . on the other hand , the results are comparable with the method of deriving pins from passwords @xcite .",
    "in addition , using dictionary pins is certainly better than using birthday or some of the most frequent pins ( e.g. there are at most 5 dictionary pins in the top 20 most frequent pins from @xcite ) .",
    "we test various natural ideas to improve the covering and the entropy of dictionary pins in section [ sec - improve ] .",
    "the experiments show mostly negligible improvements for individual ideas .",
    "another approaches are explored in section [ sec - hmm ] : translation of randomly generated pins to pin words or pin phrases with the aim that these will be easier to remember .",
    "our first proposal is the construction of pin words using the hidden markov model of the particular language .",
    "the second approach is to construct pin phrases from pins .",
    "in this section we analyze the statistics of dictionary pins .",
    "we use the spell - checking dictionaries from libreoffice suite as a source of pin words in our experiments .",
    "we analyze four languages : english ( us dictionary , ver .",
    "3.0 ) , french ( modern dictionary , ver . 4.8 ) , german ( frami dictionary , ver .",
    "2012.06.17 ) and slovak ( ver .",
    "2011.02.28 ) .",
    "all dictionaries use supplemental affix files to facilitate spell - checking .",
    "however , we took our input just from the dictionary ( dic ) files alone .",
    "the dictionary files differ significantly in number of words :    [ cols= \" < , > \" , ]     interestingly , the results for this mapping are very similar to the results of previous method . in case of english dictionary , this method increases the coverings from 31% to 48% for the pin length 4 , and from 13% to 16% for the pin length 5 . for slovak dictionary , we observed a slight increase from 7% to 8% for the pin length 5 .",
    "the covering percentage remained unchanged for other two dictionaries .",
    "[ [ prefixes - or - suffixes ] ] prefixes or suffixes + + + + + + + + + + + + + + + + + + + +    another idea focuses on enlarging the space of pin words .",
    "a straightforward approach is to use every dictionary word with length equal or greater than desired pin length .",
    "the actual pin words are then just the prefixes or the suffixes of these words .",
    "both methods increase the covering of pins with similar results . on the other hand , the distributions of resulting pins",
    "are skewed , because of common prefixes or suffixes ( e.g. `` meth '' or `` ness '' for english ) .",
    "this yields a lower entropy of pins generated by the suffix method regardless of dictionary and pin length , and by the prefix method applied to english and slovak dictionaries regardless of pin length .",
    "hence , the methods do not present real improvement over the standard approach from section [ sec - stats ] .",
    "table [ tab - prefixes ] shows the statistics for prefix method applied to english and french dictionaries .",
    "lrrrr & & + pin length & & & & + covering & 39% & 23% & 29% & 11% + entropy & 10.56 & 13.80 & 10.39 & 12.43 +    [ [ combination ] ] combination + + + + + + + + + + +    as another approach to improve the covering and the entropy of pins , we try to combine multiple methods .",
    "we use a combination of polyglot and prefixes methods with changed mappings of individual letters .",
    "the results can be viewed as some kind of `` upper bounds '' of what can be achieved by these and similar approaches .",
    "this combined approach reached the covering 86% and 50% for pin lengths 4 and 5 respectively .",
    "the corresponding entropies of generated pins were 11.43 and 13.78 respectively .",
    "these values are far from the ideal values of uniformly generated pins .",
    "therefore , we try completely different approaches in section [ sec - hmm ] .    [ [ morphing - pin - words - with - a - digit ] ] morphing pin words with a digit + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    unsurprisingly , better covering and entropy can be achieved by more complicated methods .",
    "take for example the following procedure : choose a pin word and replace single letter at random position by some random digit . this way you can morph the pin word `` paper '' into `` p7per '' ( or `` ppper '' if you want ) , `` pape0 '' , `` 1aper '' etc . then the morphed pin word yield the pin using standard mapping ( a digit translates to itself ) .",
    "hence you can get 40 or 50 pins from a single pin word of length 4 or 5 , respectively .",
    "the results obtained by this methods , presented in table [ tab - word1ex ] for the pin length 5 , are even better than the results of combined approach .",
    "lrrrr & english & french & german & slovak + covering & 67% & 40% & 44% & 60% + entropy & 15.22 & 14.47 & 14.79 & 15.12 +    on the other hand , this method can be too complex for a common user ( ( s)he must remember the pin word , the position and the value of the digit ) .",
    "experimenting with various natural ideas to improve the standard dictionary method in section [ sec - improve ] suggests that we should explore another possibilities .",
    "if `` distilling '' pin words from a dictionary is unsatisfactory , we will construct suitable pin words from randomly and uniformly generated pins , i.e. pins with the highest entropy . by `` suitable pin word ''",
    "we mean a word that is easy to remember .",
    "certainly , it is very subjective what someone considers as easy to memorize .    in order to allow all pins , we must use a stretched mapping such as that one from the previous section .",
    "we use the mapping defined by figure [ fig - stretch ] for all experiments in this section .",
    "however , the methods can be easily adapted to other mappings .",
    "the practical use of such mapping requires public availability of the mapping ",
    "a user should not be required to memorize it .",
    "it can be achieved by printing the mapping on a numpad , displaying an image of such numpad to user as a part of an authorization dialog , etc .",
    "we model translation of pin words to pins as a hidden markov model @xcite with states being letters of the alphabet and digits of a pin being observable data .",
    "the problem of finding suitable pin word will be solved by the viterbi algorithm .",
    "more formally , let @xmath4 be the set of states , and @xmath5 be the set of possible outputs .",
    "let @xmath6 denotes the probability of starting in the state @xmath7 .",
    "the probability of transition from the state @xmath8 to the state @xmath9 is denoted by @xmath10 .",
    "finally , let @xmath11 be the probability of producing output @xmath12 while being in the state @xmath7 .",
    "we set @xmath13 , and @xmath14 .",
    "the parameters of our hidden markov model are instantiated according the particular dictionary .",
    "the probability @xmath6 is computed as a fraction of dictionary words starting with character @xmath7 .",
    "the transition probability @xmath10 , for @xmath15 , corresponds to conditional probability that the next character is @xmath9 when the current character is @xmath8 .",
    "the probability is calculated from all dictionary words .",
    "the output probabilities will reflect the deterministic mapping of letters to digits , i.e. for @xmath7 and @xmath12 : @xmath16 if @xmath8 maps to @xmath17 , otherwise @xmath18 .",
    "a pin can be generated randomly from uniform distribution and converted to the most suitable pin word by finding the most probable sequence of states ( letters ) that produces this pin in our hidden markov model .",
    "since the sequence is based on the starting and transition probabilities from a dictionary , the resulting pin word should be easier to remember than other pin words for the same pin .",
    "the problem of finding the most probable sequence of states in hidden markov model is well known , and the viterbi algorithm can be used to solve it .",
    "table [ tab - hmm ] shows examples of pin words computed by the viterbi algorithm for some randomly chosen pins",
    ".    lllll pin & english & french & german & slovak + 1605 & ` anyl ` & ` anyl ` & ` anzl ` & ` anyk ` + 8407 & ` thyp ` & ` thyp ` & ` sizo ` & ` sizo ` + 2566 & ` clmm ` & ` clmm ` & ` dlmm ` & ` dlnn ` + 35130 & ` flbex ` & ` elaex ` & ` flafz ` & ` ejbez ` + 07588 & ` zolst ` & ` zoltr ` & ` zoltr ` & ` zojst ` + 94381 & ` whera ` & ` viera ` & ` wiera ` & ` viera ` +    the suitability of resulting pin words is a subjective matter",
    ". however , the results are not especially satisfying .",
    "the main problem is that there are pins that can not use vowels ( i.e. ` aeiouy ' ) because of the particular mapping .",
    "this situation is unavoidable , the number of vowels is smaller than the number of digits . therefore even using higher - order hidden markov model will not yield better results in such situations . as an alternative",
    ", we can generate a set of random pins , and user chooses the one that ( s)he found suitable for memorization .",
    "however , this makes the pins not uniform anymore .",
    "another approach is to use words instead of individual letters .",
    "the actual pin word is a string of the first letters from ( dictionary ) words in some sentence ( we call it a pin phrase ) .",
    "the sentence can be user - constructed or automatically generated . as a small experiment we implemented a simple pin phrase generator from pins using english words .",
    "for each digit we chose few nouns , verbs and adjectives with starting letter among the set defined by the inverse of the stretched mapping .",
    "the selected words should allow for vivid visualizations to facilitate memorization .",
    "we defined a fixed sentence structure for the pin length 5  adjective , noun , verb , adjective , noun .",
    "some examples of generated pin phrases for random pins are shown in table [ tab - phrases ] .",
    "ll pin & pin phrase + 05632 & ` yellow lamb meets funny cat ` + 19604 & ` big witch makes yummy horse ` + 90123 & ` ugly zebra answers clean fly ` + 38446 & ` funny sun has happy mouse ` +    a compromise between methods based on individual letters ( such as the hidden markov model method ) and pin phrases would be using just few words ( e.g. a pair ) and take two or three starting letters from each word .",
    "for example `` ear emonic '' would represent pin word `` clmn '' , i.e. pin 2566 using our stretched mapping .",
    "again , we can automate the process of translating a random pin into such words .",
    "generally , pin phrases and their variants can be counted as mnemonic techniques .",
    "they can be further combined with or modified by other mnemonic systems , e.g. the major system .",
    "there is a vast number of possible modifications and customizations to these methods , and it is impossible to explore all of them here .",
    "we analyzed several dictionary - based methods of choosing a pin . even though some individual s vocabulary is huge , the expected covering of the pin space and the entropy of dictionary pins are far from ideal .",
    "however , the results of the dictionary - based methods are much better than the statistics of pins usage observed in real - world applications .",
    "we also proposed two methods for constructing ( hopefully ) easy to remember pin words for randomly chosen pins .",
    "their practical usability is a subjective matter , and therefore a suitable topic for further analysis and experiments .",
    "another interesting idea for subsequent research is the analysis of so - called geometric pins , i.e. pins that are memorized according to the shape they create on the numpad .",
    "the first author acknowledges support by the vega research grant 1/0781/11 , the apvv research grant 0223 - 10 , and the apvv support as part of the eurocores programme eurogiga ( project gregas , esf - ec-0009 - 10 ) of the european science foundation .",
    "the second author acknowledges support by vega 1/0259/13 .",
    "9 n. berry : _ pin analysis _ , datagenetics , 2012 .",
    "+ available at www.datagenetics.com/blog/september32012/index.html ( accessed 3 february 2013 ) c.a .",
    "danna , e.b .",
    "zechmeister , and j.w .",
    "hall : _ toward a meaningful definition of vocabulary size _ , journal of reading behavior , 23(1):109122 , 1991 .",
    "emvco : _ emv integrated circuit card specifications for payment systems _ , version 4.3 , 2011 .",
    "+ available at www.emvco.com/specifications.aspx ( accessed 3 february 2013 ) international organization for standardization : _ financial services  personal identification number ( pin ) management and security _ , part 1 : basic principles and requirements for pins in card - based systems , iso 9564 - 1 , 2011 .",
    "m. jakobsson , d. liu : _ bootstrapping mobile pins using passwords _ , w2sp 2011 : web 2.0 security and privacy 2011 .",
    "+ available at w2spconf.com/2011/papers/mobilepin.pdf ( accessed 3 february 2013 ) m. jakobsson , d. liu : _ your password is your new pin _ , springerbriefs in computer science 2013 , pp 25 - 36 , springer , 2013 .",
    "pci security standards council : _ payment card industry pin security requirements _ , version 1.0 , 2011 .",
    "+ available at www.pcisecuritystandards.org/security_standards ( accessed 3 february 2013 ) j. pritchard : _ pin number tips _ ,",
    "about.com guide .",
    "+ available at banking.about.com/od/securityandsafety/p/pinnumber.htm ( accessed 3 february 2013 ) l.r .",
    "rabiner : _ a tutorial on hidden markov models and selected applications in speech recognition _ , proceedings of the ieee , vol .",
    "2 , pp . 257286 , 1989 .",
    "visa : _ issuer pin security guidelines _ , 2010 .",
    "+ available at usa.visa.com/merchants/risk_management/cisp_pin_security.html ( accessed 3 february 2013 ) e.b .",
    "zechmeister , a.m. chronis , w.l .",
    "cull , c.a .",
    "danna and n.a .",
    "healy : _ growth of a functionally important lexicon _",
    ", journal of reading behavior , 27(2):201212 1995 ."
  ],
  "abstract_text": [
    "<S> personal identification numbers ( pins ) are commonly used as an authentication mechanism . </S>",
    "<S> an important security requirement is that pins should be hard to guess for an attacker . on the other hand , </S>",
    "<S> remembering several random pins can be difficult task for an individual . </S>",
    "<S> we evaluate several dictionary - based methods of choosing a pin . </S>",
    "<S> we experimentally show that these methods are far from ideal with respect to expected covering of the pin space and the entropy of pins . </S>",
    "<S> we also discuss two methods for constructing easy to memorize pin words for randomly chosen pins .    </S>",
    "<S> pin , entropy , access control , memorization , hidden markov model </S>"
  ]
}
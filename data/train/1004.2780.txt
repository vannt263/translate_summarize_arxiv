{
  "article_text": [
    "this paper aims at introducing some new static analysis technology for concurrent programs .",
    "the work presented here gives a new insight into the problem of decomposition of processes , which was first explored by _",
    "r. milner _ and _ f. moller _ in  @xcite .",
    "the main new results are an algorithm maximally decomposing concurrent programs into independent processes ( section  [ algorithm ] ) and the proof that this prime decomposition is unique in the considered class of programs ( theorem  [ monoid_of_cubical_areas_is_commutative_free ] ) .",
    "they are derived from a study of algebraic properties of cubical areas .",
    "given an associative and commutative operator @xmath0 for parallel composition of two processes ( with the empty process as unit ) , decomposing a concurrent program @xmath1 into a multiset @xmath2 such that @xmath3 and the @xmath4s are independent has several interests .",
    "for instance the decomposition may be relevant for the allocation of processors to subprograms .",
    "another important concern is the static analysis of concurrent programs , whose complexity grows exponentially with the number of concurrent processes : finding independent subprograms that can be analyzed separately could dramatically decrease the global complexity of the static analysis .",
    "hence this paper aims at finding the finest decomposition ( and proving its existence ) for a wide class of concurrent programs .",
    "let us first take a look at a non trivial example of independent processes , in the so - called @xmath5 language introduced by _",
    "dijkstra _",
    "@xcite as a simple framework for the study of concurrency with shared resources .",
    "the only instructions are @xmath6 and @xmath7 and @xmath8 stand for the dutch words `` pakken '' ( take ) and `` vrijlaten '' ( release ) ] , where @xmath9 is an identifier which refers to a resource . the idea is to have some common pool of resources which can be taken ( with @xmath1 ) and released ( with @xmath8 ) by concurrent processes .",
    "the resources are formalized by semaphores which , depending on their arity , can be held simultaneously by a certain number of processes ( arity @xmath10 allows at most @xmath11 simultaneous processes ) .",
    "now suppose @xmath12 is the name of a ternary semaphore , which means it can be held by at most two processes , and @xmath13 are the names of binary semaphores , also called _ mutex _ for _ mutual exclusion_.    [ indexample ] @xmath14    a naive syntactic analysis would stamp this program as undecomposable since all processes share the resource @xmath12 , but the following finer analysis can be made : thanks to mutex @xmath15 ( respectively @xmath16 ) , the processes @xmath17 and @xmath18 ( respectively @xmath19 and @xmath20 ) can not both hold an occurrence of the resource @xmath12 at the same time .",
    "then there are never more than two simultaneous requests over @xmath12 , which means that the instructions @xmath21 and @xmath22 play actually no role in determining the semantics of the program . and without @xmath12 , @xmath23",
    "can be split in two independent systems ( they use disjoint resources ) .",
    "basically , this example is based on the fact that semaphores are not the real resources , but mere devices used to guard their access . and it may be that some guards are redundant .",
    "this work is based on a geometric semantics for concurrency .",
    "the semantics for @xmath5 programs was implicitly given in  @xcite , then explicited by _",
    "et al.@xcite . roughly speaking ,",
    "the instructions of a process are pinned upon a @xmath24-dimensional `` directed '' shape , in other words track along which the instructions of the program to execute are written .",
    "if @xmath25 sequential processes run together , one can consider their @xmath25 instruction pointers as a multi - dimensional control point .",
    "although we have made the construction explicit for @xmath5 programs only , the result applies to any synchronisation or communication mechanism whose geometric interpretation is a so - called _ cubical area _",
    "( the notion is formalized in section  [ cubical_areas ] ) .",
    "see for instance  @xcite for the geometric semantics of synchronisation barriers , monitors and synchronous or asynchronous communications ( with finite or infinite message queues ) : their geometrical shape is the complement of an orthogonal polyhedron  @xcite , which is a special case of cubical area .",
    "* outline of the paper . *",
    "+ the paper is organized as follows .",
    "section 2 provides the mathematics of the geometric semantics , detailed for @xmath5 programs .",
    "section 3 establishes the link between algebraic properties of the semantics and independence of subprograms , and then states and proves prime decomposability theorems for algrebraic frameworks encompassing the geometric semantics ( theorems  [ homogeneous_is_commutative_free ] and   [ monoid_of_cubical_areas_is_commutative_free ] ) .",
    "section 4 describes the corresponding algorithm and implementation as well as a detailed example and some benchmarks .",
    "the geometric semantics of a pv program is a subset of the finite dimensional real vector space whose dimension is roughly speaking the number @xmath25 of processes running concurrently .",
    "then each process is associated with a coordinate of @xmath26 .",
    "yet given a mutex ` a ` , the instructions ` p(a ) ` and ` v(a ) ` that occur in the @xmath27 process should be understood as opening and closing parentheses or more geometrically as the least upper bound and the greatest lower bound of an interval @xmath28 of @xmath29 .",
    "the forbidden area generated by a mutex ` a ` is thus the finite union of hyperrectangles of the following form ( with @xmath30 ) @xmath31    for example , ` p(a).v(a ) \\| p(a).v(a ) ` is a program written in pv language . assuming that @xmath15 is a mutex ( semaphore of arity @xmath32 ) , its geometric model is @xmath33 .",
    "intuitively , a point @xmath34 in @xmath35 would correspond to the situation where both processes hold the semaphore @xmath15 , which is forbidden by the semantics of mutices .",
    "( 6mm,6 mm ) rectangle ( 12mm,12 mm ) ; ( 0mm,0 mm ) ",
    "( 6mm,0 mm ) ; ( 0mm,0 mm ) ",
    "( 0mm,6 mm ) ; ( 9mm,9 mm ) circle ( 0.3 mm ) ; ( 10.2mm,10.2 mm ) node@xmath36 ; ( -2mm,0 mm )  ( 18mm,0 mm ) ; ( 0mm,-2 mm )  ( 0mm,18 mm ) ; ( 6mm,-1 mm ) ",
    "( 6mm,1 mm ) ; ( 12mm,-1 mm )  ( 12mm,1 mm ) ; ( -1mm,6 mm )  ( 1mm,6 mm ) ; ( -1mm,12 mm )  ( 1mm,12 mm ) ; ( 0mm,9 mm )  ( 9mm,9 mm ) ; ( 9mm,0 mm )  ( 9mm,9 mm ) ; ( 6mm,-4 mm ) node[rotate = -90]@xmath37 ; ( 12mm,-4 mm ) node[rotate = -90]@xmath38 ; ( -4mm,6 mm ) node@xmath37 ; ( -4mm,12 mm ) node@xmath38 ; ( 0mm,9 mm ) circle ( 0.3 mm ) ; ( 9mm,0 mm ) circle ( 0.3 mm ) ;     +   + in the sequel of this section we formalize the pv language syntax as well as the construction of the geometric semantics . denote the positive half - line @xmath39 by @xmath40 .",
    "for each @xmath41 let @xmath42 be an infinite countable set whose elements are the semaphores of arity @xmath43 of the pv language .",
    "a * pv process * is a finite sequence on the alphabet @xmath44 and a * pv program * is a finite ( and possibly empty ) multiset of pv processes .",
    "the parallel operator then corresponds to the multiset addition therefore it is associative and commutative .",
    "forms a monoid which is isomorphic to the free commutative monoid over @xmath45 . the first terminology is usually used by computer scientists while mathematicians prefer the second one .",
    "anyway it will be described and caracterized in the section 3 . ]",
    "given a semaphore @xmath46 and a process @xmath47 , the sequences @xmath48 and @xmath49 are recursively defined as follows : set @xmath50 and    * @xmath51 * @xmath52    with the convention that @xmath53 , @xmath54 denotes the @xmath55 term of the process @xmath47 and its first term is @xmath56 .",
    "then , the * busy area * of @xmath46 in @xmath47 is @xmath57 actually this description requires some extra assumptions upon the way instructions are interpreted .",
    "namely a process can not hold more than one occurrence of a given ressource .",
    "thus a process already holding an occurrence of a semaphore @xmath46 ignores any instruction @xmath58 , and similarly a process holding no occurrence of @xmath46 ignores any instruction @xmath59 .",
    "then denote by @xmath60 the characteristic function of @xmath61 defined by @xmath62 because the sequence @xmath47 is finite , there exists some @xmath63 such that @xmath64 and for any such @xmath63 and any @xmath65 , one also has @xmath66 . in particular , if the instruction @xmath58 does not appear in @xmath47 , then @xmath67 is empty and @xmath68 is the null map .",
    "the geometric model of a pv program with @xmath25 processes running concurrently is a subpospace of @xmath69 defined as follows : + - call @xmath70 the program to modelize .",
    "+ - given a semaphore @xmath46 of arity @xmath43 define the * forbidden area * of @xmath46 in @xmath71 as @xmath72 where @xmath73 , @xmath74 and @xmath75 . the value @xmath76 indicates how many occurrences of the semaphore @xmath46 are held when the instruction pointer is at position @xmath77 .",
    "note that @xmath78 is a finite union of hyperrectangles which may be empty even if @xmath46 appears in the program @xmath71 . in the end ,",
    "the * forbidden area * of the program @xmath71 is the following union over @xmath79 the union of all the sets @xmath42 .",
    "@xmath80 because there are finitely many resource names @xmath46 appearing in a pv program , there are finitely many non empty set @xmath78 .",
    "hence the previous union is still a finite union of hyperrectangles .",
    "the * state space * or * geometric model * of @xmath71 is then @xmath81 , and is denoted by @xmath82 .",
    "remark that the geometric model is also a finite union of hyperrectangles .    in other words ,",
    "the state space of @xmath71 is the set of positions of the `` multi dimensional instruction pointer '' for which the number of occurrences of each semaphore @xmath46 is strictly below its arity @xmath43 .",
    "if @xmath71 is made of @xmath25 concurrent process , this space is a @xmath25-dimensional enclidean space with ( cubical ) holes . as an example",
    ", figure  [ swissflag ] shows the construction of the geometric model of the pv program @xmath83 ( refered to as the _ swiss flag _ ) .",
    "figure  [ 3dexample ] gives a simplified version of example  [ indexample ] fitting in three dimensions .",
    "( 6mm,12 mm ) rectangle ( 24mm,18 mm ) ; ( 6mm,12 mm )  ( 6mm,18 mm ) ; ( 6mm,12 mm ) ",
    "( 24mm,12 mm ) ; ( 0mm,0 mm )  ( 6mm,0 mm ) ; ( 0mm,0 mm )  ( 0mm,6 mm ) ; ( -2mm,0 mm )  ( 26mm,0 mm ) ; ( 0mm,-2 mm )  ( 0mm,26 mm ) ; ( 15mm,15 mm ) node@xmath84 ; ( 6mm,-1 mm ) ",
    "( 6mm,0 mm ) ; ( 24mm,-1 mm ) ",
    "( 24mm,0 mm ) ; ( -1mm,12 mm )  ( 0mm,12 mm ) ; ( -1mm,18 mm )  ( 0mm,18 mm ) ; ( -4.5mm,12 mm ) nodep(a ) ; ( -4.5mm,18 mm ) nodev(a ) ; ( 6mm,-4.5 mm ) node[rotate = -90]p(a ) ; ( 24mm,-4.5 mm ) node[rotate = -90]v(a ) ;    ( 12mm,6 mm ) rectangle ( 18mm,24 mm ) ; ( 12mm,6 mm )  ( 18mm,6 mm ) ; ( 12mm,6 mm )  ( 12mm,24 mm ) ; ( 15mm,15 mm ) node@xmath85 ; ( 0mm,0 mm ) ",
    "( 6mm,0 mm ) ; ( 0mm,0 mm )  ( 0mm,6 mm ) ; ( -2mm,0 mm ) ",
    "( 26mm,0 mm ) ; ( 0mm,-2 mm )  ( 0mm,26 mm ) ; ( 12mm,-1 mm )  ( 12mm,0 mm ) ; ( 18mm,-1 mm )  ( 18mm,0 mm ) ; ( -1mm,6 mm )  ( 0mm,6 mm ) ; ( -1mm,24 mm )  ( 0mm,24 mm ) ; ( -4.5mm,6 mm ) nodep(b ) ; ( -4.5mm,24 mm ) nodev(b ) ; ( 12mm,-4.5 mm ) node[rotate = -90]p(b ) ; ( 18mm,-4.5 mm ) node[rotate = -90]v(b ) ;    ( 6mm,12 mm ) rectangle ( 24mm,18 mm ) ; ( 12mm,6 mm ) rectangle ( 18mm,24 mm ) ; ( 6mm,18 mm )  ( 6mm,12 mm )  ( 12mm,12 mm )  ( 12mm,6 mm )  ( 18mm,6 mm ) ; ( 12mm,18 mm )  ( 12mm,24 mm ) ; ( 18mm,12 mm )  ( 24mm,12 mm ) ; ( 15mm,15 mm ) node@xmath86 ; ( 0mm,0 mm )  ( 6mm,0 mm ) ; ( 0mm,0 mm )  ( 0mm,6 mm ) ; ( -2mm,0 mm )  ( 26mm,0 mm ) ; ( 0mm,-2 mm )  ( 0mm,26 mm ) ; ( 6mm,-1 mm )  ( 6mm,0 mm ) ; ( 12mm,-1 mm )  ( 12mm,0 mm ) ; ( 18mm,-1 mm )  ( 18mm,0 mm ) ; ( 24mm,-1 mm )  ( 24mm,0 mm ) ; ( -1mm,6 mm )  ( 0mm,6 mm ) ; ( -1mm,12 mm )  ( 0mm,12 mm ) ; ( -1mm,18 mm )  ( 0mm,18 mm ) ; ( -1mm,24 mm )  ( 0mm,24 mm ) ; ( -4.5mm,6 mm ) nodep(b ) ; ( -4.5mm,12 mm ) nodep(a ) ; ( -4.5mm,18 mm ) nodev(a ) ; ( -4.5mm,24 mm ) nodev(b ) ; ( 6mm,-4.5 mm ) node[rotate = -90]p(a ) ; ( 12mm,-4.5 mm ) node[rotate = -90]p(b ) ; ( 18mm,-4.5 mm ) node[rotate = -90]v(b ) ; ( 24mm,-4.5 mm ) node[rotate = -90]v(a ) ;    c@c@c    ( 0.5,0.3,-2.5 ) circle ( 3pt ) ; ( 0.5,0.3,-0.7 )  ( 0.5,0.3,-2.3 ) ; ( 0.6,0.3,-2.5 )  ( 2.4,0.3,-2.5 ) ; ( 0.5,1.7,-2.5 ) circle ( 3pt ) ; ( 0.5,1.7,-0.7 )  ( 0.5,1.7,-2.3 ) ; ( 0.6,1.7,-2.5 )  ( 2.4,1.7,-2.5 ) ; ( 0.5,0.4,-2.5 )  ( 0.5,1.6,-2.5 ) ; ( 1,-0.4,-1 )  ( 2,-0.4,-1 )  ( 2,-0.4,-2 )  ( 1,-0.4,-2 )  cycle ; ( 1,-0.4,-2 )  ( 2,-0.4,-2 )  ( 2,2.3,-2 ) ",
    "( 1,2.3,-2 )  cycle ; ( 1,-0.4,-1 )  ( 1,-0.4,-2 ) ",
    "( 1,2.3,-2 ) ",
    "( 1,2.3,-1 )  cycle ; ( 1,-0.4,-1 )  ( 1,-0.4,-2 ) ",
    "( 2,-0.4,-2 ) ( 1,-0.4,-2 )  ( 1,2.3,-2 ) ; ( 1.2,1.15,-1.2 ) ",
    "( 1.8,1.15,-1.2 ) ",
    "( 1.8,1.15,-1.8 ) ",
    "( 1.2,1.15,-1.8 )  cycle ; ( 1.2,0.55,-1.2 )  ( 1.8,0.55,-1.2 ) ",
    "( 1.8,1.15,-1.2 ) ",
    "( 1.2,1.15,-1.2 )  cycle ; ( 1.8,0.55,-1.2 )  ( 1.8,0.55,-1.8 ) ",
    "( 1.8,1.15,-1.8 )  ( 1.8,1.15,-1.2 )  cycle ; ( 1,2.3,-1 )  ( 2,2.3,-1 )  ( 2,2.3,-2 ) ",
    "( 1,2.3,-2 )  cycle ; ( 1,-0.4,-1 )  ( 2,-0.4,-1 ) ",
    "( 2,2.3,-1 ) ",
    "( 1,2.3,-1 )  cycle ; ( 2,-0.4,-1 )  ( 2,-0.4,-2 ) ",
    "( 2,2.3,-2 ) ",
    "( 2,2.3,-1 )  cycle ; ( 1.8,1.15,-1.8 )  ( 1.2,1.15,-1.8 ) ",
    "( 1.2,1.15,-1.2 ) ",
    "( 1.2,0.55,-1.2 ) ",
    "( 1.8,0.55,-1.2 )  ( 1.8,0.55,-1.8 ) ",
    "( 1.8,1.15,-1.8 ) ",
    "( 1.8,1.15,-1.2 ) ",
    "( 1.2,1.15,-1.2 ) ( 1.8,1.15,-1.2 ) ",
    "( 1.8,0.55,-1.2 ) ; ( 1.2,0.55,-1.2 ) ",
    "( 1.2,0.55,-1.8 ) ",
    "( 1.8,0.55,-1.8 ) ( 1.2,0.55,-1.8 ) ",
    "( 1.2,1.15,-1.8 ) ; ( 1,2.3,-1 ) ",
    "( 2,2.3,-1 ) ",
    "( 2,2.3,-2 ) ( 2,2.3,-1 )  ( 2,-0.4,-1 ) ; ( 0.5,0.3,-0.5 ) circle ( 3pt ) ; ( 2.5,0.3,-0.5 ) circle ( 3pt ) ; ( 2.5,0.3,-2.5 ) circle ( 3pt ) ; ( 2.5,0.3,-0.7 )  ( 2.5,0.3,-2.3 ) ; ( 0.6,0.3,-0.5 )  ( 2.4,0.3,-0.5 ) ; ( 0.5,1.7,-0.5 ) circle ( 3pt ) ; ( 2.5,1.7,-0.5 ) circle ( 3pt ) ; ( 2.5,1.7,-2.5 ) circle ( 3pt ) ; ( 2.5,1.7,-0.7 )  ( 2.5,1.7,-2.3 ) ; ( 0.6,1.7,-0.5 )  ( 2.4,1.7,-0.5 ) ; ( 0.5,0.4,-0.5 )  ( 0.5,1.6,-0.5 ) ; ( 2.5,0.4,-0.5 )  ( 2.5,1.6,-0.5 ) ; ( 2.5,0.4,-2.5 )  ( 2.5,1.6,-2.5 ) ;    & &    ( 0.5,1,-2.5 ) circle ( 3pt ) ; ( 0.5,1,-1 ) ",
    "( 0.5,1,-2.3 ) ; ( 0.6,1,-2.5 ) ",
    "( 2.4,1,-2.5 ) ; ( 1,-0,-1 ) ",
    "( 2,-0,-1 ) ",
    "( 2,-0,-2 ) ",
    "( 1,-0,-2 )  cycle ; ( 1,-0,-2 )  ( 2,-0,-2 )  ( 2,2,-2 )  ( 1,2,-2 )  cycle ; ( 1,-0,-1 )  ( 1,-0,-2 ) ",
    "( 1,2,-2 ) ",
    "( 1,2,-1 )  cycle ; ( 1,-0,-1 ) ",
    "( 1,-0,-2 ) ",
    "( 2,-0,-2 ) ( 1,-0,-2 ) ",
    "( 1,2,-2 ) ; ( 1,2,-1 ) ",
    "( 2,2,-1 ) ",
    "( 2,2,-2 ) ",
    "( 1,2,-2 )  cycle ; ( 1,-0,-1 )  ( 2,-0,-1 ) ",
    "( 2,2,-1 ) ",
    "( 1,2,-1 )  cycle ; ( 2,-0,-1 )  ( 2,-0,-2 ) ",
    "( 2,2,-2 ) ",
    "( 2,2,-1 )  cycle ; ( 1,2,-1 )  ( 2,2,-1 ) ",
    "( 2,2,-2 ) ( 2,2,-1 ) ",
    "( 2,-0,-1 ) ; ( 2.5,1,-2.5 ) circle ( 3pt ) ; ( 1,-0,-1 )  ( 0,-0,-1 ) ",
    "( 0,2,-1 ) ",
    "( 1,2,-1) cycle ; ( 1,-0,-1 )  ( 0,-0,-1 )  ( 0,2,-1 )  ( 1,2,-1) cycle ; ( 0.5,1,-0.5 ) circle ( 3pt ) ; ( 2,-0,-2 )  ( 2,-0,-3 ) ",
    "( 2,2,-3 ) ",
    "( 2,2,-2 )  cycle ; ( 2,-0,-2 )  ( 2,-0,-3 )  ( 2,2,-3 ) ",
    "( 2,2,-2 )  cycle ; ( 2.5,1,-1.9 ) ",
    "( 2.5,1,-2.3 ) ; ( 0.6,1,-0.5 ) ",
    "( 1,1,-0.5 ) ; ( 2,-0,-2 ) ",
    "( 3,-0,-2 )  ( 3,2,-2 ) ",
    "( 2,2,-2) cycle ; ( 1,-0,-1 )  ( 1,-0,0 )  ( 1,2,0 )  ( 1,2,-1 )  cycle ; ( 2,-0,-2 )  ( 3,-0,-2 )  ( 3,2,-2 ) ",
    "( 2,2,-2) cycle ; ( 1,-0,-1 )  ( 1,-0,0 )  ( 1,2,0 )  ( 1,2,-1 )  cycle ; ( 1,1,-0.5 )  ( 2.4,1,-0.5 ) ; ( 0.5,1,-0.7 )  ( 0.5,1,-1.1 ) ; ( 2.5,1,-0.7 )  ( 2.5,1,-1.9 ) ; ( 2.5,1,-0.5 ) circle ( 3pt ) ;    intuitively , the graphs pictured here correspond to the _ essential components _ of the state space , see  @xcite for developments on this topic .",
    "the dark grey cube on the left picture is the forbidden area of the semaphore @xmath12 , which is contained in the forbidden area of the mutex @xmath15 ( in the full and 4d example @xmath23 the forbidden area of @xmath12 is contained in the union of the forbidden areas of @xmath15 and @xmath16 ) .",
    "now that the geometric semantics of programs is defined , let us refocus on the main goal : finding the independent parts of a concurrent program .",
    "hence the question : what does independence mean in this geometrical setting ?",
    "a general definition has to be given for * independence * : say a program @xmath71 is independent from another program @xmath87 when its behaviour is unaffected by parallel composition with @xmath87 , whatever the way @xmath87 is executed .",
    "that means , the presence of @xmath87 , as well as its instruction pointer , has no effect on the semantics of @xmath71 .",
    "a geometric translation of this assertion is : in the geometric model of @xmath88 , the cylinder over any state of @xmath87 ( i.e.  the subspace of all points with given fix coordinates for the @xmath87 component ) is equal to the model of @xmath71 .    hence two programs @xmath71 and @xmath87 of geometric models @xmath82 and @xmath89 are indenpendent if and only if the geometric model @xmath90 of their parallel composition is isomorphic to the cartesian product @xmath91 . thus the decompositions of a program correspond to the factorizations if its geometric model ( with respect to the cartesian product ) .",
    "next subsection reminds some algebraic settings and results needed for a notion like _ factorization _ to make sense .",
    "the reader not familiar with this notion can refer for instance to @xcite .",
    "let @xmath92 be a commutative monoid .",
    "any element of @xmath92 which has an inverse is called a * unit*. a _ non unit _",
    "element @xmath93 of @xmath92 is said to be * irreducible * when for all @xmath94 and @xmath95 in @xmath92 , if @xmath96 then @xmath94 or @xmath95 is a unit .",
    "the set of irreducible elements of @xmath92 is denoted by @xmath97 . for any elements @xmath93 and @xmath94 of @xmath92 , say @xmath93 * divides * @xmath94 when there is an element @xmath98 of @xmath92 such that @xmath99 .",
    "a _ non unit _",
    "element @xmath93 of @xmath92 is said to be * prime * when for all @xmath94 and @xmath95 in @xmath92 , if @xmath93 divides @xmath100 then @xmath93 divides @xmath94 or @xmath93 divides @xmath95 .",
    "the set of prime elements of @xmath92 is denoted by @xmath101 .",
    "given a set @xmath102 , the collection of maps @xmath103 from @xmath102 to @xmath104 such that @xmath105 is finite , together with the pointwise addition , forms a commutative monoid whose neutral element is the null map : we denote it by @xmath106 . yet , given any subset @xmath102 of a commutative monoid @xmath92 , the following map @xmath107|(0.2){\\begin{minipage}{3mm}$\\phi^x_m:$\\end{minipage } } & f(x ) \\ar[r ] & m \\\\ & \\phi \\ar@{|->}[r ] & \\underset{x\\in x}{\\prod}x^{\\phi(x ) } } \\ ] ] is a well - defined morphism of monoids .",
    "a well - known result asserts that the following are equivalent @xcite :    1 .",
    "the mapping @xmath108 is an isomorphism of monoids 2 .",
    "the set @xmath97 generates generates @xmath92 when all its elements can be written as a product of elements of @xmath102 .",
    "the product of the empty set being defined as the neutral element .",
    "remark then that `` @xmath97 generates @xmath92 '' implies that the only unit of @xmath92 is its neutral element . ] @xmath92 and @xmath109 3 .",
    "any element of @xmath92 can be written as a product of irreducible elements in a unique way up to permutation of terms ( unique decomposition property ) .    in this case",
    "@xmath92 is said to be a * free * commutative monoid .    two standard examples of free commutative monoids are given by the set of non zero natural numbers @xmath110 together with multiplication ( the unit is @xmath24 and the irreducible elements are the prime numbers ) and the set of natural numbers @xmath104 together with addition ( the unit is @xmath111 and the only irreducible element is @xmath24 ) .",
    "however , neither the multiplicative monoid @xmath112 nor the additive group @xmath113 are free commutative monoids since they both contain a non trivial unit , namely @xmath114 in both cases .    also note that all the non zero elements of the additive monoid @xmath115 are primes though it does not contain a single irreducible element .",
    "a more intricate phenomenon arises with polynomials @xcite : the ( multiplicative ) commutative monoid @xmath116\\backslash\\{0\\}$ ] of non zero polynomials with natural coefficients is not free . indeed ,",
    "although each element of @xmath116\\backslash\\{0\\}$ ] is a product of irreducible polynomials these decompositions are not unique : we have @xmath117 where all of the polynomials @xmath118 , @xmath119 , @xmath120 and @xmath121 are irreducible ( which is not the case in the monoid of polynomials with coefficients in @xmath113 , indeed the ring @xmath122 $ ] is * factorial * @xcite ) .",
    "the geometric model of a concurrent program is a set of points in an euclidean space of finite dimension .",
    "thus each point can be represented by the tuple of its coordinates , and a geometric model becomes a set of tuples ( of same length which corresponds to the dimension of the space ) .",
    "the cartesian product on such structures is the following : @xmath123 however , this operator is not commutative whereas the parallel composition of programs should be so .",
    "thus , in order to model parallel composition , we make the operator @xmath124 commutative monoid through quotient by permutation of coordinates . in the next subsection",
    "we prove a freeness theorem for a monoid generalizing this idea : tuples of ( real ) coordinates are replaced by words over an arbitrary ( potentially infinite ) alphabet .",
    "the geometric model of a pv program therefore belongs to a free commutative monoid and thus admits a unique decomposition of irreducible elements , from which the processes factorization is deduced .",
    "let @xmath45 be a set called the alphabet .",
    "the _ non commutative _ monoid of words @xmath125 consists on the finite sequences of elements of @xmath45 together with * concatenation*. given words @xmath126 and @xmath127 of length @xmath10 and @xmath128 , the word @xmath129 of length @xmath130 is defined by @xmath131 the length of a word @xmath126 is also refered to as @xmath132 .",
    "a * subword * of @xmath126 is a word of the form @xmath133 where @xmath103 is a strictly increasing map @xmath134 .",
    "hence a subword of @xmath126 is also entirely characterized by the image of the increasing map @xmath103 i.e.  by a subset of @xmath135",
    ". if @xmath136 is the image of @xmath103 then we write @xmath137 instead of @xmath133 .",
    "the @xmath138 _ symmetric group _ @xmath139 ( the group of permutations of the set @xmath140 ) acts on the set of words of length @xmath10 by composing on the right , that is for all @xmath141 and all word @xmath126 of length @xmath10 we have @xmath142 the concatenation extends to sets of words . given @xmath143 , define @xmath144 remark that this concatenation of sets corresponds to the cartesian product .",
    "the set @xmath145 of subsets of @xmath125 is thus endowed with a structure of _ non commutative _ monoid whose neutral element is @xmath146 : the singleton containing the empty word .",
    "note that the empty set @xmath147 is the _ absorbing _ element of @xmath145 , that is for all @xmath148 we have @xmath149 a subset @xmath150 of @xmath125 is said to be * homogeneous * when all the words it contains share the same length @xmath10 . by analogy with the geometric construction , @xmath10",
    "is called the dimension of @xmath150 and denoted by @xmath151 .",
    "the symmetric group @xmath139 acts on the set of homogeneous set of dimension @xmath10 in a natural way by applying the same permutation to all words : @xmath152 the homogeneous subsets of @xmath125 form a sub - monoid @xmath153 of @xmath145 and can be equipped with an equivalence relation as follows : write @xmath154 when @xmath155 and there exists @xmath141 such that @xmath156 .",
    "moreover , for two permutations @xmath141 and @xmath157 , define the * juxtaposition * @xmath158 as : @xmath159 a godement - like exchange law is satisfied , which ensures that @xmath160 is actually a congruence : @xmath161 hence the quotient @xmath162 from which the absorbing element has been removed is still a monoid called the * homogeneous monoid * over @xmath45 and denoted by @xmath163 .",
    "moreover the homogeneous monoid is commutative and its only unit is the singleton @xmath146 .",
    "remark that if the alphabet @xmath45 is a singleton ( resp .",
    "the empty set ) then the homogeneous monoid @xmath163 is isomorphic to @xmath164 ( resp .",
    "the null monoid ) .",
    "we check the conditions 1 - 3 which characterize the free commutative monoids ( see section 3.2 ) .",
    "since @xmath165 we deduce from a straightforward induction on the dimension of elements of @xmath163 that they can all be written as products of irreducible elements : @xmath166 generates @xmath163 .",
    "now suppose @xmath167 is an irreducible element of @xmath163 which divides @xmath168 and pick @xmath169 , @xmath170 and @xmath171 respectively from the equivalence classes @xmath167 , @xmath172 and @xmath173 .",
    "define @xmath174 , @xmath175 and @xmath176 , and remark that @xmath177 .",
    "there exists @xmath141 and some @xmath178 such that @xmath179 in @xmath153 .",
    "suppose in addition that @xmath150 does not divide @xmath172 nor @xmath173 , then we have @xmath180 and @xmath181 s.t .",
    "@xmath182 , @xmath183 and @xmath184 where @xmath185 .",
    "then we have a non trivial factoring @xmath186 where @xmath187 this contradicts irreducibility of @xmath150 .",
    "hence @xmath150 divides @xmath172 or @xmath173 and thus @xmath150 is prime .",
    "so any irreducible element of @xmath163 is prime : @xmath188 .",
    "finally , suppose @xmath150 is a prime element of @xmath163 such that @xmath189 .",
    "in particular @xmath150 divides @xmath168 , and since @xmath150 is prime it divides @xmath172 or @xmath173 .",
    "both cases being symmetrical , suppose @xmath150 divides @xmath172 .",
    "in particular @xmath190 . on the other hand @xmath191 , and thus @xmath192 .",
    "dimensions being natural numbers , we deduce that @xmath193 and then that @xmath194 . hence @xmath150 is irreducible , and @xmath195 .",
    "one of the worthy feature of the construction is that any binary relation @xmath196 over @xmath197 which is compatible with the product and satifies @xmath198 can be extended to a relation on @xmath163 which is still compatible with the product .",
    "actually it suffices to set @xmath199 when @xmath155 and there exists a representative @xmath79 of @xmath150 and a representative @xmath200 of @xmath201 such that for all @xmath141 we have @xmath202 .",
    "in addition , if the relation @xmath196 satisfies @xmath203 then the quotient map is compatible with @xmath196 and its extension .",
    "the relation of inclusion @xmath204 over @xmath197 obviously satisfies these properties and therefore extends to @xmath163 .",
    "a * cube * of dimension @xmath10 is a word of length @xmath10 on the alphabet @xmath205 of _ non - empty _ intervals of @xmath29 .",
    "the elements of @xmath206 are called the * cubical coverings*. furthermore the homogeneous monoid @xmath206 is endowed with a preorder arising from the inclusion on @xmath205 .",
    "indeed , given two sets of cubes of the same length @xmath79 and @xmath200 we write @xmath207 when for all cubes @xmath208 there exists a cube @xmath209 such that @xmath210 .",
    "the relation @xmath211 provides the monoid @xmath212 with a preorder that can be extended to @xmath206 by setting @xmath213 when @xmath155 and there exists a representative @xmath79 of @xmath150 and a representative @xmath200 of @xmath201 such that for all @xmath141 we have @xmath214 .",
    "we now establish a galois connection between @xmath215 and @xmath216 . given a cubical covering @xmath86",
    "we define @xmath217 as @xmath218 furthermore @xmath219 is a morphism of monoids and if @xmath220 then @xmath221 .",
    "conversely , given some @xmath79 in @xmath222 the collection of @xmath10-dimensional cubes @xmath223 such that @xmath224 , ordered by inclusion , is a semilattice whose maximal elements are called the * maximal cubes * of @xmath79 .",
    "the set @xmath225 of maximal cubes of @xmath79 is homogeneous and for all @xmath141 ,  @xmath226 .",
    "then given @xmath227 we define @xmath228 as @xmath229 furthermore @xmath43 is a morphism of monoids and if @xmath230 then @xmath231",
    ". then we have a galois connection :     given @xmath227 and @xmath232 we say that @xmath86 is a cubical covering of @xmath150 when @xmath233 .",
    "the * cubical areas * are the elements @xmath150 of @xmath234 which admit a _ finite _ cubical covering . the collection of cubical areas ( resp .",
    "finite cubical coverings ) forms a sub - monoid ` are ` of @xmath234 ( resp . `",
    "cov ` of @xmath206 ) .",
    "the restrictions of the morphisms @xmath219 and @xmath43 to ` cov ` and ` are ` induce another galois connection .     moreover ,",
    "the morphisms @xmath219 and @xmath43 of proposition [ galois_connection2 ] induce a pair of isomorphisms of commutative monoids between ` are ` and the collection of fixpoints of @xmath235 .",
    "a submonoid of a free commutative monoid may not be free . yet , under a simple additional hypothesis this pathological behaviour is no more possible .",
    "we say that a submonoid @xmath1 of a monoid @xmath92 is * pure * when for all @xmath236 , @xmath237 and @xmath238 .",
    "let @xmath1 be a pure submonoid of a free commutative monoid @xmath92 .",
    "let @xmath34 be an element of @xmath1 written as a product @xmath239 of irreducible elements of @xmath92 .",
    "each @xmath240 is obviously an irreducible element of @xmath1 so any element of @xmath1 can be written as a product of irreducible elements of @xmath1 .",
    "furthermore any irreducible element of @xmath1 is also an irreducible element of @xmath92 because @xmath1 is pure in @xmath92 .",
    "it follows that any elements of @xmath1 can be written as a product of irreducible elements of @xmath1 in a unique way i.e.  @xmath1 is free .",
    "then we have :    let @xmath102 and @xmath241 be two elements of @xmath234 and suppose @xmath242 belongs to ` are ` . since both @xmath43 and @xmath219 are morphisms of monoids we have @xmath243 which is finite .",
    "it follows that both @xmath244 and @xmath245 are finite .",
    "hence @xmath102 and @xmath241 actually belongs to ` are ` , which is thus free as a pure submonoid of @xmath234 .",
    "beyond their theoretical usefulness , the maximal cubes provide the data structure which allows to handle algorithmically cubical areas , as in the static analyzer ` alcool ` which is devoted to the study of parallel programs .",
    "[ algorithm ]      we need an algorithm which performs decompositions in @xmath163 , its implementation is directly based on the proof of the theorem [ homogeneous_is_commutative_free ] : @xmath246 is reducible if and only if there exists some representative @xmath79 of @xmath150 which admits a non trivial decomposition in @xmath153 . in order to describe the algorithm we define @xmath247 for any @xmath248 and @xmath249 .",
    "moreover for @xmath250 with @xmath251 , and @xmath252 the complement of @xmath136 ( in @xmath253 ) , we define the set of words @xmath254 then the class @xmath255\\in{\\hmaj}(\\a)$ ] divides @xmath150 if and only if for all @xmath256 one has @xmath257 $ ] . in the monoid @xmath163",
    "we thus have @xmath258\\ast[s\\circ a^c]=h \\ ] ] then we look for some divisor of @xmath150 by testing all the non empty subsets @xmath136 of @xmath259 according to the following total ordering @xmath260 where @xmath261 is the lexicographic ordering . doing so , we know that if @xmath136 is the first value such that @xmath255 $ ] divides @xmath150 , then @xmath255 $ ] is irreducible",
    ". moreover we have @xmath262)=|a|$ ] and for all @xmath263 , @xmath264 hence we can suppose @xmath265 the software ` alcool ` is entirely written in ` ocaml ` .",
    "the complexity of the decomposition algorithm implemented in it is exponential in the dimension @xmath10 of the cubical area since it checks all the subsets of @xmath266 .",
    "however the computation time actually devoted to the decomposition is rather small with regard to the global execution time required by the whole analysis . indeed the algorithm which builds the state space of the program , though it has the same theoretical complexity as the decomposition algorithm , has to handle heavier structures .",
    "we treat the case of the program @xmath23 given in example  [ indexample ] .",
    "its geometric model is given on the left hand side of figure  [ cubexample ] .",
    "applying the permutation @xmath267 we obtain the right hand side set .    ....",
    "[ 0,1[*[0,1[*[0,-[*[0,- [                                ....    0.1    ....     [ 0,1[*[0,-[*[0,1[*[0,- [                                ....    then we can check that the ( right hand side of figure  [ cubexample ] ) cubical area can be written as    @xmath268`[0,1[*[0,- [ \\| [ 4,-[*[0,- [ \\| [ 0,-[*[0,1 [ \\| [ 0,-[*[4,-[`@xmath269    then we have @xmath270 and it follows that in the program @xmath23 the sets of processes @xmath271 and @xmath272 run independently from each other .      we describe some programs upon which the algorithm has been tested",
    "the program @xmath273 is made of @xmath63 groups of processes : for all @xmath274 it contains @xmath275 copies of the process @xmath276 where @xmath277 is a mutex and @xmath16 is a semaphore of arity @xmath278 .",
    "all processes then share the resource @xmath16 , but as for @xmath23 in example  [ indexample ] the @xmath63 groups are actually independent . on the other hand",
    "the program @xmath279 is the same as @xmath273 but with @xmath16 of arity only @xmath63 , which forbids any decomposition .",
    "the @xmath10-philosophers programs implement the standard @xmath10 dining philosophers algorithm .",
    "the benchmark table of figure  [ bench ] has been obtained using the unix command ` time ` which is not accurate .",
    "hence these results have to be understood as an overapproximation of the mean execution time .    [ cols=\"^,^,^\",options=\"header \" , ]     it is also worth remarking that our algorithm is efficient when the cubical area to decompose is actually a cartesian product of several irreducible cubical areas of small dimension .",
    "this remark should be compared with the fact that the standard decomposition algorithm of integer into primes is very efficient on products of small prime numbers .",
    "* related work .",
    "*    the problem of decomposition of concurrent programs in _ ccs_-style has been studied in @xcite and  @xcite . by the possibility of using semaphores of arbitrary arity",
    ", our work seems to go beyond this previous approach .",
    "also note that the silent and synchronous communication mechanism of _ ccs _ can be given a straightforward geometric interpretation which falls in the scope of the present discussion .",
    "however , the link between bisimilarity in _ ccs _ and isomorphic geometric interpretations is still to be explored to make clear the relations between these works .    in  @xcite _ b. luttik _ and _ v. van oostrom _ have characterized the commutative monoids with unique decomposition property as those which can be provided with a so - called decomposition order . in the case where the property holds , the divisibility order always fits . yet",
    ", there might exist a more convenient one .",
    "unfortunately , in the current setting the authors are not aware of any such order yielding direct proofs .",
    "nevertheless it is worth noticing that this approach is actually applied for decomposition of processes in a normed acp theory for which a convenient decomposition order exists .",
    "this paper uses a geometric semantics for concurrent programs , and presents a proof of a unique decomposition property together with an algorithm working at this semantic level ( theorem  [ monoid_of_cubical_areas_is_commutative_free ] ) .",
    "the main strength of this work is that it applies to any concurrent program yielding a cubical area .",
    "example of features allowed in this setting are : semaphores , synchronisation barriers , synchronous as well as asynchronous communications ( with finite or infinite message queues ) , conditional branchings .",
    "in fact we can even consider loops provided we replace the set @xmath205 of intervals of the real line @xmath29 by the set @xmath280 of arcs of the circle .",
    "actually , a cubical area naturally enjoys a pospace structure .",
    "pospaces are among simplest objects studied in _ directed algebraic topology_. in particular , a cubical area is associated with its category of components @xcite and @xcite , which is proven to be finite , loop - free and in most cases connected . then , as the cubical areas do , these categories together with cartesian product form a free commutative monoid .",
    "it is worth noticing this is actually the generalization of a result concerning finite posets which has been established in the early fifties @xcite",
    ". therefore a program @xmath71 can be decomposed by lifting the decomposition of the category of components of its geometric model @xmath82 . in general , the relation between the decomposition of a cubical area and the one of its category of components is a theoretical issue the authors wish to investigate .",
    "another important concern is a clarification of the control constructs compatible with cubical areas : replacing in some dimensions the intervals of the real line by the arcs of the circle as mentioned above corresponds to a global loop , but some richer structures may be useful .",
    "a final point of interest is the investigation of the exact relation between our semantic results and the syntactic ones of  @xcite .",
    "indeed they use @xmath281-like syntaxes to describe some classes of edge - labelled graphs modulo bisimilarity , whereas the category of components of our models correspond to some other graphs modulo directed homotopy .",
    "hence the question : what is in this setting the relation between bisimilarity and homotopy ?",
    "dang thao .",
    "methods and tools for computer aided design of embedded systems .",
    "hdr thesis , chapter 5 .",
    "glynn winskel .",
    "handbook of logic in computer science vol.4 : semantic modelling .",
    "chapter 1 .",
    "oxford university press , 1995 ."
  ],
  "abstract_text": [
    "<S> this paper proposes a geometric solution to the problem of prime decomposability of concurrent processes first explored by r. milner and f. moller in  @xcite . </S>",
    "<S> concurrent programs are given a geometric semantics using cubical areas , for which a unique factorization theorem is proved . </S>",
    "<S> an effective factorization method which is correct and complete with respect to the geometric semantics is derived from the factorization theorem . </S>",
    "<S> this algorithm is implemented in the static analyzer ` alcool ` . </S>"
  ]
}
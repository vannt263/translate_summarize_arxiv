{
  "article_text": [
    "many known lower bounds for natural problems follow a type of algorithmic argument that we call a _ resource - trading proof_. such a proof assumes that a hard problem _ can _ be solved by a `` good '' algorithm , and tries to derive a contradiction by combining two essential components .",
    "one is a _ speedup lemma _ , which simulates all good algorithms super - efficiently on some `` interesting '' computational model , trading time for some resource .",
    "the second component is a _ slowdown lemma _ , which uses the assumed good algorithm for the hard problem to simulate computations from the `` interesting '' model by good algorithms , thereby trading the `` interesting '' resource for more time .",
    "clever combinations of speedup and slowdown lemmas are used to contradict a known result , in particular some complexity hierarchy theorem .",
    "that is , by assuming a `` good '' algorithm for a hard problem , we derive something like @xmath1 \\isin \\time[n]$ ] , a contradiction .    as an example",
    ", one can prove a time - space tradeoff for satisfiability ( sat ) as follows .",
    "assume sat has an algorithm running in @xmath2 time and @xmath3 space , for some @xmath4 .",
    "one speedup lemma is that computations running in @xmath5 time and @xmath3 space can be simulated by an _ alternating machine _ that switches from co - nondeterministic mode to nondeterministic mode once ( i.e. , a @xmath6 $ ] machine ) , and runs in @xmath7 time .",
    "this speedup lemma _",
    "trades time for alternations_. the relevant slowdown lemma is : if sat has an @xmath2 time , @xmath3 space algorithm , then ( by a strengthening of the cook - levin theorem ) every language in @xmath8 $ ] has @xmath9 time , @xmath10 space algorithms",
    ". consequently , an alternating machine running in @xmath11 time and making @xmath12 alternations has @xmath13 time , @xmath10 space algorithms . combining these speedup and slowdown lemmas",
    ", we derive @xmath14 \\t[t ] \\isin \\dtisp[t^{c^2+o(1)},\\poly(\\log t ) ] \\isin \\pie[2 ] \\t[t^{c^2/2}],\\ ] ] where the first inclusion holds by slowdown and the second holds by speedup . now observe that the alternating time hierarchy is contradicted when @xmath15 .",
    "this proof is the @xmath16 time lower bound of lipton and viglas  @xcite .",
    "some of the best known separations in complexity theory use resource - trading proofs .",
    "hopcroft , paul , and valiant  @xcite showed that @xmath17 \\isnotin \\dtime[o(n \\log n)]$ ] for multitape turing machines , by proving the `` speedup lemma '' that @xmath18 \\subseteq \\sp[t/\\log t]$ ] and invoking diagonalization .",
    "their result was later extended to general models  @xcite .",
    "paul , pippenger , szemeredi , and trotter  @xcite proved that @xmath19 \\neq \\dtime[n]$ ] for multitape turing machines .",
    "the key component in the proof is the `` speedup lemma '' @xmath20 \\isin \\sig[4 ] \\t[t/\\log^ * t]$ ] for multitape tms . despite their age",
    ", the above separations still constitute the best known progress on @xmath21 vs @xmath22 and @xmath21 vs @xmath23 , respectively .    in more recent years",
    ", resource - trading proofs have established time - space lower bounds for @xmath24-complete problems and problems higher in the polynomial hierarchy  @xcite . for instance , the best known time lower bound for solving sat with @xmath25-space algorithms is @xmath26 , obtained with a resource - trading proof  @xcite .",
    "( note if one could improve the @xmath27 exponent to arbitrary constants , one would separate @xmath28 from @xmath23 . ) for nondeterministic algorithms using @xmath25 space , the best known time lower bound for solving the @xmath29-complete tautology problem was @xmath30 for several years  @xcite .",
    "certain time - space lower bounds for probabilistic and quantum computations also follow the resource - trading paradigm  @xcite .",
    "resource - trading proofs are also abound in the multidimensional `` hybrid '' turing machine model , which has read - only random access to its input and an @xmath25 read - write store , as well as read - write two - way access to a @xmath31-dimensional tape for some @xmath32 .",
    "this is the most powerful ( and physically realistic ) model known where we still know non - trivial time lower bounds for problems such as sat .",
    "multidimensional tms have a long history ; e.g. , @xcite proved lower bounds for them .",
    "( for a more complete literature review , please see the full version of the paper . )",
    "we introduce a methodology for reasoning about resource - trading proofs that is also practically implementable for finding short proofs .",
    "informally , the `` hard work '' in these proofs can be replaced by solving a series of linear programming problems .",
    "this perspective not only aids us practically in the search for new lower bounds , but also allows us to show non - trivial limitations on what can be proved .",
    "this methodology is applied to several lower bound problems . in all cases considered here ,",
    "the resource being `` traded '' is alternations , so we call the proofs _ alternation - trading_. _ deterministic time - space lower bounds . _ aided by results of a computer program , we show that any sat algorithm running in @xmath33 time and @xmath34 space satisfies @xmath35 .",
    "previously , the best known result was @xmath36  @xcite .",
    "it has been conjectured that the current framework sufficed to prove a @xmath37 time lower bound for sat , against algorithms using @xmath25 space .",
    "we prove that it is not possible to obtain @xmath38 with the framework , formalizing a conjecture of  @xcite .",
    "a computer search over proofs of short length suggests that the best known @xmath39 lower bound  @xcite is already optimal for the framework .",
    "we also prove lower bounds on @xmath40 ( quantified boolean formulas with at most @xmath41 quantifier blocks ) , showing that the problem requires @xmath42 time for @xmath25 space algorithms , where @xmath43 and @xmath44 .",
    "results appeared in the author s phd thesis in 2007 but have been unpublished to date . ] _ nondeterministic time - space lower bounds .",
    "_ adapting our ideas to proving lower bounds for tautologies , a computer program found a very short proof improving upon fortnow and van melkebeek s lower bound .",
    "longer proofs suggested an interesting pattern .",
    "joint work with diehl and van melkebeek on this observation resulted in an @xmath45 time lower bound  @xcite .",
    "computer search suggests that this lower bound is best possible for the framework .",
    "we prove that it is not possible to obtain an @xmath46 time lower bound , where @xmath47 is the golden ratio .",
    "this is surprising since we have known for some time that an @xmath46 lower bound _ is _",
    "provable for _ deterministic _ algorithms  @xcite .",
    "_ multidimensional turing machine lower bounds .",
    "_ here our method uncovers peculiar behavior in the best lower bound proofs , regardless of the dimension . studying computer search results",
    ", we extract an @xmath48 time lower bound for the @xmath31-dimensional case , where @xmath49 is the root of a particular quintic @xmath50 with coefficients depending on @xmath31 .",
    "for example , @xmath51 , @xmath52 , and @xmath53 .",
    "again , our search suggests this is best possible , and we can prove it is not possible to improve the bound for @xmath31-dimensional tms to @xmath54 with the current tools .",
    "these limitations also hold for other @xmath24 and @xmath29-hard problems ; the only property required is that all languages in @xmath19 $ ] ( respectively , @xmath55 $ ] ) have sufficiently efficient reductions to the problem .",
    "also our linear programming approach is not limited to the above , and can be applied to the league of lower bounds discussed in van melkebeek s surveys  @xcite .",
    "the key to our formulation is to separate the _",
    "discrete choices _ in an alternation - trading proof from the _ real - valued choices_. the discrete choices consist of the sequence of lemmas to apply in each step , and what sort of hierarchy theorem to use in the contradiction .",
    "we present several simplifications that greatly reduce the number of discrete choices , without loss of generality .",
    "the real - valued choices are the running time exponents that arise from the choices of time bounds and rule applications .",
    "we prove that once the discrete choices are made , the remaining real - valued problem can be expressed as an instance of linear programming .",
    "this makes it possible to search for new proofs via computer , and it also gives us a formal handle on the limitations of these proofs .",
    "one can not easily search over all possible proofs , as the number of discrete choices is still about @xmath56 for proofs of @xmath57 lines ( proportional to the @xmath57th catalan number ) .",
    "nevertheless it is still feasible to try all @xmath58 line proofs .",
    "these proof searches reveal patterns , indicating that certain strategies will be most successful in proving lower bounds ; in each case we study , the resulting strategies differ . following the strategies ,",
    "we establish new lower bound proofs .",
    "the patterns also suggest how to show limitations on the proof systems .",
    "* note : * _ due to space limitations , we can only describe how our methods apply to sat time - space lower bounds .",
    "please see the full version of the paper for proofs and more details . _",
    "we assume familiarity with complexity theory , especially the notion of alternationwe use big-@xmath59 notation in the infinitely often sense , so statements like `` sat is not in @xmath60 time '' are equivalent to `` sat requires @xmath61 time . ''",
    "all functions are assumed constructible within the appropriate bounds .",
    "our default computational model is the random access machine , broadly construed : particular variants do not affect the results .",
    "$ ] is the class of languages accepted by a ram running in @xmath33 time and @xmath34 space , simultaneously . for convenience , we set @xmath63 : = \\dtisp[t(n)^{1+o(1)},n^{o(1)}]$ ] to omit negligible @xmath64 factors .",
    "in order to properly formalize alternation - trading proofs , we introduce notation for alternating complexity classes that include _ input constraints _ between alternations .",
    "let us start with an example of the notation , then give a general definition .",
    "define @xmath65 $ ] to be the class of languages recognized by a machine which , on an input @xmath66 of length @xmath57 , writes a @xmath67 bit string @xmath68 nondeterministically , copies at most @xmath69 bits @xmath70 from the pair @xmath71 ( in @xmath72 time ) , then feeds @xmath70 as input to a machine @xmath73 running in @xmath74 time and @xmath25 space .",
    "note the runtime of @xmath73 is measured with respect to the initial input length @xmath57 , not the latter input length @xmath69 of @xmath70 .",
    "we generalize this definition as follows .",
    "let @xmath75 be a complexity class .",
    "for @xmath76 , let @xmath77 and @xmath78 .",
    "define @xmath79 to be the class of languages recognized by a machine @xmath73 that , on input @xmath66 of length @xmath57 , has the following general behavior on input @xmath66 :    [ cols= \" < \" , ]     when an input constraint @xmath80 is unspecified , its default value is @xmath81 .",
    "we say that the existential and universal modes of an alternating computation are _ quantifier blocks _ , to reflect the complexity class notation .",
    "it is crucial to observe that the time bound in the @xmath82th quantifier block is measured with respect to @xmath57 , the input to the _ first quantifier block_.    notice that by simple properties of nondeterminism and conondeterminism , we can combine adjacent quantifier blocks that are of the same type , e.g. , @xmath83 = ( \\exists n^{\\max\\{a , b\\}})^{b}\\dts[n^c]$ ] .",
    "this useful property is exploited in alternation - trading proofs .",
    "here we give a brief overview of the tools used in alternation - trading proofs . in this extended abstract",
    "we focus on deterministic time lower bounds for satisfiability for algorithms using @xmath25 workspace ; the other lower bound problems use similar tools .",
    "it is known that satisfiability of boolean formulas in conjunctive normal form ( sat ) is a complete problem under tight reductions for a small nondeterministic complexity class .",
    "the class @xmath84 , called _ nondeterministic quasilinear time _ ,",
    "is defined as @xmath85 = \\ntime[n \\cdot poly(\\log n)].\\ ] ]    [ satfact ] sat is @xmath84-complete under quasilinear time @xmath86 space reductions , for both multitape and random access machine models . moreover ,",
    "each bit of the reduction can be computed in @xmath87 time and @xmath86 space in both machine models .",
    "let @xmath88 $ ] represent a time @xmath33 complexity class under one of the three models :    * deterministic ram using time @xmath11 and @xmath89 space , * co - nondeterministic ram using time @xmath11 and @xmath89 space , * @xmath31-dimensional turing machine using time @xmath11 .",
    "theorem  [ satfact ] implies that if @xmath90 \\isnotin \\mathcal{c}[t]$ ] , then sat  @xmath91 $ ] .",
    "[ satsolve ] if @xmath90 \\nsubseteq \\mathcal{c}[t(n)]$ ] , then sat@xmath92 $ ] for some @xmath93 .",
    "hence we wish to prove @xmath19 \\isnotin \\mathcal{c}[n^c]$ ] for large @xmath4 . to prove time - space lower bounds",
    ", we work with @xmath94 = \\dts[n^c ] = \\dtisp[n^c , n^{o(1)}]$ ] .",
    "van melkebeek and raz  @xcite observed that a similar corollary holds for any problem @xmath95 such that sat reduces to @xmath95 under highly efficient reductions , _",
    "e.g. _ vertex cover , hamilton path , 3-sat , and max-2-sat .",
    "therefore similar time lower bounds hold for these problems as well .",
    "[ [ speedups - slowdowns - and - contradictions . ] ] * speedups , slowdowns , and contradictions . *",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    now that our goal is to prove @xmath19 \\isnotin \\dts[n^c]$ ] , how can we do this ? in an alternation - trading proof , we attempt to establish a contradiction from assuming @xmath19 \\isin   \\dts[n^c]$ ] , by applying two lemmas which complement one another .",
    "speedup lemma _ takes a @xmath96 $ ] class and places it in an alternating class with runtime @xmath97 .",
    "slowdown lemma _ takes an alternating class with runtime @xmath11 and places it in a class with one less alternation and runtime @xmath98 .",
    "the speedup lemma dates back to nepomnjascii  @xcite and kannan  @xcite .",
    "[ speedup ] let @xmath99 , @xmath100 and @xmath101 .",
    "then @xmath102 \\isin ( q_1~n^{x+e})^{\\max\\{1,x+e\\}}(q_2~\\log n)^{\\max\\{1,e\\}}\\dtisp[n^{a - x},n^e],\\ ] ] for @xmath77 where @xmath103 .",
    "in particular , @xmath104 \\isin ( q_1~n^{x})^{\\max\\{1,x\\}}(q_2~\\log n)^1\\dts[n^{a - x}].\\ ] ]    let @xmath73 use @xmath5 time and @xmath105 space .",
    "let @xmath68 be an input of length @xmath57 . a complete description ( i.e. _ configuration _ ) of @xmath106 at any step can be described in @xmath107 space .",
    "to simulate @xmath73 in @xmath108 $ ] , the algorithm @xmath109 existentially guesses a sequence of configurations @xmath110 of @xmath111 .",
    "then @xmath109 appends the initial configuration @xmath112 of @xmath106 to the beginning of the sequence , and an accepting configuration @xmath113 to the end . @xmath109",
    "universally guesses a @xmath114 , erases all configurations except @xmath115 and @xmath116 , then simulates @xmath106 starting from @xmath115 , accepting if and only if @xmath116 is reached within @xmath117 steps .",
    "it is easy to see the simulation is correct .",
    "the input constraints on the quantifier blocks are satisfied since after the universal guess , the input is only @xmath68 , @xmath118 , and @xmath116 , which is of size @xmath119 .",
    "observe in the above alternating simulation , the input to the final @xmath120 computation is linear in @xmath121 , _ regardless of the choice of @xmath66_. this is a subtle property that is exploited heavily in alternation - trading proofs .",
    "the slowdown lemma is the following simple result :    [ slowdown ] let @xmath99 , @xmath100 , @xmath122 , and @xmath123 . if @xmath19 \\isin \\dtisp[n^c , n^e]$ ] , then for both @xmath124 , @xmath125 \\isin \\dtisp[n^{c \\cdot \\max\\{a , a',b\\}},n^{e \\cdot \\max\\{a , a',b\\}}].\\ ] ] in particular , if @xmath19 \\isin \\dts[n^c]$ ] , then @xmath125 \\isin \\dts[n^{c \\cdot \\max\\{a , a',b\\}}].\\ ] ]    let @xmath126 be a problem in @xmath127 $ ] , and let @xmath128 be an algorithm recognizing @xmath126 . on an input @xmath66 of length @xmath57 , @xmath128 guesses a string @xmath68 of length @xmath129 and feeds an @xmath69 bit string @xmath70 to @xmath130 , where @xmath131 is a deterministic algorithm that runs in @xmath5 time . since @xmath19 \\isin \\dtisp[n^c , n^e]$ ] and @xmath120",
    "is closed under complement , by padding we have @xmath132 \\cup \\cont[p(n ) ] \\isin \\dtisp[p(n)^c , p(n)^e]$ ] for polynomials @xmath133",
    ". therefore @xmath128 can be simulated with a deterministic algorithm @xmath134 .",
    "since the runtime of @xmath128 is @xmath135 , the runtime of @xmath134 is @xmath136 and the space usage is similar .    the final component of an alternation - trading proof is a time hierarchy theorem , the most general of which is the following , provable by a simple diagonalization .    [ timehier ] for @xmath137 , for all @xmath138 , @xmath139 , and @xmath140 , @xmath141 \\isnotin ( r_1~n^{a'_1})^{b'_2 } \\cdots^{b'_k}(r_k~ n^{a'_k})^{b'_{k+1}}\\dts[n^{a'_{k+1}}],\\ ] ] where @xmath142 and @xmath143 for all @xmath144 .",
    "* two examples .",
    "* let us give a couple of examples of alternation - trading proofs . to simplify the presentation",
    "we do not specify the input constraints to quantifiers in the below .",
    "\\(1 ) in focs99 , lipton and viglas proved that sat can not be solved by algorithms running in @xmath16 time and @xmath25 space , for all @xmath145 . by theorem  [ satfact ] ,",
    "if sat is in @xmath16 time and @xmath25 space then @xmath90 \\isin \\dts[n^c]$ ] with @xmath15 .",
    "we have @xmath146 & \\isin & ( \\exists~n^{2/c^2})\\dts[n^{2/c } ] & \\text{(slowdown lemma)}\\\\ & \\isin & \\dts[n^2 ] & \\text{(slowdown lemma)}\\\\ & \\isin & ( \\forall~n)(\\exists~\\log n)\\dts[n ] . &",
    "\\text{(speedup lemma , with } x = 1\\text { ) } \\end{array}\\ ] ]    but @xmath147 \\isin ( \\forall~n)(\\exists~\\log n)\\dts[n]$ ] contradicts theorem  [ timehier ] .",
    "in fact , one can show that if @xmath148 , we still have a contradiction with @xmath19 \\isin \\dts[n^c]$ ] , so the @xmath149 can be removed from the previous statement and state that sat can not be solved in @xmath150 time and @xmath25 exactly .",
    "\\isin \\dts[n^c]$ ] and @xmath151 \\t[n ] \\isin \\pie[2 ] \\t[n^{1+o(1)}]$ ] .",
    "the first assumption , along with the speedup and slowdown lemmas , implies that for every @xmath41 there s a @xmath152 satisfying @xmath151 \\t[n^k ] \\isin \\nt[n^{kc } ] \\isin \\sig[k ] \\t[n]$ ] .",
    "but the second assumption implies that @xmath153 \\t[n ] = \\sig[2 ] \\t[n^{1+o(1)}]$ ] .",
    "hence @xmath151 \\t[n^k ] \\isin \\sig[2 ] \\t[n^{1+o(1)}]$ ] , which contradicts the time hierarchy for @xmath151 \\t$ ] . ]",
    "\\(2 ) improving on the previous example , one can show sat @xmath154 $ ] . if @xmath90 \\isin \\dts[n^c]$ ] and @xmath155 , then applying the speedup and slowdown lemmas one can derive : @xmath156 & \\isin & ( \\exists~n^{c^2/2})(\\forall~\\log n)\\dts[n^2 ] & \\text{(speedup)}\\\\ & \\isin & ( \\exists~n^{c^2/2})(\\forall~\\log n)(\\forall~n)(\\exists~\\log n)\\dts[n ] & \\text{(speedup)}\\\\ & = & ( \\exists~n^{c^2/2})(\\forall~n)(\\exists~\\log n)\\dts[n ] & \\text{(combining $ \\forall$ quantifiers)}\\\\ & \\isin & ( \\exists~n^{c^2/2})(\\forall~n)\\dts[n^c ] & \\text{(slowdown)}\\\\ & \\isin & ( \\exists~n^{c^2/2})\\dts[n^{c^2 } ] & \\text{(slowdown)}\\\\ & \\isin & ( \\exists~n^{c^2/2})(\\exists~n^{c^2/2})(\\forall~\\log n)\\dts[n^{c^2/2 } ] & \\text{(speedup)}\\\\ & = & ( \\exists~n^{c^2/2})(\\forall~\\log n)\\dts[n^{c^2/2 } ] & \\text{(combining $ \\exists$ quantifiers)}\\\\ & \\isin & ( \\exists~n^{c^2/2})\\dts[n^{c^3/2 } ] & \\text{(slowdown)}\\\\ & \\isin & \\dts[n^{c^4/2 } ] & \\text{(slowdown ) } \\end{array}\\ ] ] when @xmath157 ( which happens if @xmath158 ) , we have @xmath159 \\isin \\dts[n^{a'}]$ ] for some @xmath160 .",
    "one can show by a translation argument ( similar to the footnote ) that either @xmath159 \\isnotin \\dts[n^{a'}]$ ] or @xmath90 \\isnotin \\dts[n^c]$ ] , concluding the proof .",
    "example ( 2 ) was discovered by a computer program . by",
    "`` discovered '' , we mean that the program applied speedups and slowdowns in precisely the same way , having only minimum knowledge of the lemmas .",
    "furthermore , the program verified that above is the _ best possible _ alternation - trading proof that applies the speedup and slowdown lemmas at most @xmath161 times .",
    "a more formal definition of `` alternation - trading proof '' is given in the next section .",
    "we formalize alternation - trading proofs of lower bounds on @xmath162 classes as follows :    let @xmath4 .",
    "an _ alternation - trading proof for @xmath163 _ is a list of complexity classes of the form : @xmath164,\\ ] ] where @xmath137 , @xmath77 , @xmath165 , @xmath166 , and @xmath167 , for all @xmath82 .",
    "( when @xmath168 , the class is deterministic . )",
    "the items of the list are called _ lines of the proof_. each line is obtained from the previous line by applying either a _ speedup rule _ or a _ slowdown rule_. more precisely , if the @xmath82th line is    @xmath169,$ ]    then the @xmath170st line has one of four possible forms :    * speedup rule 0 : * for @xmath171 and any @xmath172 , @xmath173$].th quantifier is @xmath174 in order to account for the @xmath86 size of the quantifier . ]",
    "* speedup rule 1 : * for @xmath93 and any @xmath175 , @xmath176.\\ ] ]    * speedup rule 2 : * for @xmath93 and any @xmath175 , @xmath177.\\ ] ]    * slowdown rule : * for @xmath93 , @xmath178.\\ ] ]    an alternation - trading proof _ shows _",
    "\\isin \\dts[n^c ] \\longrightarrow a_1 \\subseteq a_2)$ ] if its first line is @xmath180 and its last line is @xmath181 .",
    "the above definition comes directly from the speedup lemma  ( lemma  [ speedup ] ) and slowdown lemma  ( lemma  [ slowdown ] ) .",
    "the rules are easily verified to be syntactic formulations of the corresponding lemmas . for instance , speedup rule 1 holds , as @xmath182   & \\\\ & \\isin ( q_1~ n^{a_1})^{b_2}(q_2~ n^{a_2 } ) \\cdots^{b_k}(q_k~ n^{a_k})^{b_{k+1 } } ( q_k~ n^x)^{\\max\\{b_{k+1},x\\}}(q_{k+1}~n^0)^{b_{k+1 } } \\dts[n^{a_{k+1 } } ] & \\\\ & \\isin ( q_1~n^{a_1})^{b_2 } ( q_2~n^{a_2 } ) \\cdots^{b_k}(q_k~n^{\\max\\{a_k , x\\}})^{\\max\\{b_{k+1},x\\}}(q_{k+1}~n^0)^{b_{k+1 } } \\dts[n^{a_{k+1 } } ] . & \\end{aligned}\\ ] ] rule 2 is akin to rule 1 , except that it uses opposite quantifiers in its invocation of the speedup lemma .",
    "the slowdown rule works analogously to lemma  [ slowdown ] .",
    "it follows that alternation - trading proofs are sound .",
    "note speedup rules 0 and 2 add two quantifier blocks , speedup rule 1 adds one quantifier , and all three rules introduce a parameter @xmath66 . by considering `` normal form '' proofs ( defined in the following paragraphs ) , we can prove that rule 2 can always be replaced by applications of rule 1 .",
    "( a proof is in the full version of the paper . ) for this reason we just refer to _ the speedup rule _ , depending on which of rule 0 or rule 1 applies .",
    "define a class of the form ( [ simple ] ) to be _",
    "simple_. define classes @xmath180 and @xmath181 to be _ complementary _ if @xmath180 is the class of complements of languages in @xmath181 .",
    "every known ( model - independent ) time - space lower bound for sat shows `` @xmath19 \\isin \\dts[n^c]$ ] implies @xmath183 '' , for some complementary simple classes @xmath180 and @xmath181 , contradicting a time hierarchy ( cf .",
    "theorem  [ timehier ] ) .",
    "a similar claim holds for nondeterministic time - space lower bounds against tautologies ( which prove `` @xmath19 \\isin \\conts[n^c]$ ] implies @xmath183 '' ) , for @xmath31-dimensional tm lower bounds ( which prove `` @xmath19 \\isin \\dtime_d[n^c]$ ] implies @xmath183 '' ) , and other problems .",
    "* normal form .",
    "* it will be very convenient to introduce a _",
    "normal form _ for alternation - trading proofs .",
    "we show that any lower bound provable with complementary simple classes can also be established with a normal form proof .",
    "this greatly reduces the degrees of freedom in a proof , as we no longer need to worry about _ which _ time hierarchy to contradict .",
    "let @xmath184 .",
    "an alternation - trading proof for @xmath163 is in _ normal form _ if ( a ) the first and last lines are @xmath159 $ ] and @xmath185 $ ] respectively , for some @xmath186 , and ( b ) no other lines are @xmath162 classes .    we show that a normal form proof for @xmath163 implies that @xmath19 \\isnotin \\dts[n^c]$ ] .",
    "[ dtshier ] let @xmath184 . if there is an alternation - trading proof for @xmath163 in normal form having at least two lines , then @xmath19 \\isnotin \\dts[n^c]$ ] .",
    "let @xmath180 and @xmath181 be complementary . if there is an alternation - trading proof @xmath187 for @xmath163 that shows @xmath179 \\isin \\dts[n^c ] \\longrightarrow a_1 \\isin a_2)$ ] , then there is a normal form proof for @xmath163 , of length at most that of @xmath187 .",
    "[ normalform ]    proofs of lemma  [ dtshier ] and theorem  [ normalform ] are in the full version .",
    "the upshot of these results is that we may focus our proof search on normal form proofs . for the remainder of this section , we assume all alternation - trading proofs are in normal form",
    ".    * proof annotations .",
    "* different lower bound proofs can result in quite different sequences of speedups and slowdowns .",
    "_ represents such a sequence .",
    "a _ proof annotation _ for an alternation - trading proof of @xmath188 lines is the @xmath189-bit vector @xmath128 where for all @xmath190 , @xmath191 = 1 $ ] ( respectively , @xmath191 = 0 $ ] ) if the @xmath82th line applies a speedup rule ( respectively , a slowdown rule ) .",
    "an @xmath189-bit proof annotation corresponds to a `` strategy '' for an @xmath188-line proof . for a normal form proof of @xmath188 lines ,",
    "it is not hard to show that its annotation @xmath128 must have @xmath192 = 1 $ ] , @xmath193 = 0 $ ] , and @xmath194=0 $ ] .",
    "note that an annotation _ does not _ determine a proof entirely , as other parameters need optimizing .",
    "( the problem of optimizing them is tackled in the next section . ) to illustrate the annotation concept , we give four examples .    *",
    "the @xmath150 lower bound of lipton and viglas has the annotation @xmath195 $ ] . *",
    "the @xmath196 bound from section  [ shortintro ] corresponds to @xmath197 $ ] . * the @xmath46 bound of fortnow and van melkebeek  @xcite is an inductive proof , corresponding to an infinite sequence of annotations . in normal form ,",
    "the sequence is @xmath195,[1,1,0,0,0],[1,1,1,0,0,0,0],\\ldots$ ] * the @xmath198 bound  @xcite has two inductive stages .",
    "let @xmath199 , where the ` @xmath200 ' contain any number of repetitions .",
    "the sequence is + + @xmath201 , [ 1,a , a ] , [ 1 , 1,a , a , a ] , [ 1,1,1,a , a , a , a],\\ldots$ ] + that is , the proof performs many speedups , then a sequence of many slowdown - speedup alternations , then two consecutive slowdowns , repeating this until all the quantifiers have been removed .      given a ( normal form ) proof annotation , how can we determine the best proof possible with it ? we need to optimally set the runtimes of the first and last @xmath162 classes in the proof , as well as the @xmath202 parameters that arise from each application of a speedup rule .",
    "it turns out that an annotation @xmath128 and @xmath4 can be reduced to a polynomial size linear program that is feasible if and only if there is an alternation - trading proof of @xmath19 \\isnotin \\dts[n^c]$ ] with annotation @xmath128 .",
    "more precisely , the problem of optimizing parameters can be viewed as an arithmetic circuit evaluation , where the circuit has @xmath203 gates , addition gates , and input gates that may multiply their input by @xmath163 .",
    "such circuits can be evaluated using a linear program that minimizes the sum of the gate values ( cf .",
    "let @xmath128 be an annotation of @xmath204 bits , and let @xmath205 be the maximum number of quantifier blocks in any line of @xmath128 ( note @xmath205 is easily computed in linear time ) . the target lp has variables @xmath206 , @xmath207 , and @xmath202 , for all @xmath208 and @xmath209 .",
    "the variables @xmath206 represent the runtime exponent of the @xmath210th quantifier block in the class on the @xmath82th line , @xmath207 is the input exponent to the @xmath210th quantifier block of the class on the @xmath82th line , and for all lines @xmath82 that use a speedup rule , @xmath202 is the choice of @xmath66 in the speedup rule .",
    "for example :    * if the @xmath41th line of a proof is @xmath159 $ ] , the corresponding constraints are + @xmath211 .",
    "* if the @xmath41th line of a proof is @xmath212 $ ] , then the constraints are + @xmath213    the objective is to minimize @xmath214 .",
    "the lp constraints depend on the lines of the annotation , as follows .",
    "* initial constraints . * for the @xmath215th and @xmath189th lines we have @xmath216 , and @xmath217 representing @xmath218 $ ] and @xmath219 $ ] , respectively",
    ". the 1st line of a proof always applies speedup rule 1 , having the form @xmath220 $ ] .",
    "so the constraints for the 1st line are : @xmath221 the below constraint sets simulate the speedup and slowdown rules :    * speedup rule constraints .",
    "* for the @xmath82th line where @xmath222 and @xmath191 = 1 $ ] , we have @xmath223 the constraints express that @xmath224 $ ] in the @xmath225th line is replaced by @xmath226\\ ] ] in the @xmath82th line , where @xmath227 is opposite to @xmath228",
    ".    * slowdown rule constraints . * for the @xmath82th line where @xmath191 = 0 $ ] , the constraints are @xmath229 these express the replacement of @xmath230 $ ] in the @xmath225th line with @xmath231\\ ] ] in the @xmath82th line .",
    "this concludes the description of the linear program . to find the largest @xmath163 that still yields a feasible lp , we can simply binary search for it .",
    "the following summarizes this section .",
    "given an annotation of @xmath57 lines , the best possible alternation - trading proof following the annotation can be determined up to @xmath57 digits of precision , in @xmath232 time .      following the above formulation , we wrote proof search routines in maple .",
    "many millions of proof annotations were tried , including all those corresponding to prior work , with no success beyond the @xmath233 exponent .",
    "the best lower bounds followed a highly regular pattern ; see the full version for more on this .",
    "we are led to :    [ nobetter ] _ there is no alternation - trading proof that @xmath19 \\isnotin \\dts[n^c]$ ] for all @xmath234 . _",
    "proving the conjecture seems currently out of reach .",
    "however , we can show :    [ noquad ] there is no alternation - trading proof that @xmath19 \\isnotin \\dts[n^2]$ ] .",
    "a proof is in the full version . at a high level",
    ", the proof argues that any minimum length proof of a quadratic lower bound could be shortened , giving a contradiction . despite this bad news , the theorem prover did provide enough insight to aid in a new lower bound of @xmath39 on the time - space product of any sat algorithm .",
    "let @xmath33 and @xmath34 be bounded above by polynomials .",
    "any algorithm solving sat in time @xmath11 and space @xmath235 requires @xmath236 for all @xmath145 .",
    "these lower bounds have also been generalized to the qbf problem :    for all @xmath237 , @xmath40 requires @xmath61 time on @xmath25 space rams , where @xmath238 .",
    "we introduced a methodology for reasoning about alternation - trading proofs of lower bounds .",
    "it provides a generic means for computers to help us attack lower bound problems , and lets us establish limitations on known techniques .",
    "we now have a better understanding of what these techniques can and can not do , and a tool for addressing future problems .",
    "previously , the problem of setting parameters to achieve a good lower bound was a highly technical exercise .",
    "our work should facilitate further research : once a new speedup or slowdown lemma is found , one only needs to find the relevant linear programming formulation to begin understanding its power .",
    "we conclude with two open - ended problems .    1 .",
    "_ establish tight limitations for alternation - trading proofs .",
    "_ that is , show that the best possible alternation - trading proofs match those we have provided .",
    "our computer search results have been met with healthy skepticism .",
    "it is critical to verify these perceived limitations with formal proof .",
    "we have managed to prove non - trivial limitations ; it is possible that the ideas in those can be extended .",
    "_ discover new ingredients to add to the framework .",
    "_ one possibility is to find new separation results that lead to new contradictions .",
    "another is to find improved speedup and/or slowdown lemmas .",
    "the slowdown lemmas are the `` blandest '' of the ingredients , in that they are the most elementary ( and they relativize )",
    ".    * acknowledgements . *",
    "i am grateful to my thesis committee for their invaluable feedback on my phd thesis , which included preliminary results on this work .",
    "thanks to scott aaronson for useful discussions about irrelativization , and thanks to the stacs referees for very thoughtful comments ."
  ],
  "abstract_text": [
    "<S> a fertile area of recent research has demonstrated concrete polynomial time lower bounds for solving natural hard problems on restricted computational models . among these problems are satisfiability , vertex cover , hamilton path , @xmath0 , majority - of - majority - sat , and tautologies , to name a few . </S>",
    "<S> the proofs of these lower bounds follow a certain proof - by - contradiction strategy that we call _ alternation - trading_. an important open problem is to determine how powerful such proofs can possibly be .    </S>",
    "<S> we propose a methodology for studying these proofs that makes them amenable to both formal analysis and automated theorem proving . </S>",
    "<S> we prove that the search for better lower bounds can often be turned into a problem of solving a large series of linear programming instances . implementing a small - scale theorem prover based on this result , </S>",
    "<S> we extract new human - readable time lower bounds for several problems . </S>",
    "<S> this framework can also be used to prove concrete limitations on the current techniques .    </S>",
    "<S> ryan williams </S>"
  ]
}
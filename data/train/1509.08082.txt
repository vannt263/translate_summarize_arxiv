{
  "article_text": [
    "median filtering of signals and images goes back to the work of tukey @xcite and has since then been established in image processing as a simple nonlinear denoising method for grey - value images with the capability to denoise even impulse noise and similar types of noise with heavy - tailed distributions , and to retain at the same time sharp edges in the denoising process .    like other local image filters ,",
    "the median filter consists of a _ selection step _ that identifies for each pixel location those pixels which will enter the computation of the filtered value at that location , followed by an _ aggregation step _ that combines the intensities of these pixels into the filtered value . in the standard",
    "setting , the selection step uses a fixed - shape sliding window , which can be called the _ structuring element _ following the naming convention from mathematical morphology .",
    "the aggregation step consists in taking the median of the selected intensities .",
    "the process can be iterated , giving rise to what is called the _ iterated median filter . _",
    "the median filter , particularly in its iterated form , has been subject to intensive investigation over the decades .",
    "for example , @xcite studied so - called _ root signals , _ non - trivial steady states that occur in the iterated median filter and depend subtly on the choice of the structuring element .",
    "work by guichard and morel @xcite has identified iterated median filtering as an explicit nonstandard discretisation of ( mean ) curvature motion @xcite , thus establishing a link between the discrete filter concept and a partial differential equation ( pde ) .",
    "[ [ multivariate - median - filtering . ] ] multivariate median filtering .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given the merit of median filtering in processing grey - value images one is interested in stating also a median filter for multi - channel images such as colour images , flow fields , tensor fields etc . as the switch from single- to multi - channel images",
    "does not affect the selection step mentioned above but solely the aggregation , it is clear that what is needed to accomplish this goal is the definition of a multivariate median .",
    "a straightforward approach to median filtering of multi - channel data is to establish some kind of linear order in @xmath2 . for example",
    ", @xcite considered a vector median filter of this type ( based on lexicographic ordering ) and derived even pdes for this filter .",
    "a clear shortcoming of such an approach , however , is that mapping @xmath2 to @xmath3 ( which necessarily happens with a linear order ) either breaks injectivity or continuity , and is usually incompatible with natural geometric invariances of the data colour space , like symmetries of colour spaces , or the euclidean or affine structures of flow vectors or tensor spaces .",
    "a starting point for a multivariate median definition that avoids these problems is the following characterisation of the univariate median : a median of a tuple @xmath4 of real numbers @xmath5 is a real number that minimises the sum of distances to all numbers of the set , @xmath6 strictly speaking , this minimiser is unique only if the data set is of odd cardinality ; for even - numbered input sets , the two middle elements in the rank order and all real numbers in between fulfil the criterion , making @xmath7 actually set - valued .",
    "heuristics like mean value are often used to disambiguate the median in this situation .",
    "we will not consider this here but keep in mind that there is a whole set of medians in this case . at any rate",
    ", in the univariate case , there happens to always exist a number from the given data set which is a median of this set , such that one can also write @xmath8 early attempts to multi - channel median filtering in the computer science and signal processing literature , starting from @xcite in 1990 , defined therefore a vector - valued `` median '' that selects _ from the set of input points _ in @xmath2 the one that minimises the sum of distances to all other sample points . given a tuple @xmath9 of points @xmath10",
    ", this amounts to @xmath11 in a more differentiating terminology , see e.g.  @xcite , such a concept would rather be called a _ medoid .",
    "_    more recent approaches , such as @xcite for colour images or @xcite for symmetric matrices , rely on the same minimisation but without the restriction to the given data points , i.e.  ( in the same notations as before ) @xmath12 the underlying multivariate median concept can be traced back in the statistics literature to works by hayford from 1902 @xcite and weber from 1909 @xcite , followed by @xcite and many others .",
    "it is nowadays denoted as the _ spatial median _ or _",
    "@xmath0 median_. the @xmath0 median is unique for all non - collinear input data sets . only for collinear sets non - uniqueness as for",
    "the univariate median takes place ; in this case , the @xmath7 in is actually set - valued .",
    "as these configurations are non - generic , we do not follow this issue further .",
    "for the computation of @xmath0 medians , efficient algorithms are available , see e.g.  @xcite .    however , the @xmath0 median is not the only multivariate median concept in literature .",
    "another generalisation of the same minimisation property of the univariate median was introduced by oja in 1983 @xcite and is known as the _ simplex median _ or _ oja median .",
    "_ here , distances between points on the real line from the univariate median definition are generalised not to distances in @xmath2 but to simplex volumes .",
    "thus , the simplex median of a finite set of points in @xmath2 is the point @xmath13 that minimises the sum of simplex volumes @xmath14\\rvert$ ] where @xmath15 are distinct points of the input data set , i.e.@xmath16\\rvert \\;. \\label{moja}\\ ] ] an advantage of this concept that is relevant for many statistics applications is its affine equivariance , i.e.  that it commutes with affine transformations of the data space .",
    "in contrast , the @xmath0 median only affords euclidean equivariance .",
    "it should be noticed that also in an image processing context affine equivariance offers an advantage over just euclidean equivariance : for images whose value ranges are not equipped with a meaningful euclidean structure , justification of euclidean equivariant concepts like the @xmath0 median is questionable .",
    "while there exist in any dimension even datasets that are not degenerated to hyperplanes whose oja median is non - unique , these cases are non - generic .",
    "a more substantial caveat is that the oja median is always undefined when the input data lie on a common hyperplane .",
    "heuristics exist to cure this but usually these interfere with affine equivariance .",
    "whereas the affine equivariance of the oja median concept has been welcomed in the statistical community , its computational complexity was considered a problem from the beginning , see the discussion in section  [ ssec - demo - num ] .",
    "on one hand , there are some results regarding more efficient computation of oja medians , see e.g.  @xcite . on the other hand ,",
    "researchers have been inspired soon to design multivariate median concepts that combine affine equivariance with the efficiency of the @xmath0 median @xcite , see also the survey in @xcite . in these approaches ,",
    "affine equivariance is achieved using a _ transformation  retransformation _ method .",
    "input data sets are normalised by a data - dependent affine transform @xmath17 . applying the standard @xmath0 median and transforming",
    "back to the original data space then yields an affine equivariant median operation @xmath18 the data - dependent affine transform in these approaches is typically based on an estimator of the covariance matrix of the distribution underlying the observed data , such that the transformed data are supposed to follow an isotropic distribution .    besides these multivariate median concepts that generalise in different ways the distance sum minimisation property of the univariate median ,",
    "there exist several other concepts which we will not consider here , see the review @xcite .",
    "[ [ multivariate - median - filters - and - pde . ] ] multivariate median filters and pde .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    while the above - mentioned relationship between univariate median filtering and the mean curvature motion pde could be extended to relate also adaptive median filtering procedures @xcite and further discrete filters @xcite to well - understood pdes of image processing , the picture changes when turning to multivariate median filtering .",
    "as demonstrated in @xcite , it is possible to derive some pde for median filtering based on the spatial median as in @xcite .",
    "however , this pde involves complicated coefficient functions coming from elliptic integrals most of which can not even be stated in closed form , see @xcite and for the bivariate case @xcite . during the present work it became evident that the analysis of the @xmath0 median filter in @xcite contained a mistake with the consequence that one term was omitted in the resulting pde .",
    "we will state in the present paper corrected results for the case of two- and three - channel data , the latter restricted to a relevant special case .",
    "a corrected result for the general multivariate case with proof will be provided in a forthcoming technical report @xcite .",
    "given the unfavourable complexity of the pde approximated by @xmath0 median filtering , the question arises whether other multivariate median concepts could be advantageous in multi - channel image processing .",
    "the paper @xcite was intended as a first step in this direction which is continued in the present contribution .",
    "whereas in @xcite only bivariate images over planar domains ( like 2d flow fields or , somewhat artificial , two - colour images ) were covered , we extend the view here to include three - channel volume images ( like 3d flow fields ) and three - channel planar images ( like colour images ) .",
    "moreover , we include also an affine equivariant transformed @xmath0 median filter based on the transformation ",
    "retransformation procedure in our analysis .",
    "[ [ our - contribution . ] ] our contribution .",
    "+ + + + + + + + + + + + + + + + +    this paper extends the work from @xcite .",
    "regarding bivariate median filtering of planar images , we restate in this paper the pde approximation result for the oja median from @xcite .",
    "we present its proof from @xcite in a slightly modified and more detailed form , and present a new , alternative proof .",
    "we compare the pde with that for bivariate @xmath0 median filtering and discuss the geometric meaning of these pdes , showing that they combine an isotropic diffusion contribution with a curvature motion part and torsion - based cross - effects between the channels .",
    "we also discuss the degeneracy of the pde approximated by the oja median when the jacobian of the input function becomes singular .",
    "we also give a formulation for a space - continuous version of the transformation ",
    "retransformation median , which enables us , by recombining ideas from the analysis of the @xmath0 and oja median filters , to derive a pde approximation statement for this filter .",
    "the outcome is that the two affine equivariant medians , oja median and transformation ",
    "retransformation @xmath0 median , are asymptotically equivalent as image filters in the case of bivariate planar images .    in the case of three - channel volume images ,",
    "we prove pde approximation results for the oja median and transformation ",
    "retransformation @xmath0 median .",
    "the pde is again identical for both filters , implying their asymptotical equivalence .",
    "its structure is analogous to the bivariate case , with the diffusion , mean curvature motion and torsion - based cross - effect terms .    for three - channel planar images , for which the 3d oja median on local neighbourhoods is degenerated or almost degenerated ,",
    "we compare the 2d oja median ( minimiser of sum of triangle areas ) applied to 3d data with the transformation ",
    "retransformation @xmath0 median , and derive pde approximation results for both , which again display the same structure as in the cases before and confirm asymptotical equivalence of the two filters .",
    "we test , and verify to reasonable accuracy , the pde approximations in all dimensional settings by numerical experiments that compare discrete multivariate median filters for example functions sampled at high grid resolutions with theoretically derived pde time steps .",
    "finally , we investigate iterated oja and transformation ",
    "retransformation @xmath0 median filtering of rgb colour images and compare it to a numerical evaluation of the corresponding pde .",
    "these experiments , too , confirm the theoretical results .    [ [ structure - of - the - paper . ] ] structure of the paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    the remainder of the paper is structured as follows . in section  [ sec - geo ] ,",
    "we demonstrate two- and three - channel median filters on a 2d flow field , as a bivariate test case , and rgb colour images , as a three - channel example . for the latter ,",
    "we consider four variants of three - channel medians : @xmath0 , 2d oja , 3d oja and transformation ",
    "retransformation @xmath0 median .",
    "finally , we discuss basic geometric properties of the @xmath0 and oja medians in the bivariate setting .",
    "section  [ sec - pde ] is dedicated to the analysis of multivariate median filters for bivariate planar images , three - channel volume images and three - channel planar images .",
    "pde approximation results generalising guichard and morel s @xcite result for the univariate case are derived in all settings , and discussed . in section  [ sec - ex ] the results of the theoretical analysis are validated by numerical experiments on analytic example functions and rgb images , where the latter also cover iterated median filtering .",
    "a summary and outlook is given in section  [ sec - summ ] .",
    "appendices  [ app-22proof1][app-23proof ] contain detailed proofs for lemmas from section  [ sec - pde ] .",
    "appendix  [ app - pdealgo ] details a finite - difference scheme for the pde approximated by affine equivariant median filters for rgb images that is used for the experiments in section  [ sec - ex ] .",
    "to motivate our theoretical analysis , we will demonstrate in this section the effects of image filters based on the @xmath0 and oja median by experiments on image and flow field data .",
    "additionally , some geometric intuition about the @xmath0 and oja medians in the bivariate case will be given to help understanding their relations .",
    "before we turn to presenting filtering experiments , some words need to be said about the implementations of the filters as they are used in this paper . given the focus of this work at theoretical connections , simplicity and comparability of the implementations are in the foreground .",
    "computational efficiency is not a goal , thus possibilities for improvements in this respect are only touched grazingly .",
    "since the objective functions of the @xmath0 and oja medians are convex , one can think of numerous generic minimisation algorithms .",
    "however , the objective functions are only piecewise smooth , and may be extremely anisotropic around their minima .",
    "this poses difficulties for algorithms . for the numerical computation of @xmath0 and oja medians in this work ,",
    "we use therefore a gradient descent approach with adaptive step - size control using a line search , similar to the proceeding described in @xcite .",
    "the advantage of this approach is its simplicity and the fact that it can be used in a straightforward way for all median variants considered in this work .    for the @xmath0 median @xmath19",
    ", one reads off the objective function @xmath20 .",
    "its gradients are computed directly by summation over the data points , which has a linear complexity @xmath21 , which is fast enough to filter e.g.  @xmath22 images with structuring elements of radius @xmath23 within less than 3 minutes in single - threaded cpu computation on a 3ghz machine .",
    "a substantially more efficient computation would be possible by using an iterative weighted means algorithm for the @xmath0 median , see @xcite .",
    "for oja medians @xmath24 of two- and three - dimensional input data , see , the objective functions are sums of triangle areas , @xmath25\\rvert$ ] , or tetrahedron volumes , @xmath26\\rvert$ ] , respectively .",
    "their gradients are computed here by summation over pairs or triples , respectively , of data points , which amounts to an @xmath27 or @xmath28 complexity , respectively , and is therefore computationally expensive .",
    "it is possible in this way to compute two- and three - dimensional oja medians of test functions within sampled structuring elements and image filters based on two - dimensional oja medians , with computation times ranging from minutes to hours in single - threaded cpu computation , depending on image and structuring element sizes , and numerical convergence criteria for the gradient descent .",
    "the convergence of the gradient descent computation can be somewhat accelerated if the input data are subjected to an affine transformation that makes their distribution more isotropic , which is possible based on the affine equivariance of the oja median .",
    "principal axis transform of the covariance matrix can be used to determine a suitable transformation .    in practical application contexts ,",
    "the computational expense of such an oja median filter would be unacceptable .",
    "let us therefore mention possible alternatives .",
    "for the bivariate case , @xcite describes an algorithm that allows to compute two - dimensional oja medians in @xmath29 time .",
    "this is achieved by an angular reordering of points in the gradient computation together with geometric considerations that limit the possible locations for oja medians to a small set of discrete points in the plane .",
    "it can be expected that using this algorithm would speed up an image filter with a structuring element of radius @xmath23 ( approx .",
    "@xmath30 sample points ) by two to three orders of magnitude .",
    "highly parallel computation such as on gpus would further improve on this .",
    "for oja medians in general dimensions , we refer to @xcite where several exact and stochastic algorithms are discussed .    an additional difficulty with oja medians specifically in image filtering results from the frequent occurrence of degenerated input data . in a multivariate image ,",
    "data vectors belonging to pixels from a small local neighbourhood will often concentrate around or even lie on a lower - dimensional submanifold of the actual data space .",
    "in such a case , the objective function of the oja median is made up by volumes of degenerated or almost degenerated simplices , and the filtering result becomes undetermined or numerically unstable .",
    "one simple , albeit expensive , way to cope with these degeneracies of oja medians is to replace each input data point with a set of data points that are isotropically scattered in a small neighbourhood of the actual input point .",
    "thereby one enforces the full dimensionality of the input set , thus the input data are regularised .",
    "note , however , that the isotropic scattering of the new data points involves a notion of metric , and thus goes at the cost of affine equivariance . in our experiment series with oja median filtering on one test image ( shown in figure  [ fig - co01 ] in section  [ ssec - demo - rgb ] and used again in figure  [ fig - co01-evo ] in section  [ ssec - evo ] ) we perform this kind of input regularisation by replacing each input point by the corners of a regular simplex centered at the input point , along with the above - mentioned principal axis transform .",
    "all other oja median experiments are done with the plain gradient descent algorithm without these modifications .    to complement the standard @xmath0 median and oja median filters , we want to perform also filtering based on",
    "the affine equivariant transformed @xmath0 median .",
    "the affine transform @xmath31 for a tuple @xmath32 of input data is computed from the same principal axis transform of the covariance matrix as mentioned above in such a way that the covariance matrix for the transformed data @xmath33 becomes diagonal , with the diagonal entries being @xmath34 in most cases .",
    "only if the original covariance matrix is singular or almost singular , some of the diagonal entries will be close or equal to @xmath35 .",
    "the @xmath0 median @xmath36 inside is computed by our gradient descent method .",
    "0.01    ( 100,24 ) ( 0,0 ) ( 34,0 )    0.01    ( 100,24 ) ( 0,0 ) optical flow between frames 5 and 6 of the hamburg taxi sequence , computed by a coarse - to - fine horn - schunck method with warping .",
    "magnitudes of vector entries range up to approx .",
    "@xmath37 . * ( a ) * flow field visualised by vector arrows , subsampled ( every 5th flow vector in @xmath38 and @xmath39 direction is shown ) .",
    " * ( b ) * horizontal component of the same flow field .",
    "grey ( 128 ) represents zero , brighter values represent flows to the left , darker values flows to the right .",
    "* ( c ) * vertical component of the flow field .",
    "grey represents zero , brighter values represent upward flows , darker values downward flows .",
    ", title=\"fig : \" ] ( 34,0 ) optical flow between frames 5 and 6 of the hamburg taxi sequence , computed by a coarse - to - fine horn - schunck method with warping . magnitudes of vector entries range up to approx .  @xmath37 . * ( a ) * flow field visualised by vector arrows , subsampled ( every 5th flow vector in @xmath38 and @xmath39 direction is shown ) .",
    " * ( b ) * horizontal component of the same flow field .",
    "grey ( 128 ) represents zero , brighter values represent flows to the left , darker values flows to the right .",
    " * ( c ) * vertical component of the flow field .",
    "grey represents zero , brighter values represent upward flows , darker values downward flows .",
    ", title=\"fig : \" ] ( 68,0 ) optical flow between frames 5 and 6 of the hamburg taxi sequence , computed by a coarse - to - fine horn - schunck method with warping .",
    "magnitudes of vector entries range up to approx .",
    "@xmath37 . *",
    "( a ) * flow field visualised by vector arrows , subsampled ( every 5th flow vector in @xmath38 and @xmath39 direction is shown ) .  * ( b ) * horizontal component of the same flow field .",
    "grey ( 128 ) represents zero , brighter values represent flows to the left , darker values flows to the right .",
    " * ( c ) * vertical component of the flow field .",
    "grey represents zero , brighter values represent upward flows , darker values downward flows .",
    ", title=\"fig : \" ] ( 1.1,2 ) ( 35.1,2 ) ( 69.1,2 )    0.01    ( 100,76 ) ( 0,52 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . * ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .",
    "* ( c ) * vertical component .",
    " * middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 .",
    "* bottom row ( g ",
    "i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 34,52 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . *",
    "( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .  * middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 68,52 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . *",
    "( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .",
    " * middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . *",
    "bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) .",
    ", title=\"fig : \" ] ( 1.1,54 ) ( 35.1,54 ) ( 69.1,54 ) ( 0,26 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . * ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .",
    " * middle row ( d  f ) :",
    "* denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) .",
    ", title=\"fig : \" ] ( 34,26 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . * ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .",
    " * middle row ( d ",
    "f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 68,26 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . * ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component . ",
    "* middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) .",
    ", title=\"fig : \" ] ( 1.1,28 ) ( 35.1,28 ) ( 69.1,28 ) ( 0,0 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] .",
    "* ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .  * middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 34,0 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . * ( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component . ",
    "* middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 68,0 ) * top row : * flow field from figure  [ fig - flow ] degraded by uniform noise where @xmath40 of the vector entries have been replaced by random values in @xmath41 $ ] . *",
    "( a ) * subsampled vector field representation .  * ( b ) * horizontal component .  * ( c ) * vertical component .  * middle row ( d  f ) : * denoised by one step of @xmath0 median filtering with a disc - shaped structuring element of radius @xmath42 . * bottom row ( g  i ) : * denoised by one step of oja median filtering with the same structuring element as in ( d  f ) . , title=\"fig : \" ] ( 1.1,2 ) ( 35.1,2 ) ( 69.1,2 )    we turn first to the bivariate case .",
    "possible applications for this setup include two - channel colour images , for which an example was presented in @xcite , or , with more practical relevance , 2d flow fields .",
    "we demonstrate here bivariate median filtering on an exemplary flow field computed from two frames of the _ hamburg taxi sequence_. the first of these frames is shown in figure  [ fig - taxi ] . within the sequence , the taxi moves in the upper left direction , whereas two vehicles enter the scene from the left and right margin .",
    "the flow field , visualised in figure  [ fig - flow ] , has been obtained using an implementation of the horn - schunck method @xcite within a coarse - to - fine multiscale approach with warping @xcite in order to cope with displacements larger than one pixel .    in the top row of figure  [ fig - flow - un ]",
    "this flow field has been degraded by uniform impulse noise with @xmath40 density applied to the horizontal and vertical flow components independently .",
    "the middle and bottom row of figure  [ fig - flow - un ] show results of @xmath0 and oja median filtering , respectively , both of which succeed to remove the noise and restore a smooth flow field similar to the original one .",
    "note that the filtering results of both median filters are very similar .",
    "0.01    ( 100,74.7 ) ( 0.0,50.6 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius .",
    "* top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .",
    " * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 .",
    ", title=\"fig : \" ] ( 25.3,50.6 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 .",
    ", title=\"fig : \" ] ( 50.6,50.6 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 . ",
    "* bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 75.9,50.6 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 .",
    ", title=\"fig : \" ] ( 1.1,52.6 ) ( 26.4,52.6 ) ( 51.7,52.6 ) ( 77.0,52.6 ) ( 0.0,25.3 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . *",
    "top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 .",
    ", title=\"fig : \" ] ( 25.3,25.3 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .",
    " * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .",
    " * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .",
    "* ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 .",
    ", title=\"fig : \" ] ( 50.6,25.3 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 75.9,25.3 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 1.1,27.3 ) ( 26.4,27.3 ) ( 51.7,27.3 ) ( 77.0,27.3 ) ( 0.0 , 0.0 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .",
    " * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 25.3 , 0.0 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 50.6 , 0.0 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 75.9 , 0.0 ) median filtering of the _ baboon _ test image using different multivariate medians and disc - shaped structuring elements @xmath43 of varying radius . * top row , left to right : * * ( a ) * original rgb image ( @xmath22 pixels ) .  * ( b ) * filtered using 2d oja median with @xmath44 .  * ( c ) * filtered using @xmath0 median with @xmath44 .  * ( d ) * filtered using affine equivariant transformed @xmath0 median with @xmath44 .  * middle row , left to right : * * ( e ) * filtered using 3d oja median with @xmath45 .  * ( f ) * filtered using 2d oja median with @xmath45 .  * ( g ) * filtered using @xmath0 median with @xmath45 .  * ( h ) * filtered using affine equivariant transformed @xmath0 median with @xmath45 .  * bottom row , left to right : * * ( i ) * filtered using 3d oja median with @xmath46 .  * ( j ) * filtered using 2d oja median with @xmath46 .  * ( k ) * filtered using @xmath0 median with @xmath46 .  * ( l ) * filtered using affine equivariant transformed @xmath0 median with @xmath46 . , title=\"fig : \" ] ( 1.1 , 2.0 ) ( 26.4 , 2.0 ) ( 51.7 , 2.0 ) ( 77.0 , 2.0 )    in this section , we consider the filtering of rgb colour image data .",
    "the rgb colour space is used here for its simplicity . a comparison with other colour spaces like hsv , hcl , ycbcr etc .",
    "is left to future work , and will be important when evaluating the applicability of multivariate median filters in , e.g. , denoising applications .",
    "it is worth noting , however , that common colour spaces are related via differentiable transforms ( with isolated singularities to be observed in some cases ) .",
    "this means that _ locally _ replacing one colour space with another is just an affine transformation ( given by the jacobian of the colour space transform ) . for affine equivariant median filters applied in small neighbourhoods of smooth images , filtering results",
    "can therefore be expected to be largely independent of the colour space being used .",
    "application of the @xmath0 median to three - channel data is straightforward . regarding the oja median filter , it is worth noting that a planar rgb image is a discretisation of a function @xmath47 , i.e.  a parametrised surface in @xmath48 .",
    "the values of @xmath49 ( rgb triples ) within a small patch of @xmath50 , such as the structuring element of a pixel , form a surface patch in @xmath48 . for a noise - free image",
    ", the function @xmath49 can be assumed to be smooth , resulting in almost planar surface patches .",
    "one consequence of this is that the 3d oja median applied to the rgb triples from a structuring element will be the minimiser of a sum of simplex volumes where virtually all of the simplices are almost degenerated .    on the other hand , the 2d oja median , which minimises a sum of triangle areas , can easily be applied to these data , which gives us a further option for median filtering of planar rgb images that stands between the @xmath0 ( thus , 1d oja ) and 3d oja median , @xmath51\\rvert \\;.",
    "\\label{moja23}\\ ] ] of course , the 2d oja median @xmath52 for general 3d data is not equivariant under affine transformations of @xmath48 .",
    "however , the 2d oja median of co - planar data from @xmath48 is affine equivariant even with respect to affine transformations of @xmath48 . since the rgb triples being filtered are almost co - planar",
    ", it can be expected that a 2d oja median filter for planar rgb images will display a good approximation to affine equivariance .",
    "we include therefore in our experiments four filters based on the standard @xmath0 median , the 2d and 3d oja median , and the affine equivariant transformed @xmath0 median .",
    "figure  [ fig - baboon ] shows results of filtering of an rgb image with these three filters with disc - shaped structuring elements @xmath43 of different size .",
    "( the combination of the full 3d oja median filter with a structuring element of radius @xmath44 is beyond computational possibilities with our simple algorithm and therefore omitted . )",
    "results indicate that the four median filter variants again give very similar results . as the size of structuring elements increases",
    ", the behaviour known from univariate median filters is observed : small image details are progressively smoothed out , whereas strong edges between homogeneous regions are kept sharp even for larger structuring elements .",
    "0.0048    ( 208,126 ) ( 0.0,94 ) ( 34.0,94 ) ( 68.0,94 ) ( 1.1,96 ) ( 35.1,96 ) ( 69.1,96 ) ( 0.0,60 ) ( 34.0,60 ) ( 68.0,60 ) ( 1.1,62 ) ( 35.1,62 ) ( 69.1,62 ) ( 0.0,26 ) ( 34.0,26 ) ( 68.0,26 ) ( 1.1,28 ) ( 35.1,28 ) ( 69.1,28 ) ( 108.0,18 ) ( 0,0 )    whereas the test image used in figure  [ fig - baboon ] contains many fine - scale structures everywhere in the image , we consider in our next experiment , figure  [ fig - co01 ] , a test image which is dominated by smooth regions , some even with constant colour values , separated by sharp boundaries .",
    "this image , shown in figure  [ fig - co01](a ) , is almost perfectly noise - free apart from the quantisation noise .",
    "therefore , the rgb triples found within a structuring element are often strictly collinear such that the degeneracy of the oja median energies becomes an issue in computation .",
    "this is demonstrated in figure  [ fig - co01](b ) by the result of ( 2d ) oja median filtering without regularisation .",
    "note that most edges are substantially blurred .",
    "however , at some junctions where values from sufficiently many regions within a small neighbourhood create input data sets of sufficient dimensionality , edges stay sharp . for the further 2d and 3d oja median filtering in this experiment series ,",
    "we use therefore the input regularisation as described in section  [ ssec - demo - num ] , consisting of replacing points with quadruples of simplex corners and subsequent normalisation by principal axis transform . even with this proceeding ,",
    "a slight blur remains visible in the oja results , figure  [ fig - co01](c ) , ( d ) and ( g ) , especially for the larger structuring element ( g ) .",
    "apart from this , the results of 3d ( c ) and 2d oja median filtering ( d , g ) as well as those of standard ( e , h ) and affine equivariant transformed @xmath0 median filtering ( f , i ) are again largely comparable .",
    "they show the structure simplification and rounding of contours known from univariate median filters , whereas edges are kept reasonably sharp .",
    "0.01    ( 100,36 ) ( 2,19 ) simple configurations of input data points ( solid points ) with their @xmath0 medians ( squares ) and oja medians ( triangles ) . *",
    "( a ) * three points forming a triangle with all interior angles less than @xmath53 degrees : the @xmath0 median is the _ steiner point _ ; any point within the triangle is an oja median .  * ( b ) * three points forming a triangle with an obtuse angle of @xmath53 degrees or more : the obtuse corner is the @xmath0 median ; still , all points within the triangle are oja medians .  * ( c ) * four points forming a convex quadrangle : the @xmath0 and oja median coincide at the intersection of the diagonals .  * ( d ) * four points whose convex hull is a triangle : the @xmath0 and oja median coincide at the data point that is not a corner of the convex hull .  * ( e ) * @xmath54 points that form a convex @xmath54-gon ( hexagon shown as example ) in which all diagonals between opposing points have a common intersection point : its @xmath0 and oja median coincide at this intersection point .  from @xcite . , title=\"fig : \" ] ( 31,22 ) simple configurations of input data points ( solid points ) with their @xmath0 medians ( squares ) and oja medians ( triangles ) . *",
    "( a ) * three points forming a triangle with all interior angles less than @xmath53 degrees : the @xmath0 median is the _ steiner point _ ; any point within the triangle is an oja median .  * ( b ) * three points forming a triangle with an obtuse angle of @xmath53 degrees or more : the obtuse corner is the @xmath0 median ; still , all points within the triangle are oja medians .  * ( c ) * four points forming a convex quadrangle : the @xmath0 and oja median coincide at the intersection of the diagonals .  * ( d ) * four points whose convex hull is a triangle : the @xmath0 and oja median coincide at the data point that is not a corner of the convex hull .  * ( e ) * @xmath54 points that form a convex @xmath54-gon ( hexagon shown as example ) in which all diagonals between opposing points have a common intersection point : its @xmath0 and oja median coincide at this intersection point .  from @xcite . , title=\"fig : \" ] ( 66,20 ) simple configurations of input data points ( solid points ) with their @xmath0 medians ( squares ) and oja medians ( triangles ) . *",
    "( a ) * three points forming a triangle with all interior angles less than @xmath53 degrees : the @xmath0 median is the _ steiner point _ ; any point within the triangle is an oja median .  * ( b ) * three points forming a triangle with an obtuse angle of @xmath53 degrees or more : the obtuse corner is the @xmath0 median ; still , all points within the triangle are oja medians .  * ( c ) * four points forming a convex quadrangle : the @xmath0 and oja median coincide at the intersection of the diagonals .  * ( d ) * four points whose convex hull is a triangle : the @xmath0 and oja median coincide at the data point that is not a corner of the convex hull .  * ( e ) * @xmath54 points that form a convex @xmath54-gon ( hexagon shown as example ) in which all diagonals between opposing points have a common intersection point : its @xmath0 and oja median coincide at this intersection point .  from @xcite . , title=\"fig : \" ] ( 18,0 ) simple configurations of input data points ( solid points ) with their @xmath0 medians ( squares ) and oja medians ( triangles ) . *",
    "( a ) * three points forming a triangle with all interior angles less than @xmath53 degrees : the @xmath0 median is the _ steiner point _ ; any point within the triangle is an oja median .  * ( b ) * three points forming a triangle with an obtuse angle of @xmath53 degrees or more : the obtuse corner is the @xmath0 median ; still , all points within the triangle are oja medians .  * ( c ) * four points forming a convex quadrangle : the @xmath0 and oja median coincide at the intersection of the diagonals .  * ( d ) * four points whose convex hull is a triangle : the @xmath0 and oja median coincide at the data point that is not a corner of the convex hull .  * ( e ) * @xmath54 points that form a convex @xmath54-gon ( hexagon shown as example ) in which all diagonals between opposing points have a common intersection point : its @xmath0 and oja median coincide at this intersection point .  from @xcite . , title=\"fig : \" ] ( 50,0 ) simple configurations of input data points ( solid points ) with their @xmath0 medians ( squares ) and oja medians ( triangles ) . *",
    "( a ) * three points forming a triangle with all interior angles less than @xmath53 degrees : the @xmath0 median is the _ steiner point _ ; any point within the triangle is an oja median .  * ( b ) * three points forming a triangle with an obtuse angle of @xmath53 degrees or more : the obtuse corner is the @xmath0 median ; still , all points within the triangle are oja medians .  * ( c ) * four points forming a convex quadrangle : the @xmath0 and oja median coincide at the intersection of the diagonals .  * ( d ) * four points whose convex hull is a triangle : the @xmath0 and oja median coincide at the data point that is not a corner of the convex hull .  * ( e ) * @xmath54 points that form a convex @xmath54-gon ( hexagon shown as example ) in which all diagonals between opposing points have a common intersection point : its @xmath0 and oja median coincide at this intersection point .  from @xcite . ,",
    "title=\"fig : \" ] ( 4,19)a ( 38,19)b ( 66,19)c ( 18,0)d ( 54,0)e      to add some geometric intuition about the @xmath0 and oja medians , we consider small point sets in the plane and their medians .",
    "the following statements can easily be inferred from standard elementary geometry arguments such as the triangle inequality ( for the @xmath0 median ) and multiplicities of covering of the convex hull of input points by the triangles with input and median points as corners ( for the 2d oja median ) .    in all cases ,",
    "the @xmath0 and oja medians will be located within the convex hull of the input data set ( if , in the case of the oja median , this set is not collinear ) due to the convexity of the objective functions being minimised .    1 .   for two points ,",
    "the @xmath0 median criterion is fulfilled equally for all points of their connecting line segment . the oja median criterion is even fulfilled by all points of the straight line through these points since the oja median definition degenerates for collinear sets of points .",
    "2 .   for three points ,",
    "the @xmath0 median depends on the sort of triangle they span .",
    "if all of its interior angles are smaller than @xmath53 degrees , see figure  [ fig - geometry](a ) , the sum of distances to the corners is minimised by a unique point known as _ steiner point _ or _ fermat - torricelli point , _ from which all sides of the triangle are seen under @xmath53 degree angles . for a triangle with an obtuse corner of at least @xmath53 degrees ,",
    "this corner is the @xmath0 median , see figure  [ fig - geometry](b ) .",
    "+ in contrast , the oja median criterion is met in both cases by all points of the triangle .",
    "this is consistent with the affine equivariance of the oja median that does not discriminate triangles by shape .",
    "besides , this configuration nicely illustrates how in the oja median definition simplices take the role of line segments from the univariate median definition : the three - point case of the bivariate oja median is just the analogue of the two - point case of the univariate median .",
    "3 .   for four points , @xmath0 and oja",
    "median always coincide : if the convex hull of the data points is a triangle , then the data point that is not a corner of the convex hull is the median , see figure  [ fig - geometry](d ) ; if it is a convex quadrangle , then the intersection point of its diagonals is the median , see figure  [ fig - geometry](c ) .",
    "the coincidence between @xmath0 and oja median continues also in some configurations of more data points .",
    "a ( non - generic ) example is shown in figure  [ fig - geometry](e ) : a convex @xmath54-gon in which all the diagonals that bisect the point set ( i.e.  those that span @xmath55 sides ) have a common intersection point , features this point as @xmath0 and oja median .",
    "we point out two facts that can be learned from these simple configurations .",
    "firstly , bivariate medians , unlike their univariate counterpart , can not always be chosen from the input data set , but they happen to be input data points in some generic configurations . only in cases when none of the input points lies sufficiently `` in the middle '' of the data , a new point is created . secondly , despite their different definitions , the @xmath0 and oja median coincide in some generic situations , or are not far apart from each other .",
    "this adds plausibility to why the image filtering results in figure  [ fig - baboon ] and figure  [ fig - co01 ] are that similar .",
    "we conclude this section by mentioning a result from @xcite : for a non - collinear point set in the plane , there exists always an oja median ( i.e.  a point minimising the relevant objective function ) that is the intersection of two lines , each of which goes through two data points .",
    "restricting the search for minimisers to the finite set of these intersection points is one of the ingredients in the efficient planar oja median algorithm from @xcite .",
    "the reformulation of a local image filter to a space - continuous setting is straightforward .",
    "the main modification is that the set of values that results from the selection step and is processed in the aggregation step is now infinite and equipped with a density .",
    "this density is induced from the uniform distribution of function arguments in the structuring element in the image domain via the jacobian of the image function .    as proven in @xcite , a univariate median filtering step of an image with disc - shaped structuring element of radius @xmath56",
    "approximates for @xmath57 a time step of size @xmath58 of an explicit scheme for the mean curvature motion pde . in this section",
    ", we will derive pdes that are approximated in the same sense by multivariate median filters based on @xmath0 and oja medians .",
    "we will consider images with two or three channels over two- and three - dimensional domains .    throughout this paper",
    ", the structuring element will be a disc @xmath43 of radius @xmath56 for planar images , or a ball @xmath59 of radius @xmath56 for volume images .",
    "we start by considering the case of two - channel images over a planar domain @xmath50 , as already studied in @xcite .      in @xcite",
    "the result from @xcite concerning the @xmath0 multivariate median filter for images @xmath60 was simplified to the bivariate case @xmath61 . as the result from @xcite needs to be corrected as stated in the introduction ,",
    "the statement from @xcite is modified as follows .",
    "[ prop - l1pde22 ] let a bivariate image @xmath62 , @xmath63 , be given .",
    "one step of @xmath0 median filtering with the structuring element @xmath43 approximates for @xmath57 an explicit time step of size @xmath58 of the pde system @xmath64 where @xmath65 is the major , and @xmath66 the minor eigenvector of the structure tensor @xmath67 .",
    "the coefficient matrices @xmath68 , @xmath69 and @xmath70 are given by @xmath71 where @xmath72 is a rotation matrix that depends on the jacobian @xmath73 of @xmath49 and the eigenvector matrix @xmath74 of @xmath75 .",
    "the functions @xmath76\\to{\\mathbb{r}}$ ] are given by the quotients of elliptic integrals @xmath77 for @xmath78 , together with the limits @xmath79 , @xmath80 .",
    "the vectors @xmath65 and @xmath66 used in  are the directions of greatest and least change of the bivariate function @xmath49 , thus the closest analoga to gradient and level line directions of univariate images , see @xcite . the use of these image - adaptive local coordinates characterises as a curvature - based pde remotely similar to the ( mean ) curvature motion pde approximated by univariate median filtering .",
    "the proof of the proposition relies on the following statement which is corrected from @xcite .",
    "[ lem - l1pde22-aligned ] let @xmath49 be given as in proposition  [ prop - l1pde22 ] , and the origin @xmath81 be an inner point of @xmath50 .",
    "assume that the jacobian @xmath82 is diagonal , i.e.  @xmath83 , and @xmath84 .",
    "then one step of @xmath0 median filtering with the structuring element @xmath85 at @xmath86 approximates for @xmath57 an explicit time step of size @xmath58 of the pde system @xmath87 with the coefficient functions @xmath88 , @xmath89 as stated in proposition  [ prop - l1pde22 ] .",
    "[ rm - q2q1i ] the elliptic integrals in the coefficient expressions @xmath90 and @xmath91 can in general not be evaluated in closed form .",
    "however , they are connected by @xmath92    [ rm - l1pde22-i ] in the case @xmath93 , @xmath94 , the coefficients of , simplify via @xmath95 , @xmath96 such that one obtains @xmath97    [ rm - l1pde22-infty ] note that for @xmath98 , @xmath99 goes to zero such that the coefficients for @xmath100 in and for @xmath101 in are globally bounded for arbitrary @xmath102 , @xmath103 , and in the limit case @xmath104 one has the decoupled pdes @xmath105 , @xmath106 .",
    "[ rm - guichardmorellimit ] univariate median filtering is contained in the statement of lemma  [ lem - l1pde22-aligned ] when @xmath103 is sent to @xmath35 . in this case , the first pde becomes @xmath105 by virtue of @xmath107 , @xmath108 , and the previous remark .",
    "this translates to @xmath109 in the general setting of proposition  [ prop - l1pde22 ] , i.e.  the ( mean ) curvature motion equation , thus reproducing exactly the result of @xcite .",
    "consider an arbitrary fixed location @xmath110 . by applying rotations with @xmath111 in the @xmath38-@xmath39 plane and with @xmath112 in the @xmath113-@xmath114 plane , @xmath38 ,",
    "@xmath39 can be aligned with the ( orthogonal ) major and minor eigenvector directions @xmath65 and @xmath66 of the structure tensor @xmath115 at @xmath110 , and @xmath113 , @xmath114 with the corresponding derivatives @xmath116 , @xmath117 .",
    "then lemma  [ lem - l1pde22-aligned ] can be applied .",
    "reverting the rotations in the @xmath38-@xmath39 and @xmath113-@xmath114 planes , the pde system  turns into the system  of the proposition .",
    "equivariance of the pde with regard to euclidean transformations of the @xmath113-@xmath114 plane follows immediately from its derivation for a special case and transfer to the general case by a euclidean transformation .",
    "next we turn to the oja median , which in the bivariate case under consideration is defined as the minimiser of the total area of triangles each formed by two given data points and the median point .",
    "the following result was proven in @xcite .",
    "[ thm - ojapde22 ] let a bivariate image @xmath62 , @xmath63 , be given . at any location where @xmath118 , one step of oja median filtering of @xmath49 with the structuring element @xmath43 approximates for @xmath57 an explicit time step of size @xmath119 of the pde system @xmath120 with the coefficient matrices @xmath121    the proof of this theorem relies on the following lemma .",
    "[ lem - ojapde22-i ] let @xmath49 be given as in theorem  [ thm - ojapde22 ] , and @xmath81 be an inner point of @xmath50 .",
    "assume that @xmath82 is the @xmath122 unit matrix @xmath123",
    ". at @xmath124 , one step of oja median filtering of @xmath49 with the structuring element @xmath43 then approximates for @xmath57 an explicit time step of size @xmath119 of the pde system @xmath125    [ rm - l1oja22-i ] note that the pde system , coincides exactly with , , the @xmath0 result for the same case @xmath126 , except for a rescaling of the time @xmath127 by a factor @xmath128 in compensation for the different time step size @xmath129 in lemma  [ lem - ojapde22-i ] opposed to @xmath130 in lemma  [ lem - l1pde22-aligned ] .",
    "this lemma is proven in the appendix in two slightly different ways .",
    "the first proof , in appendix  [ app-22proof1 ] , goes back to @xcite and is presented here in slightly more detail .",
    "the new proof in appendix  [ app-22proof2 ] is more straightforward .",
    "the reason why the first proof is also kept in this paper is that it is the blueprint for subsequent proofs in this paper , whereas the approach of the second proof would be more cumbersome to extend to these cases .",
    "both proofs start from a taylor expansion of @xmath131 within the structuring element , and express the gradient of the objective function minimised by the oja median in terms of the taylor coefficients .",
    "the median value is found as the point in the @xmath113-@xmath114 plane for which this gradient vanishes . in both cases ,",
    "the gradient itself is linearised w.r.t .",
    "the taylor coefficients .    in the first proof ,",
    "appendix  [ app-22proof1 ] , the calculation of the gradient is organised by integration over directions in the @xmath113-@xmath114 plane , and the influences of the individual taylor coefficients are estimated separately by integrals over the respective deformed structuring elements .",
    "in contrast , the second proof in appendix  [ app-22proof2 ] calculates the gradient by integration in the @xmath38-@xmath39 plane .",
    "the main idea here is to find for each point @xmath132 a splitting of the structuring element into two regions : one region contains all points @xmath133 for which the median candidate point and the images of @xmath132 and @xmath133 form in this order a positively oriented triangle in the @xmath113-@xmath114 plane whereas for @xmath133 in the other region this triangle has negative orientation .",
    "this approach allows to calculate the entire gradient with its dependencies on all taylor coefficients at once .    to prove the theorem",
    ", we consider the median of the values @xmath134 within the euclidean @xmath56-neighbourhood of @xmath135 , and assume that the jacobian @xmath136 is regular as requested by the hypothesis of the theorem .",
    "we transform the @xmath113-@xmath114 plane to variables @xmath137 via @xmath138 the affine equivariance of oja s simplex median ensures that also the median @xmath139 of the values @xmath49 within the structuring element follows this transform . the transformed data @xmath137",
    "satisfy the hypothesis @xmath140 of lemma  [ lem - ojapde22-i ] , thus the median filtering step for these values approximates the pde system , .",
    "we transfer the result to the general situation of the theorem by the inverse transform of .",
    "rewriting , as @xmath141 we obtain @xmath142 which expands to the pde system with coefficient matrices , as stated in the theorem .",
    "the derivation of the pde of theorem  [ thm - ojapde22 ] by affine transformation immediately implies its affine equivariance .",
    "the final pde itself is even equivariant under affine transformations of the @xmath38-@xmath39 plane . regarding the approximation of oja median filtering , however , the euclidean disc - shaped structuring element allows only for euclidean transformations of the @xmath38-@xmath39 plane .      the geometric meaning of the pde systems from sections  [ sssec - l1pde22 ] and  [ sssec - ojapde22 ] is best discussed by considering the principal components of the local variation of the data . in the general setting of proposition  [ prop - l1pde22 ] and theorem  [ thm - ojapde22 ] the channelwise evolutions @xmath143 , @xmath144 are mixtures of these principal components , which obscures their geometric significance .",
    "in the case of diagonal jacobian @xmath73 as in the hypothesis of lemma  [ lem - l1pde22-aligned ] the channels are decorrelated and represent these principal components .",
    "we base our discussion therefore on the pde system , from lemma  [ lem - l1pde22-aligned ] for the @xmath0 median , and @xmath145 for the oja median which is the straightforward adaptation of the pde system , from lemma  [ lem - ojapde22-i ] to the situation of a general diagonal jacobian .    comparing the two pde systems",
    ", we see that in each of them an isotropic linear diffusion contribution @xmath146 is combined with an additional directional diffusion @xmath147 and a cross - effect contribution @xmath148 with some weights .    for the directional diffusion term",
    "it is worth noticing that the @xmath39 direction for @xmath113 , and @xmath38 direction for @xmath114 are the level - line directions of the individual components , i.e.  this term represents independent ( mean ) curvature motion evolutions for the two principal components .",
    "the mixed second derivatives of the third term express the torsion of the graphs of the two principal components , and are multiplied with scaling factors that adapt between the componentwise gradients @xmath102 and @xmath103 .    in the oja median pde , the weights of these terms are constant .",
    "the first two terms act independent in the two components such that the torsion - based cross - effect term constitutes the only coupling between principal components .",
    "in contrast , the coefficient functions @xmath88 and @xmath89 in the @xmath0 case modulate also the diffusion and curvature terms and create additional cross - effects between the principal components .",
    "this is due to the more rigid euclidean structure underlying the @xmath0 median definition , and also makes it sensible to write the pde for the general case using the eigenvector directions @xmath65 and @xmath66 of the structure tensor as done in proposition  [ prop - l1pde22 ] . in the decoupled setting of theorem  [ thm - ojapde22 ]",
    "these directions have no meaning .",
    "this is plausible because these eigenvectors are strongly related with a euclidean geometry concept of the @xmath113-@xmath114 plane , and are thereby inappropriate for an affine equivariant process like oja median filtering .    in detail , the effect of the coefficient functions @xmath88 and @xmath89 is steered by the relative weight of the principal components , namely @xmath102 and @xmath103 in the aligned case under consideration . denoting the principal component with stronger gradient as dominant component , and the other as non - dominant component , one sees that the more pronounced the dominance of the first principal component is , the more does it steer the evolution also of the other principal component ( as the joint pseudo - gradient vector @xmath65 aligns more and more with the gradient vector of the dominant component ) .      the right - hand side of equation is undefined at locations where @xmath149 .",
    "while the weights for the second derivatives @xmath150 and @xmath151 remain bounded when @xmath152 goes to zero , the weights of the mixed terms @xmath101 and @xmath100 can take arbitrarily large values in this case .",
    "to see more precisely what is going on , let us consider once more the case of a diagonal jacobian @xmath73 , and keep @xmath93 fixed while @xmath103 goes to zero .",
    "then the weight of @xmath100 in the pde for @xmath143 goes to infinity with @xmath153 whereas the weight of @xmath101 in the pde for @xmath144 goes to zero .",
    "this is different from the situation for the @xmath0 median where the coefficients of the mixed terms @xmath101 and @xmath100 were bounded for all values of the gradient .",
    "however , it is easy to see that for an affine equivariant median there is basically no way out : as soon as there is a non - zero influence of @xmath100 on @xmath143 , it must scale in this way by affine equivariance .    keeping in mind , however , that @xmath102 and @xmath103 for diagonal @xmath73 are the channelwise gradient directions , it becomes evident that divergent behaviour , such as @xmath103 going to zero while @xmath154 in the numerator is nonzero , can affect only isolated points in the plane , and can thereby be cured by using the concept of viscosity solutions .",
    "vanishing of @xmath103 in an extended region is only possible if the function @xmath114 is constant in this region such that also @xmath100 vanishes , allowing to fill this definition gap in the term @xmath155 with zero .",
    "this is also in harmony with the behaviour of the median filter itself . as the median of a set of data values",
    "is restricted to the convex hull of the input data , infinite amplification of variations from the @xmath114 to the @xmath113 component and vice versa is impossible .",
    "as the pde is only approximated in the limit @xmath57 , it can moreover be expected that for positive @xmath56 , the sensitivity of the @xmath113 component of the median filtering result to @xmath100 will be dampened nonlinearly which would be reflected in higher order terms neglected in the pde derivation .    structuring elements with varying radius @xmath56",
    "can be translated to fixed radius by scaling the second - order taylor coefficients of the bivariate function , i.e.  @xmath156 , etc . , with @xmath56 .",
    "deviations from the pde behaviour for positive @xmath56 can therefore be studied equivalently by investigating nonlinearities in the response of the median to increasing values of the derivatives @xmath157 within a fixed structuring element . in section [ sssec - cr - degen ]",
    "we will demonstrate this dampening by a numerical experiment .",
    "as pointed out in remark  [ rm - l1oja22-i ] , the pdes approximated by the bivariate @xmath0 and oja median filters coincide when the jacobian of the image being filtered is the unit matrix .",
    "the difference between the @xmath0 case in proposition  [ prop - l1pde22 ] and the oja case in theorem  [ thm - ojapde22 ] is that the affine equivariance of the latter allows to derive the general case by affine transformations from the special case @xmath158 , whereas the @xmath0 median admits only euclidean transformations such that its general case needs to be derived from the wider setting of lemma  [ lem - l1pde22-aligned ] where @xmath73 can be arbitrary diagonal .",
    "this is where the complicated coefficient functions of proposition  [ prop - l1pde22 ] have their origin .    on the other hand",
    ", one can combine the minimisation principle of the @xmath0 median with the affine transformation concept from the proof of theorem  [ thm - ojapde22 ] to design a bivariate space - continuous image filter as follows .",
    "[ space - continuous affine equivariant transformed @xmath0 median filter . ]",
    "[ def - l1a22 ] let a function @xmath159 and the structuring element @xmath43 be given . for each location @xmath160 with @xmath161 , transform the function values @xmath162 for @xmath163 via @xmath164 . determine the @xmath0 median @xmath165 of the data @xmath137 . transform @xmath165 back to @xmath166 . the image filter that transfers the input function @xmath167 to the function @xmath168 is called affine equivariant transformed @xmath0 median filter .",
    "affine equivariance of this image filter is clear by construction . by inheritance from the underlying @xmath0",
    "median it approximates in the case @xmath158 the same pdes for @xmath57 as the @xmath0 and oja median filters .",
    "due to its construction from this special case via the affine transform with @xmath73 it finally approximates in the general ( non - degenerate ) situation the same pdes as the oja median filter .",
    "we have thus the following corollary .",
    "[ cor - l1apde22 ] let a bivariate image @xmath62 , @xmath63 , be given . at any location where @xmath118 , one step of affine equivariant transformed @xmath0 median filtering of @xmath49 with the structuring element @xmath43 approximates for @xmath57 an explicit time step of size @xmath119 of the pde system from theorem  [ thm - ojapde22 ] .    using this approach for practical , i.e.  discrete image filtering ,",
    "requires to estimate from the discrete image data within a structuring element the jacobian @xmath73 .",
    "but the space - continuous data within @xmath169 represent a distribution whose covariance matrix asymptotically approaches @xmath73 as @xmath57 .",
    "thus , estimation of this covariance matrix from sampled data as used in the transformation ",
    "retransformation @xmath0 median approaches @xcite and as used in our experimental demonstration in section  [ ssec - demo - rgb ] is exactly what is needed here .",
    "hence , the filter from definition  [ def - l1a22 ] is a space - continuous version of the discrete transformation ",
    "retransformation @xmath0 median filter .",
    "corollary  [ cor - l1apde22 ] therefore states that as bivariate image filters , _ the affine equivariant transformed @xmath0 median is asymptotically equivalent to the oja median .",
    "_ further analysis in this section as well as numerical evidence in section  [ ssec - cr ] will reveal that this asymptotic equivalence generalises beyond the bivariate case .      as the next step in our theoretical investigation",
    ", we increase the dimensions of image and value domain equally to three , thus arriving at three - channel volume images .",
    "a possible application would be given by 3d deformation fields as they arise in elastic registration of medical 3d data sets .",
    "we do , however , not aim at applications of this setting within this work , and include it primarily for the theoretical completeness .",
    "our focus in this context will be on affine equivariant median filters .",
    "the first three - channel volume filter we consider will be based on the 3d oja median in the sense of minimising a sum of volumes of tetrahedra .",
    "[ thm - ojapde33 ] let a three - channel volume image @xmath170 , @xmath171 , be given . at any location where @xmath118 , one step of oja median filtering of @xmath49 with the structuring element @xmath59 approximates for @xmath57 an explicit time step of size @xmath172 of the pde system @xmath173 where for @xmath174 the coefficient matrices are given by @xmath175    the proof of this theorem proceeds analogously to the proof of theorem  [ thm - ojapde22 ] , with the use of the following lemma that is analogous to lemma  [ lem - ojapde22-i ] .    [ lem - ojapde33-i ]",
    "let @xmath49 be given as in theorem  [ thm - ojapde33 ] , with @xmath176 being in the interior of @xmath50 .",
    "assume that @xmath82 is the @xmath177 unit matrix @xmath123",
    ". at @xmath124 , one step of oja median filtering of @xmath49 with the structuring element @xmath59 then approximates for @xmath57 an explicit time step of size @xmath178 of the pde system @xmath179    the proof of this lemma extends the first proof of lemma  [ lem - ojapde22-i ] and is given in appendix  [ app-33proof ] .    in full analogy with the bivariate case ,",
    "see section  [ sssec - interpret22 ] , the pde system can be interpreted in terms of the principal components of local data variation , which appear decorrelated in lemma  [ lem - ojapde33-i ] .",
    "again , the pdes combine isotropic diffusion with componentwise mean curvature motion given by @xmath180 and cross - effect terms . the latter couple each pair of principal components by mutual influence based on the torsion of these components in the plane spanned by both .",
    "definition  [ def - l1a22 ] can be applied verbatim to define an affine equivariant transformed @xmath0 median filter for functions @xmath181 , which we will consider now .",
    "[ prop - l1apde33 ] let a three - channel volume image @xmath170 , @xmath171 , be given . at any location where @xmath118 , one step of affine equivariant transformed @xmath0 median filtering of @xmath49 with the structuring element @xmath59 approximates for @xmath57 an explicit time step of size @xmath172 of the pde system with the coefficient matrices  as stated in theorem  [ thm - ojapde33 ] .",
    "this proposition is a consequence of the following lemma .",
    "[ lem - l1apde33-i ] let @xmath49 be given as in proposition  [ prop - l1apde33 ] .",
    "assume that @xmath82 is the @xmath177 unit matrix @xmath123",
    ". at @xmath124 , one step of @xmath0 median filtering of @xmath49 with the structuring element @xmath59 then approximates for @xmath57 an explicit time step of size @xmath178 of the pde system  from lemma  [ lem - ojapde33-i ] .",
    "the proof of this lemma is based on the same principle as the proof of lemma  [ lem - l1pde22-aligned ] in @xcite , extended from two to three dimensions but at the same time simplified by restricting the jacobian @xmath73 to the unit matrix .",
    "it is detailed in appendix  [ app - l1a33proof ] .",
    "we remark that there is no serious technical obstacle to generalising this proof even to arbitrary diagonal jacobians , which would yield a pde approximation result for the standard @xmath0 median in three dimensions . as in proposition",
    "[ prop - l1pde22 ] , quotients of elliptic integrals would appear as coefficient functions . with our focus on affine equivariant filters , we do not need this generality here .",
    "so far we have considered settings in which the number of dimensions of the image domain @xmath50 equalled that of the data space .",
    "there are , however , important classes of image data for which this is not the case , with rgb colour images over planar domains being the most prominent example . as our last dimensional",
    "setting , we will therefore consider three - channel images over planar domains .",
    "the jacobian of such an image is a @xmath182 matrix field .",
    "the generic case is therefore no longer given by an invertible jacobian but just by the rank of the jacobian being maximal ( @xmath183 ) , which requires adjusting several arguments .",
    "our focus will again be on affine equivariant filters .      with regard to the degeneracy of the 3d oja median in the sense of in the case of three - channel data over a planar domain that has already been discussed in section  [ ssec - demo - rgb ]",
    "we choose the 2d oja median in the sense of for our theoretical analysis .",
    "[ thm - ojapde23 ] let a three - channel planar image @xmath184 , @xmath185 , be given . at any location where the @xmath182 matrix @xmath73 has rank 2 , one step of 2d oja median filtering of @xmath49 with the structuring element @xmath43 approximates for @xmath57 an explicit time step of size @xmath186 of the pde system @xmath187 where for @xmath188 and @xmath189 the coefficient matrices are given by @xmath190    [ rm - oja23-d3 ] note that @xmath191 , the @xmath177 matrix obtained by enlarging the @xmath192 jacobian @xmath73 with a third column orthogonal to the first two ones , is regular if and only if @xmath73 has rank 2 as required in the hypothesis of the theorem .",
    "the transformed variables @xmath193 have the jacobian @xmath194 .",
    "any scaling of the third column of @xmath191 is actually irrelevant for the statement and proof of the theorem ; it cancels out in the evaluation of and .",
    "it may , however , affect the scaling of deviations from the pde that occur for positive structuring element radius @xmath56 .    with the coordinate transform @xmath191 ,",
    "the proof of the theorem proceeds analogously to the proof of theorem  [ thm - ojapde22 ] and relies on the following lemma .",
    "[ lem - ojapde23-i ] let @xmath49 be given as in theorem  [ thm - ojapde23 ] , with the image domain @xmath50 containing the origin @xmath81 in its interior .",
    "assume that @xmath195",
    ". at @xmath124 , one step of oja median filtering of @xmath49 with the structuring element @xmath43 then approximates for @xmath57 an explicit time step of size @xmath186 of the pde system @xmath196    the proof of this lemma is given in appendix  [ app-23proof ] .",
    "it is based on the result from lemma  [ lem - ojapde22-i ] for the bivariate oja median and extends it with a calculation of the @xmath197 component . in doing the latter , we reformulate the oja median function into a weighted @xmath0 median for the feet of altitudes in the triangles , and proceed then analogously to the proof of the three - channel @xmath0 median result , lemma  [ lem - l1apde33-i ] , where the minimisation condition was evaluated by explicit integration over the structuring element .",
    "this approach has been avoided in the other proofs for the oja median results because in the general oja median case it turns out extremely tedious , but in the special case considered here it becomes feasible by exploiting a rotational symmetry argument in combination with an integration in polar coordinates similar to the first proof of lemma  [ lem - ojapde22-i ] .      turning to",
    "the affine equivariant transformed @xmath0 median filter , definition  [ def - l1a22 ] of its space - continuous variant in the bivariate case does not transfer straightforwardly to the situation of three - channel planar images as it uses the inverse of the jacobian of the input function . for our analysis , we adopt the proceeding from section  [ sssec - ojapde23 ] and use the enlarged jacobian @xmath191 with the same scaling convention as in .",
    "we can then define the filter to be analysed as follows .",
    "[ def - l1a23 ] let a function @xmath198 and the structuring element @xmath43 be given . for each location",
    "@xmath160 where @xmath199 has rank @xmath183 , let @xmath200 be given as in , and transform the function values @xmath162 for @xmath163 via @xmath201 . determine the @xmath0 median @xmath165 of the data @xmath137 .",
    "transform @xmath165 back to @xmath202 . the image filter that transfers the input function @xmath203 to the function @xmath204",
    "is called affine equivariant transformed @xmath0 median filter .    as in the case of the oja median ,",
    "any possible scaling of the third column of @xmath191 will be irrelevant for the asymptotic analysis carried out in the following .",
    "a caveat arises , however , when a discrete filter based on the transformation  retransformation approach @xcite or as implemented in section  [ ssec - demo - rgb ] is used as discrete approximation for variable positive structuring element radius @xmath56 . as this discrete procedure just takes the @xmath48 input data as samples of a 3d distribution and tries to normalise this distribution",
    ", it might introduce a scaling factor that changes with @xmath56 .",
    "we leave analysis of this difficulty for future work but remark that the results of our numerical experiments in section  [ sssec - cr23 ] support the validity of the analysis given here .",
    "[ prop - l1apde23 ] let a three - channel planar image @xmath184 , @xmath185 , be given . at any location where the @xmath182 matrix @xmath73 has rank 2 , one step of affine equivariant transformed @xmath0 median filtering of @xmath49 with the structuring element @xmath43 approximates for @xmath57 an explicit time step of size @xmath186 of the pde system with the coefficient matrices  as stated in theorem  [ thm - ojapde23 ] .",
    "the proof of the proposition is analogous to the proof of theorem  [ thm - ojapde23 ] , using the special case @xmath205 of the following lemma .",
    "the lemma itself is corrected from @xcite and rewritten for the three - channel case .",
    "lem - l1pde23-aligned ] let @xmath49 be given as in proposition  [ prop - l1apde23 ] , with the image domain @xmath50 containing the origin @xmath81 in its interior .",
    "assume that the jacobian at @xmath86 is of the form @xmath206 with @xmath84 .",
    "then one step of @xmath0 median filtering with the structuring element @xmath85 approximates for @xmath57 at @xmath207 an explicit time step of size @xmath58 of the pde system consisting of the equations , , and @xmath208 where the coefficient function @xmath209 is given by @xmath210    [ rm - l1pde23-i ] in the case @xmath93 , @xmath94 , the coefficients of simplify via @xmath211 such that one obtains @xmath212 which together with and and after rescaling the time variable by @xmath128 yields . this is the relevant case for the proof of proposition  [ prop - l1apde23 ] .",
    "this section is focussed at validating the pde approximation results from section  [ sec - pde ] by numerical experiments .",
    "we start with several experiments on simple example functions in which we compare the individual coefficients of the pdes for the different variants of multivariate median filters derived in section  [ sec - pde ] with median filtering results for the function values sampled at high resolution .",
    "lllllrrrrrr & & & & + @xmath113&@xmath114&@xmath157&@xmath101&@xmath213 & & & & & & +    ' '' ''    @xmath214&@xmath39 & @xmath215&@xmath35&@xmath35 & @xmath216&@xmath217 & @xmath218&@xmath217 & @xmath216&@xmath217 + @xmath219 & @xmath39 & @xmath35&@xmath215&@xmath35 & @xmath217&@xmath220 & @xmath217&@xmath221 & @xmath217&@xmath222 + @xmath223&@xmath39 & @xmath35&@xmath35&@xmath215 & @xmath224&@xmath217 & @xmath224&@xmath217 & @xmath225&@xmath217 +    to verify the results on bivariate @xmath0 and oja median filtering , we focus first on the case @xmath126 , see remark  [ rm - l1pde22-i ] and lemma  [ lem - ojapde22-i ] .",
    "we discretise sample functions @xmath226 and @xmath227 in the structuring element @xmath228 , i.e.  the disc of radius @xmath34 around the origin , with a grid resolution of @xmath229 in @xmath38 and @xmath39 direction , which yields @xmath230 sample points . for symmetry reasons ,",
    "the sample functions are chosen to test only the weights of @xmath157 , @xmath101 and @xmath213 while leaving @xmath231 . for these input data",
    "we compute the @xmath0 and oja medians and compare these with the theoretical values given by the right - hand side of , with the time step size @xmath232 .",
    "the results can be found in table  [ tab - l1oja22-coeffcomp ] .",
    "the observed deviations in the range of @xmath233 between the computed medians and pde time steps are expectable given the grid resolution .",
    "the tests for bivariate filters in the case @xmath158 from section  [ sssec - cr22 ] can easily be extended to three - channel planar image filtering by @xmath0 and 2d oja medians .",
    "using the same structuring element and sampling grid as before , we sample now @xmath48-valued functions @xmath185 with @xmath205 , @xmath234 , where we vary single second - order taylor coefficients away from zero .",
    "the results shown in table  [ tab - l1oja23-coeffcomp ] indicate an accuracy of approximation comparable to the previous case , and thereby confirm the validity of the approximation results from lemma  [ lem - ojapde23-i ] and lemma  [ lem - l1pde23-aligned ] ( with @xmath205 ) . we have omitted test cases where only second derivatives of @xmath113 and @xmath114 were varied , because in these cases results were identical to the pure bivariate case .",
    "l@  l@  l@  cr@  r@  r@  r@  r@  r@  r@  r@  r & & & & + @xmath113&@xmath114&@xmath235 & & & & & & & & & & +    ' '' ''    @xmath38 & @xmath39 & @xmath236 & @xmath237 & @xmath217&@xmath217&@xmath238 & @xmath217&@xmath217&@xmath239 & @xmath217&@xmath217&@xmath240 + @xmath38 & @xmath39 & @xmath241 & @xmath242 & @xmath217&@xmath217&@xmath217 & @xmath217&@xmath217&@xmath217 & @xmath217&@xmath217&@xmath217 + @xmath38 & @xmath39 & @xmath243 & @xmath244 & @xmath217&@xmath217&@xmath238 & @xmath217&@xmath217&@xmath239 & @xmath217&@xmath217&@xmath240 + @xmath214&@xmath39 & @xmath236 & @xmath245 & @xmath246&@xmath217&@xmath247 & @xmath248&@xmath217&@xmath249 & @xmath216&@xmath217&@xmath240 + @xmath214&@xmath39 & @xmath241 & @xmath250 & @xmath251&@xmath217&@xmath217 & @xmath252&@xmath217&@xmath217 & @xmath216&@xmath217&@xmath217 + @xmath214&@xmath39 & @xmath243 & @xmath253 & @xmath254&@xmath217&@xmath238 & @xmath255&@xmath217&@xmath256 & @xmath216&@xmath217&@xmath240 +      referring to our discussion in section  [ sssec - ojapde22-deg ] regarding the behaviour of multivariate median filters and the corresponding pdes for structuring elements @xmath43 of nonvanishing radius @xmath56 , we turn to check by an additional numerical experiment how an increase of the second derivatives away from zero effects the median .    to this end",
    ", we compute bivariate oja medians , again with a structuring element of radius @xmath257 discretised with grid resolution @xmath229 , for functions with increasing values of the three second partial derivatives @xmath157 , @xmath213 , @xmath100 occurring on the right - hand side of .",
    "the underlying functions are    * @xmath258 , @xmath259 for the test of @xmath157 , * @xmath260 , @xmath259 for the test of @xmath213 , and * @xmath261 , @xmath262 for the test of @xmath100 ,    where @xmath263 is varied from @xmath35 to @xmath264 .",
    "figure  [ fig - nonlinresponse ] shows the @xmath113 components of the resulting oja medians dependent on the values of @xmath263 . for @xmath263 close to zero",
    "they increase linearly with the ascents predicted by .",
    "regarding @xmath157 and @xmath213 , the median values follow this linear ascent closely , within @xmath265 tolerance , up to @xmath266 , after which the values grow rapidly faster in the @xmath157 case , and are dampened in the @xmath213 case .",
    "in contrast , in the @xmath100 case the deviation from linear behaviour starts much earlier , leading to more than @xmath265 deviation already for @xmath267 , with the growth of the median rapidly being dampened above this level . for large @xmath263 ,",
    "the effect of the coefficient @xmath100 on the median even starts to decrease .",
    "the response of the median value to @xmath100 confirms the inherent nonlinear dampening effect of the median filter procedure .",
    "0.0125    ( 80,31 ) ( 0.0 , 0.0 ) ( 3.3 , 3.6)@xmath268 ( 3.3 , 8.6)@xmath215 ( 3.3,13.9)@xmath269 ( 3.3,19.1)@xmath270 ( 3.3,24.3)@xmath271 ( 3.3,29.5)@xmath272 ( 1.0 , 6.0 ) ( 5.6 , 2.0)@xmath268 ( 12.2 , 2.0)@xmath272 ( 19.5 , 2.0)@xmath273 ( 26.8 , 2.0)@xmath274 ( 34.1 , 2.0)@xmath275 ( 41.4 , 2.0)@xmath264 ( 18.0 , 0.0)@xmath157 , @xmath213 , @xmath276 ( 10.0,27.8)@xmath157 ( 10.0,25.7)@xmath213 ( 10.0,23.6)@xmath100 ( 48,0 )      to demonstrate the validity of the pde approximation results of proposition  [ prop - l1pde22 ] , theorem  [ thm - ojapde22 ] , and corollary  [ cor - l1apde22 ] also away from the special case @xmath158 , we consider a simple bivariate example function given by @xmath277 level sets of @xmath113 and @xmath114 for this function in the range @xmath278\\times[0,1]$ ] are depicted in figure  [ fig - exfn2 ] . in this figure , also seven test locations a ",
    "g are depicted together with structuring elements of radius @xmath279 for which we compare in the following median filter values with time steps @xmath280 of the respective pde counterparts .",
    "we start with the @xmath0 median and the pde  from proposition  [ prop - l1pde22 ] .",
    "time steps @xmath281 of the pde at the locations a  g were computed analytically , using numeric integration for the integral values @xmath90 and @xmath91 . the time step size for was @xmath282 . for the computation of @xmath0 medians ,",
    "the structuring elements of radius @xmath56 around locations a  g were sampled at grid resolution @xmath283 resulting in approx .",
    "@xmath284 sample points for each location . from their function values",
    "@xmath285 the @xmath0 median @xmath286 was computed by the gradient descent method . for comparison with the pde time step the input function value of the midpoint",
    "was subtracted .",
    "table  [ tab - l1demo ] shows pde time steps , the corresponding median filter updates @xmath287 , @xmath288 and the relative errors ( in euclidean norm ) with respect to the pde time steps , i.e.@xmath289 .    for the oja median , we proceed analogously , with the analytically computed pde time steps of , oja median filter updates and their relative errors being shown in table  [ tab - ojademo ] .",
    "the time step size for was @xmath290 .",
    "the oja median values were computed using the gradient descent method . moreover",
    ", table  [ tab - ojademo ] contains results of the affine equivariant transformed @xmath0 median which according to corollary  [ cor - l1apde22 ] approximates the same pde .    in table",
    "[ tab - l1demo ] , the results for locations c  g show relative errors below @xmath291 , which are reasonable given the structuring element radius @xmath279 and the grid resolution .",
    "the approximation at locations a and b is less accurate . at these locations ,",
    "the gradients of @xmath113 and @xmath114 are almost aligned and not close to zero , making the jacobian @xmath73 ill - conditioned .",
    "locations e and f where the gradient @xmath292 is small and @xmath73 therefore also ill - conditioned , create less problems for the approximation .",
    "the results in table  [ tab - ojademo ] show that the approximation of the pde by both the oja median and the transformed @xmath0 median is fairly accurate , with relative errors of less than @xmath293 , at locations b , c , d and g where @xmath152 is sufficiently different from zero .",
    "larger discrepancies are observed for locations a , e , and f which are closer to the coordinate axes .",
    "note that on the @xmath38 axis , @xmath73 becomes singular due to coinciding gradient directions for @xmath113 and @xmath114 , while on the @xmath39 axis it does so due to the vanishing of @xmath294 .",
    "a comparison of tables  [ tab - l1demo ] and  [ tab - ojademo ] underlines that the standard @xmath0 median on one hand and the oja median and transformed @xmath0 median on the other hand indeed differ substantially .",
    "for their very similar results in the tests of section  [ sssec - cr22 ] it was decisive that the case @xmath158 was tested there .",
    "in contrast , for our test function here the jacobian is far away from the unit matrix , not only in locations a , e , f where it is near the degenerate case but also in the fairly regular locations b  d and g.    a close look at table  [ tab - ojademo ] also makes clear that , although they approximate the same pde , the oja median filter and affine equivariant transformed @xmath0 median filter are not identical .",
    "an analysis of the higher order terms neglected in the pde approximation analysis of section  [ sec - pde ] could shed more light on these differences .",
    "0.003    ( 333,130 ) ( 0,2 ) ( 111,17)a ( 110,36)b ( 82,83)c ( 37,109)d ( 16,113)e ( 22,17)f ( 42,42)g ( 7,2)@xmath35 ( 0,109)@xmath34 ( 108,0)@xmath34 ( 122,9)@xmath38 ( 7,125)@xmath39 ( 140,0 )    r@  l@  ll@  lr@  rr@  r@  r & & & & + & & & & & & & & & +    ' '' ''    a)&@xmath295&@xmath296&@xmath297&@xmath298 & @xmath299&@xmath300 & @xmath301&@xmath302&@xmath303 + b)&@xmath304&@xmath305&@xmath306&@xmath298 & @xmath307&@xmath308 & @xmath309&@xmath310&@xmath311 + c)&@xmath312&@xmath312&@xmath313&@xmath298 & @xmath314&@xmath315 & @xmath316&@xmath317&@xmath318 + d)&@xmath305&@xmath304&@xmath319&@xmath298 & @xmath320&@xmath321 & @xmath322&@xmath323&@xmath324 + e)&@xmath296&@xmath295&@xmath325&@xmath298 & @xmath326&@xmath327 & @xmath328&@xmath329&@xmath330 + f)&@xmath331&@xmath331&@xmath332&@xmath333 & @xmath334&@xmath335 & @xmath336&@xmath337&@xmath338 + g)&@xmath339&@xmath339&@xmath340&@xmath341 & @xmath342&@xmath343 & @xmath344&@xmath345&@xmath346 +    .[tab - ojademo ] comparison of numerical computed oja median and transformed @xmath0 median with analytically computed time steps @xmath281 of the pde  for the function @xmath347 . to compute medians @xmath286 , the structuring element of radius @xmath279 was sampled using a grid with spatial mesh size @xmath348 , generating about @xmath284 data points . the time step size for was chosen as @xmath290 . medians and time steps are scaled by @xmath349 for more compact representation . [ cols= \" > , < , < , < , < , > , > , > , > , > , > , > , > \" , ]      for the three - channel case , we consider the case @xmath126 as treated in lemmas  [ lem - ojapde33-i ] and [ lem - l1apde33-i ] .",
    "we discretise sample functions @xmath350 , @xmath351 , @xmath352 in the structuring element @xmath353 , i.e.  the ball of radius @xmath34 around the origin , with a grid resolution of @xmath354 in the @xmath38 , @xmath39 and @xmath355 directions , which yields @xmath356 sample points .",
    "the coarser resolution compared to section  [ sssec - cr22 ] is a tribute to the unfavourable computational complexity of our three - channel oja median computation .",
    "again , it suffices for symmetry reasons to consider sample functions that test only the weights of the second derivatives of @xmath113 while leaving @xmath357 and @xmath358 . for these input data we compute the oja and @xmath0 medians and compare these with the theoretical values given by the right - hand side of  with the time step size @xmath359 .",
    "the results can be found in table  [ tab - l1oja33-coeffcomp ] .",
    "the observed deviations in the range of @xmath360 between the computed oja medians and pde time steps are expectable given the grid resolution .",
    "for the @xmath0 median , larger deviations up to @xmath361 are observed . however , doing the same computation with a finer sampling grid  which is computationally feasible with our implementation of the @xmath0 median but not for the oja median  yields values also for the @xmath0 median that match the time step of ",
    "closely , thereby confirming also the asymptotic equivalence of the oja and affine equivariant transformed @xmath0 filter for three - channel volume images .",
    "l@  l@  l@  r@l@  r@  r@  r@  r@  r@  r@  r@  r@  r & & & & + @xmath113&@xmath114&@xmath235 & & & & & & & & & & + @xmath214&@xmath39&@xmath355&@xmath362&@xmath363 & @xmath364&@xmath365&@xmath365 & @xmath366&@xmath365&@xmath365 & @xmath367&@xmath365&@xmath365 + @xmath219&@xmath39&@xmath355&@xmath368&@xmath363 & @xmath365&@xmath369&@xmath365 & @xmath370&@xmath371&@xmath365 & @xmath365&@xmath372&@xmath365 + @xmath373&@xmath39&@xmath355&@xmath374&@xmath363 & @xmath365&@xmath365&@xmath369 & @xmath370&@xmath365&@xmath371 & @xmath365&@xmath365&@xmath372 + @xmath223&@xmath39&@xmath355&@xmath375&@xmath363 & @xmath376&@xmath365&@xmath365 & @xmath377&@xmath365&@xmath365 & @xmath378&@xmath365&@xmath365 + @xmath379&@xmath39&@xmath355&@xmath380&@xmath363 & @xmath365&@xmath365&@xmath365 & @xmath365&@xmath365&@xmath365 & @xmath365&@xmath365&@xmath365 + @xmath381&@xmath39&@xmath355&@xmath382&@xmath363 & @xmath376&@xmath365&@xmath365 & @xmath377&@xmath365&@xmath365 & @xmath378&@xmath365&@xmath365 +      in our final experiment , we return to the filtering of rgb images and make now the transition to iterated median filtering . in these experiments , a numerical scheme for the pde  is used .",
    "we start therefore with a brief description of this scheme .",
    "we assume that the three - channel input image @xmath383 for the pde  is sampled on an isotropic regular grid with spatial step size @xmath384 in the @xmath38 and @xmath39 directions , and denote by @xmath385 the intensity triple at pixel @xmath386 .",
    "we will compute by an explicit finite - difference scheme a sequence @xmath387 of filtered images that approximate the pde at evolution times @xmath388 with time step size @xmath389 , with @xmath390 . by @xmath391",
    "we denote the value of pixel @xmath386 in the @xmath392-th iteration .    in computing @xmath393 from the previous image @xmath394 we use the pixels @xmath395 from the @xmath177 patch @xmath396 given by @xmath397 and @xmath398 .",
    "the numerical scheme transforms the input data @xmath49 within each patch @xmath396 by an orthogonal transform @xmath399 of the values and determining a new orthogonal basis @xmath400 in the @xmath207 plane such that @xmath401 and @xmath402 are the only nonzero entries of the jacobian @xmath403 w.r.t .",
    "the new coordinates at pixel @xmath386 .",
    "the pde to be approximated then reads @xmath404 herein , the first contribution @xmath405 is approximated by central differences even in the original @xmath207 coordinates .",
    "the second contribution @xmath406 is approximated by central differences in the @xmath400 basis .",
    "for the third contribution @xmath407 , such a discretisation would be unstable and also unable to cope with locations where @xmath401 or @xmath402 vanishes .",
    "therefore , two stabilisations are used .",
    "first , the weight factor @xmath408 is approximated by the regularised expression @xmath409 with a fixed numerical regularisation parameter @xmath410 using central differences in the numerator and a combination of minmod - stabilised one - sided differences in the denominator ; a similar expression @xmath411 is used for @xmath412 .",
    "second , the factor @xmath413 in the first component is discretised in an upwind way by choosing a one - sided difference according to the sign of @xmath414 ; analogously for @xmath415 in the second component .    for utmost explicitness ,",
    "the scheme is stated as a detailed algorithm in appendix  [ app - pdealgo ] .      0.0048    ( 208,126 ) ( 0.0,94 )   ( 34.0,94 )   ( 68.0,94 )   ( 1.1,96 ) ( 35.1,96 ) ( 69.1,96 ) ( 0.0,60 )   ( 34.0,60 )   ( 68.0,60 )   ( 1.1,62 ) ( 35.1,62 ) ( 69.1,62 ) ( 0.0,26 )   ( 34.0,26 )   ( 68.0,26 )   ( 1.1,28 ) ( 35.1,28 ) ( 69.1,28 ) ( 108.0,18 ) ( 0,0 )    using the algorithms described so far in the paper , we compute iterated median filters of the rgb image from figure  [ fig - co01 ] ( a ) and their supposed pde evolution counterpart .",
    "results are shown in figure  [ fig - co01-evo ] .    in the first row ,",
    "the filter parameters of the 2d oja median filter and the affine equivariant transformed @xmath0 median filter are adjusted such as to correspond to an evolution time @xmath416 of the pde system . to this end , a structuring element of radius @xmath417 is used , and @xmath42 iterations of both median filters carried out , see the results in figure  [ fig - co01-evo ] ( a ) and ( b ) . in frame ( c ) , the result from the numerical evaluation of the pde is shown . with time step size @xmath418 and @xmath419 iterations",
    "this represents also the evolution time @xmath416 .    in the second row of figure  [ fig - co01-evo ] , frames ( d)(f ) ,",
    "the same filters are shown for an evolution time of @xmath420 , i.e.  @xmath421 median iterations and @xmath422 time steps , respectively . regarding the structure simplification by rounding contours etc . , the results for the same evolution time are largely comparable , with the transformed @xmath0 median featuring the sharpest preservation of edges ( with exception of a few structures where the oja median result appears sharper ) .",
    "the pde results are visibly more blurred .",
    "it can be conjectured that this blur is not intrinsic to the pde but to the numerical dissipation that usually comes with explicit finite difference schemes for curvature - based pdes .",
    "figure  [ fig - co01-evo ] ( g ) and ( h ) show median filtering results for the same evolution time @xmath420 , but this time realised with structuring element radius @xmath46 and @xmath128 iterations .",
    "the sharpness and overall degree of structure simplification is fairly comparable with frames ( d ) and ( e ) , which confirms that indeed the progress of the filtering process scales with @xmath423 as suggested by the approximation theorem . some corners are being rounded more pronouncedly with the larger structuring element ( see for example the grey tiles in the background ) .    based on the assumption that the higher amount of blur in the pde results so far is caused by numerical dissipation inherent to the finite - difference discretisation , one might think of modifying the numerical scheme by sharpening terms that compensate for this dissipation , see the _ flux - corrected transport _ approach established in @xcite and used in image processing e.g.  in @xcite for hyperbolic pdes .",
    "of course , a well - founded modification of the numerical scheme from section  [ ssec - pdenum ] would require a detailed analysis of its approximation errors , which we can not provide at this point .",
    "however , the pde under consideration offers a simple way to test this idea on a heuristic level . to see this , note that the pde includes the isotropic ( forward ) diffusion term @xmath424 .",
    "let us therefore introduce inverse linear diffusion @xmath425 with an anti - diffusion weight @xmath426 as a heuristic flux correction .",
    "this is tantamount to just reducing the weight of @xmath405 in from @xmath34 to @xmath427 .",
    "as long as @xmath428 , the net linear diffusion @xmath429 is forward diffusion , thus not harming the stability of the numerical scheme . in figure  [ fig - co01-evo ] ( i )",
    "we present the result of filtering the test image with the so - modified scheme with @xmath430 , i.e.completely suppressing @xmath405 .",
    "the filtered image is fairly similar to the median filtering results in frames ( e ) and ( h ) regarding sharpness and contour simplification . regarding those details which are filtered more pronouncedly in frames ( g ) and ( h ) than in ( d ) and ( e ) , visual inspection places the modified pde result ( i ) closer to ( d ) and ( e ) , which is natural given that the approximation of the pde by median filtering is asymptotic for @xmath57 .",
    "in this paper , we have analysed multivariate median filters in a space - continous setting with emphasis on their asymptotic behaviour .",
    "we have considered @xmath0 , 2d and 3d oja median filters and affine equivariant transformed ( transformation  retransformation ) @xmath0 median filters for bivariate planar images , three - channel volume images and three - channel planar images . in all these cases ,",
    "we have derived pdes approximated by multivariate median filters in the limit for vanishing radius of the structuring element .",
    "we have verified these pde approximation statements by numerical experiments .",
    "an important outcome of our analysis is that the oja median filter and the affine equivariant transformed @xmath0 median filter are asymptotically equivalent in relevant settings .",
    "the iterated oja median filter , the transformed @xmath0 median filter and the corresponding pde can therefore be considered as different approximations to the same kind of ideal _ affine equivariant median filter_.    future work on the theoretical side might be directed at obtaining a more general form of the approximation statements , such as uniform representations of pdes for median filtering of @xmath55-dimensional data over @xmath431-dimensional domains , including affine equivariant transformed @xmath0 and different @xmath392-dimensional oja medians . the numerical scheme from section  [ ssec - pdenum ] , while working in experiments , still lacks a detailed stability analysis . as pointed out in section  [ ssec - exp - itmed ]",
    ", it would also be of interest to analyse the numerical dissipation in this scheme by studying the approximation errors of its finite difference approximations , in order to formulate a theoretically well - founded corrected scheme instead of the heuristic anti - diffusion approach used in figure  [ fig - co01-evo ] ( i ) .    regarding the implementation of multivariate median filtering",
    ", more efficient algorithms for oja median filtering should be investigated along the lines sketched in section  [ ssec - demo - num ] . in the light of the above - mentioned asymptotic equivalence of affine equivariant multivariate medians , however , using the transformation ",
    "retransformation @xmath0 median appears as a viable alternative .",
    "finally , the results of the present paper may open different avenues to a broader application of multivariate median filters in image processing . on one hand , based on a proper theoretical understanding of its effect",
    ", affine equivariant ( oja or transformed @xmath0 ) median filtering can be studied in practical image processing applications to find out more about its practical advantages or disadvantages . on the other hand , although the pde approximated by affine equivariant median filters is not quite as simple as the mean curvature motion equation approximated by univariate median filtering , its geometric contributions are also explicit enough to raise the expectation that medians can be used as a building block in nonstandard numerical approximations of multivariate curvature - based pdes .    on a wider horizon , a further topic of interest for future research",
    "is whether also other multivariate median concepts from statistical literature , which generalise other properties of the univariate median than the distance sum minimisation , can be incorporated into the theoretical framework and made useful for image processing .",
    "we restate here the proof from @xcite with slight modifications and additional details .    the taylor expansion of @xmath285 up to second order around @xmath135 reads as @xmath432 where the coefficients are given by derivatives of @xmath113 , @xmath114 at @xmath433 as @xmath434 restating the definition of oja s simplex median for continuous data sets with density function @xmath435",
    ", we seek the point @xmath436 which minimises the integral over all areas of triangles @xmath437 with @xmath438 and @xmath439 with @xmath440 , @xmath441 , weighted with the density @xmath442 .    0.004    ( 250,61 ) ( 5,4 ) ( 0,3)@xmath443 ( 94,0)@xmath444 ( 71,54)@xmath445 ( 36,19)@xmath446 ( 106,0 )    for each triangle @xmath437 , the negative gradient of its area as function of @xmath443 is a force vector @xmath447 where @xmath446 is perpendicular to @xmath448 with a length proportional to the length @xmath449 , see figure  [ fig - ojatriangle ] .",
    "assuming that @xmath437 is positively oriented , this vector equals @xmath450 .    sorting the pairs @xmath451 by the orientation angles @xmath452 of the lines @xmath446 , we see that the minimisation condition for the oja median can be expressed as @xmath453 here , @xmath454 is essentially the resultant of all forces @xmath446 for which the line @xmath448 intersects the ray from @xmath443 in direction @xmath455 perpendicularly .",
    "each force @xmath446 is weighted with the combined density @xmath456 .    the factor @xmath457 in front of the integral combines the factor @xmath458 from the force vector mentioned above with another factor @xmath458 to compensate that each triangle @xmath437 enters the integral twice ( once as @xmath437 and once as @xmath459 , where the orientation factor cancels by squaring ) .",
    "note that in @xcite the integral was stated differently , integrating only over the triangles with positive orientation .",
    "moreover , @xmath460 will be of order @xmath461 ( in fact , even @xmath462 ) .",
    "thus , @xmath286 can be expressed up to higher order terms via linearisation as @xmath463 we therefore turn now to derive an expression for @xmath464 . considering first @xmath465 , this means that all point pairs @xmath451 in the @xmath113-@xmath114 right half - plane with @xmath466 contribute to @xmath467 , yielding @xmath468 note that the factor @xmath469 occurs squared in the integrand .",
    "one factor @xmath470 originates from the length of the triangle baseline @xmath448 .",
    "the second factor @xmath470 results from the fact that we have organised in , an integration over point pairs @xmath451 in the plane using a polar coordinate system similar to a radon transform ; @xmath471 arises as the jacobian of the corresponding coordinate transform from cartesian to radon coordinates .",
    "the derivatives of @xmath472 with regard to the coordinates of @xmath443 are @xmath473 forces @xmath464 and their derivatives for arbitrary angles @xmath452 will later be obtained from , , by rotating the @xmath113 , @xmath114 coordinates accordingly .    for the median of the values @xmath285 within a @xmath56-neighbourhood of @xmath433 ,",
    "the density @xmath435 is zero outside of an @xmath461-neighbourhood of @xmath135 , allowing to limit the indefinite integrals from to the intervals @xmath474 $ ] , @xmath475 $ ] such that @xmath476 expanding @xmath477 , can be further decomposed into @xmath478 where @xmath479 for @xmath480 .",
    "similarly , yields @xmath481    to compute @xmath467 and @xmath482 , we write them as functions of the coefficients of , i.e.@xmath483 and @xmath484 .",
    "we will linearise @xmath485 and @xmath486 around the point @xmath487 that represents the linear function @xmath488 . to justify this linearisation , remember that we are interested in the limit @xmath57 , such that only the terms of lowest order in @xmath56 matter .",
    "cross - effects between the different coefficients occur only in higher order terms . denoting from now on by @xmath489 equality up to higher order terms",
    ", we have therefore @xmath490 where @xmath491 , @xmath492 etc .",
    "are short for @xmath493 , @xmath494 etc .",
    "to compute @xmath491 and @xmath495 , we insert into the bounds @xmath496 , @xmath497 , @xmath498 .",
    "the density becomes constant within the region defined by @xmath499 , @xmath500 and @xmath501 , with @xmath502 .",
    "thus we have @xmath503 and via and finally @xmath504 for @xmath492 and @xmath505 , one has to vary @xmath506 to obtain the bounds @xmath507 , @xmath508 , @xmath509 .",
    "the density @xmath435 within the so - given bounds is @xmath510 at the location @xmath511 with @xmath512 , @xmath513 , i.e.  @xmath514 .",
    "thus we have @xmath515 and therefore by , @xmath516 proceeding analogously for the other coefficients , we find the values of @xmath499 , @xmath517 , @xmath518 and @xmath435 and the resulting coefficients compiled in table  [ tab-22anavals ] .",
    "c@  l@  l@  l@  l@  l@  c    ' '' ''    @xmath519&@xmath499&@xmath501 , @xmath500&@xmath435 & @xmath520 & @xmath521 & @xmath522 +    ' '' ''",
    "@xmath506&@xmath523 & @xmath524 & @xmath525 & @xmath526 & @xmath527 & @xmath528 +    ' '' ''    @xmath529&@xmath56&@xmath530 & @xmath531 & @xmath532 & @xmath533 & @xmath35 +    ' '' ''    @xmath534&@xmath56&@xmath535 & @xmath34 & @xmath536 & @xmath537 & @xmath538 +    ' '' ''    @xmath539&@xmath56&@xmath540 & @xmath34 & @xmath541 & @xmath542 & @xmath35 +    ' '' ''",
    "@xmath543&@xmath56&@xmath544 & @xmath545 & @xmath546 & @xmath547 & @xmath548 +    ' '' ''",
    "@xmath549&@xmath56&@xmath550 & @xmath551 & @xmath552 & @xmath553 & @xmath35 +    inserting the values from table  [ tab-22anavals ] into and , we have @xmath554 and by orthogonal transform in the @xmath113-@xmath114 plane @xmath555 integration then yields @xmath556 and via eventually @xmath557 inserting , into , we see that for @xmath558 the oja median filtering step approximates an explicit time step of size @xmath119 of the pde system .",
    "as in the previous proof , we express the minimisation condition as @xmath560 where @xmath561 expresses an anti - gradient of the objective function of the oja median ( the sum of triangle areas ) at the median candidate point @xmath562 .",
    "let @xmath562 with @xmath563 . for two points @xmath438 , @xmath439 in the @xmath113-@xmath114 plane ,",
    "the force exercised on @xmath443 by the negative gradient of the area of triangle @xmath437 is @xmath564 where @xmath565 provided the triangle @xmath437 is positively oriented .",
    "if @xmath437 is negatively oriented , the sign of @xmath446 changes .",
    "let now @xmath444 and @xmath445 given by @xmath566 with @xmath567 .",
    "aggregating the forces @xmath446 directly by integration over @xmath568 , @xmath569 , @xmath570 , @xmath571 , and denoting again by @xmath489 equality up to higher order terms , one sees that the resulting force can be stated as @xmath572 here , @xmath573 denote the regions for @xmath574 for which @xmath437 is positively or negatively oriented , respectively . since @xmath575 if and only if @xmath576 and vice versa , we can switch the roles of @xmath132 and @xmath133 in two of the integrals to combine the previous expressions into @xmath577 where @xmath578 denote the areas of the respective regions .",
    "it remains to determine the area differences @xmath579 for all @xmath580 .    to this end , we use again the taylor expansion . for @xmath581 and @xmath582",
    "we have @xmath583 , @xmath584 , and @xmath585 and @xmath586 are half - discs separated by the diameter of @xmath43 through @xmath443 and @xmath444 . generally , the two regions are separated by the curve @xmath587 , which after inserting and dropping higher order terms becomes @xmath588 to determine the deviation of this line from the bisecting diameter mentioned above , we introduce coordinates aligned to the line @xmath589 by @xmath590 , @xmath591 and @xmath592 , @xmath593 .",
    "we can then write up to higher order terms as @xmath594 up to higher order terms , the area difference @xmath595 is minus double the area between this line and the @xmath263-axis in the interval @xmath596 $ ] , i.e.@xmath597 inserting , and into yields @xmath598 which reproduces the result , from the first proof such that one can again infer and thereby , .",
    "we start with the taylor expansion of @xmath599 around @xmath600 up to second order given as @xmath601 where @xmath602 , @xmath603 etc .",
    "similarly as in appendix  [ app-22proof1 ] for the bivariate planar case , we seek the point @xmath604 that minimises the integral over all volumes of tetrahedra @xmath605 with @xmath606 , @xmath607 , @xmath608 where @xmath609 with @xmath610 , weighted with the density @xmath611 .    for each tetrahedron @xmath605 ,",
    "the negative gradient of its volume as a function of @xmath443 is a force vector @xmath612 perpendicular to the plane @xmath613 with a length proportional to the area @xmath614 of the triangle @xmath613 .",
    "assuming positive orientation of that triangle , @xmath615 equals the vector ( cross ) product @xmath616 .    organising the integration over point triples @xmath617 again by orientations of the force vectors , we consider the resultant @xmath618 of all forces in direction of any given unit vector @xmath619 .",
    "linearising for @xmath620 around @xmath86 , @xmath621 ( compare ) , and considering first the case where @xmath622 is the first coordinate vector , we can state the analogue of as @xmath623 the appearance of the square of the area @xmath624 is again due to the radon - like polar coordinates underlying the integration over directions .",
    "as in appendix  [ app-22proof1 ] , the indefinite integrals can be limited to finite intervals @xmath474 $ ] , @xmath625 $ ] , @xmath626 $ ] for @xmath627 .",
    "expanding @xmath628 then leads to @xmath629 with @xmath630 for @xmath631 .",
    "we linearise @xmath632 with regard to the 18 coefficients @xmath633 of the taylor expansion",
    " @xmath634 like in the bivariate case of appendix  [ app-22proof1 ] , cross - effects between the coefficients @xmath519 take effect only in higher - order terms that can be neglected for our purpose . moreover , @xmath491 is again a constant that vanishes in the integration over directions , so we refrain from explicitly calculating it .",
    "c@  c@  l@  l@  l@  l@  c    ' '' ''    @xmath519 & @xmath519(symm . ) & @xmath499 & @xmath501 , @xmath500 & @xmath635 , @xmath636 & @xmath637 & @xmath522 +    ' '' ''    @xmath506 & & @xmath523 & @xmath524 & @xmath638 & @xmath639 & @xmath640 +    ' '' ''    @xmath641&@xmath529 & @xmath56 & @xmath642 & @xmath643 & @xmath644 & @xmath35 +    ' '' ''    @xmath534&@xmath645 & @xmath56 & @xmath535 & @xmath646 & @xmath34 & @xmath647 +    ' '' ''    @xmath648 & & @xmath56 & @xmath642 & @xmath649 & @xmath34 & @xmath35 +    ' '' ''    @xmath543&@xmath650 & @xmath56 & @xmath544 & @xmath651 & @xmath545 & @xmath652 +    ' '' ''    @xmath653&@xmath654 & @xmath56 & @xmath642 & @xmath655 & @xmath34 & @xmath35 +    ' '' ''    @xmath549&@xmath656 & @xmath56 & @xmath550 & @xmath657 & @xmath551 & @xmath35 +    ' '' ''    @xmath658&@xmath659 & @xmath56 & @xmath642 & @xmath660 & @xmath661 & @xmath35 +    ' '' ''    @xmath662&@xmath663 & @xmath56 & @xmath642 & @xmath664 & @xmath34 & @xmath35 +    ' '' ''    @xmath665&@xmath539 & @xmath56 & @xmath642 & @xmath666 & @xmath34 & @xmath35 +    c@  l@  l@  l@  l@  l@",
    "l    ' '' ''    @xmath519 & @xmath667 & @xmath668 & @xmath669 & @xmath670 & @xmath671 & @xmath672 +    ' '' ''    @xmath506 & @xmath673 & @xmath35 & @xmath673 & @xmath35 & @xmath35 & @xmath674 +    ' '' ''    @xmath641 & @xmath675 & @xmath35 & @xmath675 & @xmath35 & @xmath676 & @xmath677 +    ' '' ''    @xmath534 & @xmath678 & @xmath35 & @xmath679 & @xmath35 & @xmath35 & @xmath680 +    ' '' ''    @xmath648 & @xmath675 & @xmath681 & @xmath675 & @xmath35 & @xmath35 & @xmath677 +    ' '' ''    @xmath543 & @xmath682 & @xmath35 & @xmath675 & @xmath35 & @xmath35 & @xmath677 +    ' '' ''    @xmath653 & @xmath675 & @xmath683 & @xmath675 & @xmath35 & @xmath35 & @xmath677 +    ' '' ''    @xmath549 & @xmath675 & @xmath35 & @xmath675 & @xmath684 & @xmath35 & @xmath677 +    ' '' ''    @xmath658 & @xmath675 & @xmath35 & @xmath675 & @xmath35 & @xmath35 & @xmath677 +    ' '' ''    @xmath662 & @xmath675 & @xmath35 & @xmath675 & @xmath685 & @xmath35 & @xmath677 +    ' '' ''    @xmath665 & @xmath675 & @xmath35 & @xmath675 & @xmath35 & @xmath686 & @xmath677 +    to calculate the value @xmath522 for each coefficient @xmath519 one can then assume that only this particular coefficient varies around @xmath35 while all other coefficients vanish .",
    "for 10 of the coefficients @xmath519 one calculates then the integration bounds @xmath499 , @xmath500 , @xmath501 , @xmath636 , @xmath635 and the density function @xmath637 as stated in table  [ tab-33anavals-1 ] , the respective integrals @xmath687 as given in table  [ tab-33anavals-2 ] and finally using the coefficients @xmath522 which are again listed in table  [ tab-33anavals-1 ] .",
    "the remaining 8 coefficients need not be calculated in this tedious way as they can be derived from the obvious symmetry of @xmath632 under the exchange of @xmath39 and @xmath355 ; the detailed symmetries of coefficients are also stated in table  [ tab-33anavals-1 ] .    for the derivatives of @xmath688 we have @xmath689 here , @xmath495 is calculated from the unperturbed case @xmath261 , @xmath259 , @xmath690 via @xmath691 thus only the first summand of the integrand of is non - zero , leading to @xmath692 from the so obtained expressions @xmath693 general expressions for @xmath694 and its derivatives w.r.t .",
    "@xmath695 , @xmath696 , @xmath697 can be obtained .",
    "given the parametrisation @xmath698 one can use e.g.  the rotation matrix @xmath699 to transform the @xmath700 and @xmath701 coordinates simultaneously .",
    "( there is a degree of freedom in the choice of @xmath702 that corresponds to a rotation around the direction of @xmath703 . )",
    "integration over directions then yields @xmath704 and similarly @xmath705 and by @xmath706 hence an explicit time step of size @xmath707 of the pde system .",
    "we start again from the taylor expansion  of the function @xmath49 around the point @xmath124 .",
    "the @xmath0 median @xmath708 of the function values of @xmath49 within the structuring element @xmath59 is determined by the equilibrium conditions @xmath709 with the goal of the pde approximation , we will determine the median as linear function of the taylor coefficients .",
    "cross - effects between the taylor coefficients will again be restricted to higher order terms in @xmath56 that can be neglected in our asymptotic analysis for @xmath57 .",
    "we can therefore study the effects of the taylor coefficients separately .    to start with @xmath506",
    ", we insert in the function @xmath710 , @xmath259 , @xmath690 , and obtain the three conditions @xmath711 where @xmath712 condition   can be turned by substituting @xmath713 for @xmath39 into the same equation with @xmath714 in place of @xmath696 , i.e.for any triple @xmath620 that satisfies the three conditions , @xmath715 does the same . by the convexity of the objective function of the @xmath0 median it follows that @xmath716 is in this case also a minimiser .",
    "the same argument works for @xmath697 .",
    "hence , we can seek the median as @xmath717 and need to consider only condition  . using the substitution @xmath718 , @xmath719 , @xmath720",
    "we obtain @xmath721 splitting this integral into the integrals over @xmath722 and @xmath723 , we see that the integral over @xmath722 is of order @xmath724 because the integrand is absolutely bounded by @xmath34 . in the domain of the second",
    "integral , we have that @xmath725 and therefore by taylor expansion @xmath726 which leads to @xmath727 and finally , by neglecting @xmath728 terms , to @xmath729 thus in the limit @xmath730 .    by permutation of variables , one finds @xmath731 if @xmath261 , @xmath732 , @xmath690 , and @xmath733 if @xmath261 , @xmath259 , @xmath734 .    turning to the case @xmath735 , @xmath259 , @xmath690",
    ", we can conclude @xmath736 by a similar symmetry argument as before .",
    "for the remaining condition @xmath737 we proceed by the same substitutions , splitting of the integral domain , and taylor expansion of the denominator to finally obtain @xmath738 thus in the limit @xmath739 .    by permutation of variables",
    "this also determines the @xmath740 , @xmath741 , @xmath742 , @xmath743 and @xmath744 contributions of the pde system .    for @xmath745 , @xmath259 , @xmath690 we find @xmath746 by symmetry considerations and evaluate the second component of with @xmath747 to @xmath748 thus in the limit @xmath749 .",
    "permutation of the variables yields all remaining terms of",
    "the taylor expansion of @xmath134 around @xmath600 up to second order is given as @xmath750 where @xmath602 , @xmath603 etc .",
    "we will again express the median of data values within the structuring element @xmath43 in terms of the taylor coefficients , neglecting terms of higher order in @xmath56 .",
    "as in the settings before , cross - effects between the taylor coefficients influence only higher - order terms such that the taylor coefficients can be considered separatedly .    as long as @xmath751 , the component @xmath235 is identically zero , and thus @xmath752 .",
    "moreover , the effects of @xmath506 ,  , @xmath549 on @xmath695 and @xmath696 are the same as in lemma  [ lem - ojapde22-i ] , such that we need only to consider @xmath665 , @xmath654 and @xmath663 .",
    "since by the influence of @xmath235 which varies just in order @xmath462 around zero , the triangles whose area sum is minimised by the 2d oja median stay approximately in the @xmath113-@xmath114 plane and their deformation is restricted to higher order terms , neither of @xmath665 , @xmath654 and @xmath663 influences the first two median components @xmath695 , @xmath696 asymptotically .",
    "it remains to study @xmath697 .",
    "for the case @xmath261 , @xmath259 , @xmath753 we notice that mirroring the structuring element by replacing @xmath39 with @xmath713 , followed by replacing @xmath235 with @xmath754 , restores the original function . thus , for each minimiser @xmath697 in this case , @xmath755 is also a minimiser , and by convexity of the objective function @xmath752 is a minimiser .    regarding @xmath665 and @xmath663 , notice that rotation of the structuring element by @xmath756 degrees switches the roles of @xmath757 and @xmath758 .",
    "as this rotation leaves the input value set unchanged , we see that @xmath665 and @xmath663 must have equal effects .",
    "we can therefore consider the rotationally symmetric case @xmath759 .",
    "assume therefore that we have @xmath261 , @xmath259 , and @xmath760 , and @xmath761 is the sought 2d oja median .",
    "the median point constitutes an equilibrium between forces exercised by point pairs @xmath451 with @xmath762 , @xmath763 .",
    "the force coming from a single point pair @xmath451 is expressed by a vector of length @xmath449 in direction @xmath764 , where @xmath486 is the foot of the altitude on @xmath448 in the triangle @xmath437 .",
    "thus , the sought 2d oja median is a weighted @xmath0 median of the feet @xmath486 , weighted with the base lengths @xmath449 . the equilibrium condition for @xmath443",
    "can therefore be written similarly as in as @xmath765 where the points @xmath486 , @xmath444 , @xmath445 still need to be expressed in coordinates .",
    "before we do so , we notice that reorganisation of the quadruple integral in radon - like polar coordinates as in appendix  [ app-22proof1 ] creates an additional weight factor @xmath449 and an integrand that is rotationally symmetric with regard to the angular coordinate @xmath452 .",
    "one can therefore drop the integration over @xmath452 and consider just @xmath465 as minimality condition . denoting by @xmath766 , @xmath767 , @xmath768 the projections of @xmath486 , @xmath444 , @xmath445 , respectively , to the @xmath113-@xmath114 plane , the case @xmath465 describes a configuration in which @xmath769 is aligned in @xmath114 direction , and the altitude in @xmath770 therefore in @xmath113 direction .",
    "since @xmath766 deviates from the foot of the altitude in @xmath770 at most by higher order terms , we can assume that @xmath771 , @xmath772 , @xmath773 .",
    "the 3d points @xmath444 and @xmath445 are then given by @xmath774 , @xmath775 .",
    "@xmath486 is given up to higher order terms by @xmath776 .",
    "this leads to the simplified equilibrium condition @xmath777 and after substituting @xmath718 , @xmath778 , @xmath779 , @xmath780 one has @xmath781 splitting the integration range of the outer integral to the two intervals @xmath782 $ ] and @xmath783 $ ] we see that the first integral yields @xmath784 since its integrand is absolutely bounded by @xmath34 , whereas the second integral is simplified further by noticing that @xmath785 to @xmath786 from which we obtain @xmath787 and after integral evaluation @xmath788 since for the given function one has @xmath789 , it follows that each of @xmath743 and @xmath744 effects @xmath697 with weight @xmath790 , which concludes the proof .",
    "we use the notations from section  [ ssec - pdenum ] . by square brackets",
    "@xmath791 $ ] we denote discrete approximations of the enclosed derivative expressions at pixel @xmath386 in time step @xmath392 .",
    "the numerical scheme for the pde proceeds for each pixel @xmath386 as follows .    1 .",
    "compute the central difference approximations @xmath792 & : = \\tfrac{1}{2h } ( \\bm{u}^k_{i+1,j}-\\bm{u}^k_{i-1,j})\\ ; , \\\\ [ \\bm{u}_y ] & : = \\tfrac{1}{2h } ( \\bm{u}^k_{i , j+1}-\\bm{u}^k_{i , j-1})\\;.\\end{aligned}\\ ] ] 2 .   from @xmath793=\\bigl([\\bm{u}_x]~|~[\\bm{u}_y]\\bigr)$ ]",
    "compute the @xmath177 tensor product matrix @xmath794[\\mathrm{d}\\bm{u}]{^{\\mathrm{t}}}$ ] .",
    "compute the spectral decomposition of @xmath795 , @xmath796 where @xmath797 is orthogonal , and @xmath798 is the diagonal matrix of the ( nonnegative ) eigenvalues of @xmath795 in decreasing order , @xmath799 .",
    "3 .   apply to the input values @xmath800 the orthogonal transform @xmath801 note that hereafter , the first and second channel of @xmath137 hold the directions of dominant variation within the patch , i.e.  the first two basis vectors of the transformed data set span the tangential space of the image graph . moreover ,",
    "the gradients of the first two channels of @xmath137 are orthogonal in the @xmath207 plane . 4 .",
    "compute the central difference approximations @xmath802 & : = \\tfrac{1}{2h } ( \\hat{\\bm{u}}^k_{i+1,j}-\\hat{\\bm{u}}^k_{i-1,j})\\ ; , \\\\ [ \\hat{\\bm{u}}_y ] & : = \\tfrac{1}{2h } ( \\hat{\\bm{u}}^k_{i , j+1}-\\hat{\\bm{u}}^k_{i , j-1})\\ ; , \\\\ [ \\hat{\\bm{u}}_{xx } ] & : = \\tfrac1{h^2 } ( \\hat{\\bm{u}}^k_{i+1,j}-2\\hat{\\bm{u}}^k_{i , j } + \\hat{\\bm{u}}^k_{i-1,j})\\ ; , \\\\ [ \\hat{\\bm{u}}_{yy } ] & : = \\tfrac1{h^2 } ( \\hat{\\bm{u}}^k_{i , j+1}-2\\hat{\\bm{u}}^k_{i , j } + \\hat{\\bm{u}}^k_{i , j-1})\\ ; , \\\\ [ \\hat{\\bm{u}}_{xy } ] & : = \\tfrac1{4h^2 } ( \\hat{\\bm{u}}^k_{i+1,j+1}-\\hat{\\bm{u}}^k_{i+1,j-1 } -\\hat{\\bm{u}}^k_{i-1,j+1}+\\hat{\\bm{u}}^k_{i-1,j-1})\\;.\\end{aligned}\\ ] ] 5 .",
    "compute the first contribution to @xmath803 as @xmath804 + [ \\hat{\\bm{u}}_{yy } ] \\;.\\end{aligned}\\ ] ] 6 .   from the first component @xmath805 of @xmath137 ,",
    "determine the image adaptive directions @xmath806 ^ 2+[\\hat{u}_y]^2 } } \\begin{pmatrix } [ \\hat{u}_x]\\\\{}[\\hat{u}_y ] \\end{pmatrix}\\;,\\\\ \\bm{\\xi } & : = \\begin{pmatrix}-s\\\\c\\end{pmatrix}\\end{aligned}\\ ] ] and the directional derivatives @xmath807 & : =   c[\\hat{\\bm{u}}_x]+s[\\hat{\\bm{u}}_y]\\;,\\\\ [ \\hat{\\bm{u}}_{\\bm{\\xi } } ]   & : = -s[\\hat{\\bm{u}}_x]+c[\\hat{\\bm{u}}_y]\\;,\\\\ [ \\hat{\\bm{u}}_{\\bm{\\eta\\eta } } ] & : = c^2[\\hat{\\bm{u}}_{xx } ] + 2cs[\\hat{\\bm{u}}_{xy}]+s^2[\\hat{\\bm{u}}_{yy}]\\;,\\\\ [ \\hat{\\bm{u}}_{\\bm{\\xi\\xi } } ] & : = s^2[\\hat{\\bm{u}}_{xx } ] -2cs[\\hat{\\bm{u}}_{xy}]+c^2[\\hat{\\bm{u}}_{yy}]\\;,\\\\ [ \\hat{\\bm{u}}_{\\bm{\\eta\\xi } } ] & : =   cs\\bigl([\\hat{\\bm{u}}_{yy}]-[\\hat{\\bm{u}}_{xx}]\\bigr ) + ( c^2-s^2)[\\hat{\\bm{u}}_{xy}]\\;.\\end{aligned}\\ ] ] 7 .",
    "compute the second contribution to @xmath803 as @xmath808 , [ \\hat{v}_{\\eta\\eta } ] , 0 \\bigr){^{\\mathrm{t}}}\\;.\\end{aligned}\\ ] ] 8 .",
    "compute one - sided derivatives @xmath802^+ & : = \\tfrac{1}{h } ( \\hat{\\bm{u}}^k_{i+1,j}-\\hat{\\bm{u}}^k_{i , j})\\ ; , \\\\ [ \\hat{\\bm{u}}_x]^- & : = \\tfrac{1}{h } ( \\hat{\\bm{u}}^k_{i , j}-\\hat{\\bm{u}}^k_{i-1,j})\\ ; , \\\\ [ \\hat{\\bm{u}}_y]^+ & : = \\tfrac{1}{h } ( \\hat{\\bm{u}}^k_{i , j+1}-\\hat{\\bm{u}}^k_{i , j})\\ ; , \\\\ [ \\hat{\\bm{u}}_y]^- & : = \\tfrac{1}{h } ( \\hat{\\bm{u}}^k_{i , j}-\\hat{\\bm{u}}^k_{i , j-1})\\;.\\end{aligned}\\ ] ] if @xmath809^+$ ] and @xmath809 ^ -$ ] have opposite sign , replace the one with larger absolute value with their sum @xmath809^++[\\hat{\\bm{u}}_x]^-$ ] and set the other one to zero ( minmod stabilisation ) .",
    "proceed in the same way for @xmath810^\\pm$ ] . from the so obtained approximations ,",
    "compute one - sided directional derivatives @xmath807^\\pm   & : =   c[\\hat{\\bm{u}}_x]^\\pm+s[\\hat{\\bm{u}}_y]^\\pm\\;,\\\\ [ \\hat{\\bm{u}}_{\\bm{\\xi}}]^\\pm    & : = -s[\\hat{\\bm{u}}_x]^\\mp+c[\\hat{\\bm{u}}_y]^\\pm\\;,\\end{aligned}\\ ] ] if @xmath811 , and analogously for other sign combinations of @xmath812 , @xmath263 .",
    "compute regularised approximations @xmath414 for @xmath813 and @xmath411 for @xmath814 as @xmath815[\\hat{v}_{\\bm{\\xi } } ] } { \\bigl([\\hat{v}_{\\bm{\\xi}}]^+\\bigr)^2 + \\bigl([\\hat{v}_{\\bm{\\xi}}]^-\\bigr)^2 + 2\\varepsilon}\\ ; , \\\\",
    "r_u & : = \\frac{2[\\hat{u}_{\\bm{\\eta\\xi}}][\\hat{u}_{\\bm{\\eta } } ] } { \\bigl([\\hat{u}_{\\bm{\\eta}}]^+\\bigr)^2 + \\bigl([\\hat{u}_{\\bm{\\eta}}]^-\\bigr)^2 + 2\\varepsilon}\\end{aligned}\\ ] ] with a fixed numerical regularisation parameter @xmath410 .",
    "compute the third contribution to @xmath803 by the upwind discretisation @xmath816^\\mp , r_u [ \\hat{v}_{\\bm{\\xi}}]^\\mp , 0\\bigr){^{\\mathrm{t}}}\\;,\\end{aligned}\\ ] ] choosing in each component the backward approximation @xmath791",
    "^ -$ ] if the preceding factor is positive , and @xmath791^+$ ] otherwise .",
    "let @xmath817:= \\bm{z}_1+\\bm{z}_2-\\bm{z}_3 $ ] and by inverting the orthogonal transform @xmath818 & : = \\bm{q}\\,[\\hat{\\bm{u}}_t ] \\;.\\end{aligned}\\ ] ] 12 .",
    "compute @xmath819 $ ] .",
    "breu , m. , brox , t. , sonar , t. , weickert , j. : stabilised nonlinear inverse diffusion for approximating hyperbolic pdes . in : kimmel , r. , sochen , s. , weickert , j.  ( eds . ) scale space and pde methods in computer vision , _ lecture notes in computer science _ , vol . 3459 , pp .",
    "springer , berlin ( 2005 )                guichard , f. , morel , j.m . : partial differential equations and image iterative filtering . in : duff ,",
    "i.s . , watson , g.a .",
    "the state of the art in numerical analysis , no .",
    "63 in i m a conference series ( new series ) , pp .",
    "clarendon press , oxford ( 1997 )          kleefeld , a. , breu , m. , welk , m. , burgeth , b. : adaptive filters for color images : median filtering and its extensions . in : trmeau ,",
    "a. , schettini , r. , tominaga , s.  ( eds . ) computational color imaging , _ lecture notes in computer science _ , vol . 9016 , pp .",
    "springer , cham ( 2015 )          ronkainen , t. , oja , h. , orponen , p. : computation of the multivariate oja median . in : dutter , r. , filzmoser , p. ,",
    "gather , u. , rousseeuw , p.j .",
    "developments in robust statistics , pp .",
    "physica - verlag , heidelberg ( 2003 )                  welk , m. : partial differential equations for bivariate median filters . in : aujol ,",
    "nikolova , m. , papadakis , n.  ( eds . ) scale space and variational methods in computer vision , _ lecture notes in computer science _ , vol . 9087 , pp .",
    "5365 . springer , cham ( 2015 )          welk , m. , feddern , c. , burgeth , b. , weickert , j. : median filtering of tensor - valued images . in : michaelis , b. , krell , g.  ( eds . )",
    "pattern recognition , _ lecture notes in computer science _",
    ", vol . 2781 , pp .",
    "springer , berlin ( 2003 )"
  ],
  "abstract_text": [
    "<S> multivariate median filters have been proposed as generalisations of the well - established median filter for grey - value images to multi - channel images . as multivariate median , </S>",
    "<S> most of the recent approaches use the @xmath0 median , i.e.  the minimiser of an objective function that is the sum of distances to all input points . </S>",
    "<S> many properties of univariate median filters generalise to such a filter . </S>",
    "<S> however , the famous result by guichard and morel about approximation of the mean curvature motion pde by median filtering does not have a comparably simple counterpart for @xmath0 multivariate median filtering . </S>",
    "<S> we discuss the affine equivariant oja median and the affine equivariant transformation  </S>",
    "<S> retransformation @xmath0 median as alternatives to @xmath0 median filtering . </S>",
    "<S> we analyse multivariate median filters in a space - continuous setting , including the formulation of a space - continuous version of the transformation  </S>",
    "<S> retransformation @xmath0 median , and derive pdes approximated by these filters in the cases of bivariate planar images , three - channel volume images and three - channel planar images . the pdes for the affine equivariant filters can be interpreted geometrically as combinations of a diffusion and a principal - component - wise curvature motion contribution with a cross - effect term based on torsions of principal components . </S>",
    "<S> numerical experiments are presented that demonstrate the validity of the approximation results .    </S>",
    "<S> * keywords : * median filtering @xmath1 affine equivariance @xmath1 oja median @xmath1 multi - channel images @xmath1 transformation  </S>",
    "<S> retransformation median @xmath1 curvature - based pde </S>"
  ]
}
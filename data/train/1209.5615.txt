{
  "article_text": [
    "for most of the mathematical constants used today , like @xmath0 , @xmath1 or @xmath2 , very efficient algorithms to approximate these constants are known .",
    "there are , however , rare cases such as bloch s , landau s or the hayman - wu constant , where conjectures and rough bounds on such constants are known but the exact value is unknown .",
    "recently , an algorithm to approximate bloch s constant was given in @xcite .",
    "we continue this line of research and present a similar algorithm to approximate landau s constant up to any precision .    because of the close connection between the landau and bloch constants we can reuse many of the ideas ( and motivations ) on the computation of the bloch constant in this paper .",
    "a core component of the algorithm , namely the computation of maximum discs in the image of a ( normalised ) holomorphic function , is totally different .",
    "so injectivity does not play any role any longer .",
    "what is more , however , homotopy methods used in the algorithm for bloch s constant do not work any longer .",
    "this is due to the fact that for discs which need not be schlicht , several overlapping parts of the pre - image come into play . to decide whether the images do indeed overlap is in general not even computable .",
    "though the ideas of the algorithm are inspired by type-2 theory of effectivity , we formulate our results totally independently of this theory . in this way",
    "we hope that our result is accessible to a wider audience . finally , we improve even on the parts which could be taken literally from the algorithm for bloch s constant to narrow the gap between the theory and possible implementations .",
    "landau s constant ( see @xcite ) gives a quantitative version of the fact that non - constant holomorphic functions are open .",
    "more precisely , it states that for any @xmath3 and any holomorphic function @xmath4 defined on a disc @xmath5 with @xmath6 there exists a disc of radius @xmath7 inside the image @xmath8 , where the constant @xmath9 does not depend on @xmath4 ! obviously @xmath10 is bounded from above ; thus the supremum , the so called landau constant @xmath11 , exists .",
    "the best upper bound known for @xmath11 , @xmath12 is at the same time conjectured to be the exact value of @xmath11 .",
    "however the best lower bound known so far is @xmath13 ( see @xcite  and @xcite )",
    ".    putting this in decimal representation gives @xmath14 i.e. all we know is the constant up to @xmath15 .    in this paper",
    "we will give an algorithm to compute landau s constant @xmath11 up to any precision in the sense that on input @xmath16 some rational number @xmath17 with @xmath18 can be computed .",
    "the main idea of our algorithm is to compute for several normalised functions the corresponding @xmath11-values . following the definition",
    ", it seems that we have to take the infimum for all normalised functions , which could not be done in finitely many steps .",
    "we will overcome this problem by a compactness argument in section 5 .",
    "in the next section we recall a few notations and fix the machine model which we will use throughout this paper . in section 3",
    "we introduce a subset of all holomorphic functions such that @xmath11 is already determined by this smaller , compact class . in section 4",
    "we will then show how @xmath19 of a single function can be approximated and , finally , in section 5 we prove the computability of landau s constant .",
    "we begin this section with a few remarks on the model underlying our algorithms .",
    "our main algorithm ( section 5 ) will only compute on finite words , where we assume some straightforward , standard encodings ( representations ) of the dyadic numbers , i.e. numbers of the form @xmath20 with @xmath21 , by such words .",
    "we do not need any operations on infinite words or other structures like @xmath22 or @xmath23 , and therefore our algorithms could be implemented by classical turing machines .",
    "if some value is given as input to our machine , we also say that the machine _ computes _  something _ on _  this value .",
    "in addition , to simplify things , we use a second model for intermediate results where we allow infinite sequences as input .",
    "one can think of this model as a classical turing machine which can in addition ask some kind of oracle for single elements of the input .",
    "the output , however , will always be a finite word which will be returned after a finite number of steps .",
    "this second model is only used for simplification reasons , and our final algorithm to compute landau s constant will not depend on this model .",
    "let @xmath5 denote the open disc of radius @xmath24 with centre @xmath25 and let @xmath26 denote its topological closure , i.e. @xmath27 .",
    "to simplify notation we use @xmath28 and @xmath29 . a _ normalised ( holomorphic )",
    "function _  on a domain @xmath30 , @xmath31 , is a holomorphic function @xmath4 with @xmath32 .",
    "the space of normalised functions on @xmath30 is denoted by @xmath33 . for given domain @xmath34",
    "we denote the radius of the largest disc in @xmath35 by @xmath36 , i.e. @xmath37 given a holomorphic function @xmath4 with @xmath38 let @xmath39 denote the radius of the largest disc in @xmath40 , i.e. @xmath41 finally let @xmath42 and the _ landau constant",
    "_  @xmath11 be the infimum of all @xmath19 with @xmath43 . obviously , @xmath11 is already the infimum of all @xmath19 for normalized @xmath4 with the additional condition @xmath44 .    throughout this paper",
    "we use most of the time only very basic results of complex analysis covered by most textbooks ( see e.g. @xcite ) . the only somewhat more advanced result from complex analysis",
    "is koebe s @xmath45 lemma ( see e.g. @xcite ) :    [ theo_koebe ] let @xmath4 be an injective holomorphic function on some disc @xmath46 . then @xmath47 .",
    "the representations of the objects we use throughout this paper are introduced next , where we implicitly use some kind of efficiently computable pairing function without further mention .",
    "let @xmath48 denote the class of dyadic numbers , i.e. @xmath49 we could use rational numbers as well but having implementations in mind , we stick to the efficiently implementable dyadic numbers . identifying complex numbers @xmath50 and pairs @xmath51 , where we denote the imaginary unit by @xmath52 , we can represent elements of the set @xmath53 $ ] of complex dyadics simply by pairs of dyadic numbers . in this way , it should be clear that there are efficient algorithms to approximate operations like @xmath54 on the complex dyadics , in the sense that , given complex dyadics @xmath55 , @xmath56 and some @xmath16 , we can easily compute a dyadic number @xmath57 such that @xmath58 etc . to simplify notation , we say that we can _ compute a value @xmath55 up to precision @xmath59 _  if we can ,",
    "on input @xmath60 and @xmath55 , compute a ( complex ) dyadic @xmath57 such that @xmath61 . if we can compute @xmath55 up to precision @xmath59 for all @xmath60",
    ", then we say that we can compute @xmath55 up to any precision .",
    "let furthermore @xmath62 denote the class of intervals @xmath63\\times [ d , d']$ ] where @xmath64 are dyadics .",
    "we consider these intervals as sets of complex numbers .",
    "let @xmath65 be a finite alphabet .",
    "then @xmath66 denotes the set of finite sequences ( words ) over @xmath65 , @xmath67 the empty sequence , and @xmath68 the set of infinite sequences over @xmath65 . as",
    "usually , we think of @xmath68 as a topological space where @xmath69 is a basis of the topology .",
    "it is well known that @xmath68 with the above topology is a compact space .    in our algorithm we need to approximate holomorphic functions in a certain function space .",
    "we will do this by representing this function class by @xmath68 for @xmath70 . to simplify things",
    "we will first define , for given interval @xmath71 , the representation @xmath72 of the complex numbers in @xmath73 . to this end , let for a given interval @xmath74\\times [ d , d']$ ] , the intervals @xmath75\\times [ d , d''],\\quad [ c'',c']\\times [ d , d''],\\quad [ c'',c']\\times [ d'',d'],\\quad [ c , c'']\\times [ d'',d'],\\ ] ] where @xmath76 and @xmath77 , be denoted by @xmath78 , @xmath79 , @xmath80 and @xmath81 , respectively",
    ". with these preliminaries , we use sequences @xmath82 , @xmath83 , @xmath84 of numbers in @xmath85 to represent complex numbers where we define @xmath86 by @xmath87 for all @xmath71 , @xmath88 and @xmath89 , and finally @xmath90 i.e. we define complex numbers by suitable nested intervals .",
    "let now @xmath91 denote a sequence of positive dyadics such that @xmath92 converges for all @xmath93 .",
    "then the set of sequences @xmath94 of complex numbers where the absolute values of the real and imaginary parts of @xmath95 are bounded by @xmath96 for all @xmath97 defines a class @xmath98 of holomorphic functions on @xmath99 by identifying a sequence @xmath100 , @xmath101 , @xmath84 with the power series @xmath102 .",
    "we are interested only in power series where the first coefficient is 1 because this class represents exactly the derivatives of normalized holomorphic functions .",
    "we use @xmath103 to define a representation of these holomorphic functions : let @xmath104 , @xmath105 , @xmath84 be a sequence of natural numbers such that any natural number is encountered infinitely often , e.g. @xmath106 , @xmath106 , @xmath107 , @xmath106 , @xmath107 , @xmath108 , @xmath106 , @xmath107 , @xmath108 , @xmath109 , @xmath106 , @xmath84 . then for a given sequence @xmath83 , @xmath110 , @xmath84 with @xmath111 and any @xmath16 the sequence @xmath104 , @xmath105",
    ", @xmath84 defines the subsequence @xmath112 , @xmath113 , @xmath84 of all those elements @xmath114 such that @xmath115 . in this way we can define a mapping @xmath116 by @xmath117\\times [ -m_n , m_n]}^\\infty(\\alpha_{n_1}\\alpha_{n_2}\\ldots)\\cdot z^n.\\ ] ]",
    "to simplify notations we denote , for given holomorphic function @xmath118 , the anti - derivative of @xmath4 , which maps @xmath106 to @xmath106 , by @xmath119 , i.e. @xmath120 , @xmath121 and @xmath122 .",
    "notice that @xmath123 with the above settings .",
    "a proof of the following theorem can for example be found in @xcite  or @xcite .",
    "[ theo_l1 ] let @xmath83 , @xmath110 , @xmath84 , @xmath124 , @xmath125 , @xmath84 and @xmath104 , @xmath105 , @xmath84 be as above .",
    "furthermore let @xmath126 , @xmath127 , @xmath84 be a sequence of positive dyadic numbers such that with @xmath128 for all @xmath129 we have @xmath130 then , on input @xmath131 , @xmath132 $ ] and @xmath133 we can compute @xmath134 , @xmath135 and @xmath136 on @xmath99 up to any precision .",
    "similar to the @xmath137-bounding functions in @xcite  we define here a class @xmath138 of holomorphic functions which determines @xmath11 in the sense that @xmath139 . unlike @xcite  we use different bounds on the coefficients of the corresponding power series and , furthermore , use the compactness of @xmath68 together with the mapping @xmath140 rather than compactness of the class @xmath138 itself .    to start with",
    "we will prove suitable upper bounds on ( the derivative of ) functions @xmath4 whose @xmath11-values approximate @xmath11 :    [ lemma_3_2 ] let @xmath141 be given .",
    "then for any @xmath142 and @xmath143 with @xmath144 we have @xmath145    let @xmath143 and @xmath142 with @xmath144 be given .",
    "let @xmath146 be the automorphism @xmath147 then @xmath148 , @xmath149 , and @xmath150 is a normalised function .",
    "therefore @xmath151 as @xmath152 the statement of the lemma follows .    to simplify things we fix some value @xmath141 , say @xmath153 for the time being . to find @xmath11 it suffices to consider all @xmath19 of all normalised functions @xmath4 with @xmath154 for all @xmath155 .",
    "this immediately gives us a bound on the coefficients of the corresponding power series :    [ lemma_3_3 ] let @xmath4 be a normalised function such that @xmath154 for all @xmath155 .",
    "then @xmath156 with    a.   @xmath157 and b.   @xmath158 for all @xmath129 .    ( here @xmath1 denotes the euler constant . )",
    "item ( a ) is obvious because @xmath4 is assumed to be normalised .    by the cauchy inequality",
    "we have for given @xmath60 and @xmath159 @xmath160 choosing @xmath161 we get @xmath162    let , for @xmath129 , @xmath163 be some dyadic approximation such that @xmath164 then we have for given @xmath165 @xmath166 & \\leq & \\frac{c\\cdot e}{2 } \\cdot    \\left(\\frac{1}{1-\\varepsilon}+\\frac{1}{(1-\\varepsilon)^2}\\right ) + ( 2-c\\cdot e).\\end{array}\\ ] ] a similar bound does also hold for the corresponding derivatives : @xmath167 thus we can easily compute a sequence @xmath126 , @xmath127 , @xmath84 of bounds such that theorem [ theo_l1 ]  can be applied . to simplify notations",
    "let @xmath168 in the definition of @xmath140 above the coefficients of the corresponding power series in @xmath169 can get larger than we considered so far because , to simplify things , we bound the real and imaginary parts of the @xmath60-th coefficient by @xmath163 , not the absolute value of the coefficient itself .",
    "thus an additional factor @xmath170 is sufficient in the following corollary . due to the structure of our algorithm , however , we can get rid of this additional factor in implementations by restricting @xmath68 to a proper subclass by a simple test for the absolute value of the coefficients .",
    "we can summarize the essence of this section by the following corollary :    [ cor_3_2 ] let @xmath141 and let , for @xmath129 , @xmath163 be some dyadic number such that @xmath171 then    a.   @xmath172 , b.   we can compute on given dyadic complex number @xmath155 , @xmath173 , @xmath16 and @xmath174 a.   @xmath136 and b.   upper bounds @xmath175 and @xmath176 of @xmath177 and @xmath178 , respectively , + + up to any precision , where @xmath179 .",
    "in this section we will show how @xmath19 can be approximated .",
    "more precisely , we will give lower bounds on @xmath19 which are at the same time approximately upper bounds for @xmath11 .",
    "this will be enough to compute @xmath11 up to any precision in the end . to this end ,",
    "let @xmath180 be a fixed sequence in @xmath68 which will be fed to all algorithms considered in this section as input .",
    "furthermore , we will denote the corresponding functions @xmath181 and @xmath182 by @xmath183 and @xmath4 , respectively .",
    "as in the case of bloch s constant , it suffices to search large discs in the image of a proper sub - domain of the unit disc to approximate @xmath19 .",
    "one advantage of this is that we have to search only on a bounded image for such discs .",
    "the following lemma can be proven by a simple transformation of holomorphic functions @xmath184 ( see e.g. @xcite ) .",
    "[ lemma_3_1 ] let @xmath24 with @xmath185 and a domain @xmath30 with @xmath186 be given .",
    "then @xmath187    now , approximating the image @xmath188 can be done straightforwardly . furthermore , with quite basic methods , the largest disc inside such an approximation could be found easily .",
    "we are doing exactly this by the @xmath67-covering grids which we introduce next .",
    "however , an approximation will not necessarily mean that we have an approximation of @xmath19 : there indeed exist examples , where small changes of @xmath4 can lead to a large change in @xmath19 .",
    "that means that the homotopic methods used in @xcite  can not be used here .",
    "instead , we will show that the approximations we get by @xmath67-covering grids for small @xmath67 are still suitable to bound @xmath11 from above .",
    "[ def_3_1 ] let @xmath189 and a bounded subset @xmath190 be given .",
    "then an _ @xmath67-covering grid _  of @xmath35 is a tuple @xmath191 where @xmath192 is some dyadic number and @xmath193 is a non - empty , finite subset of @xmath194 such that    a.   @xmath195 and b.   @xmath196 .",
    "+    notice , that for any @xmath197 and any @xmath198-covering grid @xmath199 of a set @xmath35 , the tuple @xmath200 is an @xmath67-covering grid of @xmath35 . in this sense",
    "any @xmath198-covering grid of a set @xmath35 is also an @xmath67-covering grid .",
    "following the notation of section [ sec_prel ] , @xmath36 denotes the radius of the largest disc inside a domain @xmath190 .",
    "furthermore let @xmath201 for an @xmath67-covering grid @xmath191 . then",
    "the easy to compute value @xmath202 gives us an approximation of the largest disc inside the `` covered set '' @xmath203 more precisely we get the following result :    [ lemma_3_2 ] let @xmath191 be an @xmath67-covering grid of @xmath34 .",
    "then @xmath204    we start by proving the left inequality : let @xmath205 be some disc with @xmath206 .",
    "we can assume that @xmath207 because otherwise we have @xmath208 anyway .",
    "there exists some @xmath209 such that @xmath210 .",
    "let furthermore @xmath211 be some point with @xmath212 .",
    "then we have @xmath213 and thus @xmath214",
    ". therefore @xmath215 and the statement follows .",
    "the right inequality follows immediately from the following claim :    [ claim_n_1 ] let @xmath216 be given and @xmath217",
    ". then @xmath218 .",
    "let us assume that there exist @xmath219 such that @xmath220",
    ". then there also exists some point @xmath221 such that @xmath222 and @xmath223 . as @xmath224",
    ", @xmath225 can not belong to @xmath193 because otherwise @xmath57 would belong to @xmath226 .    ]    furthermore , as @xmath227 and @xmath228 there exists some @xmath229 such that @xmath230 and @xmath231 , which means @xmath232 by the definition of @xmath24 and furthermore @xmath233 in contradiction to @xmath234 .",
    "besides , an @xmath67-covering grid of @xmath188 can be easily computed :    [ lemma_3_3 ] for given dyadic numbers @xmath189 and @xmath185 as input , we can compute an @xmath67-covering grid of @xmath188 .    following the notation of theorem 2 we can compute a dyadic upper bound @xmath235 on the maximum of the values",
    "@xmath236 with @xmath237 . furthermore let @xmath238 be a dyadic lower bound on @xmath239 and @xmath240 notice that @xmath241 and thus @xmath242",
    ". furthermore we can compute for every @xmath243 some approximation @xmath244 with @xmath245 .",
    "then @xmath246 is an @xmath67-covering grid of @xmath188 , where @xmath247    to see item ( a ) of definition [ def_3_1 ]  let @xmath248 be given .",
    "furthermore let @xmath249 such that @xmath250 .",
    "then there exists some @xmath243 with @xmath251 and we get @xmath252    to see item ( b ) of definition [ def_3_1 ]  let now @xmath209 be given .",
    "then there exist @xmath243 such that @xmath253 and we have @xmath254    up to this point we have followed the naive way of computing large discs in approximations of @xmath188 .",
    "we have already argued that this will not necessarily give us appropriate bounds on @xmath19 .",
    "the main step we will take next is to show that for suitable @xmath255 and suitably small @xmath67 we get that for any @xmath67-covering grid @xmath256 of @xmath188 we have @xmath257 , which in the end allows us to show that the bound given by @xmath258 is actually not too bad .",
    "[ lemma_3_4 ] on given dyadic number @xmath185 we can compute dyadic numbers @xmath189 and @xmath259 with @xmath260 such that for any @xmath67-covering grid @xmath256 of @xmath188 we have @xmath261    as @xmath4 is not constant , we can compute @xmath262 and @xmath263 such that @xmath264 and @xmath265 for all @xmath266 with @xmath267 . furthermore , following the notation of corollary 1 , we can compute a dyadic upper bound @xmath268 on the maximum of @xmath269 for @xmath270 .",
    "let @xmath271 be a dyadic number with @xmath272 then we have @xmath273 for all @xmath274 and , with @xmath275 we have @xmath276 .",
    "by choice of @xmath271 we do have actually more : @xmath4 is injective on @xmath277 for each @xmath278 with @xmath279 thus we can apply koebe s @xmath45-lemma to get the following claim :    [ claim_1 ] for each @xmath278 with @xmath280 and each @xmath57 with @xmath281 we have @xmath282 .",
    "assume now , that there exists some @xmath25 with @xmath283 and some @xmath284 with @xmath285 and @xmath286 .",
    "then for the holomorphic function @xmath287 , determined by @xmath288 for all @xmath155 , we have @xmath289 for all @xmath290 , i.e. @xmath291 takes its minimum on the boundary @xmath292 .",
    "therefore there exists some @xmath55 with @xmath293 and @xmath294 thus by claim [ claim_1 ]  we have @xmath295 , i.e. we can extend claim [ claim_1 ]  as follows :    [ claim_2 ] for each @xmath278 with @xmath296 and each @xmath57 with @xmath281 we have @xmath282 .",
    "let now @xmath297 , @xmath256 be some @xmath67-covering grid of @xmath298 and @xmath299 .",
    "then there exists some @xmath232 with @xmath300 and , by condition ( b ) in definition 1 , there exist @xmath301 such that @xmath302 .",
    "thus we have @xmath303 and , by claim [ claim_2 ]  we have @xmath304 which proves the lemma .",
    "finally , we can combine the results of this section as follows :    given @xmath180 in @xmath68 and @xmath16 , we can compute a dyadic number @xmath305 such that @xmath306 , where @xmath307 .    given some @xmath16 we can compute by lemma [ lemma_3_4 ]  first some @xmath189 and @xmath308 with @xmath309 such that for any @xmath67-covering grid @xmath256 of @xmath310 we have @xmath257 . then , by lemma [ lemma_3_3 ]  we can compute an @xmath67-covering grid @xmath256 of @xmath310 and compute @xmath311 .",
    "finally , by lemma [ lemma_3_2 ]  and lemma [ lemma_3_1 ]  we get @xmath312",
    "the proof of our main theorem can now be simply done by covering the space of @xmath11-bounding functions by neighbourhoods given by the algorithm of the previous section .",
    "let @xmath16 be given .",
    "we proceed in steps @xmath313 as follows . for each @xmath314",
    "we consider the set @xmath315 i.e. the set of infinite words starting with an arbitrary ( finite ) word followed by infinitely many 1 .",
    "now we apply the algorithm given in corollary 2 to each word @xmath316 in @xmath317 and receive an value @xmath318 such that @xmath319 if for any @xmath320 information on any symbol outside the leading @xmath314 symbols of @xmath316 are asked by the algorithm , then we go to the next step @xmath321 .",
    "otherwise @xmath322 is an appropriate approximation of @xmath11 , i.e. @xmath323 .",
    "the latter is obvious , because , as none of the algorithms asks any information outside the leading words @xmath324 , the results on @xmath325 equals the results on @xmath326 for all @xmath327 .",
    "thus @xmath305 is indeed the infimum over all approximations to @xmath328 of all @xmath329 .",
    "it remains , therefore , to prove that for each @xmath60 there does indeed exist some @xmath314 such that our algorithm stops after this step .",
    "this can be seen as follows : as the algorithm of corollary 2 stops on all @xmath173 , there exist for each @xmath330 some @xmath331 such that no information is asked by the algorithm on any symbol beside the leading @xmath331 symbols of @xmath330 .",
    "thus the computation of the algorithm is identical for all words which coincides with @xmath330 on the first @xmath331 symbols .",
    "this means that for each @xmath330 there exists an open neighbourhood of @xmath330 in @xmath68 such that the algorithm is identical on any word in this neighbourhood .",
    "as @xmath68 is compact , there is a finite sub - covering of @xmath68 by such neighbourhoods .",
    "let @xmath332, ... ,@xmath333 be the corresponding words .",
    "then the algorithm will stop in step @xmath334 or before .",
    "the most interesting open problem is whether the conjectures on the landau and bloch constant hold .",
    "if so , the constant can clearly be computed in polynomial time . to this end ,",
    "our algorithm and the algorithm given in @xcite   can present holomorphic functions which are very near the optimum for @xmath137- and @xmath11-values , thus giving possibly new insights on the kind of functions involved .    concerning our algorithm the main intriguing problem is to improve the complexity bound , which is roughly double exponential , to an acceptable running time .",
    "the problem on reducing the time complexity of our algorithm is that the functions we have to consider can explode when reaching the boundary @xmath335 , where evaluation can be quite expensive .",
    "+    [ mt1 ] ahlfors , l. , _ complex analysis _ , mcgraw - hill , new york , 1966 .",
    "conway , j.b .",
    ", _ functions in one complex variable _ , graduate texts in mathematics 11 , springer verlag , berlin / heidelberg , 1978 .",
    "landau , e. , _ ber die blochsche konstante und zwei verwandte weltkonstanten _ , mathematische zeitschrift , vol .",
    "30 , pp 608 - 634 , 1929 .",
    "mller , n. , _ uniform computational complexity of taylor series _ , icalp 1987 , lncs 267 , springer verlag , pp 435 - 444 , 1987 .",
    "rademacher , h. , _ on the bloch - landau constant _ , american journal of mathematics 65 , pp 387 - 390 , 1943 .",
    "rettinger , r. , _",
    "bloch s constant is computable _ , journal of universal computer science 14(6 ) , pp 896 - 907 , 2008 .",
    "rettinger , r. , _ lower bounds on the continuation of holomorphic functions _ ,",
    "cca 2008 , entcs 221 , pp 207 - 217 , 2008 .",
    "robinson , r.m .",
    ", _ unpublished manuscript _ , 1938 .",
    "rudin , w. , _ real and complex analysis _",
    ", series in higher mathematics ( 3 ed . ) , mcgraw - hill , 1987 ."
  ],
  "abstract_text": [
    "<S> we present an algorithm which computes the landau constant up to any given precision . </S>"
  ]
}
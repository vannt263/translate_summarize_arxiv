{
  "article_text": [
    "tolerance analysis is the branch of mechanical design dedicated to studying the impact of the manufacturing tolerances on the functional constraints of any mechanical system .",
    "minkowski sums of polytopes are useful to model the cumulative stack - up of the pieces and thus , to check whether the final assembly respects such constraints or not , see @xcite and @xcite .",
    "we are aware of the algorithms presented in @xcite , @xcite , @xcite and @xcite but we believe that neither the list of all edges nor facets are mandatory to perform the operation .",
    "so we only rely on the set of vertices to describe both polytope operands . in a first part we deal with a `` natural way '' to solve this problem based on the use of the convex hulls .",
    "then we introduce an algorithm able to take advantage of the properties of the sums of polytopes to speed - up the process .",
    "we finally conclude with optimization hints and a geometric interpretation .",
    "given two sets @xmath0 and @xmath1 , let @xmath2 be the minkowski sum of @xmath0 and @xmath1    @xmath3      a polytope is defined as the convex hull of a finite set of points , called the @xmath4-representation , or as the bounded intersection of a finite set of half - spaces , called the @xmath5-representation .",
    "the minkowski - weyl theorem states that both definitions are equivalent .",
    "in this paper we deal with @xmath4-polytopes i.e. defined as the convex hull of a finite number of points .",
    "we note @xmath6 , @xmath7 and @xmath8 the list of vertices of the polytopes @xmath0 , @xmath1 and @xmath9 .",
    "we call @xmath8 the list of _ minkowski vertices_. we note @xmath10 and @xmath11 .",
    "let @xmath0 and @xmath1 be two @xmath12-polytopes and @xmath6 , @xmath7 their respective lists of vertices .",
    "let @xmath13 and @xmath14 where @xmath15 and @xmath16 .",
    "@xmath17    we recall that in @xcite , we see that the vertex @xmath18 of @xmath2 , as a face , can be written as the minkowski sum of a face from @xmath0 and a face from @xmath1 . for obvious reasons of dimension , @xmath18 is necessarily the sum of a vertex of @xmath0 and a vertex of @xmath1 .",
    "moreover , in the same article , fukuda shows that its decomposition is unique .",
    "reciprocally let @xmath19 and @xmath20 be vertices from polytopes @xmath0 and @xmath1 such that @xmath21 is unique .",
    "let @xmath22 and @xmath23 such as @xmath24 with @xmath25 and @xmath26 because the decomposition of @xmath18 in elements from @xmath0 and @xmath1 is unique .",
    "given that @xmath27 and @xmath28 are two vertices , we have @xmath29 and @xmath30 which implies @xmath31 . as",
    "a consequence @xmath18 is a vertex of @xmath2 .",
    "let @xmath0 and @xmath1 be two @xmath12-polytopes and @xmath6 , @xmath7 their lists of vertices , let @xmath32 .",
    "@xmath33    we know that @xmath34 because a minkowski vertex has to be the sum of vertices from @xmath0 and @xmath1 so @xmath35 .",
    "the reciprocal is obvious as @xmath36 as @xmath37 is a convex set .    at this step",
    "an algorithm removing all points which are not vertices of @xmath2 from @xmath38 could be applied to compute @xmath8 .",
    "the basic idea is the following : if we can build a hyperplane separating @xmath39 from the other points of @xmath38 then we have a minkowski vertex , otherwise @xmath39 is not an extreme point of the polytope @xmath2 .",
    "the process trying to split the cloud of points is illustrated in * figure * [ vsum ] .",
    "to perform such a task , a popular technique given in @xcite solves the following linear programming system . in the case of summing polytopes , testing whether the point @xmath40 is a minkowski vertex or not , means finding @xmath41 from a system of @xmath42 inequalities :    @xmath43",
    "so if we define the matrix @xmath44    then @xmath45    the corresponding method is detailed in * algorithm * [ algbrut ] .",
    "now we would like to find a way to reduce the size of the main matrix @xmath46 as it is function of the product @xmath47 .",
    "@xmath0 @xmath4-representation : list of vertices @xmath6 @xmath1 @xmath4-representation : list of vertices @xmath7 compute @xmath48 with @xmath49 , @xmath50 @xmath51 @xmath52      in this section we want to use the basic property [ basicprop ] characterizing a minkowski vertex",
    ". then the algorithm computes , as done before , all sums of pairs @xmath53 and checks whether there exists a pair @xmath54 with @xmath55 , @xmath56 such as @xmath57 .",
    "if it is the case then @xmath52 , otherwise @xmath51",
    ".    @xmath58 with @xmath59 and @xmath60    @xmath61 with @xmath62 and @xmath63 .",
    "we get the following system :    @xmath64    that is to say with matrices and under the hypothesis of positivity for both vectors @xmath65 and @xmath66 :    @xmath67    we are not in the case of the linear feasibility problem as there is at least one obvious solution :    @xmath68    the question is to know whether it is unique or not .",
    "this first solution is a vertex @xmath69 of a polyhedron in @xmath70 that verifies @xmath71 equality constraints with positive coefficients .",
    "the algorithm tries to build another solution making use of linear programming techniques .",
    "we can note that the polyhedron is in fact a polytope because it is bounded .",
    "the reason is that , by hypothesis , the set in @xmath72 of convex combinations of the vertices @xmath73 is bounded as it defines the polytope @xmath0 . same thing for @xmath1 in @xmath74 .",
    "so in @xmath70 the set of points verifying both constraints simultaneously is bounded too .",
    "so we can write it in a more general form :    @xmath75    where only the second member is function of @xmath76 and @xmath77 .",
    "it gives the linear programming system :    @xmath78    thanks to this system we have now the basic property the algorithm relies on :    @xmath79    @xmath80 there exists only one pair @xmath81 to reach the maximum @xmath82 as @xmath83 and @xmath84 @xmath85 the decomposition of @xmath86 is unique @xmath87    it is also interesting to note that when the maximum @xmath88 has been reached :    @xmath89    @xmath0 @xmath4-representation : list of vertices @xmath6 @xmath1 @xmath4-representation : list of vertices @xmath7 compute @xmath90 with @xmath91 @xmath92 and @xmath93 @xmath94 @xmath95      the current state of the art runs @xmath42 linear programming algorithms and thus is solvable in polynomial time .",
    "we presented the data such that the matrix @xmath96 is invariant and the parametrization is stored in both the second member and the objective function , so one can take advantage of this structure to save computation time .",
    "a straight idea could be using the classical sensitivity analysis techniques to test whether @xmath97 is a minkowski vertex or not from the previous steps , instead of restarting the computations from scratch at each iteration .",
    "let s switch now to the geometric interpretation , given @xmath19 , let s consider the cone generated by all the edges attached to @xmath27 and pointing towards its neighbour vertices . after translating its apex to the origin @xmath98 , we call this cone @xmath99 and we call @xmath100 the cone created by the same technique with the vertex @xmath28 in the polytope @xmath1 .",
    "the method tries to build a pair , if it exists , @xmath101 with @xmath55 , @xmath56 such that @xmath102 .",
    "let s introduce the variable @xmath103 , and the straight line @xmath104 .",
    "so the question about @xmath105 being or not a minkowski vertex can be presented this way : @xmath106    the existence of a straight line inside the reunion of the cones is equivalent to the existence of a pair @xmath107 such that @xmath102 which is equivalent to the fact that @xmath108 is not a minkowski vertex .",
    "this is illustrated in * figure * [ vsum2 ] .",
    "the property becomes obvious when we understand that if @xmath101 exists in @xmath109 then @xmath110 and @xmath111 are symmetric with respect to the origin .",
    "once a straight line has been found inside the reunion of two cones , we can test this inclusion with the same straight line for another pair of cones , here is the geometric interpretation of an improved version of the algorithm making use of what has been computed in the previous steps .",
    "we can resume the property writing it as an intersection introducing the cone @xmath112 being the symmetric of @xmath100 with respect to the origin .",
    "in this paper , our algorithm goes beyond the scope of simply finding the vertices of a cloud of points .",
    "that s why we have characterized the minkowski vertices . however , among all the properties , some of them are not easily exploitable in an algorithm . in all the cases",
    "we have worked directly in the polytopes @xmath0 and @xmath1 , i.e. in the primal spaces and only with the polytopes @xmath4-descriptions .",
    "other approaches use dual objects such as normal fans and dual cones .",
    "references can be found in @xcite , @xcite and @xcite but they need more than the @xmath4-description for the polytopes they handle",
    ". this can be problematic as obtaining the double description can turn out to be impossible in high dimensions , see @xcite where fukuda uses both vertices and edges .",
    "reference @xcite works in @xmath114 in a dual space where it intersects dual cones attached to the vertices , and it can be considered as the dual version of property [ primcone ] where the intersection is computed with primal cones .",
    "it actually implements weibel s approach described in @xcite .",
    "such a method has been recently extended to any dimension for @xmath115-polytopes in @xcite .",
    "we would like to thank pr pierre calka from the lmrs in rouen university for his precious help in writing this article .",
    "vincent delos and denis teissandier , `` minkowski sum of @xmath116-polytopes in @xmath12 '' , proceedings of the 4th annual international conference on computational mathematics , computational geometry and statistics , singapore , 2015"
  ],
  "abstract_text": [
    "<S> minkowski sums are of theoretical interest and have applications in fields related to industrial backgrounds . in this paper </S>",
    "<S> we focus on the specific case of summing polytopes as we want to solve the tolerance analysis problem described in @xcite . </S>",
    "<S> our approach is based on the use of linear programming and is solvable in polynomial time . </S>",
    "<S> the algorithm we developped can be implemented and parallelized in a very easy way .    </S>",
    "<S> * keywords : * computational geometry , polytope , minkowski sum , linear programming , convex hull . </S>"
  ]
}
{
  "article_text": [
    "the traveling salesman problem in metric graphs is one of most fundamental np - hard optimization problems . in spite of a vast amount of research",
    "several important questions remain open . while the problem is known to be apx - hard and np - hard to approximate with a ratio better than @xmath3 @xcite , the best upper bound is still the 1.5-approximation algorithm obtained by christofides  @xcite more than three decades ago .",
    "a promising direction to improve this approximation guarantee , has long been to understand the power of a linear program known as the held - karp relaxation  @xcite .",
    "on the one hand , the best lower bound on its integrality gap ( for the symmetric case ) is @xmath1 and indeed conjectured to be tight @xcite . on the other hand ,",
    "the best known analysis  @xcite is based on christofides algorithm and gives an upper bound on the integrality gap of @xmath4 .    in the light of this difficulty of even determining the integrality gap of the held - karp relaxation , a reasonable way to approach the metric tsp",
    "is to restrict the set of feasible inputs .",
    "one promising candidate is the _ graph - tsp , _ that is , the traveling salesman problem where distances between cities are given by any graphic metric , i.e. , the distance between two cities is the length of the shortest path in a given ( unweighted ) graph .",
    "equivalently , graph - tspcan be formulated as the problem of finding an eulerian multigraph within an unweighted input graph so as to minimize the number of edges .",
    "in contrast to tsp on euclidean metrics that admits a ptas  @xcite , the graph - tsp seems to capture the difficulty of the metric tsp in the sense that , as stated in @xcite , it is apx - hard and the lower bound 4/3 on the integrality gap of the held - karp relaxation is established using a graph - tspinstance .",
    "the tsp on graphic metrics has recently drawn considerable attention . in 2005 ,",
    "gamarnik et al .",
    "@xcite showed that for cubic 3-edge - connected graphs , there is an approximation algorithm achieving an approximation ratio of @xmath5 .",
    "this result was generalized to cubic graphs by boyd et al .",
    "@xcite , who obtained an improved performance guarantee of 4/3 . for subcubic graphs ,",
    "i.e. , graphs of degree at most @xmath6 , they also gave an 7/5-approximation algorithm with respect to the held - karp lower bound .",
    "in a major achievement , gharan et al .",
    "@xcite recently presented an approximation algorithm for graph - tspwith performance guarantee strictly better than 1.5 .",
    "the approach in  @xcite is similar to that of christofides in the sense that they start with a spanning tree and then add a perfect matching of those vertices of odd - degree to make the graph eulerian .",
    "the main difference is that instead of starting with a minimum spanning tree , their approach uses the solution of the held - karp relaxation to sample a spanning tree .",
    "although the proposed algorithm in  @xcite is surprisingly simple , the analysis is technically involved and several novel ideas are needed to obtain the improved performance guarantee @xmath7 for an @xmath8 of the order @xmath9 .",
    "[ [ our - results - and - overview - of - techniques . ] ] our results and overview of techniques .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we propose an alternative framework for approximating the metric tsp and use it to obtain an improved approximation algorithm for graph - tsp .",
    "[ thm : approximationratio ] there is a polynomial time approximation algorithm for graph - tspwith performance guarantee @xmath10 .",
    "the result implies an upper bound on the integrality gap of the held - karp relaxation for graph - tspthat matches the approximation ratio . for the restricted class of graphs , where each block ( i.e. , each maximally 2-vertex - connected subgraph ) is either claw - free or of degree at most @xmath6",
    ", we use the framework to construct a polynomial time @xmath1-approximation algorithm showing that the conjectured integrality gap of the held - karp relaxation is tight for those graphs .",
    "in fact , the techniques allow us to prove the tight result that any @xmath11-vertex - connected graph of degree at most @xmath6 has a spanning eulerian multigraph with at most @xmath12 edges , which settles a conjecture of boyd et al .",
    "@xcite affirmatively .",
    "our framework is based on earlier works by frederickson & jaja  @xcite and monma et al .",
    "@xcite , who related the cost of an optimal tour to the size of a minimum @xmath11-vertex - connected subgraph . more specifically , monma et al",
    ". showed that a @xmath11-vertex - connected graph @xmath13 always has a spanning eulerian multigraph with at most @xmath14 edges , generalizing a previous result of frederickson & jaja who obtained the same result for the special case of planar @xmath11-vertex - connected graphs .",
    "one interpretation of their approaches is the following . given a @xmath11-vertex - connected graph @xmath13",
    ", they show how to pick a random subset @xmath15 of edges satisfying : ( i ) an edge is in @xmath15 with probability @xmath16 and ( ii ) the multigraph @xmath17 with vertex set @xmath18 and edge set @xmath19 is spanning and eulerian . from property @xmath20 of @xmath15",
    ", the expected number of edges in @xmath17 is @xmath14 yielding their result .",
    "although the factor @xmath1 is asymptotically tight for some classes of graphs ( one example is the family of integrality gap instances for the held - karp relaxation described in section  [ sec : prelim ] ) , the bound rapidly gets worse for @xmath11-vertex - connected graphs with significantly more than @xmath21 edges . the novel idea to overcome this issue is the following . instead of adding all the edges in @xmath15 to @xmath22 , some of the edges in @xmath15 might instead be removed from @xmath22 to form @xmath17 .",
    "as long as the removal of the edges does not disconnect the graph , this will again result in a spanning eulerian multigraph @xmath17 . to specify a subset @xmath23 of edges that safely may be removed we introduce , in section  [ sec : tspframework ] , the notion of a `` @xmath24 '' .",
    "the framework is then completed by theorem  [ thm : main ] , where we show that a @xmath11-vertex - connected graph @xmath13 with a set @xmath23 of removable edges has a spanning eulerian multigraph with at most @xmath25 edges .    in order to use the framework , one of the main challenges is to find a sufficiently large set of removable edges . in section  [ sec :",
    "circulation ] , we show that this problem can be reduced to that of finding a min - cost circulation in a certain circulation network . to analyze the circulation network we then ( in section  [ sec : algorithms ] )",
    "use several properties of an extreme point solution to the held - karp relaxation to obtain our main algorithmic result .",
    "the better approximation guarantees for special graph classes follows from that the circulation network has an easier structure in these cases , which in turn allows for a better analysis .",
    "finally , we note that the techniques generalize in a natural way .",
    "our results can be adapted to the more general traveling salesman path problem ( graph - tspp ) with prespecified start and end vertices to improve on the approximation ratio of @xmath26 by hoogeveen @xcite when considering graphic metrics .",
    "more specifically , we obtain the following .",
    "[ thm : approximationratiohpp ] for any @xmath27 , there is a polynomial time approximation algorithm for graph - tsppwith performance guarantee @xmath28 .",
    "if furthermore each block of the given graph is degree three bounded , there is a polynomial time approximation algorithm for graph - tsppwith performance guarantee @xmath29 , for any @xmath30 .",
    "the generalization to the traveling salesman problem is presented in section  [ sec : tspp ] .",
    "[ [ held - karp - relaxation . ] ] held - karp relaxation .",
    "+ + + + + + + + + + + + + + + + + + + + +    the linear program known as the held - karp ( or subtour elimination ) relaxation is a well studied lower bound on the value of an optimal tour .",
    "it has a variable @xmath31 for each pair of vertices with the intuitive meaning that @xmath31 should take value @xmath32 if the edge @xmath33 is used in the tour and @xmath34 otherwise .",
    "letting @xmath13 be the complete graph on the set of vertices and @xmath35 be the distance between vertices @xmath36 and @xmath37 , the held - karp relaxation can then be formulated as the linear program where we wish to minimize @xmath38 subject to @xmath39 where @xmath40 denotes the set of edges crossing the cut @xmath41 and @xmath42 for any @xmath43 .",
    "goemans & bertsimas  @xcite proved that for metric distances the above linear program has the same optimal value as the linear program obtained by dropping the equality constraints . moreover , when considering a graph - tspinstance @xmath13 we only need to consider the variables @xmath44 . indeed , any solution @xmath45 to the held - karp relaxation without equality constraints such that @xmath46 for a pair of vertices @xmath47 can be transformed into a solution @xmath48 with no worse cost and @xmath49 by setting @xmath50 for each edge on the shortest path between @xmath36 and @xmath37 , and @xmath51 for the other edges . the held - karp relaxation for graph - tspon a graph @xmath13",
    "can thus be formulated as follows : @xmath52 we shall refer to this linear program as @xmath53 and denote the value of an optimal solution by @xmath54 .",
    "its integrality gap was previously known to be at most @xmath55 and at least @xmath1 for graphic instances .",
    "the lower bound is obtained by a claw - free graphic instance of degree at most @xmath6 that consists of three paths of equal length with endpoints @xmath56 and @xmath57 that are connected so as @xmath58 and @xmath59 form two triangles ( see figure  [ fig : intgap ] ) .",
    "we end our discussion of @xmath53 with a useful observation . when considering graph - tsp , it is intuitively clear that we can restrict ourselves to _ @xmath11-vertex - connected _ graphs , i.e. , graphs that stay connected after deleting a single vertex .",
    "indeed , if we consider a graph with a vertex @xmath37 whose removal results in components @xmath60 with @xmath61 then we can recursively solve the graph - tsp problem on the @xmath62 subgraphs @xmath63 induced by @xmath64 .",
    "the union of these solutions will then provide a solution to the original graph that preserves the approximation guarantee with respect to the linear programming relaxation since one can see that @xmath65 .",
    "we summarize this observation in the following lemma ( see appendix  [ app:2conntsp ] for a fullproof ) .",
    "[ lemma:2conntsp ] let @xmath22 be a connected graph .",
    "if there is an @xmath66-approximation algorithm for graph - tsp on each @xmath11-vertex - connected subgraph @xmath17 of @xmath22 ( with respect to @xmath67 ) then there is an @xmath66-approximation algorithm for graph - tspon @xmath22 ( with respect to @xmath54 ) .",
    "[ [ matchings - of - cubic-2-edge - connected - graphs . ] ] matchings of cubic @xmath11-edge - connected graphs .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    edmonds  @xcite showed that the following set of equalities and inequalities on the variables @xmath68 determines the perfect matching polytope ( i.e. , all extreme points of the polytope are integral and correspond to perfect matchings ) of a given graph @xmath69 : @xmath70 the linear description is useful for understanding the structure of the perfect matchings . for example , naddef and pulleyblank  @xcite proved that @xmath71 defines a feasible solution when @xmath22 is _ cubic _ and _ @xmath11-edge connected _ ,",
    "i.e. , every vertex has degree @xmath6 and the graph stays connected after the removal of an edge .",
    "they used that result to deduce that such graphs always have a perfect matching of weight at least @xmath16 of the total weight of the edges .",
    "standard algorithmic versions of carathodory s theorem ( see e.g. theorem  @xmath72 in  @xcite ) say that , in polynomial time , we can decompose a feasible solution to the perfect matching polytope into a convex combination of polynomially many perfect matchings ( see also  @xcite for a combinatorial approach for the matching polytope ) .",
    "combining these results leads to the following lemma ( see  @xcite for closely related variants that also have been useful for the graph - tspproblem ) .    [",
    "lem : matching ] given a cubic @xmath11-edge - connected graph @xmath22 , we can in polynomial time find a distribution over polynomially many perfect matchings so that with probability @xmath16 an edge is in a perfect matching picked from this distribution .",
    "note that all @xmath11-vertex - connected graphs except the trivial graph on @xmath11 vertices are @xmath11-edge connected .",
    "we can therefore apply the above lemma to cubic @xmath11-vertex - connected graphs .",
    "lemma  [ lemma:2conntsp ] says that the technical difficulty in approximating the graph - tspproblem lies in approximating those instances that are @xmath11-vertex connected .",
    "as alluded to in the introduction , we shall generalize previous results  @xcite that relate the cost of an optimal tour to the size of a minimum @xmath11-vertex - connected subgraph .",
    "the main difference is the use of matchings .",
    "traditionally , matchings have been used to add edges to make a given graph eulerian whereas our framework offers a structured way to specify a set of edges that safely may be removed leading to a lower cost . to identify the set of edges that may be removed we use the following definition .",
    "[ def : pairing ] given a @xmath11-vertex - connected graph @xmath22 we call a tuple @xmath73 consisting of a subset @xmath23 of removable edges and a subset @xmath74 of pairs of edges a _ @xmath24 _ if    * an edge is in at most one pair ; * the edges in a pair are incident to a common vertex of degree at least @xmath6 ; * any graph obtained by deleting removable edges so that at most one edge in each pair is deleted stays connected .",
    "the following theorem generalizes the corresponding result of  @xcite ( their result follows from the the special case of an empty removable pairing ) .",
    "[ thm : main ] given a @xmath11-vertex - connected graph @xmath13 with a @xmath24 @xmath73 , there is a polynomial time algorithm that returns a spanning eulerian multigraph in @xmath22 with at most @xmath75 edges .",
    "the proof of the theorem is presented after the following lemma on which it is based .",
    "[ lemma : sample ] given a @xmath11-vertex - connected graph @xmath13 with a @xmath24 @xmath73 , we can in polynomial time find a distribution over polynomially many subsets of edges such that a random subset @xmath15 from this distribution satisfies :    * each edge is in @xmath15 with probability @xmath16 ; * at most one edge in each pair is in @xmath15 ; and * each vertex has an even degree in the multigraph with edge set @xmath76 .",
    "we shall use lemma  [ lem : matching ] and will therefore need a cubic @xmath11-edge - connected graph . in the spirit of  @xcite",
    ", we replace all vertices of @xmath22 that are not of degree three by gadgets to obtain a cubic graph @xmath77 as follows ( see also figure  [ fig : degreplace ] ) :    * a vertex @xmath37 of degree 2 with neighbors @xmath36 and @xmath78 is replaced by a cycle consisting of four vertices @xmath79 , @xmath80 , @xmath81 , @xmath82 with the chord @xmath83 .",
    "the gadget is then connected to the neighbours of @xmath37 by the the edges @xmath84 and @xmath85 . * a vertex @xmath37 with @xmath86",
    "is replaced by a tree @xmath87 that has @xmath88 leaves , a binary root if @xmath89 is odd , and otherwise only degree @xmath6 internal vertices .",
    "each leaf is connected to two neighbours of @xmath37 such that the edges incident to @xmath37 that form a pair in @xmath90 are incident to the same leaf . if @xmath89 is odd , one of the neighbors is left and connected to the binary root .",
    "the above gadgets guarantee that the graph @xmath91 is cubic and it is @xmath11-vertex connected since @xmath22 was assumed to be @xmath11-vertex connected",
    ". we can therefore apply lemma  [ lem : matching ] in order to obtain a random perfect matching @xmath92 .",
    "each edge of @xmath91 is in @xmath92 with a probability of exactly 1/3 .",
    "let @xmath15 be the set of edges obtained by restricting @xmath92 to the edges of @xmath22 in the obvious way .",
    "now @xmath15 contains each edge of @xmath22 with probability 1/3 .",
    "we complete the proof by showing that @xmath15 also satisfies properties @xmath93 and @xmath94 . as each pair of edges in @xmath90 is incident to a vertex of degree at least @xmath6",
    ", we have , by the construction of the gadgets , that they are incident to a common vertex in @xmath91 and hence at most one edge of each pair is in @xmath15 .",
    "finally , property @xmath94 follows from that @xmath95 is clearly a spanning eulerian multigraph of @xmath91 and compressing a set of even - degree vertices results in one vertex of even degree .    equipped with the above lemma we are now ready to prove the main result of this section",
    ".    theorem  [ thm : main ] pick a random subset @xmath96 of edges that satisfies the properties of lemma  [ lemma : sample ] .",
    "let @xmath97 be the set of those edges of @xmath15 that are removable and",
    "let @xmath98 be the set of the remaining edges of @xmath15 .",
    "consider the multigraph @xmath17 on vertex set @xmath18 and edge set @xmath99 .",
    "observe that both adding an edge and removing an edge swaps the parity of the degree of an incident vertex .",
    "we have thus from property @xmath94 of lemma  [ lemma : sample ] that the degree of each vertex in @xmath17 is even . moreover , as @xmath73 is a removable pairing , property @xmath93 of lemma  [ lemma : sample ] gives that @xmath17 is connected .",
    "alltogether we have that @xmath17 is an eulerian graph , i.e. , a graph - tsp solution .",
    "we continue to calculate its expected number of edges , which is latexmath:[\\[\\label{eq : nredges } \\mathbb{e}[|e| +    |\\bar m_r| -    @xmath16 , we have , by linearity of expectation , that   equals @xmath101    to conclude the proof , we note that the selection of @xmath15 can be derandomized since there are , by lemma  [ lemma : sample ] , polynomially many edge subsets to choose from ; taking the one that minimizes the number of edges of @xmath17 is sufficient .",
    "in order to use our framework , one of the main challenges is to find a @xmath24 that is sufficiently large . in the following ,",
    "we show how to obtain a useful @xmath24 based on circulations .",
    "consider a @xmath11-vertex connected graph @xmath22 and let @xmath102 be a spanning tree of @xmath22 obtained by depth - first search ( starting from some arbitrary root @xmath66 ) .",
    "then each edge in @xmath22 connects a vertex to either one of its predecessors or one of its successors .",
    "we call the edges in @xmath102 _ tree - edges _ and those in @xmath22 but not in @xmath102 _ back - edges_.    we shall now define a circulation network @xmath103 .",
    "we start by introducing an orientation of @xmath22 : all tree - edges become tree - arcs directed from the root to the leaves and all back - edges become back - arcs directed towards the root . to distinguish the circulation network and the original graphs",
    ", we use the names @xmath104 and @xmath105 for the network versions of @xmath22 and @xmath102 . in order to ensure connectivity properties of subnetworks obtained from feasible circulations , we replace some of the vertices by gadgets .    for each vertex @xmath37 except the root that has @xmath62 children @xmath106 in the tree , we introduce @xmath62 new vertices @xmath107 , @xmath108 , @xmath109 , @xmath110 and replace the tree - arc @xmath111 by the tree - arcs @xmath112 and @xmath113 for @xmath114",
    ". then we redirect all incoming back - arcs of @xmath37 from the subtree rooted by @xmath115 to @xmath116 .",
    "for an illustration of the gadget see figure  [ fig : circreplace ] and for an example of a complete network see figure  [ fig : circreplace_appendix ] .",
    "this way , all back - arcs start in old vertices and lead to new vertices or the root . in the following ,",
    "we call the new vertices and the root _ in - vertices _ and the remaining old ones _ out - vertices_. we also let @xmath117 be the set of all in - vertices .    , introduces a new vertex ( depicted in white ) and redirects back - arcs.,width=377 ]    we now specify a lower bound ( demand ) and an upper bound ( capacity ) on the circulation . for each arc @xmath118 in @xmath105",
    ", we set the demand of @xmath118 to 1 and for all other arcs to 0 .",
    "the capacity is @xmath119 for any arc .",
    "finally , the cost of a circulation @xmath120 in @xmath103 is the piecewise linear function @xmath121 $ ] , where @xmath122 is the set of incoming back - arcs of @xmath37 .",
    "one can think of the cost as the total circulation on the back - arcs except that each in - vertex accepts a circulation of @xmath32 for free .",
    "note that algorithmically there is no considerable difference whether we use our cost function or define a linear cost function on the arcs : for any in - vertex @xmath37 we can redirect all back - arcs of @xmath37 to a new vertex @xmath123 and introduce two arcs @xmath124 , one of cost @xmath34 and capacity @xmath32 and the other of cost @xmath32 and capacity @xmath119 .",
    "all remaining arcs then have a cost of @xmath34 .",
    "the following lemma shows how to use a circulation in @xmath103 to approximate graph - tsp .",
    "[ lemma : costcirc ] given a @xmath11-vertex connected graph @xmath22 and a depth first search tree @xmath102 of @xmath22 let @xmath125 be the minimum cost circulation to @xmath103 of cost @xmath126 .",
    "then there is a spanning eulerian multigraph @xmath91 in @xmath22 with at most @xmath127 edges .",
    "we first note that , for any arc of @xmath103 , the demand and the capacity is integral .",
    "therefore , applying hoffman s circulation theorem ( see @xcite , corollary 12.2a ) , we can assume the circulation @xmath125 to be integral .",
    "let @xmath128 be the support of @xmath125 in @xmath103 , i.e. , the induced subgraph of the arcs with non - zero circulation in @xmath125 , and let @xmath91 be the subgraph of @xmath22 obtained from @xmath128 by compressing the gadges of the circulation network in the obvious way .    to prove the lemma , we shall first prove that graph @xmath91 is @xmath11-vertex connected and then define a removable pairing @xmath73 on @xmath91 in order to apply theorem  [ thm : main ] . that @xmath91 is @xmath11-vertex connected follows from flow conservation , that each arc @xmath118 in @xmath105 has demand @xmath32 , and the design of the gadgets .",
    "indeed , if @xmath91 would have a cut vertex @xmath37 with children @xmath129 in @xmath102",
    "then one of the subtrees , say the one rooted by @xmath115 , has no back - edges to the ancestors of @xmath37 which in turn , by flow conservation , would contradict that the tree - arc @xmath130 in @xmath105 carries a flow of at least @xmath32 .",
    "( recall that the edge @xmath131 in @xmath102 is replaced by tree - arcs @xmath130 and @xmath113 in @xmath105 . )",
    "we now determine a @xmath24@xmath73 on @xmath91 .",
    "for ease of argumentation we shall first slightly abuse notation and define a @xmath24@xmath132 on @xmath128 .",
    "the set @xmath133 consists of all @xmath134 such that @xmath135 is a back - arc of cost zero in @xmath128 , @xmath37 has at least two incoming arcs , and @xmath136 is a tree - arc . note that each such @xmath37 is an in - vertex , the number of incoming back - arcs of cost zero is at most one , @xmath137 is the unique outgoing tree - arc of @xmath37 , and the only possible vertex @xmath37 with only one incoming back - arc and no other incoming arc is the root .",
    "the set @xmath138 contains all edges from @xmath133 and additionally all remaining back - arcs of @xmath128 . in other words ,",
    "each edge of @xmath128 that is neither in @xmath105 nor in @xmath90 is a back - arc with integer non - zero cost in the circulation or a back - arc to the root .",
    "hence , @xmath139 if the root has more than one incoming back - arc and @xmath140 otherwise",
    ".    the @xmath24@xmath73 on @xmath91 is now obtained from @xmath132 , by mereley compressing the gadgets used to form @xmath103 and by dropping the orientations of the arcs . as all edges in @xmath138 are either back - arcs or they are tree - arcs starting from an in - vertex , no arc in @xmath138 is removed by the compression and thus @xmath141 and @xmath142 .",
    "moreover , @xmath91 has @xmath143 edges and , assuming @xmath73 is a valid @xmath24 , theorem  [ thm : main ] yields that @xmath91 ( and thus @xmath144 has a spanning eulerian multigraph with at most @xmath145 edges .",
    "the last inequality followed from that @xmath146 is at most @xmath147 .",
    "therefore , we can conclude the proof by showing that @xmath73 is a valid @xmath24 .",
    "it is easy to verify that @xmath73 satisfies the first two conditions of definition  [ def : pairing ] , that is , each edge is contained in at most one pair and the edges in each pair are incident to one common vertex of degree at least three .",
    "the third condition follows from that , for any vertex @xmath37 of @xmath91 , the vertices in the subtree @xmath87 of @xmath102 rooted by @xmath37 form a connected subgraph of @xmath91 even after removing edges according to @xmath73 . to see this we do a simple induction on the depth of @xmath37 . in the base case",
    ", @xmath37 is a leaf and the statement is clearly true . for the inductive step , consider a vertex @xmath37 with @xmath62 children @xmath148 in @xmath102 . by the inductive hypothesis ,",
    "the vertices in @xmath149 for @xmath150 stay connected after the removal of edges according to @xmath73 . to complete the inductive step it is thus sufficient to verify that @xmath37 is connected to each @xmath149 after the removal of edges .",
    "if @xmath151 is not in @xmath23 this clearly holds . otherwise if @xmath152 then by the definition of @xmath153 there is an edge @xmath154 such that @xmath155 and @xmath154 is incident to @xmath37 and a vertex in @xmath149 . since at most one edge in each pair",
    "is removed we have that @xmath37 also stays connected to @xmath149 in this case , which completes the inductive step .",
    "we have thus proved that @xmath73 satisfies the properties of a @xmath24which completes the proof of the statement .",
    "we first show how to apply our framework to restricted graph classes for which we obtain a tight bound on the integrality gap of the held - karp relaxation .",
    "we then show how to use our framework to obtain an improved approximation algorithm for general graphs .",
    "we consider the class of graphs that have a degree bounded by three .",
    "[ lem : boundeddeg ] given a @xmath11-vertex - connected graph @xmath22 with @xmath21 vertices , there is a polynomial time algorithm that computes a spanning eulerian multigraph @xmath17 in @xmath22 with at most @xmath12 edges .",
    "if @xmath22 has one or two vertices , we obtain an eulerian multigraph of zero or two edges .",
    "otherwise , we compute a depth - first search tree @xmath102 in @xmath22 and determine the circulation network @xmath103 .",
    "we now show that this network has a feasible circulation @xmath120 of cost at most one .",
    "let us assign a circulation of one to each back - arc @xmath154 in @xmath103 and push it through the path in @xmath105 that is incident to both the start and end vertex of @xmath154 . by the construction of @xmath103 and from the assumption that @xmath22 is @xmath11-vertex connected",
    ", each tree - arc is in a directed cycle that contains exactly one back - arc .",
    "therefore , all demand constraints are satisfied . due to the degree - bounds , no vertex but the root has more than one incoming back - arc . the cost @xmath156 $ ] of the circulation is therefore at most one and zero if the root has only one back - arc .",
    "if the circulation cost is zero , by lemma  [ lemma : costcirc ] we obtain a spanning eulerian multigraph @xmath17 in @xmath22 with at most @xmath157 edges . for those circulations where the cost is one ,",
    "the proof of lemma  [ lemma : costcirc ] allows to save an additional constant of @xmath158 ( since then the root has more than one incoming back - arc ) and we obtain the same bound on the number of edges .",
    "note that it is sufficient to find a 2-vertex - connected degree three bounded spanning subgraph ( a 3-trestle ) and thus , using a result from @xcite , we can apply lemma  [ lem : boundeddeg ] also to claw - free graphs . applying lemma  [ lemma:2conntsp ]",
    ", we obtain an upper bound of 4/3 on the integrality gap for the held - karp relaxation for the considered class of graphs .",
    "in addition , along the lines of the proof of lemma  [ lemma:2conntsp ] , one can see that the above arguments imply that any connected graph @xmath22 decomposed into @xmath159 blocks , i.e. , maximal @xmath11-connected subgraphs , such that each block is either degree three bounded or claw - free , has a spanning eulerian multigraph with at most @xmath160 edges .",
    "we now apply our framework to graphs without degree constraints .",
    "we start with an algorithm that achieves an approximation ratio better than @xmath161 for graphs for which the linear programming relaxation has a value close to @xmath21 .",
    "let @xmath162 be an @xmath21-vertex graph .",
    "the support @xmath163 of an extreme point @xmath164 of @xmath53 is known to contain at most @xmath165 edges  ( see theorem  @xmath166 in  @xcite ) . moreover ,",
    "if we let @xmath164 be an optimal solution , then any @xmath66-approximate solution to graph @xmath167 with respect to @xmath168 is an @xmath66-approximate solution to @xmath22 with respect to @xmath54 , because @xmath169 and @xmath170 .",
    "we can thus restrict ourselves to @xmath21-vertex graphs with at most @xmath165 edges and , by lemma  [ lemma:2conntsp ] , we can further assume the graph to be @xmath11-vertex connected .    a 2-vertex - connected graph @xmath22 with @xmath21 vertices and at most @xmath165 edges .",
    "obtain an optimal solution @xmath164 to @xmath53 . obtain a depth - first - search tree @xmath102 of @xmath22 by starting at some root and in each iteration",
    "pick , among the possible edges , the edge @xmath154 with maximum @xmath171 .",
    "solve the min cost circulation problem @xmath103 to obtain a circulation @xmath125 with cost @xmath126 .",
    "apply lemma  [ lemma : costcirc ] to find a spanning eulerian multigraph with less than @xmath172 edges .    to analyze the approximation ratio achieved by algorithm  [ alg : allgraphs ] , we bound the cost of the circulation .",
    "[ lemma : circcost ] we have @xmath173 .    for notational convenience , when considering an arc @xmath118 in the flow network we shall slightly abuse notation and use @xmath174 to denote the value of the corresponding edge in @xmath22 according to the optimal lp - solution @xmath164 .",
    "we prove the statement by defining a fractional circulation @xmath120 of cost at most @xmath175",
    ". the circulation @xmath120 will in turn be the sum of two circulations @xmath176 and @xmath177 .",
    "we obtain the circulation @xmath176 as follows : for each back - arc @xmath118 we push a flow of size @xmath178 $ ] along the cycle formed by @xmath118 and the tree - arcs in @xmath105 .",
    "we shall now define the circulation @xmath177 so as to guarantee that @xmath120 forms a feasible circulation , i.e. , one that satisfies the demands @xmath179 for each @xmath180 . as out- and in - vertices are alternating in @xmath105 and in - vertices have only one child in @xmath105 and no outgoing back - edges , a sufficient condition for @xmath120 to be feasible can be seen to be @xmath179 for each @xmath181 that is from an out - vertex to an in - vertex . to ensure this",
    ", we now define @xmath177 as follows . for each vertex @xmath37 of @xmath22 that is replaced by a gadget consisting of an out - vertex @xmath37 and a set @xmath182 of in - vertices",
    ", we push for each @xmath183 a flow of size @xmath184 $ ] along a cycle that includes the arc @xmath185 ( and one back - arc ) .",
    "note that such a cycle is guaranteed to exist since @xmath22 was assumed to be @xmath11-vertex connected . from the definition of @xmath177 , we have thus that @xmath186 defines a feasible circulation",
    ".    we proceed by analyzing the cost of @xmath120 , i.e. , @xmath187 $ ] , where @xmath117 is the set of all in - vertices and @xmath122 is the set of incoming back - arcs of @xmath188 .",
    "note that the cost is upper bounded by @xmath189 + \\sum_{v\\in      \\mathcal{i } } f''(b(v))$ ] and we can thus analyze these two terms separately .",
    "we start by bounding the second summation and then continue with the first one .",
    "if @xmath190 then one can see that @xmath191 .",
    "moreover ,    [ claim : firstcost ] we have @xmath192 .",
    "when considering a vertex @xmath37 as done above in the definition of @xmath177 , the flow pushed on back - arcs is @xmath193 $ ] which equals @xmath194 , where @xmath195 .",
    "letting @xmath196 be the set of vertices of @xmath22 in the subtree of the undirected tree @xmath102 rooted by the child of @xmath197 , we have , by the definition of @xmath176 , @xmath198 = x^*(\\delta(t_w ) \\setminus \\delta(v)).\\ ] ] the second equality follows from that if @xmath199 for some @xmath200 then @xmath201 and hence @xmath202 .",
    "we have thus @xmath203 as we are considering a depth - first - search tree ( see figure  [ fig : circcostola ] ) , @xmath204    : both the left - hand - side and the right - hand - side of the equality express two times the value of the fat edges.,width=264 ]    since by the feasibility of @xmath164 each of the sets corresponds to a cut of fractional value at least @xmath11 we use @xmath205 as a lower bound on  .    summarizing the above calculations yields",
    "@xmath206    repeating this argument for each @xmath37 we have @xmath207 , which equals @xmath208 since @xmath209 .",
    "we proceed by bounding @xmath189 $ ] from above .",
    "[ claim : secondcost ] we have @xmath189 \\leq ( 7 - 6\\sqrt{2})n + 4(\\sqrt{2}-1){\\ensuremath{opt_{lp}(g)}}$ ]    to analyze this expression we shall use two facts .",
    "first @xmath22 has at most @xmath165 edges , and therefore the number of back - arcs is at most @xmath210 .",
    "second , as the depth - first - search chooses ( among the available edges ) the edge @xmath118 with maximum @xmath174 in each iteration , we have that @xmath211 for each @xmath212 where @xmath213 is the outgoing tree - arc of @xmath214 .",
    "moreover , as @xmath215 $ ] for each back - arc , the number of back - arcs in @xmath122 is at least @xmath216}\\right\\rceil$ ] .",
    "combining these two facts gives us that @xmath217}\\right\\rceil \\leq n.\\ ] ] for @xmath188 , we partition @xmath218 into @xmath219 $ ] and @xmath220 .",
    "furthermore , let @xmath221 . with this notation",
    "we can upper bound @xmath222 $ ] by @xmath223 + u^*\\ ] ] and relax inequality   to @xmath224    the cost   ( where we ignore @xmath225 ) subject to   can now be interpreted as a knapsack problem of capacity @xmath226 that is packed with an item of profit @xmath227 $ ] and size @xmath228 for each @xmath214 .",
    "consequently , we can upper bound   by considering the fractional knapsack problem with capacity @xmath229 and infinitely many items of a maximized profit to size ratio . associating a variable @xmath230 with @xmath231 and @xmath102 with @xmath232",
    "this ratio is @xmath233 for any @xmath102 the ratio is maximized by letting @xmath234 and we can thus restrict our attention to items with profit to size ratio @xmath235 .",
    "a simple analysis ( see appendix  [ sec : maxsizratio ] ) shows that the maximum is achieved when @xmath236 .",
    "therefore , the profit   is upper bounded by @xmath237 as the fractional degree of a vertex @xmath37 that is replaced by a gadget with a set @xmath182 of in - vertices is at least @xmath238 , we have @xmath239 .",
    "hence , @xmath240 which equals @xmath241 .    finally , by summing up the bounds given by claim  [ claim : firstcost ] and claim  [ claim : secondcost ] we bound the cost of @xmath120 and hence @xmath126 from above by @xmath242 which equals",
    "@xmath175 .    having analyzed algorithm  [ alg : allgraphs ] , we are ready to prove our main algorithmic result .    * [ thm : approximationratio ] * ( restated ) _ there is a polynomial time approximation algorithm for graph - tspwith performance guarantee @xmath243 .",
    "_    by lemma  [ lemma:2conntsp ] and the discussion before algorithm  [ alg : allgraphs ] , we can restrict ourselves to @xmath21-vertex graphs that are @xmath11-vertex connected and have at most @xmath165 edges .",
    "the statement now follows by using algorithm  [ alg : allgraphs ] if @xmath244 is close to @xmath21 and otherwise by using christofides algorithm .    on the one hand",
    ", since christofides algorithm returns a solution with at most @xmath245 edges ( see  @xcite for an analysis of christofides algorithm in terms of @xmath54 ) , it has an approximation guarantee of at most @xmath246 on the other hand , by lemma  [ lemma : circcost ] , the approximation guarantee of algorithm  [ alg : allgraphs ] is at most @xmath247 in particular , the approximation guarantee of algorithm  [ alg : allgraphs ] for a graph @xmath22 with @xmath248 is @xmath249 but deteriorates as @xmath54 increases .",
    "the approximation guarantee of christofides algorithm on the other hand is getting better and better as @xmath54 increases .     and christofides algorithm depending on the ratio @xmath250.,width=377 ]    comparing these two ratios , one gets that the worst case happens when @xmath251 ( see figure  [ fig : ratios ] ) and , by using simple arithmetics , the approximation guarantee can be seen to be @xmath252 .",
    "[ sec : tspp ] in this section , we describe a sequence of generalizations and modifications of the techniques that we previously presented for graph - tspand conclude with improved approximation algorithms for the traveling salesman path problem on graphic metrics , graph - tspp .",
    "we can obtain a natural generalization of @xmath253 to graph - tsppby distinguishing whether the end vertices @xmath254 and @xmath255 are in the same set of vertices .",
    "to this end , let @xmath256 .",
    "then the relaxation can be written as @xmath257    \\min & \\sum_{e\\in e }   x_e \\\\[2 mm ]    x(\\delta(s ) ) & \\geq   2 , & \\emptyset \\neq s \\subset v , s \\in \\phi\\\\[2 mm ]    x(\\delta(s ) ) & \\geq   1 , & \\emptyset \\neq s \\subset v , s \\notin \\phi\\\\[2 mm ]    x & \\geq 0 . \\end{aligned}\\ ] ] we denote the optimum of this generalized linear program by @xmath258 .",
    "it is not hard to see that @xmath259 .",
    "the graph on the right - hand - side in figure  [ fig : intgap ] has a fractional solution such that the integrality gap of @xmath260 is lower bounded by 1.5 .     and",
    "@xmath4 , respectively.,width=453 ]    for a given graph @xmath13 , let @xmath261 be the graph obtained from @xmath22 by inserting @xmath262 .",
    "note that , given any solution @xmath45 to @xmath260 , we can obtain a feasible solution to @xmath263 by adding 1 to @xmath264 . this way , for each of the cuts where @xmath265 , we have @xmath266 and thus @xmath267 . in the following",
    ", we will generalize our results for graph - tspby using @xmath268 as lower bound .",
    "similar to graph - tsp , we observe that the difficulty in approximating graph - tspplies in approximating those instances that are @xmath11-vertex connected . the proof of this lemma can be found in appendix  [ app:2conntsp ] .    * [ lemma:2conntsp ] * ( generalized ) _ let @xmath22 be a graph and let @xmath269 be an algorithm that , given a @xmath11-vertex - connected subgraph @xmath17 of @xmath22 and @xmath270 , returns a graph - tspp solution to @xmath271 with cost at most @xmath272 .",
    "then there is an algorithm @xmath273 that returns a graph - tspp solution to @xmath274 for any @xmath275 with cost at most @xmath276 .",
    "furthermore , the running time of @xmath273 is a polynomial in the running time of @xmath269 . _",
    "we generalize the framework to the problem graph - tspp .",
    "we obtain an approximation ratio that depends on @xmath277 , the distance of @xmath254 and @xmath255 .",
    "therefore we can see the variant of theorem  [ thm : main ] for graph - tspas a special case where @xmath254 and @xmath255 have the distance 0 .",
    "* [ thm : main ] * ( generalized ) _ given a @xmath11-vertex connected graph @xmath13 with a @xmath24 @xmath73 and @xmath278 , there is a polynomial time algorithm that returns a spanning subgraph @xmath17 of @xmath22 with an eulerian path between @xmath254 and @xmath255 with at most @xmath279 edges . _",
    "a graph has an eulerian path between @xmath254 and @xmath255 if and only if it is connected and the multigraph obtained by adding the edge @xmath262 is a spanning eulerian subgraph .",
    "therefore , we basically want to apply ( the original ) theorem  [ thm : main ] and swap the degree of @xmath254 and @xmath255 .",
    "to this end we create the graph @xmath167 from @xmath22 by adding the edge @xmath137 to @xmath280 if it is not already present in @xmath22 . then we apply theorem  [ thm : main ] to @xmath91 with the removable pairing @xmath153 to obtain the spanning eulerian subgraph @xmath281 .",
    "if the eulerian graph @xmath281 contains exactly one copy of @xmath137 , we simply remove it to obtain @xmath17 .",
    "this case appears if and only if @xmath137 was not chosen during the sampling , which happens with a probability of @xmath158 .",
    "note that the 2-edge - connectedness ensures that the removal does not disconnect @xmath281 .",
    "otherwise , with probability @xmath16 , @xmath281 contains either two copies of @xmath137 if @xmath282 or none if @xmath283 . in either case",
    "we obtain @xmath17 from @xmath281 by removing all copies of @xmath137 and adding a shortest path of length exactly @xmath277 to @xmath281 .",
    "if @xmath284 , we add a path with probability @xmath16 and apart from that we only remove edges ; the claimed result follows immediately . if @xmath285 , it is also not in @xmath23 and thus the path is added if and only if two edges are removed .",
    "furthermore , with probability @xmath158 , one edge is removed .",
    "then the expected number of edges in @xmath17 is @xmath286    both the removal of @xmath137 and adding the shortest path swaps the parities of @xmath254 and @xmath255 , but of no other vertex .    by using the generalized theorem  [ thm : main ] within the proof of lemma  [ lemma : costcirc ]",
    ", we obtain immediately the following generalization .    *",
    "[ lemma : costcirc ] * ( generalized ) _ given a @xmath11-vertex connected graph @xmath22 , two vertices @xmath287 in @xmath22 , and a depth first search tree @xmath102 of @xmath22 ,",
    "let @xmath125 be the minimum cost circulation to @xmath103 of cost @xmath126 .",
    "then there is a spanning multigraph @xmath17 of @xmath22 that has an eulerian path between @xmath254 and @xmath255 with at most @xmath288 edges . _",
    "we are now equipped with the right tools to obtain algorithmic results for graph - tspp .    *",
    "[ thm : approximationratiohpp ] * ( restated ) _ for any @xmath27 , there is a polynomial time approximation algorithm for graph - tsppwith performance guarantee @xmath289 _    _",
    "if furthermore each block of the given graph is degree three bounded , there is a polynomial time approximation algorithm for graph - tsppwith performance guarantee @xmath29 , for any @xmath30_.    by the generalized variant of lemma  [ lemma:2conntsp ] , it is sufficient to show the theorem assuming that @xmath22 is 2-vertex connected .",
    "if @xmath22 is degree three bounded , we apply lemma  [ lem : boundeddeg ] on @xmath22 , but use the generalized version of lemma  [ lemma : costcirc ] to obtain a solution to graph - tsppthat has at most @xmath290 edges . additionally we may replace @xmath277 by @xmath291 , since in 2-vertex - connected graphs with more than two vertices there are two vertex - disjoint paths between @xmath254 and @xmath255 .    to obtain the claimed approximation ratio",
    ", we use the trivial lower bound @xmath292 of @xmath293 . for any @xmath294",
    ", we determine a constant @xmath295 such that , for all @xmath296 , the approximation ratio is bounded from above by @xmath297 . if the graph has fewer than @xmath295 vertices , we compute an optimal solution in constant time .",
    "we continue with the case of general unweighted graphs . as in the previous subsections , @xmath262 .",
    "we apply algorithm  [ alg : allgraphs ] to obtain a circulation @xmath298 of @xmath261 such that , by lemma  [ lemma : circcost ] , @xmath299 . using this circulation , we apply the generalized version of lemma  [ lemma : costcirc ]",
    ". however , if @xmath285 and it is used in the solution ( i.e. , it was added as a shortest path ) , we have to replace @xmath137 by a shortest path between @xmath254 and @xmath255 in @xmath22 .",
    "this is equivalent to using @xmath277 from @xmath22 instead of @xmath91 in lemma  [ lemma : costcirc ] .",
    "therefore , in the following @xmath277 always refers to the distance in @xmath22 and we obtain a solution to graph - tsppof at most @xmath300 edges .    in the following , let @xmath301 and @xmath302 .",
    "then , using the lower bound @xmath268 on @xmath293 , the approximation ratio achieved by our algorithm is at most @xmath303 where @xmath304 and @xmath305 . in the following calculations ,",
    "we omit @xmath306 , since it decreases with the input size .",
    "similarly , we assume @xmath307 .",
    "we will consider the deviation , however , in the final result .",
    "since ( [ eqn : hppapprox ] ) depends on @xmath308 , similar to the case of graph - tspwe employ a second algorithm to obtain an upper bound independent of @xmath308 .",
    "let @xmath269 be the following simple approximation algorithm for graph - tsppwhich can be considered folklore .",
    "first , @xmath269 computes a spanning tree @xmath102 of cost @xmath292 in @xmath22 .",
    "then @xmath269 doubles all edges but those on the unique path between @xmath254 and @xmath255 in @xmath102 .",
    "the output of @xmath269 is clearly a valid solution to graph - tsppand it computes a solution of at most @xmath309 edges .",
    "similar to ( [ eqn : hppapprox ] ) , this results in an approximation ratio of at most @xmath310    note that for @xmath311 and @xmath312 , disregarding @xmath294 , ( [ eqn : hppapproxtwo ] ) is the approximation ratio we are aiming for .",
    "any increase of @xmath308 or @xmath313 can only improve this ratio .",
    "therefore we may restrict the analysis to values of @xmath313 in the range @xmath314 $ ] .",
    "we will first analyze the approximation ratio depending on @xmath313 and determine afterwards the value of @xmath313 where the minimum of the two approximation ratios is maximized .    for any fixed @xmath313 within the considered range , ( [ eqn : hppapprox ] )",
    "is monotonically increasing with respect to @xmath308 , whereas ( [ eqn : hppapproxtwo ] ) is monotonically decreasing . since we are interested in the minimum of the ratios , in the worst case both ratios are equal .",
    "this happens when @xmath315    we now replace @xmath308 by ( [ eqn : equalhpp ] ) in ( [ eqn : hppapproxtwo ] ) to obtain the worst case approximation ratio depending on @xmath313 @xmath316 since this ratio can be seen to be monotonically increasing with respect to @xmath313 within the considered range , the worst case appears when @xmath317 , and thus we obtain as upper bound on the approximation ratio @xmath318    to conclude the proof , we still have to consider @xmath319 and the case where @xmath320 . for any @xmath30 , we determine an @xmath295 based on @xmath319 and @xmath308 similar to the degree bounded case and solve graph - tsppon graphs with fewer than @xmath295 vertices exactly .",
    "altogether , we obtain an approximation ratio of at most @xmath321 ( see also figure  [ fig : ratioshpp ] ) .    ) and ( [ eqn : hppapproxtwo ] ) depending on @xmath313 and @xmath308.,width=377 ]",
    "we have introduced a framework of removable pairings to find eulerian multigraphs . this framework proved to be useful to obtain an approximation algorithm for graph - tspwith an approximation ratio smaller than @xmath0 and to obtain a tight upper bound on the integrality gap of the held - karp relaxation for a restricted class of graphs that contains degree three bounded and claw - free graphs .",
    "in particular , we showed that in subcubic @xmath11-vertex - connected graphs we can always find a solution to graph - tspof at most @xmath12 edges , which settles a conjecture from @xcite affirmatively .",
    "our framework is not restricted to graph - tsp . with the same techniques and a more detailed analysis",
    ", our result translates to the traveling salesman path problem on graphic metrics with prespecified start and end vertex . in this way ,",
    "one is guaranteed to obtain an approximation ratio smaller than @xmath2 and , for the degree three bounded case , the approximation ratio gets arbitrarily close to @xmath4 .",
    "we note that the framework of removable pairings is straightforward to generalize to general metrics , but the problem of finding a large enough removable pairing in such graphs in order to improve on christofides algorithm remains open .",
    "10    sanjeev arora .",
    "polynomial time approximation schemes for euclidean traveling salesman and other geometric problems .",
    "45:753782 , 1998 .    francisco barahona .",
    "fractional packing of t - joins .",
    ", 17:661669 , 2004 .",
    "sylvia boyd , rene sitters , suzanne van  der ster , and leen stougie . on cubic and subcubic graphs . in _ proc .  of the 15th conference on integer programming and combinatorial optimization ( ipco 2011 ) _ , 2011 .",
    "to appear .",
    "nicos christofides .",
    "worst - case analysis of a new heuristic for the travelling salesman problem .",
    "technical report 388 , graduate school of industrial administration , carnegie - mellon university , 1976 .",
    "grard cornujols , jean fonlupt , and denis naddef .",
    "the traveling salesman problem on a graph and some related integer polyhedra .",
    ", 33:127 , 1985 .",
    "jack edmonds . maximum matching and a polyhedron with @xmath322 vertices . , 69:125130 , 1965 .",
    "greg  n. frederickson and joseph jaja. on the relationship between the biconnectivity augmentation and travelling salesman problems .",
    ", 19(2):189  201 , 1982 .",
    "david gamarnik , moshe lewenstein , and maxim sviridenko .",
    "an improved upper bound for the tsp in cubic 3-edge - connected graphs .",
    ", 33(5):467474 , 2005 .",
    "shayan  oveis gharan , amin saberi , and mohit singh",
    ". a randomized rounding approach to the traveling salesman problem .",
    "preprint , 2011 .",
    "michel  x. goemans and dimitris  j. bertsimas . on the parsimonious property of connectivity problems . in _ proceedings of the 1st annual acm - siam symposium on discrete algorithms ( soda  1990 ) _ , pages 388396 , 1990 .",
    "michel  x. goemans .",
    "worst - case comparison of valid inequalities for the tsp .",
    ", 69:335349 , 1995 .",
    "michelangelo grigni , elias koutsoupias , and christos  h. papadimitriou .",
    "an approximation scheme for planar graph tsp . in _ proc .  of the 36th annual symposium on foundations of computer science ( focs  1995 ) _ , pages 640645 , 1995 .",
    "martin grtschel , lszlo lovsz , and alexander schrijver . ,",
    "volume  2 of _ algorithms and combinatorics_. springer , 1988 .",
    "michael held and richard  m. karp .",
    "the traveling - salesman problem and minimum spanning trees . , 18:11381162 , 1970 .",
    "j.  a. hoogeveen .",
    "analysis of christofides heuristic : some paths are more difficult than cycles . , 10(5):291295 , 1991 .",
    "atsushi kaneko , alexander kelmans , and tsuyoshi nishimura . on packing 3-vertex paths in a graph .",
    ", 36(4):175197 , 2001 .",
    "joseph s.  b. mitchell .",
    "guillotine subdivisions approximate polygonal subdivisions : a simple polynomial - time approximation scheme for geometric tsp , k - mst , and related problems . , 28:12981309 , march 1999 .    c.  l. monma , b.  s. munson , and w.  r. pulleyblank .",
    "minimum - weight two - connected spanning networks .",
    ", 46:153171 , 1990 .",
    "denis naddef and wiliam  r. pulleyblank . matchings in regular graphs . , 34(3):283291 , 1981 .",
    "christos  h. papadimitriou and santosh vempala . on the approximability of the traveling salesman problem .",
    ", 26(1):101120 , 2006 .",
    "alexander schrijver . .",
    "springer , 2003 .",
    "david  b. shmoys and david  p. williamson . analyzing the held - karp tsp bound : a monotonicity property with application .",
    ", 35(6):281285 , 1990 .",
    "laurence  a. wolsey .",
    "heuristic analysis , linear programming and branch and bound . in _",
    "combinatorial optimization ii _ ,",
    "volume  13 of _ mathematical programming studies _ , pages 121134 .",
    "springer , 1980 .",
    "of a graph @xmath22 with depth - first - tree @xmath102 .",
    "in - vertices and out - vertices of the circulation network is depicted in white and black , respectively.,width=453 ]",
    "* [ lemma:2conntsp ] * ( restated ) _",
    "let @xmath22 be a graph and let @xmath269 be an algorithm that , given a @xmath11-vertex - connected subgraph @xmath17 of @xmath22 and @xmath270 , returns a graph - tspp solution to @xmath271 with cost at most @xmath272 .",
    "then there is an algorithm @xmath273 that returns a graph - tspp solution to @xmath274 for any @xmath275 with cost at most @xmath276 .",
    "furthermore , the running time of @xmath273 is a polynomial in the running time of @xmath269 . _      1 .",
    "if @xmath22 is @xmath11-vertex connected then return the graph - tspp solution obtained by running @xmath269 on @xmath274 .",
    "2 .   otherwise , let @xmath37 be a cut vertex whose removal results in components @xmath324 with @xmath325 .",
    "recursively run @xmath323 on the @xmath326 sub - instances @xmath327 and return the union of the obtained solutions , where @xmath328 denotes the subgraph of @xmath22 induced by @xmath329 , @xmath330    as a vertex is selected to be a cut vertex at most once , @xmath323 terminates in time bounded by a polynomial in the running time of @xmath269 .",
    "it remains to verify that it returns a graph - tspp solution to @xmath274 with cost at most @xmath331 .",
    "we do so by induction on the depth of the recursion . in the base case",
    "no recursive calls are made so the solution is that returned by @xmath269 which by assumption is a graph - tspp solution to @xmath274 with cost at most @xmath331 .",
    "now consider the inductive step when a cut vertex @xmath37 of @xmath22 is selected whose removal results in components @xmath332 with @xmath333 .",
    "let @xmath334 be the multiset of edges of the obtained graph - tspp solution to @xmath335",
    ". with this notation the edge set returned by @xmath273 is @xmath336 and we need to prove that      we start by proving ( a ) . by the induction hypothesis ,",
    "the edge set @xmath340 forms a spanning eulerian subgraph of @xmath328 and , consequently , @xmath341 forms a spanning eulerian subgraph of @xmath22 . that @xmath342 is a spanning eulerian subgraph of @xmath22 now follows from that the endpoints of @xmath343 can be partitioned so that one is @xmath254 , one is @xmath255 and the remaining @xmath344 endpoints are @xmath37 ( possibly not different from @xmath254 and @xmath255 ) .",
    "we proceed by proving ( b ) . by the induction hypothesis , @xmath345 and it is thus sufficient to prove @xmath346 . to this end , let @xmath45 be an optimal solution to @xmath260 and let @xmath347 denote its restriction to the subgraph @xmath328 with start vertex @xmath348 and end vertex @xmath349 . by the definition of @xmath350 and the fact that @xmath37 is a cut vertex , it is easy to see that each constraint in @xmath351 has an identical constraint in @xmath260",
    ". therefore , @xmath347 corresponds to a solution to @xmath352 and hence @xmath353 which completes the inductive step and the proof of the lemma .",
    "we verify that @xmath354 is obtained when @xmath355 .",
    "let @xmath356 and consider its first derivative @xmath357 from this it follows that @xmath358 when @xmath359 it is now easy to verify that the unique maximum of @xmath360 for @xmath361 is obtained when @xmath355 ."
  ],
  "abstract_text": [
    "<S> we present a framework for approximating the metric tsp based on a novel use of matchings . </S>",
    "<S> traditionally , matchings have been used to add edges in order to make a given graph eulerian , whereas our approach also allows for the removal of certain edges leading to a decreased cost .    for the tsp on graphic metrics ( graph - tsp ) , </S>",
    "<S> the approach yields a @xmath0-approximation algorithm with respect to the held - karp lower bound . for graph - tsprestricted to a class of graphs that contains degree three bounded and claw - free graphs , we show that the integrality gap of the held - karp relaxation matches the conjectured ratio @xmath1 . </S>",
    "<S> the framework allows for generalizations in a natural way and also leads to a @xmath2-approximation algorithm for the traveling salesman path problem on graphic metrics where the start and end vertices are prespecified . </S>"
  ]
}
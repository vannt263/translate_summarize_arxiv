{
  "article_text": [
    "the minimum dominating set ( mds ) problem @xcite has fundamental importance in network science .",
    "for example , to ensure the proper functioning of a complex networked system such as a nation - wide power grid , it is often necessary to monitor the system s microscopic dynamics in real - time by placing sensors on the nodes .",
    "a sensor may have the capability of observing the instantaneous states of the residing node and all its adjacent nodes in the network @xcite , so they may not need to occupy all the nodes .",
    "we then have the mds problem : how to place sensors on as few nodes as possible to minimize costs but still ensure that each node is either occupied or adjacent to at least one occupied node ? as an example we show in fig .",
    "[ fig : mdsexample]b a minimum dominating set ( containing only three nodes ) of a small network .",
    "a more stringent constraint , which is adopted in lattice glass models @xcite , is to require an empty node @xmath0 to be surrounded by at least @xmath1 occupied nodes , with @xmath1 being node - dependent .",
    "the mds problem corresponds to the case of @xmath2 , while the other limiting case of @xmath3 is just the vertex cover ( or independent set ) problem @xcite , where @xmath4 is node @xmath0 s degree ( i.e. , number of adjacent nodes ) .",
    "an example of minimum dominating set .",
    "( a ) a small network with @xmath5 nodes and @xmath6 links . ( b ) blue ( dark gray ) indicates a node being occupied , while cyan ( light gray ) indicates a node being empty but observed .",
    "the three occupied nodes form a mds @xmath7 for this network .",
    "( c ) a coarse - grained representation of the network based on the mds of ( b ) .",
    ", scaledwidth=80.0% ]    the mds problem has wide practical applications , such as monitoring large - scale power grids and other transportation systems @xcite , controlling the spreading of infectious diseases and other network dynamical processes @xcite , efficient routing in wireless networks @xcite , and network public goods games ( e.g. , resource allocation ) @xcite .",
    "another application is to build a coarse - grained representation for a complex network starting from a mds .",
    "such an idea has already been applied to multi - document summarization in the field of information extraction @xcite .",
    "each node @xmath0 of the mds can be regarded as a representative node for a local domain of the network .",
    "we can take the subnetwork induced by node @xmath0 and all its adjacent nodes ( except those in the mds ) as a coarse - grained node , and set up an coarse - grained link between two coarse - grained nodes if the two corresponding subnetworks share at least one node or are connected by at least one link in the original network ( see fig .",
    "[ fig : mdsexample]c for an example ) .",
    "if such a coarse - graining process is iterated we will then obtain a hierarchical representation for the original network , which may be very useful for understanding the organization of a complex system and for searching and information transmission in such a system .    exactly solving the mds problem , however ,",
    "is extremely difficult in general , since it is a nondeterministic polynomial - complete ( np - complete ) optimization problem @xcite .",
    "even the task of approximately solving the mds problem is very hard . for a general network of @xmath8 nodes , so far the best polynomial algorithms can only guarantee to get dominating sets with sizes not exceeding @xmath9 times of the minimum size @xcite .",
    "many local - search algorithms have been proposed to solve the mds problem heuristically ( see review @xcite and @xcite ) , but theoretical results on the mds sizes of random network ensembles are still very rare .    in this work",
    "we bring several new theoretical and algorithmic contributions .",
    "we show in sec .",
    "[ sec : core ] that a generalized leaf - removal ( glr ) process may cause a core percolation transition , and propose a quantitative theory to describe this percolation .",
    "if the network contains no core , glr reaches an exact mds ; if an extensive core exists , we combine glr with a local greedy process in sec .  [",
    "sec : hybrid ] to get an upper bound to the mds size .",
    "we then introduce a spin glass model in sec .",
    "[ sec : glass ] and estimate the mds size by a replica - symmetric ( rs ) mean field theory , and implement a message - passing algorithm in sec .",
    "[ sec : bpd ] to get near - optimal dominating sets for single random network instances .",
    "our algorithms also perform well on real - world network instances",
    ". this work shall be useful both for network scientists who are interested in applying the mds concept to practical problems , and for applied mathematicians who seek better theoretical understanding on the random mds problem .",
    "consider a simple network @xmath10 formed by @xmath8 nodes and @xmath11 undirected links , each link connecting between two different nodes .",
    "each node with index @xmath12 is either empty ( indicated by the occupation state @xmath13 ) or occupied by sensors ( @xmath14 ) .",
    "a node @xmath0 is regarded as observed if it is occupied or it is empty but adjacent to one or more occupied nodes , otherwise it is regarded as unobserved .",
    "we need to occupy a set @xmath15 of nodes to make all the @xmath8 nodes be observed , and the objective is to make the dominating set @xmath15 as small as possible , i.e. , to construct a minimum dominating set .",
    "it is easy to verify that the three occupied nodes of fig .",
    "[ fig : mdsexample]b form a mds for that small network .",
    "notice a network may have more than one mds .",
    "here we extend the leaf - removal idea of @xcite ( see also more recent work @xcite ) and consider a generalized leaf - removal process .",
    "this dynamics is based on the following two considerations : first , as pointed out in @xcite , if node @xmath0 is an unobserved leaf node ( which has only a single neighbor , say @xmath16 ) , then occupying @xmath16 but leaving @xmath0 empty must be an optimal strategy ; second , we notice that if @xmath0 is an empty but observed node and at most one of its adjacent nodes is unobserved , then it must be an optimal strategy _ not _ to occupy @xmath0 .",
    "this second point was not considered in the conventional leaf - removal process @xcite .",
    "the two basic operations of the generalized leaf - removal process .",
    "white circles denote empty and unobserved nodes , cyan ( light gray ) circles denote empty but observed nodes , and blue ( dark gray ) circles denote occupied nodes .",
    "( left panel ) the unique adjacent node @xmath16 of an unobserved leaf node @xmath0 is occupied , and all the neighbors of @xmath16 are observed .",
    "( right panel ) an empty observed node @xmath0 has only a single unobserved neighbor @xmath16 , then the link between @xmath0 and @xmath16 is deleted .",
    ", scaledwidth=50.0% ]    the glr process simplifies the input network @xmath10 at discrete evolution steps @xmath17 . for",
    "the convenience of description , let us denote by @xmath18 the simplified network at the start of the @xmath19-th evolution step of glr .",
    "@xmath20 at the initial step @xmath21 is identical to the original network @xmath10 , and all the nodes of @xmath20 are unobserved .",
    "we prove that if glr makes the whole input network @xmath10 be observed , then the set of nodes occupied during this process must be a mds .",
    "for this latter purpose , let us denote by @xmath22 a mds of the input network @xmath10 ( there must be at least one such set ) .",
    "the essential idea is to demonstrate that during glr , we can modify @xmath23 in such a way that its size does not change but all the nodes @xmath0 that are fixed to be occupied ( @xmath14 ) are in @xmath23 while all the nodes @xmath16 that are fixed to be unoccupied ( @xmath24 ) are not in @xmath23 .",
    "starting from evolution step @xmath21 , let us perform glr and modify @xmath23 in the following sequential order :    1 .",
    "as long as there is an isolated node @xmath0 in network @xmath18 , fix its occupation state to @xmath14 and delete it from @xmath18 .",
    "all such fixed nodes @xmath0 must also belong to @xmath23 .",
    "2 .   as long as there is a leaf node @xmath0 in network @xmath18 which is not yet observed , fix the occupation state of its unique neighbor @xmath16 to @xmath25 and fix that of @xmath0 to @xmath13 so that @xmath16 and all its adjacent nodes ( including @xmath0 ) are now observed , see fig .",
    "[ fig : glridea ] ( left panel ) .",
    "we then delete node @xmath16 and all its connected links from @xmath18 .",
    "if @xmath16 belongs to @xmath23 then node @xmath0 must not belong to it , because otherwise @xmath23 could not have been a mds . on the other hand ,",
    "if node @xmath16 does not belong to @xmath23 then node @xmath0 must belong to it , and in this latter case we modify @xmath23 by adding @xmath16 to it and deleting @xmath0 from it .",
    "as long as there is a node @xmath0 which is itself observed and which has only a single unobserved neighbor @xmath16 , delete the link @xmath26 from network @xmath18 , see fig .",
    "[ fig : glridea ] ( right panel ) .",
    "we do not modify @xmath23 if node @xmath0 does not belong to it .",
    "if node @xmath0 does belong to @xmath23 then node @xmath16 must not belong to it , and in this latter case we add @xmath16 to @xmath23 and delete @xmath0 from it .",
    "as long as there is an observed node @xmath0 which is not connected to any unobserved node , fix its occupation state to @xmath13 and delete it and all its attached links from @xmath18 .",
    "such a node @xmath0 must not belong to @xmath23 , for otherwise @xmath23 could not have been a mds .",
    "if the resulting network @xmath18 is empty or it contains no isolated node nor leaf node , the glr process stops .",
    "if @xmath18 still contains at least one isolated or leaf node , then we increase the evolution step from @xmath19 to @xmath27 and initialize the network @xmath28 as identical to @xmath18 .",
    "a node @xmath0 of @xmath28 is regarded as observed if and only if it is observed in network @xmath18 .",
    "we then repeat the above - mentioned operations ( 1)(3 ) .",
    "if the final simplified network is non - empty , then there must be some nodes that are still unobserved after the glr process .",
    "the subnetwork induced by these unobserved nodes is referred to as the _ core _ of the original network @xmath10 .",
    "this core is connected only to observed empty nodes but not to occupied nodes .",
    "we denote by @xmath29 the fraction of nodes in this core and by @xmath30 the fraction of occupied nodes .",
    "if the original network @xmath10 has no core , then the set @xmath15 of occupied nodes by the glr process must be identical to the final @xmath23 , which is a mds modified from the original mds .",
    "we have therefore proven that glr constructs a mds for a network @xmath10 if this network contains no core .",
    "( all the above - mentioned modification operations on @xmath22 are ignored in the actual implementation of the glr process .",
    "they are introduced here solely for proving that glr is able to construct a mds if there is no core . )",
    "furthermore , we notice that if the glr process finishes with some nodes remaining to be unobserved , the set of nodes occupied during this process must be a mds for the subnetwork of @xmath10 induced by all the observed nodes .",
    "this is because all these occupied nodes also belong to the modified mds @xmath23 , while all those nodes fixed to be unoccupied are outside of @xmath23 .",
    "generalized leaf - removal on erds - rnyi random networks . @xmath30 and @xmath29 are the fractions of occupied and unobserved nodes , respectively .",
    "cross symbols are results obtained by running glr on a single er network of size @xmath31 and mean degree @xmath32 ; solid lines are the predictions of the percolation theory for @xmath33 .",
    ", scaledwidth=60.0% ]    we generate many large instances of erds - rnyi ( er ) and scale - free ( sf ) random networks and run the glr process on them ( details of the network sampling method are given in sections  [ sub : coreer ] , [ sub : coresfstatic ] , and [ sub : coresfpure ] ) .",
    "some representative results are shown in fig .",
    "[ fig : erglr ] for er networks @xcite , in fig .",
    "[ fig : sfstaticglr ] for sf networks generated through the static model @xcite , and in fig .",
    "[ fig : sfpureglr ] for pure sf networks @xcite .",
    "a major observation is that there is no core in pure sf random networks with minimum node degree @xmath34 , therefore a mds for such a network can be easily constructed by the glr process .",
    "another major observation is that there is a continuous core percolation transition in er networks and in sf networks generated through the static model .",
    "this core percolation transition occurs at certain threshold value of the mean node degree .",
    "for example , for er networks with @xmath31 nodes and @xmath35 links , when the mean node degree @xmath36 there is no core ( @xmath37 ) , and glr reaches a mds for the whole network ( fig .",
    "[ fig : erglr ] ) .",
    "the core emerges at @xmath38 and its relative size @xmath29 then increases with @xmath32 continuously from zero . for @xmath39 ,",
    "glr constructs a mds only for part of the er network and it leaves an extensive core of @xmath40 unobserved nodes .     generalized leaf - removal on scale - free random networks of decay exponent @xmath41 ( from left to right ) generated through the static model @xcite .",
    "@xmath30 and @xmath29 are the fractions of occupied and unobserved nodes , respectively .",
    "red dash - dotted lines are results obtained by running glr on a single network instance of size @xmath31 and mean degree @xmath32 , while blue dashed lines are results obtained by the core percolation theory using the degree profile of this network instance as input .",
    "black solid lines are the predictions of the percolation theory for @xmath33 . , scaledwidth=60.0% ]    notice the core percolation transition resulting from the glr optimization process is qualitatively different from the simpler observability transition discussed in @xcite , which considers the appearance of a giant connected component of observed nodes resulting from an initial set of randomly chosen occupied nodes .",
    "we now develop a percolation theory to thoroughly understand the glr dynamics on random networks .     generalized leaf - removal on pure scale - free random networks with minimum degree @xmath42 .",
    "@xmath30 is the fraction of occupied nodes .",
    "the fraction @xmath29 of unobserved nodes is simply @xmath37 .",
    "red triangle symbols are results obtained by running glr on a single pure sf network of size @xmath31 and decay exponent @xmath43 , while blue cross symbols are results obtained by the percolation theory using the degree profile of this network instance as input .",
    "the black solid line is obtained by the percolation theory at @xmath33 .",
    ", scaledwidth=60.0% ]      a random network is characterized by a degree distribution @xmath44 , which gives the fraction of nodes with degree @xmath45 @xcite .",
    "we assume that there is no correlation between the degrees of adjacent nodes , therefore the degree @xmath46 of a node reached by following a randomly chosen link obeys the distribution @xmath47 of the form @xmath48 where @xmath49 is the mean node degree of the network .",
    "consider a link @xmath26 of the network @xmath10 .",
    "let us neglect for the moment the constraint of node @xmath0 to node @xmath16 but only consider the other adjacent nodes of @xmath16 .",
    "if the constraint of node @xmath0 is neglected , then what is the probability @xmath50 that node @xmath16 becomes an unobserved leaf node ( i.e. , it has no other adjacent node except @xmath0 ) at the start of the @xmath19-th glr evolution step ?",
    "what is the probability @xmath51 that @xmath16 becomes newly occupied ( @xmath25 ) at the @xmath19-th glr step ?",
    "what is the probability @xmath52 that @xmath16 is observed but not occupied at the end of the @xmath19-th glr step ? and what is the probability @xmath53 that at the end of the @xmath19-th glr step , node @xmath16 is an observed and unoccupied node and it has no unobserved adjacent node except @xmath0 ? for an uncorrelated random network these four sets of probability parameters @xmath54 , @xmath55 , @xmath56 , and @xmath57 can be computed by a set of iterative equations .",
    "the expressions of @xmath58 for the initial evolution step @xmath21 are @xmath59 \\ ; ,   \\label{eq : gamma0}\\\\    \\eta_0 & = & \\sum\\limits_{d\\geq 1 } q(d ) \\bigl [      ( \\beta_0 + \\gamma_0)^{d-1 } - \\gamma_0^{d-1 } \\bigr ] \\ ; .",
    "\\label{eq : eta0}\\end{aligned}\\ ] ] equation ( [ eq : alpha0 ] ) is trivial , it simply describes the situation that node @xmath16 has only a single neighbor ( i.e. , node @xmath0 ) .",
    "equation ( [ eq : beta0 ] ) describes the situation that node @xmath16 is adjacent to at least one leaf node ( except @xmath0 ) , which will guarantee @xmath16 to be occupied at the @xmath21 glr step .",
    "a random network has only very few short loops and therefore the local network structure around node @xmath16 is a tree . in the core percolation theory",
    "we therefore assume that the adjacent nodes of @xmath16 are completely independent of each other when @xmath16 is still unobserved ( such an assumption was also exploited in our earlier percolation studies @xcite ) . based on this assumption",
    ", the probability of all the adjacent nodes ( except @xmath0 ) of @xmath16 not being unobserved leaves is then written in eq .",
    "( [ eq : beta0 ] ) as the product of the individual probability @xmath60 of an adjacent node not being an unobserved leaf . equation ( [ eq : gamma0 ] ) expresses the fact that for node @xmath16 to be an unoccupied but observed node at the end of the @xmath21 evolution step , it should not be adjacent to any unobserved leaf node but at least one of its adjacent nodes ( except @xmath0 ) should be occupied .    if node @xmath16 is adjacent to one or more nodes that are occupied at the @xmath21 evolution step and all its other adjacent nodes ( except @xmath0 ) are observed at this evolution step , then at the end of this evolution step @xmath16 is unoccupied but observed and it is not adjacent to any unobserved node ( except @xmath0 ) .",
    "this then leads to the expression ( [ eq : eta0 ] ) for @xmath61 .",
    "notice such an observed but unoccupied node @xmath16 will be deleted at the end of the @xmath21 evolution step .",
    "after all such nodes are deleted , some unobserved nodes in the remaining network may become isolated or be connected to only a single node . if this is the case , these isolated or leaf nodes will trigger the next ( @xmath62 ) evolution step .    following the same line of theoretical considerations , we obtain the expressions of @xmath50 , @xmath51 , @xmath52 , and @xmath53 for the @xmath19-th glr evolution step ( @xmath63 ) as @xmath64 \\ ; , & \\quad \\quad ( t\\geq 2 )   \\end{array}\\right .",
    "\\label{eq : alphat}\\\\    \\beta_t   & = & \\sum\\limits_{d\\geq 1 } q(d ) \\bigl [       \\bigl(1-\\sum\\limits_{l=0}^{t-1 }      \\alpha_l \\bigr)^{d-1 } - \\bigl(1- \\sum\\limits_{l=0}^{t } \\alpha_l \\bigr)^{d-1 }      \\bigr ] \\ ; ,    \\label{eq : betat}\\\\    \\gamma_t & = & \\sum\\limits_{d\\geq 1 } q(d ) \\bigl [ \\bigl(1-\\sum\\limits_{l=0}^{t }      \\alpha_l \\bigr)^{d-1 } - \\bigl(1-\\sum\\limits_{l=0}^{t } ( \\alpha_l + \\beta_l )      \\bigr)^{d-1 } \\bigr ] \\ ; ,    \\label{eq : gammat}\\\\    \\eta_t    & = & \\sum\\limits_{d\\geq 1 } q(d ) \\bigl [ \\bigl ( \\sum\\limits_{l=0}^{t }      \\beta_l + \\gamma_t\\bigr)^{d-1 } - ( \\gamma_t ) ^{d-1 } \\bigr ]    -\\sum\\limits_{l=0}^{t-1 } \\eta_l \\ ; .",
    "\\label{eq : etat}\\end{aligned}\\ ] ] let us denote by @xmath65 the value of @xmath66 at the last evolution step @xmath67 of the glr process ( notice that the maximal evolution step @xmath68 may approach infinity for a network with @xmath33 nodes ) .",
    "furthermore , we define the accumulated values of @xmath50 , @xmath51 , and @xmath53 as @xmath69 there are the following relationships among @xmath70 , @xmath71 , @xmath72 and @xmath65 : @xmath73 \\ ; ,    \\label{eq : gammacum}\\\\    \\eta_{cum } & = & \\sum\\limits_{d\\geq 1 } q(d ) \\bigl [      ( \\beta_{cum } + \\gamma_{lim})^{d-1 } - ( \\gamma_{lim})^{d-1 } \\bigr ] \\ ; .",
    "\\label{eq : etacum}\\end{aligned}\\ ] ]    after all the probability parameters @xmath50 , @xmath51 , @xmath52 , @xmath53 ( for @xmath74 ) for a node @xmath16 at the end of a link @xmath75 are determined by neglecting the constraint associated with node @xmath0 , we now ask the following two questions : if the constraint of node @xmath0 to all its adjacent nodes are considered , then what is the probability @xmath29 of @xmath0 to be unobserved after the whole glr process ? and what is the probability @xmath76 of node @xmath0 to be occupied at the @xmath19-th glr evolution step ? if node @xmath0 remains to be unobserved during the whole glr process , it must not be adjacent to any unobserved leaf node nor to any occupied node , and it must have at least two adjacent nodes after the whole glr process . therefore we obtain that @xmath77 \\ ; , \\label{eq : ncore}\\end{aligned}\\ ] ] where @xmath78 $ ] is the binomial coefficient . notice that if @xmath79 then we have @xmath37 .",
    "it is easy to see that the probability @xmath80 of a randomly chosen node @xmath0 to be occupied at the @xmath21 glr evolution step is @xmath81 the coefficient @xmath82 in the second term of the above expression reflects the fact that if node @xmath0 has only one neighbor @xmath16 , then @xmath0 has one - half probability to be occupied if @xmath16 also has only one neighbor ( namely @xmath0 ) .",
    "if a randomly chosen node @xmath0 is not occupied at the @xmath21 evolution step , then the probability @xmath83 of it being occupied at the @xmath62 evolution step is @xmath84     -\\frac{1}{2 } \\sum\\limits_{d\\geq 2 } p(d ) d \\alpha_1 ( \\eta_0)^{d-1 } \\ ; .",
    "\\label{eq : i1a}\\end{aligned}\\ ] ] all the adjacent nodes of @xmath0 might haven been deleted at the end of the @xmath21 evolution step .",
    "if this is the case node @xmath0 becomes isolated at the start of the @xmath62 evolution step , which leads to the first summation of eq .",
    "( [ eq : i1a ] ) .",
    "the second summation of eq .",
    "( [ eq : i1a ] ) corresponds to the other situation of node @xmath0 not being occupied nor being deleted at the @xmath21 evolution step but it is adjacent to at least one node that becomes an unobserved leaf at the start of the @xmath62 evolution step .",
    "notice if node @xmath0 becomes an unobserved leaf node at the start of the @xmath62 evolution step with its unique neighbor also being such a leaf node , then @xmath0 has only one - half probability to be occupied at this evolution step .",
    "this last situation leads to the third summation term of eq .",
    "( [ eq : i1a ] ) , which corrects the over - counted probability of occupation in the second summation term .    following the same line of theoretical considerations ,",
    "we obtain the probability @xmath76 of a randomly chosen node @xmath0 changing from being unoccupied to being occupied at the @xmath19-th glr evolution step ( @xmath85 ) : @xmath86     \\nonumber \\\\    & &     + \\sum\\limits_{d\\geq 2 } p(d ) \\bigl [ \\bigl(1-\\sum\\limits_{l=0}^{t-1 }      \\alpha_l \\bigr)^{d } - \\bigl(1-\\sum\\limits_{l=0}^{t } \\alpha_l \\bigr)^{d } \\bigr ]    \\nonumber \\\\    & & - \\sum\\limits_{d\\geq 2 } p(d ) d",
    "\\alpha_t \\bigl [ \\bigl(\\sum\\limits_{l=0}^{t-1 } \\beta_l + \\gamma_{t-1 } \\bigr)^{d-1 }      - ( \\gamma_{t-1})^{d-1 } +      \\bigl(\\sum\\limits_{l=0}^{t-2 } \\eta_l \\bigr)^{d-1 } \\bigr ]    \\nonumber \\\\    & & - \\frac{1}{2 } \\sum\\limits_{d\\geq 2 } p(d ) d \\alpha_{t }    \\bigl [ \\bigl ( \\sum\\limits_{l=0}^{t-1 } \\eta_l \\bigr)^{d-1 }      - \\bigl(\\sum\\limits_{l=0}^{t-2 } \\eta_l \\bigr)^{d-1 } \\bigr ] \\ ; .\\end{aligned}\\ ] ] the probability @xmath30 of a randomly chosen node @xmath0 to be occupied during the glr process is then @xmath87   \\nonumber \\\\   & &   - \\sum\\limits_{t\\geq 1 } \\sum\\limits_{d\\geq 2 } p(d ) d \\bigl [     \\eta_t   \\bigl ( \\sum\\limits_{l=0}^{t-1 } \\eta_l \\bigr)^{d-1 }      + \\alpha_t \\bigl (     \\sum\\limits_{l=0}^{t-1 } \\beta_l + \\gamma_{t-1 } \\bigr)^{d-1 }     -   \\alpha_t ( \\gamma_{t-1})^{d-1 } \\bigr ] \\nonumber \\\\     & & - \\frac{1}{2 } \\sum\\limits_{t\\geq 2 } \\sum\\limits_{d\\geq 2 }   p(d ) d \\alpha_t",
    "\\bigl [ \\bigl ( \\sum\\limits_{l=0}^{t-1 } \\eta_l \\bigr)^{d-1 }     + \\bigl ( \\sum\\limits_{l=0}^{t-2 } \\eta_l \\bigr)^{d-1 } \\bigr ]   \\nonumber \\\\   & & - \\frac{1}{2 } \\sum\\limits_{d\\geq 2 } p(d ) d \\alpha_1 ( \\eta_0)^{d-1 }   \\ ; .",
    "\\label{eq : wb}\\end{aligned}\\ ] ] our core percolation theory can be applied both to single finite random network instances and to random network ensembles at the thermodynamic limit @xmath88 . for each @xmath19 ( starting from @xmath21 ) ,",
    "we first compute @xmath50 , then use @xmath50 as input to compute @xmath51 , then use @xmath50 and @xmath51 as inputs to compute @xmath52 , and finally use @xmath50 , @xmath51 and @xmath52 as inputs to compute @xmath53 . for a finite random network of @xmath8 nodes ,",
    "the iteration stops if the evolution step @xmath19 increases to a value @xmath68 such that @xmath89 .",
    "this is because if @xmath90 the number of newly occupied nodes has a high probability to be zero and then glr will be unable to continue . for the case of @xmath88 ,",
    "the numerical iteration process can be carried out to a sufficiently large evolution step @xmath67 until @xmath91 .",
    "we generate an er random network @xmath10 of @xmath8 nodes and @xmath92 links by adding links sequentially to an initial network of @xmath8 isolated nodes .",
    "to add a link , we choose two different nodes @xmath0 and @xmath16 uniformly at random from the whole node set and set up a link @xmath75 between them if this link has not been created before .",
    "the mean node degree of the resulting network @xmath10 is equal to @xmath32 .",
    "when the number @xmath8 of nodes is sufficiently large the degree distribution @xmath44 of such a er network obeys the poisson distribution @xcite @xmath93 for this network ensemble , the predicted results of @xmath29 and @xmath30 by our core percolation theory are in perfect agreement with simulation results ( see fig .  [",
    "fig : erglr ] ) . especially , at the thermodynamic limit @xmath88 , the theory predicts a continuous core percolation phase transition at @xmath94 , which is slightly lower than the core percolation phase transition point of @xmath95 caused by the conventional leaf - removal process @xcite . before the glr - induced core percolation transition occurs , the occupation fraction @xmath30 obtained by eq .",
    "( [ eq : wb ] ) is equal to the ensemble - averaged mds size ( relative to @xmath8 ) , but it is only a lower bound to this size when an extensive core emerges in the random network ( @xmath96 ) .",
    "now let us consider glr - induced core percolation on more heterogeneous random networks .",
    "we generate a scale - free network @xmath10 of @xmath8 nodes and @xmath92 links according to the static model @xcite .",
    "each node @xmath97 is first assigned a fitness value @xmath98 , where @xmath99 is a control parameter",
    ". then we add links between pairs of these @xmath8 nodes in a sequential manner . to create a link , two nodes @xmath0 and @xmath16",
    "are chosen independently from the set of @xmath8 nodes , and the probability that @xmath0 and @xmath16 being chosen is equal to @xmath100 ; if nodes @xmath0 and @xmath16 are different and the link @xmath75 has not been created before , this link is added to network .",
    "the final network @xmath10 has a power - law degree distribution @xmath101 for @xmath102 , with degree decay exponent @xmath103 . in the thermodynamic limit @xmath88 , an explicit expression for @xmath44",
    "is obtained as @xcite @xmath104^d}{d ! \\xi }",
    "\\int_{1}^{\\infty } { \\rm d } x e^{-c ( 1-\\xi ) x } x^{k-1 - 1/\\xi }   \\quad \\quad \\quad \\quad ( d\\geq 0 ) \\ ; .\\ ] ]     core percolation phase transition in infinite ( @xmath33 ) random scale - free networks generated through the static model @xcite .",
    "horizontal axis is the degree decay exponent @xmath43 , while vertical axis is the value of the mean node degree @xmath32 at the phase transition point .",
    "cross symbols are predictions of the core - percolation theory , while the solid line is just a guide for the eye .",
    ", scaledwidth=60.0% ]    for @xmath33 , a continuous core percolation phase transition is observed in such a sf network , and this transition occurs at more and more larger value of the mean node degree @xmath32 as the decay exponent @xmath43 decreases ( see fig .  [ fig : sfstaticglr ] for @xmath105 , @xmath106 , @xmath107 , and @xmath108 and fig .",
    "[ fig : coretransfstatic ] for @xmath109 ) . when the decay exponent @xmath43 is less then @xmath106 , theoretical predictions obtained at @xmath33 are quantitatively different from theoretical and simulation results obtained on finite ( e.g. , @xmath31 ) network instances , with the deviations become more pronounced as @xmath43 is closer to @xmath110 .",
    "such a finite - size effect is mainly caused by the natural cutoff of maximum node degree in finite networks ( it was also observed in our earlier work @xcite on another type of percolation transitions ) .",
    "we emphasize that for a give finite value of @xmath8 , the results of the core percolation theory agree with the simulation results of the actual glr process very well , especially if we average the theoretical and simulation results over many network instances to reduce fluctuations .",
    "for random sf networks generated through the static model with @xmath33 nodes , the core percolation transition value of mean node degree @xmath32 is very sensitive to the decay exponent @xmath43 in the region of @xmath111 , and it diverges as @xmath43 approaches @xmath110 from above ( fig .",
    "[ fig : coretransfstatic ] ) . at the other limit of @xmath112 , the mean node degree at the phase transition",
    "approaches the value of @xmath94 , which is just the core percolation phase transition point of an infinite er random network .      when @xmath33 , a pure scale - free random network has the following degree distribution @xmath113 with @xmath114 to ensure a finite value for the mean node degree @xmath32 .",
    "for such a random sf network our core percolation theory predicts that @xmath37 , namely there is no core percolation transition and the glr process will construct a mds for the whole network .",
    "the fraction @xmath30 of occupied nodes ( i.e. , the size of a mds relative to the node number @xmath8 ) decreases with the decreasing of the degree decay exponent @xmath43 ( see fig .  [",
    "fig : sfpureglr ] ) , and it approaches zero as @xmath43 approaches @xmath110 from above .",
    "we also generate a set of pure sf random networks of finite size @xmath8 following the same procedure as mentioned in @xcite ( see also the supplementary information of @xcite ) .",
    "the minimum node degree of such a sf network is @xmath34 , while the maximum node degree is @xmath115 @xcite . when we apply both the glr process and the core percolation theory on these finite network instances , we find the simulation results on the fraction @xmath29 of nodes in the core and the fraction @xmath30 of occupied nodes are in perfect agreement with the corresponding theoretical results ( see fig .  [",
    "fig : sfpureglr ] ) .",
    "all these finite sf networks contain no core ( @xmath37 ) , and the mds relative size @xmath30 is an increasing function of @xmath43 .",
    "figure  [ fig : sfpureglr ] also demonstrates strong finite - size effect for pure sf random networks of @xmath116 .",
    "this finite - size effect is again mainly caused by the cutoff of the maximum node degree of finite networks , which makes the mean node degree of a finite network be smaller than that of an infinite network .",
    "for example , at @xmath117 the mean node degree of an infinite network is @xmath118 , while that of a finite network of size @xmath31 is reduced to @xmath119 .",
    "there is a very simple greedy algorithm in the literature to solve the mds problem approximately , which is based on the concept of node impact @xcite ) .",
    "the impact of an unoccupied node @xmath0 equals to the number of nodes that will be observed by occupying @xmath0 .",
    "for example , if node @xmath0 has @xmath120 unobserved neighbors , its impact is @xmath121 if @xmath0 is itself unobserved and is @xmath120 if @xmath0 is already adjacent to one or more occupied nodes .",
    "starting from an input network @xmath10 with all the nodes unobserved , the greedy algorithm selects uniformly at random a node @xmath0 from the subset of nodes with the highest impact and fix its occupation state to @xmath14 .",
    "all the adjacent nodes of @xmath0 are then observed .",
    "if there are still unobserved nodes in the network , the impact value for each of the unoccupied nodes is updated and the greedy occupying process is repeated until all the nodes are observed .",
    "this pure greedy algorithm is very easy to implement and very fast , but we find that it usually fails to reach a true mds even when the input network contains no core .",
    "constructing dominating sets for erds - rnyi networks ( left panel ) and regular random networks ( right panel ) .",
    "the relative sizes @xmath30 of dominating sets obtained by a single running of the pure greedy , the hybrid , and the bpd algorithm with @xmath122 on @xmath123 er or rr network instances of @xmath124 and ( mean ) degree @xmath32 are compared ( fluctuations are of order @xmath125 and are not shown ) .",
    "the ensemble - averaged mds relative sizes obtained by the replica - symmetric mean field theory are also shown ( rs ) . , scaledwidth=100.0% ]     constructing dominating sets for scale - free random networks generated through the static model @xcite .",
    "the relative sizes @xmath30 of dominating sets obtained by a single running of the pure greedy , the hybrid , and the bpd algorithm with @xmath122 on @xmath123 sf network instances of @xmath124 and ( mean ) degree @xmath32 are compared ( fluctuations are of order @xmath125 and are not shown ) .",
    "the degree decay exponent is @xmath126 , @xmath106 , @xmath127 , and @xmath108 , respectively .",
    ", scaledwidth=100.0% ]    here we introduce an improved local algorithm by combining the glr process with the impact - based greedy process .",
    "we call this new algorithm the glr - impact hybrid algorithm . given an input network @xmath10 with all the nodes unobserved",
    ", we first carry out the glr process to simplify @xmath10 as far as possible .",
    "if all the nodes are observed during this initial glr process , a mds of network @xmath10 is then constructed . for the nontrivial case of some nodes",
    "being left unobserved after this glr process , we first occupy a randomly chosen node from the subset of highest - impact nodes and then perform the glr process again to further simplify the network as far as possible .",
    "we keep repeating such a occupying - followed - by - glr process until there is no unobserved node left in the network .",
    "the glr - impact hybrid algorithm is also very easy to implement and very fast .",
    "its performance is demonstrated in fig .",
    "[ fig : dsminerrr ] for single er networks and regular random ( rr ) networks .",
    "( all the nodes of a rr network have the same integer degree @xmath32 but the network is otherwise completely random @xcite . )",
    "this hybrid local algorithm outperforms the pure greedy algorithm considerably for @xmath128 , but it is still inferior to the belief - propagation - guided decimation ( bpd ) algorithm of section  [ sec : bpd ] .    .",
    "[ tab : real ] results on twelve real - world network instances . @xmath8 and @xmath11 are , respectively , the total number of nodes and links in the network ; @xmath129 is the maximum node degree of the network ; the column marked by ` core ' records the number of nodes that are left unobserved after the glr process ; the columns marked by ` greedy ' , ` hybrid ' , and ` bpd ' record the sizes of the dominating sets constructed by a single running of the pure greedy , the hybrid , and the bpd algorithm , respectively . [ cols=\">,>,>,>,>,>,>,>\",options=\"header \" , ]     we also test the performance of the hybrid algorithm on single sf random networks generated through the static model @xcite ( see fig .",
    "[ fig : dsminsfstatic ] ) . the glr - impact algorithm still outperforms the pure greedy algorithm on these heterogeneous networks , and its performance approaches that of the bpd algorithm as the network becomes more and more heterogeneous ( i.e. , as the decay exponent @xmath43 approaches @xmath110 from above ) .",
    "real - world networks are often very heterogenous , with a small fraction of highly connected nodes @xcite . as a test of the algorithms introduced in this work ,",
    "we apply the glr process , the pure greedy algorithm , the hybrid algorithm , and the bpd algorithm to a set of twelve real - world networks . among these network instances , five are infrastructure networks : european express road network ( roadeu @xcite ) , road network of texas ( roadtx @xcite ) , power grid of western us states ( grid @xcite ) , and two internet networks at the autonomous systems level ( intnet1 and intnet2 @xcite ) ; three are information networks : google webpage network ( webpage @xcite ) , european email network ( email @xcite ) , and research citation network ( citation @xcite ) ; three are social contact networks : collaboration network of condensed - matter authors ( author @xcite ) , peer - to - peer interaction network ( p2p @xcite),and on - line friendship network ( friend @xcite ) ; the remaining one is the biological network of protein - protein interactions ( ppi @xcite ) .",
    "the numerical results are summarized in table  [ tab : real ] .",
    "the glr process is able to simplify these networks considerably .",
    "after glr , the remaining number of unobserved nodes is often much smaller than the total number @xmath8 of nodes in the original network .",
    "the bpd algorithm performs slightly better than the glr - impact hybrid algorithm , and both bpd and the hybrid algorithm outperform the pure greedy algorithm in all the twelve network instances .",
    "if a given network instance @xmath10 contains an extensive core , the glr process can only give a lower bound to the mds size .",
    "we now discuss the issue of estimating the mds size by way of a mean field theory .",
    "we introduce a partition function @xmath130 as @xmath131   \\bigr\\ } \\ ; , \\ ] ] where @xmath132 denotes one of the @xmath133 possible occupation configurations , @xmath134 is a re - weighting parameter , and @xmath135 denotes node @xmath0 s set of adjacent nodes .",
    "the constraint of each node @xmath0 leads to a multiplication term @xmath136 $ ] , which equals to @xmath137 if @xmath0 and all its adjacent nodes are empty and equals to @xmath138 if otherwise .",
    "the partition function therefore only takes into account all the dominating sets , and at @xmath139 it is contributed exclusively by the mds configurations .",
    "we solve the spin glass model ( [ eq : model ] ) by a rs mean field theory , which can be understood from the angle of bethe - peierls approximation @xcite or derived alternatively through partition function expansion @xcite .",
    "the marginal probability @xmath140 of node @xmath0 s occupation state being @xmath32 ( @xmath141 ) is expressed as @xmath142 where the kronecker symbol @xmath143 if @xmath144 and @xmath145 if otherwise . the quantity @xmath146 is defined as the joint probability that node @xmath0 is in occupation state @xmath147 and its adjacent node @xmath16 is in occupation state @xmath148 when the constraint of node @xmath0 is _ not _ considered .",
    "this probability can be evaluated through the following belief - propagation ( bp ) equation : @xmath149 where @xmath150 denotes the subset obtained by deleting node @xmath0 from set @xmath151 .",
    "the total free energy @xmath152 is related to the partition function by @xmath153 . according to the rs mean field theory , its expression is @xmath154 where @xmath155 and @xmath156 are the free energy contributions of a node @xmath0 and a link @xmath26 between nodes @xmath0 and @xmath16 : @xmath157 \\ ; ,    \\label{eq : fi}\\\\   & & \\hspace*{-0.9 cm } f_{(i , j ) }   =   -\\frac{1}{x } \\ln \\bigl [      \\sum\\limits_{c_i , c_j } q_{i\\rightarrow j}^{(c_i , c_j ) }      q_{j\\rightarrow i}^{(c_j , c_i ) } \\bigr ] \\ ; . \\label{eq : fij}\\end{aligned}\\ ] ] from eqs .",
    "( [ eq : f0 ] ) and ( [ eq : qi ] ) we can compute the free energy density @xmath158 and the mean occupation fraction @xmath159 .",
    "the entropy density of the system is then evaluated as @xmath160 .      according to eq .",
    "( [ eq : bp ] ) each probability distribution @xmath161 has the property that @xmath162 .",
    "therefore in the numerical computations @xmath161 can be represented by three non - negative real numbers @xmath163 , @xmath164 , and @xmath165 , which satisfy in addition the normalization condition @xmath166 we initialize @xmath161 and @xmath167 for each link @xmath26 of the network between two nodes @xmath0 and @xmath16 , for example setting @xmath168 .",
    "we then perform bp iteration a number @xmath169 of times at a given value of the re - weighting parameter @xmath170 , until a fixed - point solution of eq .",
    "( [ eq : bp ] ) is reached or @xmath169 exceeds a pre - specified number ( e.g. , @xmath171 ) . in each bp iteration step",
    "we treat all the nodes of the network in a random order . when node @xmath16 is examined , the output messages @xmath146 to all its adjacent nodes @xmath172 are updated according to eq .",
    "( [ eq : bp ] ) .",
    "the difference @xmath173 between an updated message @xmath174 at the @xmath19-th bp step and the old message @xmath175 at the @xmath176-th bp step is defined as @xmath177 if the maximal value among the set of @xmath178 difference values @xmath179 is less than certain pre - specified threshold value ( e.g. , @xmath180 or even smaller ) , then bp iteration is regarded as being converged . at a fixed point of eq .",
    "( [ eq : bp ] ) we then compute the free energy density @xmath181 , the mean occupation fraction @xmath30 , and the entropy density @xmath182 through the rs mean field theory . as an example , we show in fig .  [",
    "fig : rsforer10 ] the results obtained on a single er random network of size @xmath31 and mean degree @xmath183 .",
    "replica - symmetric ( rs ) mean field theory and belief - propagation ( bp ) results for er random networks of mean degree @xmath183 .",
    "the rs results are obtained by population dynamics simulations , while the bp results are obtained on a single er network instance of @xmath31 nodes .",
    "the bp iteration converges to a fixed point only for @xmath184 .",
    "( a ) occupation fraction @xmath30 ; ( b ) free energy density @xmath181 ; ( c ) entropy density @xmath182 ; ( d ) entropy density @xmath182 as a function of occupation fraction @xmath30 . ,",
    "scaledwidth=100.0% ]    for er networks with mean degree @xmath39 and regular random networks with integer degree @xmath185 , we find that when the re - weighting parameter @xmath170 is larger than certain threshold value , bp iteration is unable to converge to a fixed point .",
    "such a non - convergence phenomenon indicates that , when the random network system has an extensive core , it will be in a spin glass phase at sufficiently large values of @xmath170 .",
    "systematic theoretical investigations on this spin glass phase will be reported in another publication .",
    "a random network ensemble is characterized by a degree distribution @xmath44 .",
    "we perform population dynamics simulations using eqs .",
    "( [ eq : bp ] ) , ( [ eq : qi ] ) and ( [ eq : f0 ] ) to obtain ensemble - averaged results .",
    "first , we create a long array @xmath186 of @xmath187 ( e.g. , @xmath188 ) elements to store a set of messages , each of which represents a probability distribution @xmath146 in the form of a three - dimensional vector satisfying eq .",
    "( [ eq : unity ] ) : @xmath189 .",
    "we then repeatedly update elements of this array by the following procedure : ( 1 ) generate a random integer @xmath190 according to the degree probability distribution @xmath47 ; ( 2 ) draw @xmath191 elements @xmath192 from array @xmath186 uniformly at random , and then use these @xmath191 elements as input messages to eq .  (",
    "[ eq : bp ] ) to compute a new message @xmath193 ; ( 3 ) replace a randomly chosen element of array @xmath186 with this new message .",
    "the message array @xmath186 is expected to reach a steady state after it is updated a sufficient number of times ( e.g. , after each element of this array is updated @xmath194 times on average ) .",
    "we then keep updating the message array @xmath186 and at the same time compute the thermodynamic quantities @xmath181 , @xmath30 , and @xmath182 .",
    "for example , the free energy density @xmath181 is obtained by @xmath195 where @xmath196 is the average of the free energy node contribution @xmath155 over all the nodes , and @xmath197 is the average of the free energy link contribution @xmath156 over all the links .",
    "we generate many samples of @xmath155 and @xmath156 to compute their averages @xmath196 and @xmath197 .",
    "the procedure of obtaining a sample of @xmath155 is the same as that of updating an element of the message @xmath186 , the only difference being that the degree @xmath4 of node @xmath0 should be generated according to the distribution @xmath44 instead of @xmath47 .",
    "a sample of @xmath156 is obtained very easily through eq .",
    "( [ eq : fij ] ) by picking two messages @xmath193 and @xmath198 uniformly at random from the message array @xmath186 .    for er random networks with mean degree @xmath183",
    ", we compare in fig .",
    "[ fig : rsforer10 ] the results obtained by this rs population dynamics with the results obtained by bp iteration on a single network instance .",
    "the ensemble - averaged results are in perfect agreement with the bp iteration results ( provided the bp iteration is able to converge ) .",
    "the entropy density @xmath182 as a function of the mean occupation fraction @xmath30 can be obtained from these rs population dynamics results ( see for example fig .  [",
    "fig : rsforer10]d ) . in some random network systems ,",
    "the entropy density @xmath182 become negative if @xmath30 decreases below certain threshold value @xmath199 , indicating that there is no dominating set with relative size below @xmath199 .",
    "we therefore take the value @xmath199 as the ensemble - averaged mds relative size . for er networks of @xmath183",
    ", we obtain from fig .",
    "[ fig : rsforer10 ] that @xmath200 ( the corresponding value of @xmath170 is @xmath201 ) . in some other random network systems ( e.g. , er random networks with @xmath36 , before the core percolation transition ) ,",
    "the entropy density @xmath182 approaches a non - negative limiting value as @xmath30 approaches a limiting value @xmath199 from above .",
    "for these latter cases , we simply take @xmath199 as the ensemble - averaged mds relative size .",
    "the ensemble - averaged results on the mds sizes of er and rr networks are shown in fig .",
    "[ fig : dsminerrr ] . for er networks with mean node degree @xmath36 ( before the core - percolation transition ) , the rs mean",
    "field results coincide with the results predicted by the core percolation theory .",
    "when the random network contains an extensive core , the results obtained by the pure greedy algorithm and the glr - impact algorithm are higher than the rs mean field predictions , but the results obtained by the bpd algorithm of the next section are very close to the rs mean field predictions .",
    "for a given network @xmath10 , the rs mean field theory gives an estimate for the occupation probability @xmath202 of each node @xmath0 , see eq .",
    "( [ eq : qi ] ) .",
    "such information is exploited in a bpd algorithm to construct a near - optimal dominating set .",
    "( such an algorithm and its extensions have already been successfully applied to many other combinatorial optimization problems , e.g. , the @xmath203-satisfiability problem @xcite and the vertex - cover problem @xcite . ) at each round of the bpd process , unoccupied nodes with the highest estimated occupation probabilities are added to the dominating set , and the occupation probabilities for the remaining unoccupied nodes are then updated .",
    "if a node @xmath16 is unobserved ( it is empty and has no adjacent occupied node ) , the output message @xmath161 on the link @xmath204 between @xmath16 and node @xmath0 is updated according to eq .",
    "( [ eq : bp ] ) . on the other hand ,",
    "if node @xmath16 is empty but observed ( it has at least one adjacent occupied node ) , this node then presents no restriction to the occupation states of all its unoccupied neighbors .",
    "for such a node @xmath16 , the output message @xmath146 on the link @xmath204 is then updated according to the following equation : @xmath205 similar to eq .",
    "( [ eq : qji2 ] ) , the marginal probability distribution @xmath206 for an observed empty node @xmath0 is evaluated according to @xmath207 it is easy to verify from eq .",
    "( [ eq : qji2 ] ) that @xmath208 and @xmath209 .",
    "notice that if all the nodes in the set @xmath150 are observed , then we derive from eq .",
    "( [ eq : qji2 ] ) that @xmath210 .",
    "because of this property , we need only to consider the links between unobserved nodes and the links between unobserved and observed nodes .",
    "all the other links ( which are between observed nodes ) do not need to be considered in the bp iteration equations ( [ eq : bp ] ) and ( [ eq : qji2 ] ) .",
    "we implement the bpd algorithm as follows :    1 .",
    "input the network @xmath10 , set all the nodes to be empty and unobserved and set all the probability distributions @xmath146 to be the uniform distribution .",
    "set the re - weighting parameter @xmath170 to a sufficiently large value ( e.g. , @xmath122 ) .",
    "then perform the bp iteration a number @xmath211 of rounds ( e.g. , @xmath212 ) . after these @xmath211 iterations",
    "we compute the occupation probability @xmath213 of each node @xmath0 using eq .",
    "( [ eq : qi ] ) .",
    "2 .   then occupy a small fraction @xmath214 ( e.g. , @xmath215 ) of the unoccupied nodes that having the highest estimated occupation probabilities .",
    "3 .   then simplify network @xmath10 by first deleting all the links between observed nodes , and then deleting all the isolated observed nodes .",
    "if the resulting network @xmath10 still contains unobserved nodes , we perform bp iteration for a number of @xmath216 rounds ( e.g. , @xmath217 ) .",
    "the output message of an node @xmath0 is updated either according to eq .",
    "( [ eq : qi ] ) or according to eq .",
    "( [ eq : qiobs ] ) , depending on whether @xmath0 is unobserved or observed .",
    "we then repeat operations ( 1)(3 ) until all the nodes are observed .",
    "in addition , we may first carry out the glr process to simplify the network @xmath10 as far as possible before running the bpd process . for real - world networks with",
    "some nodes being highly connected , we find that such a glr simplifying step reduces the bpd running time considerably and also slightly reduces the size of the constructed dominating set .    the results of the bpd algorithm for random networks and for real - world networks are compared with the results obtained by the local heuristic algorithms in fig .  [",
    "fig : dsminerrr ] , fig .",
    "[ fig : dsminsfstatic ] , and table  [ tab : real ] . for er and rr random networks",
    ", the bpd algorithm considerably beats both the pure greedy algorithm and the glr - impact hybrid algorithm ; for very heterogeneous ( e.g. , scale - free ) networks , the bpd algorithm only slightly outperforms the glr - impact algorithm .",
    "in this work , we proposed two heuristic algorithms ( a glr - impact local algorithm and a bpd message - passing algorithm ) and presented a core percolation theory and a replica - symmetric mean field theory for solving the network dominating set problem algorithmically and theoretically .",
    "we found that the glr process may lead to a core percolation transition in the network ( see fig .",
    "[ fig : erglr ] and fig .",
    "[ fig : sfstaticglr ] ) .",
    "our numerical results shown in fig .  [ fig : dsminerrr ] , fig .",
    "[ fig : dsminsfstatic ] and table  [ tab : real ] suggested that the glr - impact algorithm and the bpd algorithm can construct near - optimal dominating sets for random networks and real - world networks .",
    "there are many theoretical issues remaining to be investigated .",
    "an easy extension of the core percolation theory is to consider glr with a subset of initially occupied nodes . by optimizing this initial subset ( e.g. , following the methods of @xcite )",
    ", we may reach an improved lower - bound to the mds size .",
    "core percolation on degree - correlated random networks @xcite and in the more general lattice glass problem @xcite are also very interesting .",
    "when the random network has an extensive core , we observed that the belief - propagation equation ( [ eq : bp ] ) fails to converge at large values of the re - weighting parameter @xmath170 ( see fig .",
    "[ fig : rsforer10 ] ) , indicating a spin glass phase transition .",
    "a systematic study of the spin glass phase will be carried out using the first - step replica - symmetry - breaking mean field theory @xcite , which may in addition offer an improved estimate on the ensemble - averaged mds size .",
    "the possible deep connections between core percolation and the complexity of the random mds problem will also be addressed by adapting the long - range frustration theory @xcite .",
    "the methods of this work can be readily extended to the mds problem of directed networks .",
    "our theoretical and algorithmic results on the directed mds problem will soon be reported in an accompanying paper @xcite .",
    "a more challenging problem is the connected dominating set problem @xcite which has the additional constraint that the nodes in the dominating set should induce a connected subnetwork .",
    "our present work may stimulate further theoretical studies on this hard problem .",
    "part of this work was done when h .-",
    "j.zhou was participating in the `` collective dynamics in information systems 2014 '' program of the kavli institute for theoretical physics china ( kitpc ) .",
    "zhou thanks chuang wang for a helpful discussion , and alfredo braunstein , yang - yu liu , federico ricci - tersenghi , and yi - fan sun for helpful comments on the manuscript ; j .- h .",
    "zhao and h .- j .",
    "zhou thank prof .",
    "zhong - can ou - yang for support ."
  ],
  "abstract_text": [
    "<S> the minimum dominating set ( mds ) problem has wide applications in network science and related fields . </S>",
    "<S> it aims at constructing a node set of smallest size such that any node of the network is either in this set or is adjacent to at least one node of this set . </S>",
    "<S> although this optimization problem is generally very difficult , we show it can be exactly solved by a generalized leaf - removal ( glr ) process if the network contains no core . </S>",
    "<S> we present a percolation theory to describe the glr process on random networks , and solve a spin glass model by mean field method to estimate the mds size . </S>",
    "<S> we also implement a message - passing algorithm and a local heuristic algorithm that combines glr with greedy node - removal to obtain near - optimal solutions for single random networks . </S>",
    "<S> our algorithms also perform well on real - world network instances . </S>"
  ]
}
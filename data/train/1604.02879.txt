{
  "article_text": [
    "a complete deterministic finite automaton is _ synchronizing _ if there exists a word whose action maps all states to a single one .",
    "such words are called _",
    "reset words_. synchronizing automata find applications in various fields such as robotics , coding theory , bioinformatics , and model - based testing . besides of these , synchronizing automata are of great theoretical interest , mainly because of the famous ern conjecture @xcite , which is one of the most long - standing open problems in automata theory .",
    "the conjecture states that each synchronizing @xmath0-state automaton has a reset word of length at most @xmath2 .",
    "the best known general upper bound on this length is @xmath3 for each @xmath4 .",
    "@xcite . surveys on the field can be found in  @xcite .",
    "major research directions in this field include proving the ern conjecture for special classes of automata or showing specific upper bounds for them .",
    "for example , the ern conjecture has been positively solved for the classes of monotonic automata @xcite , circular automata @xcite , eulerian automata @xcite , aperiodic automata @xcite , one - cluster automata with a prime - length cycle @xcite , automata respecting intervals of a directed graph @xcite ( under an inductive assumption ) , and automata with a letter of rank at most @xmath5{6n-6}$ ] @xcite . moreover , there are many improvements of upper bounds for important special classes , for example , generalized and weakly monotonic automata @xcite , one - cluster automata @xcite , quasi - eulerian and quasi - one - cluster automata @xcite , and decoders of finite prefix codes @xcite . on the other hand ,",
    "several lower bounds have been established by showing extremal series of automata for particular classes @xcite . still , for many classes the best known upper bound does not match the lower bound .",
    "in this paper we deal with the class of eulerian automata , which is one of the most remarkable classes due to its properties with regard to synchronization . in particular , the lengths of shortest words extending subsets are at most @xmath6 for each @xmath0-state eulerian automaton  @xcite , whereas they can be quadratic in general @xcite .",
    "an upper bound @xmath7 on the length of the shortest reset words for eulerian automata was obtained by kari  @xcite .",
    "several generalizations of eulerian automata were proposed : the class of pseudo - eulerian automata @xcite , for which the same bound @xmath7 was obtained , unambiguous eulerian automata @xcite for which the ern bound @xmath2 was obtained , and quasi - eulerian automata @xcite , for which a quadratic upper bound was obtained .",
    "the best lower bound so far was @xmath8 , found by gusev @xcite .",
    "a series whose shortest reset words seem to have length @xmath9 was found by martyugin ( unpublished ) , but no proof has been established . further discussion on the bounds for eulerian automata can be found in the survey  @xcite .    here we improve the lower bound by introducing an extremal series of eulerian automata over a quaternary alphabet with the shortest reset words of length @xmath10 . to prove that , we use a technique of _ backward tracing _ , which turns out to be very useful in analysis of extremal series of automata in general .",
    "we conjecture that the new lower bound is tight for the class of eulerian automata .",
    "our exhaustive search over small automata did not find any counterexample .",
    "the new series exhibits the extremal property that some of its subsets require extending words of length exactly @xmath6 .",
    "this matches the upper bound , which was used in  @xcite to obtain the best known upper bound @xmath7 on the length of shortest reset words .",
    "thus , possible improvements of the upper bound require a more subtle method .",
    "a _ deterministic finite automaton _ ( _",
    "dfa _ ) is a triple @xmath11 , where @xmath12 is a finite non - empty set of _ states _ , @xmath13 is a finite non - empty _ alphabet _ , and @xmath14 is a complete _ transition function_. we extend @xmath15 to @xmath16 and @xmath17 as usual .",
    "when @xmath18 is fixed , we write shortly @xmath19 and @xmath20 for @xmath21 and @xmath22 respectively .",
    "the _ preimage _ of @xmath23 by @xmath24 is defined as @xmath25 which is also denoted by @xmath26 . if @xmath27 is a singleton , we write @xmath28 .    a word @xmath29 is a _ reset word _ if @xmath30 .",
    "note that in this case @xmath31 and @xmath32 for some @xmath33 .",
    "a dfa is called _ synchronizing _ if it admits a reset word .",
    "the _ reset threshold _ of a synchronizing dfa @xmath18 is the length of the shortest reset words and is denoted by @xmath34 .    a word @xmath35 _ extends _ a subset @xmath36 if @xmath37 .",
    "in this case we say that @xmath38 is _",
    "@xmath35-extensible_.    a dfa @xmath18 is _ eulerian _ if the underlying digraph of @xmath18 is strongly connected and the in - degree equals the out - degree for each vertex of the underlying digraph .",
    "equivalently , at every vertex there must be exactly @xmath39 incoming edges .",
    "we say that a word @xmath29 is :    * _ permutational _ if @xmath40 , * _ involutory _ if @xmath41 for each @xmath42 , * _ unitary _ if @xmath43 holds for exactly one @xmath44 .    note that each involutory word is permutational . also , @xmath35 is unitary if and only if its action maps exactly one state to another one and fixes all the other states . for @xmath45 , we write @xmath46 if the action of @xmath24 is defined as @xmath47 and @xmath48 for each @xmath49 .    the reversal of a word @xmath35 is denoted by @xmath50 .",
    "[ pos equal to neg ] let @xmath11 be a dfa .",
    "let @xmath24 contain only involutory letters . then @xmath51 for each @xmath52 .    if @xmath53 , the claim is trivial .",
    "inductively , let @xmath54 for @xmath55 .",
    "we have @xmath56 by the inductive assumption , which is equal to @xmath57 since @xmath58 is involutory .",
    "there exist several methods of proving reset thresholds of particular series of automata . here",
    "we discuss one of them as a general approach , which we call _ backward tracing_.    let @xmath18 be a synchronizing dfa and let @xmath59 be a reset word for @xmath18 with @xmath60 .",
    "we say that @xmath59 is _ straight _ if @xmath61 for each @xmath62 with @xmath63 .",
    "the following is a simple observation ( cf .",
    "* theorem 1 ) ) :    [ prop : shortestisstraight ] in a synchronizing dfa each shortest reset word is straight .",
    "the observation above leads to a method of proving reset thresholds of particular dfa series by analyzing subsets that are preimages of a singleton under the action of suffixes of length @xmath64 of straight reset words .",
    "this works well if the number of such subsets is small in every step , i.e. , for each @xmath65 .",
    "note that in general it can grow exponentially .",
    "interestingly , all known series of most extremal automata , such as the ern automata having reset threshold @xmath2 @xcite , the twelve known _ slowly synchronizing series _ having only slightly smaller reset thresholds @xcite , and dfas with cycles of two different lengths @xcite , have the property that the number of possible subsets in each step is bounded by a constant .",
    "we call such series _ backward tractable_. it is worth mentioning that for such automata we can compute shortest reset words in polynomial time @xcite .    in this paper , we apply this method to a new series of eulerian automata , which is backward tractable as well , and whose construction is different from the other known extremal series ; in particular , the letters act in many short cycles instead of few large ones .    the new dfas use only permutational and unitary letters .",
    "this property ( which also implies an upper bound @xmath66 on the reset threshold @xcite ) allows us to strengthen the restriction on suffixes to be considered within the backward tracing :    with respect to a fixed dfa @xmath18 , a reset word @xmath67 with @xmath68 is _ greedy _ , if for each suffix @xmath69 of @xmath59 it holds that : if some @xmath55 extends @xmath70 , then @xmath71 is a suffix of @xmath59 for some @xmath72 that extends @xmath70 .",
    "[ lem : exists a shortest greedy ] if a synchronizing dfa @xmath18 has only permutational and unitary letters , then there exists a shortest reset word that is greedy .",
    "let @xmath73 , where @xmath74 contains permutational letters and @xmath75 contains unitary letters .",
    "suppose for a contradiction that there is no shortest reset word that is greedy .",
    "let @xmath59 be a shortest reset word of @xmath18 with the property that its shortest suffix @xmath69 violating the greediness is the longest possible .",
    "in other words , the shortest suffix @xmath71 of @xmath59 , @xmath72 , such that some @xmath55 extends @xmath70 but @xmath76 does nt , is the longest possible .    for each suffix @xmath77 of @xmath59 with @xmath78 ,",
    "the set @xmath79 is necessarily @xmath80-extensible . indeed , if @xmath81 and @xmath82 , then @xmath38 is clearly @xmath80-extensible . if @xmath83 or @xmath84 , then @xmath85 , which contradicts proposition  [ prop : shortestisstraight ] .",
    "since the inverse actions of the letters from @xmath74 preserve sizes of subsets , it follows that @xmath59 contains exactly @xmath86 occurrences of unitary letters .",
    "write @xmath87 and let @xmath88 .",
    "observe that @xmath89 is also a reset word for @xmath18 : @xmath90 is a ( possibly proper ) superset of @xmath70 ; hence , we still have @xmath91 .",
    "since @xmath89 contains @xmath92 occurrences of letters from @xmath93 , and letters from @xmath74 do not decrease the size of a subset , at least one occurrence of @xmath94 is not applied to an @xmath76-extensible subset .",
    "moreover , this occurrence lies within @xmath95 , because @xmath69 is the shortest suffix violating the greediness .",
    "let @xmath96 be the word obtained by removing that occurrence of @xmath76 .",
    "we have @xmath97 , @xmath98 , and the shortest suffix violating the greediness is longer than @xmath69 .",
    "this yields a contradiction with the choice of @xmath59 .",
    "fix an arbitrary @xmath99 . let @xmath100 and @xmath101 , where @xmath102 , @xmath103 .",
    "the action of @xmath104 and @xmath105 is defined by @xmath106 for @xmath107 , while the action of @xmath108 is defined by @xmath109 the automaton @xmath110 is illustrated in fig .",
    "[ fig : a_m ] .",
    "we are going to prove that @xmath111 throughout the proof we use usual operations and inequalities on integers .",
    "each use of modular arithmetic is described explicitly using the binary operator .",
    ", loops are omitted , @xmath112 [ fig : a_m ] ]    we use backward tracing to show that there is a unique optimal way to extend a singleton to @xmath12 .",
    "note that @xmath113 and @xmath114 are unitary , while @xmath104 and @xmath105 are involutory .",
    "the following notation will be very useful in the analysis of reset words for @xmath110 : + for @xmath115 we set :    @xmath116      for an odd @xmath117 , we define @xmath118 note that :    1 .",
    "@xmath119 , 2 .",
    "@xmath120 is a palindrome ( i.e. , @xmath121 ) .    by lemma  [ pos equal to neg ] , @xmath122 for each @xmath52 , and we will often interchange @xmath123 with @xmath120 .",
    "it follows that @xmath124 for every @xmath107 and @xmath120 is involutory .",
    "[ lem : expl tr ] let @xmath42 .",
    "it holds that :    1 .",
    "[ enu : kba ] @xmath125 for each @xmath126 , 2 .",
    "[ enu : tnj jk ] @xmath127 for each @xmath117 .",
    "the first claim follows trivially from the case of @xmath128 . in this case",
    "we have @xmath129 . for the second claim we observe @xmath130 , which equals @xmath131 .",
    "[ lem : cikcak list ] let @xmath132 .",
    "it holds that :    1 .",
    "[ enu : qjtnj]@xmath133 if @xmath134 is even , 2 .",
    "[ enu : rjtj]@xmath135 if @xmath134 is odd , 3 .",
    "[ enu : qtq]@xmath136 if @xmath134 is even , 4 .",
    "[ enu : rtr]@xmath137 if @xmath134 is odd .    for ( 1 ) and",
    "( 2 ) we use lemma  [ lem : expl tr]([enu : tnj jk ] ) with @xmath138 and @xmath139 respectively and then substitute @xmath140 : @xmath141 for ( 3 ) and ( 4 ) we use ( [ enu : qjtnj ] ) and ( [ enu : rjtj ] ) respectively and the fact that @xmath142 and @xmath143 are involutory .",
    "we have : @xmath144    let @xmath145 where @xmath146 in lemma  [ lem : analysis of w ] below , we show that @xmath35 extends @xmath147 to @xmath148 according to the following scheme : @xmath149 and thus the word @xmath150 is a reset word for @xmath151 .",
    "[ enu : po alfa je beta ] the word @xmath35 ends with @xmath104 .",
    "the other occurrences of @xmath104 in @xmath35 are directly followed by @xmath105 .",
    "a set @xmath52 is :    * [ enu : o2]@xmath113-extensible if and only if @xmath152 , * [ enu : o1]@xmath114-extensible if and only if @xmath153 .",
    "we say that a set @xmath52 is _",
    "@xmath154-extensible _ if it is @xmath113-extensible or @xmath114-extensible .",
    "[ lem : analysis of w ] let @xmath155 .",
    "it holds that :    1 .",
    "@xmath156 if @xmath134 is even , 2 .",
    "@xmath157 if @xmath134 is odd , 3 .",
    "[ enu : w je reset]@xmath158 is a reset word of @xmath110 .",
    "we prove the first two claims by induction .",
    "for @xmath159 , using lemma  [ lem : cikcak list]([enu : qjtnj ] ) we have : @xmath160 next , take @xmath161 and suppose that both the claims hold for @xmath162 .",
    "we use the induction hypothesis and , depending on the parity of @xmath134 , lemma  [ lem : cikcak list]([enu : qjtnj ] ) or lemma [ lem : cikcak list]([enu : rjtj ] ) respectively . for an even @xmath134",
    "we have : @xmath163 and for an odd @xmath134 we have : @xmath164 the claim  ( [ enu : w je reset ] ) follows from @xmath165 , according to the first claim with @xmath166 .",
    "it remains to calculate the length of @xmath35 .",
    "the length of @xmath35 is @xmath167 .",
    "the sum of @xmath168 with even @xmath65 is @xmath169 and the sum of @xmath168 with odd @xmath65 is @xmath170    together with the @xmath171 occurrences of @xmath105 , we have @xmath172 . thus , we have that @xmath150 is a reset word for @xmath151 with length @xmath173 .      finally , let us show that no reset word for @xmath174 is shorter than @xmath150 .",
    "[ lem : factors o0b , o1b ] if @xmath175 is greedy and straight reset word with @xmath176 , then @xmath69 does not contain @xmath177 nor @xmath178 as a factor .",
    "suppose for a contradiction that @xmath179 for @xmath180 .",
    "since @xmath69 is greedy , @xmath181 is not @xmath154-extensible , so it contains both @xmath182 and @xmath183 or neither of them .",
    "since @xmath105 switches these states , @xmath184 has the same property .",
    "then @xmath185 and so @xmath69 is not straight .    [",
    "lem : w greedy ] let @xmath155 .",
    "it holds that :    1 .",
    "[ enu : qjth ] @xmath186 for @xmath187 if @xmath134 is even , 2 .",
    "[ enu : rjth ] @xmath188 _ for @xmath189 if @xmath134 is odd .",
    "_    as @xmath190 is involutory , it is enough to show for @xmath191 that @xmath192 or @xmath193 respectively .    as for  ( [ enu : qjth ] ) , by lemma  [ lem : expl tr]([enu : tnj jk ] ) we have @xmath194 , thus @xmath195 . as for ( [ enu : rjth ] ) , denoting @xmath196 , we have @xmath197 .",
    "then @xmath198 , and since @xmath199 and @xmath200 , we get @xmath201 , which implies @xmath202 and @xmath203 .",
    "[ enu : no idle omega ] for each suffix @xmath204 of @xmath35 with @xmath205 and @xmath206 it holds that @xmath58 extends @xmath207 .    for every suffix @xmath208 we have @xmath209 for some even @xmath134 , and for every suffix @xmath210 we have @xmath211 for some odd @xmath134 .",
    "[ lem : w0 je greedy ] the word @xmath158 is greedy .",
    "let @xmath59 be the shortest suffix of @xmath158 that violates the greediness , i.e. , suppose that @xmath212 is @xmath80-extensible for @xmath213 , but @xmath214 is not a suffix of @xmath158 .",
    "this simplification works because @xmath212 can not be both @xmath215-extensible and @xmath216-extensible .",
    "fix @xmath217 such that @xmath204 is a suffix of @xmath35 .",
    "let @xmath218 with @xmath72 .    if @xmath219 then @xmath220 is not @xmath154-extensible . if @xmath221 , then @xmath220 is @xmath58-extensible due to lemma  [ enu : no idle omega ] .",
    "thus , necessarily @xmath222 .",
    "assume @xmath223 .",
    "if @xmath224 is @xmath154-extensible , then @xmath225 is @xmath154-extensible as well due to @xmath226 and @xmath227 , implying that @xmath228 is a shorter suffix violating the greediness .",
    "assume @xmath229 .",
    "because @xmath35 does not contain the factor @xmath230 , it follows that @xmath231 . according to  ( [ eq : def of w ] ) , i.e. , the definition of @xmath35 , and the fact that @xmath232 , the factor @xmath233 occurs only within the factors @xmath234 .",
    "thus , @xmath235 where @xmath236 is a suffix of @xmath237 .",
    "we apply lemma [ lem : analysis of w ] :    1 .",
    "if @xmath134 is odd , we get @xmath238 , while @xmath239 and @xmath240 .",
    "then @xmath241 where @xmath242 .",
    "we see that @xmath243 . if @xmath244 , then @xmath245 , so @xmath246 . otherwise we apply lemma  [ lem : w greedy]([enu : rjth ] ) to get @xmath247 , which contradicts that @xmath224 is @xmath154-extensible .",
    "if @xmath134 is even , we get @xmath248 , while @xmath249 and @xmath250 .",
    "then @xmath251 where @xmath242 .",
    "we see that @xmath252 . if @xmath253 , then @xmath254 , so @xmath255 .",
    "otherwise we apply lemma  [ lem : w greedy]([enu : qjth ] ) to get @xmath256 , which contradicts that @xmath224 is @xmath154-extensible .",
    "[ lem : exists rw ending with ] there exists a shortest reset word for @xmath110 that ends with @xmath113 and is greedy .",
    "lemma  [ lem : exists a shortest greedy ] gives a shortest reset word that is greedy .",
    "clearly , a shortest reset word ends with a non - permutational letter , i.e. , @xmath215 or @xmath216 . in the latter case , replacing the ending @xmath216 with @xmath215 yields a reset word of the same length and preserves greediness .",
    "je shortest ] the word @xmath158 is a shortest reset word for @xmath151 .    using lemma  [ lem :",
    "exists a shortest greedy ] , let @xmath257 be a greedy shortest reset word of @xmath110 . if @xmath258 , we are done , so let @xmath259 and let @xmath260 be the longest common suffix of @xmath261 and @xmath35 .",
    "if @xmath262 , then @xmath261 is a proper suffix of @xmath35 and so it contains at most @xmath171 letters from @xmath263 , which contradicts that @xmath264 is a reset word .",
    "so we can write @xmath265 and @xmath266 , where @xmath267 and @xmath268 . we will show that each of the following cases according to @xmath58 and @xmath269 leads to a contradiction :    1 .",
    "suppose that @xmath270 .",
    "then lemma  [ enu : no idle omega ] implies that @xmath271 is @xmath58-extensible , which contradicts @xmath268 and the greediness of @xmath257 .",
    "suppose that @xmath272 . according to proposition  [ prop : shortestisstraight ] ,",
    "@xmath257 is straight , which implies that @xmath271 is @xmath269-extensible , which contradicts @xmath268 and lemma  [ lem : w0 je greedy ] , i.e , the greediness of @xmath158 .",
    "3 .   suppose that @xmath273 and @xmath274 . according to remark  [ enu :",
    "po alfa je beta ] , @xmath275 or @xmath260 starts with @xmath105 .",
    "the case of @xmath275 contradicts the straightness of @xmath257 because each @xmath276 satisfies @xmath277 .",
    "the other case implies @xmath278 occurring in @xmath261 and thus also contradicts the straightness of @xmath257 .",
    "4 .   suppose that @xmath231 and @xmath279 . then @xmath280 .",
    "if @xmath260 starts with @xmath104 or @xmath105 , then either @xmath261 or @xmath35 contains the factor @xmath230 or @xmath278 , which contradicts the straightness of @xmath257 or the definition of @xmath35 .",
    "hence , @xmath281 starts with @xmath113 or @xmath114 . since this starts a factor @xmath237 for some @xmath282 , we can write @xmath283 we consider the following two subcases : 1",
    ".   suppose that @xmath260 starts with @xmath114 .",
    "note that @xmath284 is even and @xmath285 by lemma  [ lem : analysis of w ] .",
    "let @xmath286 be the longest common suffix of @xmath287 and @xmath142 .",
    "clearly , @xmath288 . if @xmath289 , then from lemma  [ lem : cikcak list]([enu : qtq ] ) we have @xmath136 , which contradicts the straightness of @xmath257 .",
    "if @xmath290 , then @xmath261 starts with @xmath104 or @xmath105 , which contradicts that @xmath257 is a shortest reset word .",
    "it follows that we can write @xmath291 for @xmath292 .",
    "moreover , as @xmath261 does not contain the factors @xmath230 and @xmath278 , we have @xmath293 and @xmath294 , so @xmath295 . due to lemma  [ lem : factors o0b , o1b ] , @xmath286 can not start with @xmath105 , and from the construction of @xmath142 we have @xmath296 for @xmath297 .",
    "it holds that @xmath298 .",
    "lemma  [ lem : w greedy]([enu : qjth ] ) provides that @xmath299 .",
    "also , @xmath300 .",
    "together , @xmath301 , and thus this set is not @xmath154-extensible , which contradicts @xmath295 and the straightness of @xmath257 .",
    "2 .   suppose that @xmath260 starts with @xmath113 .",
    "note that @xmath302 is odd and @xmath303 by lemma  [ lem : analysis of w ] .",
    "let @xmath286 be the longest common suffix of @xmath287 and @xmath143 .",
    "clearly , @xmath288 . if @xmath304 , then from lemma  [ lem : cikcak list]([enu : rtr ] ) we have @xmath137 , which contradicts the straightness of @xmath257 .",
    "if @xmath290 , then @xmath261 starts with @xmath104 or @xmath105 , which contradicts that @xmath257 is a shortest reset word .",
    "it follows that we can write @xmath291 for @xmath292 .",
    "moreover , as @xmath261 does not contain the factors @xmath230 and @xmath278 , we have @xmath293 and @xmath294 , so @xmath295 .",
    "due to lemma  [ lem : factors o0b , o1b ] , @xmath286 can not start with @xmath105 , and from construction of @xmath143 we have @xmath296 for @xmath305 .",
    "we have @xmath306 .",
    "lemma  [ lem : w greedy]([enu : rjth ] ) gives @xmath307 .",
    "thus , @xmath308 , and thus this set is not @xmath154-extensible , which contradicts @xmath295 and the straightness of @xmath257 .",
    "theorem  [ thm : w",
    "je shortest ] implies that @xmath309 .      the general upper bound @xmath310 for reset thresholds of synchronizing eulerian dfas comes from the fact that any proper and non - empty subset of @xmath12 is extended by a word of length at most @xmath6 @xcite , while in the general case the minimum length of extending words can be quadratic ( this was shown recently ",
    "see @xcite ) . in view of this",
    ", our series shows that this bound is tight for infinitely many @xmath0 , and so the upper bound for reset thresholds for this class can not be improved only by reducing this particular bound .",
    "the following remark follows from the analysis in the proof of theorem  [ thm : w je shortest ] :    the shortest extending word of @xmath311 in @xmath151 is @xmath312 of length @xmath313 .",
    "using the algorithm from  @xcite , we have performed an exhaustive search over small synchronizing eulerian dfas .",
    "we verified the bound @xmath1 for the case of binary dfas with @xmath314 states , automata with four letters and @xmath315 states , dfas with eight letters and @xmath316 states , and all dfas with @xmath317 states .",
    "for @xmath318 the bound @xmath1 is reachable . for @xmath319 , up to isomorphism , we identified 2 ternary examples and 12 quaternary examples which also meet the bound .",
    "it seems that our series @xmath151 is not unique meeting the bound , as some of the quaternary examples could be generalizable to series with the same reset thresholds . also , for the binary case we found that for @xmath320 the bound @xmath321 is met uniquely by dfas from the martyugin s series , but it is not reachable for @xmath322 .",
    "pin , j.e .",
    ": on two combinatorial problems arising from automata theory . in",
    ": proceedings of the international colloquium on graph theory and combinatorics .",
    "north - holland mathematics studies , vol .",
    "75 , pp . 535548 ( 1983 )"
  ],
  "abstract_text": [
    "<S> we present an infinite series of @xmath0-state eulerian automata whose reset words have length at least @xmath1 . </S>",
    "<S> this improves the current lower bound on the length of shortest reset words in eulerian automata . </S>",
    "<S> we conjecture that @xmath1 also forms an upper bound for this class and we experimentally verify it for small automata by an exhaustive computation .    * keywords : * eulerian automaton , reset threshold , reset word , synchronizing automaton </S>"
  ]
}
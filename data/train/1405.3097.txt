{
  "article_text": [
    "discrepancy theory is a branch of mathematics dealing with irregularities of distributions of points in some space in combinatorial , measure - theoretic and geometric settings  @xcite .",
    "the paradigmatic combinatorial discrepancy theory problem can be described in terms of a hypergraph @xmath15 , that is , a set @xmath16 and a family of its subsets @xmath17 .",
    "consider a colouring @xmath18 of the elements of @xmath16 in _ blue _ @xmath19 and _ red _ ( @xmath20 ) colours .",
    "then one may ask whether there exists a colouring of the elements of @xmath21 such that colours are distributed uniformly in every element of @xmath22 or a discrepancy of colours is always inevitable .",
    "formally , the discrepancy ( deviation from a uniform distribution ) of a hypergraph @xmath23 is defined as @xmath24 .",
    "discrepancy theory has found applications in computational complexity  @xcite , complexity of communication  @xcite and differential privacy  @xcite .",
    "one of the oldest problems of discrepancy theory is the discrepancy of hypergraphs over sets of natural numbers with the subsets ( hyperedges ) forming arithmetical progressions over these sets  @xcite .",
    "theorem  @xcite , one of the main results in the area , states that for the hypergraph formed by the arithmetic progressions in @xmath25 , that is @xmath26 , where @xmath27 and elements of @xmath28 being of the form @xmath29 for arbitrary @xmath30 , the discrepancy grows at least as @xmath31 .",
    "surprisingly , for the more restricted case of _ homogeneous _ arithmetic progressions of the form @xmath32 , the question of the discrepancy bounds is open for more than eighty years . in 1930s",
    "paul erds conjectured  @xcite that discrepancy is unbounded .",
    "independently the same conjecture has been raised by @xcite . proving or disproving",
    "this conjecture became one of the major open problems in combinatorial number theory and discrepancy theory .",
    "it has been referred to as the _ erds discrepancy problem _ ( edp )  @xcite .",
    "the expected value of the discrepancy of random @xmath1 sequences of length @xmath33 grows as @xmath34 and the explicit constructions of a sequence with slowly growing discrepancy at the rate of @xmath35 have been demonstrated  @xcite . by considering cases",
    ", one can see that any @xmath36 sequence containing @xmath37 or more elements has discrepancy at least @xmath10 ; that is , erds s conjecture holds for the particular case @xmath7 ( also implied by a stronger result of mathias  ) . until recently the status of the conjecture remained unknown for all other values of @xmath0 .",
    "although widely believed not to be the case , there was still a possibility that an infinite sequence of discrepancy 2 existed .    the conjecture whether the discrepancy of an arbitrary @xmath36 sequence is unbounded is equivalent to the question whether the discrepancy of a completely multiplicative @xmath36 sequence is unbounded , where a sequence is completely multiplicative if @xmath38 for any @xmath39  @xcite . for completely multiplicative sequences",
    "the choices of how the sequence can be constructed are severely limited as the entire sequence is defined by the values of @xmath40 for prime @xmath41 .",
    "the longest completely multiplicative sequence of discrepancy @xmath10 has length @xmath42  @xcite . for discrepancy @xmath14",
    "the bound was not known .",
    "the edp has attracted renewed interest in 2009 - 2010 as it became a topic of the fifth polymath project   a widely publicised endeavour in collective math initiated by t.  gowers  .",
    "as part of this activity an attempt has been made to attack the problem using computers ( see discussion in @xcite ) .",
    "a purposely written computer program had successfully found @xmath36 sequences of length @xmath9 and discrepancy @xmath10 ; however , no further progress has been made leading to a claim `` given how long a finite sequence can be , it seems unlikely that we could answer this question just by a clever search of all possibilities on a computer ''  @xcite .",
    "the status of the erds discrepancy conjecture for @xmath8 has been settled by the authors of this article @xcite , @xcite by reduction to sat .",
    "the method is based on establishing the correspondence between @xmath36 sequences that violate a given discrepancy bound and words accepted by of a finite automaton .",
    "traces of this automaton are represented then by a propositional formula and state of the art sat solvers are used to prove that the longest @xmath36 sequence of discrepancy @xmath10 contains @xmath11 elements .",
    "a @xmath43 long @xmath36 sequence of discrepancy @xmath14 was also constructed .",
    "this article is a revised and extended version of  @xcite .",
    "we use a different smaller sat encoding of the erds discrepancy problem , which is based on the sequential counter encoding of the _ at most _ cardinality constraints .",
    "the impact of the new encoding is twofold .",
    "firstly , it allows us to significantly reduce the size of the machine - generated proof of the fact that any sequence longer than @xmath11 has discrepancy at least @xmath14 .",
    "secondly , by combining the new encoding with additional restrictions that the sequence is multiplicative , or completely multiplicative , we improve significantly the lower bound on the length of sequences of discrepancy @xmath14 .",
    "we prove the surprising result that @xmath13 , the length of the longest completely multiplicative sequence of discrepancy @xmath14 , is also the maximal length of a multiplicative sequence of discrepancy @xmath14 , which is not the case for @xmath7 and @xmath8 .",
    "the article also contains detailed argumentation , examples and complete proofs .",
    "the article is organised as follows . in section  [ sec : preliminaries ] we introduce the main terms and definition . in section  [ sec :",
    "encoding ] we describe the new sat encoding of the erds discrepancy problem . results and conclusions are discussed in sections  [ sec : experiments ] and  [ sec : conclusion ] respectively . to improve readability a number of technical proofs",
    "have been deferred to an appendix .",
    "we divide this section into three parts : main definitions for the erds discrepancy problem , some background and definitions for sat solving , and sequential counter - based sat encoding of cardinality constraints .    since number @xmath44 is used both as an element of @xmath36 sequences and as the logical value _ true _ , to avoid confusion , in what follows we write @xmath44 to refer to the logical value _ true _ and @xmath45 to refer to elements of @xmath36 sequences .",
    "we also use the following naming convention : we write @xmath46 for @xmath36 sequences , @xmath47 for sequences of propositions , and @xmath48 for @xmath49 boolean sequences .",
    "a @xmath36 sequence of length @xmath33 is a function @xmath51 .",
    "an infinite @xmath36 sequence is a function @xmath52 , where @xmath53 is the set of positive natural numbers .",
    "we write @xmath54 to denote a finite @xmath36 sequence of length @xmath33 , and @xmath2 to denote an infinite sequence .",
    "we refer to the @xmath41-th element of a sequence @xmath55 , that is the value of @xmath56 , as @xmath40 .",
    "a ( finite or infinite ) @xmath36 sequence @xmath55 is _ completely multiplicative _",
    "@xcite if @xmath57 the sequence is _ multiplicative _ if ( [ eq : multdef1 ] ) is only required for coprime @xmath58 and @xmath33 .",
    "it is easy to see that a sequence @xmath55 is completely multiplicative if , and only if , @xmath59 and for the canonical representation @xmath60 , where @xmath61 are primes and @xmath62 , we have @xmath63 .",
    "this observation leads to a more computationally friendly definition of completely multiplicative sequences : @xmath55 is completely multiplicative if , and only if , @xmath64    the erds discrepancy problem can be naturally described in terms of @xmath36 sequences ( and this is how erds himself introduced it  ) .",
    "erds s conjecture states that for any @xmath65 in any infinite @xmath1 sequence @xmath2 there exists a subsequence @xmath66 , for some positive integers @xmath4 and @xmath5 , such that @xmath67 .",
    "the general definition of discrepancy given above can be specialised in this case as follows .",
    "the discrepancy of a finite @xmath1 sequence @xmath68 of length @xmath33 can be defined as @xmath69 . for an infinite sequence @xmath2",
    "its discrepancy is the supremum of discrepancies of all its initial finite fragments .",
    "[ ex : edp1 ] it is easy to see why any @xmath36 sequence containing @xmath37 elements has discrepancy at least @xmath10 . for the proof of contradiction ,",
    "suppose that the discrepancy of some @xmath36 sequence @xmath70 is @xmath44 .",
    "assume that @xmath71 is @xmath45 .",
    "we write @xmath72 to track progress in this example , that is , we put specific values @xmath45 or @xmath20 into positions @xmath73 , to indicate decisions on @xmath40 which have been taken so far , and mark positions @xmath40 , for which no decision has been made by an underscore .",
    "notice that @xmath74 must be @xmath20 for otherwise @xmath75 .",
    "so , we progress to @xmath76 then the @xmath77th element of the sequence must be @xmath45 for otherwise for @xmath78 the sum @xmath79 .",
    "so we progress to @xmath80 then the @xmath14rd element of the sequence must be @xmath20 for otherwise @xmath81 and so we come to @xmath82 repeating the reasoning above for @xmath83 and @xmath84 followed by @xmath85 , for @xmath86 and @xmath87 followed by @xmath88 , for @xmath85 and @xmath89 followed by @xmath90 and finally for @xmath84 and @xmath91 followed by @xmath92 we progress to @xmath93 but then for @xmath94 we have @xmath95 .",
    "so we derive a contradiction",
    ". it can be checked in a similar way that the other possibility of @xmath71 being @xmath20 also leads to a contradiction .",
    "the first eleven elements of the sequence ( [ eq : example1 ] ) form a discrepancy @xmath44 sequence .",
    "it is multiplicative but not completely multiplicative as @xmath90 is @xmath20 .",
    "reasoning similar to the one above shows that there exists a unique longest completely multiplicative @xmath36 sequence of discrepancy @xmath44 which has nine elements : @xmath96      we assume standard definitions for propositional logic ( see , for example , @xcite ) .",
    "propositional formulae are defined over boolean constants _ true _ and _ false _ , denoted by @xmath44 and @xmath97 , respectively , and the set of boolean variables ( or propositions ) @xmath98 as follows : boolean constants @xmath97 and @xmath44 , as well as the elements of @xmath98 , are formulae ; if @xmath99 and @xmath100 are formulae then so are @xmath101 ( conjunction ) , @xmath102 ( disjunction ) , @xmath103 ( implication ) , @xmath104 ( equivalence ) and @xmath105 ( negation ) .",
    "we typically use letters @xmath106 , @xmath107 and @xmath108 to denote propositions and capital greek letters @xmath99 and @xmath100 to denote propositional formulae .",
    "whenever necessary , subscripts and superscripts are used .",
    "we use @xmath109 to denote the set of all propositions occurring in the formula @xmath99 .",
    "every propositional formula can be reduced to conjunctive normal form .",
    "propositions and negations of propositions are called _",
    "literals_. when the negation is applied to a literal , double negations are implicitly removed , that is , if @xmath110 is @xmath111 then @xmath112 is @xmath106 .",
    "a disjunction of literals is called a _ clause_. a clause containing exactly",
    "one literal is called a unit clause . a conjunction of clauses",
    "is called a propositional formula in _ conjunctive normal form _ , a cnf formula for short .",
    "a clause can be represented by the set of its literals and the empty clause correspond to @xmath97 ( _ false _ ) .",
    "a cnf formula can be represented by the set its clauses .",
    "these representations are used interchangeably .",
    "we typically use meaningful terms typeset in sans serif font , for example @xmath113 or @xmath114 , to highlight the fact that a propositional formula is a cnf formula of interest .    for a propositional formula @xmath99 , we write @xmath115 to indicate that @xmath116",
    ". propositions @xmath47 are designated as ` input ' propositions in this case , and the intended meaning is that formula @xmath99 encodes some property of @xmath47 . then the expression @xmath117 denotes the result of simultaneous replacement of every occurrence of @xmath118 in @xmath99 with @xmath119 , for @xmath120 .",
    "the semantics of propositional formulae is given by interpretations ( also termed assignments ) .",
    "an interpretation @xmath121 is a mapping @xmath122 extended to literals , clauses , cnf formulae and propositional formulae in general in the usual way . for an assignment @xmath121 and a formula @xmath99",
    "we say that @xmath121 satisfies @xmath99 ( or @xmath121 is a model of @xmath99 ) if @xmath123 .",
    "a formula @xmath99 is satisfiable if there exists an assignment that satisfies it , and unsatisfiable otherwise .    despite the non - tractability of the satisfiability problem ,",
    "the tremendous progress in recent years made it possible to solve many interesting hard problems by first expressing them as a propositional formula and then using a sat solver for obtaining a solution  @xcite .",
    "in addition to returning a satisfying assignment , if the input formula is satisfiable , some sat solvers are also capable to return a proof ( or certificate ) of unsatisfiability .",
    "reverse unit propagation ( rup ) proofs constitute a compact representation of the resolution refutation of the given formula  @xcite in the following sense .",
    "_ unit propagation _ is a cnf formula transformation technique , which simplifies the formula by fixing the values of propositions occurring to its unit clauses to satisfy these clauses .",
    "that is , if the unit clause @xmath124 occurs in the cnf formula then all occurrences of @xmath106 are replaced by @xmath44 and if the unit clause @xmath125 occurs in the cnf formula , all occurrences of @xmath106 are replaced by @xmath97 .",
    "then the cnf formula is simplified in the obvious way .",
    "a clause @xmath126 is a rup inference from the input cnf formula @xmath100 if adding the unit clauses @xmath127 to @xmath100 makes the whole formula refutable by unit propagation .",
    "a rup unsatisfiability certificate is the sequence of clauses @xmath128 such that for every @xmath129 the clause @xmath130 is a rup inference from @xmath131 and @xmath132 is the empty clause .",
    "every unsatisfiable cnf formula has a rup unsatisfiability certificate  @xcite .",
    "delete reverse unit propagation ( drup ) proofs extend rup proofs by including extra information about the proof search process , namely clauses that have been discarded by the solver .",
    "eliminating this extra information from a drup proof converts it to a valid rup proof .",
    "drup proofs are somewhat longer but they are significantly faster to verify than a rup proof  @xcite .      cardinality constraints  @xcite are expressions that impose restrictions on interpretations by specifying numerical bounds on the number of propositions , from a fixed set of propositions , that can be assigned value @xmath44 .",
    "the _ at most @xmath133 _ constraint over the set of propositions @xmath134 , written as @xmath135 , holds for an interpretation @xmath121 if , and only if , at most @xmath133 propositions among @xmath47 are true under @xmath121 .",
    "a sat encoding for cardinality constraints of the form @xmath136 based on a sequential counter circuit has been suggested by sinz  . in this encoding , auxiliary propositions",
    "@xmath137 are introduced to represent a unary counter storing the partial sums of prefixes of @xmath47 so that whenever @xmath138 , for some @xmath139 , we have @xmath140 .",
    "we slightly simplify the presentation of  @xcite as follows .",
    "let formula @xmath141 be the conjunction of @xmath142 recall that we write @xmath141 to highlight the fact that @xmath47 are designated ` input ' propositions ; the set of all propositions of @xmath141 is @xmath143 .",
    "notice that instead of including formulae ( [ eq : sinz_card_2 ] ) and ( [ eq : sinz_card_3 ] ) explicitly in the encoding , one can directly modify ( [ eq : sinz_card_1 ] ) by replacing all occurrences of @xmath137 , for @xmath144 , with @xmath97 ( the truth value _ false _ ) and all occurrences of @xmath137 , for @xmath145 and all @xmath146 , with @xmath44 ( the truth value _ true _ ) .",
    "then , for example , for @xmath147 formula ( [ eq : sinz_card_1 ] ) simplifies to @xmath148 .",
    "we write ( [ eq : sinz_card_2 ] ) and ( [ eq : sinz_card_3 ] ) explicitly for the exposition purposes .",
    "the proof of the following statement can be extracted from  @xcite .",
    "it is based on the observation that the sum of the first @xmath149 elements of the @xmath49 sequence @xmath47 exceeds @xmath4 if , and only if , either the sum of the first @xmath150 elements already exceeds @xmath4 , or the sum of the first @xmath150 elements is @xmath4 and the @xmath149-th element of the sequence is @xmath44 .",
    "we give the formal proof in an appendix for completeness of the presentation .",
    "[ prop : sinz ] let @xmath141 be as defined above",
    ". then    1 .   for any assignment @xmath151",
    "such that @xmath121 satisfies @xmath141 , any @xmath152 and @xmath153 we have @xmath154 2 .   for any @xmath49-sequence @xmath155",
    "there exists an assignment @xmath156 such that @xmath157 , for @xmath120 ; @xmath121 satisfies @xmath141 ; and for any @xmath158 and @xmath139 if @xmath159 then @xmath160 , for @xmath161 .",
    "it follows from proposition  [ prop : sinz ] that the formula @xmath162 enforces the cardinality constraint @xmath135 .",
    "formula ( [ eq : sinz_card_1 ] ) can be equivalently rewritten into clausal form : @xmath163 where @xmath153 , @xmath152 .",
    "notice that the original encoding in  @xcite only contains clauses ( [ eq : equiv_clause_3 ] ) and ( [ eq : equiv_clause_4 ] ) due to a polarity - based optimisation based on tseitin s   renaming techniques .",
    "one can see that by unit propagation of clauses ( [ eq : sinz_card_2 ] ) , ( [ eq : sinz_card_3 ] ) and @xmath164 into ( [ eq : equiv_clause_3 ] ) and ( [ eq : equiv_clause_4 ] ) we obtain exactly the set of clauses used in  @xcite , which consists of @xmath165 clauses and requires @xmath165 auxiliary propositions .",
    "this optimisation leads to a relaxation in item  ( _ i _ ) of proposition  [ prop : sinz ] : suppose that an assignment @xmath121 , which satisfies ( [ eq : sinz_card_2 ] ) , ( [ eq : sinz_card_3 ] ) , ( [ eq : equiv_clause_3 ] ) and ( [ eq : equiv_clause_4 ] ) , is such that @xmath166 .",
    "then the value of @xmath167 under @xmath121 can still be true , as long as @xmath168 , while not violating the cardinality constraint @xmath169 .    for our purposes we require an unoptimised version of the encoding with a tighter restriction on the values of @xmath137 stated in proposition  [ prop : sinz ] .",
    "we say that a @xmath36 sequence @xmath54 is _ @xmath0-bounded _ , for some @xmath170 , if @xmath171 , for all @xmath172 . we extend the notion of @xmath0-boundedness to boolean @xmath49 sequences using the relation between @xmath36 sequences @xmath173 and boolean @xmath174-sequences @xmath47 defined as follows : @xmath175 ( in other words , @xmath45 is encoded by the boolean value _ true _ , and @xmath20 is encoded by the boolean value _ false _ ) .",
    "then a @xmath49 sequence @xmath48 is @xmath0-bounded if for every @xmath176 the disbalance between the number of @xmath44s in @xmath177 and the number of @xmath97s in @xmath177 is at most @xmath0 .",
    "we build our sat encoding of the erds discrepancy problem on the sequential counter - based encoding of cardinality constraints described in section  [ sec : sinz_card ] .",
    "we illustrate our approach by the following consideration . by proposition  [ prop : sinz ] , an arbitrary assignment of @xmath49 values to propositions @xmath178 can be uniquely extended to a model of @xmath141 .",
    "we denote this model as @xmath121 .",
    "suppose that the value of some @xmath137 under @xmath121 is false .",
    "then , by proposition  [ prop : sinz ] , the sequence @xmath179 contains at most @xmath180 occurrences of @xmath44 and so it contains at least @xmath181 occurrences of @xmath97 .",
    "therefore , the disbalance between the number of occurrences of @xmath97 and the number of occurrences of @xmath44 is at least @xmath182 . if @xmath183 then the sequence @xmath179 is not @xmath0-bounded",
    "thus , in our encoding of @xmath0-bounded sequences we need to exclude such a possibility .",
    "this can be achieved by conjoining formula @xmath141 with @xmath184    similarly , if the value of @xmath137 is true , for some @xmath185 , then the number of @xmath44s exceeds the number of @xmath97s by more than @xmath0 , so these possibilities should also be excluded by @xmath186    to summarise , let propositional formula @xmath187 be the conjunction of @xmath141 , with ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) . notice that , as in the case of @xmath141 , we write ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) explicitly for the ease of explanation .",
    "the proof of the following theorem can be found in appendix  [ sec : proofs ] .",
    "[ th : cbounded ] for any assignment @xmath188 the following holds : there exists an extension of @xmath121 to @xmath189 that is a model of @xmath187 if , and only if , the sequence @xmath190 is @xmath0-bounded .    as ( [ eq : sinz_card_1 ] )",
    "is logically equivalent to the set of clauses ( [ eq : equiv_clause_1])([eq : equiv_clause_4 ] ) , formula @xmath187 is logically equivalent to the set of clauses @xmath22 consisting of ( [ eq : equiv_clause_1])([eq : equiv_clause_4 ] ) , ( [ eq : sinz_card_2 ] ) , ( [ eq : sinz_card_3 ] ) , ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) .",
    "let @xmath191 be the result of applying unit propagation to @xmath22 in an exhaustive manner .",
    "one can see that the set @xmath191 contains less than @xmath192 auxiliary propositions and less than @xmath193 clauses .",
    "we construct @xmath194 , a clausal representation of the statement that the sequence @xmath195 is @xmath10-bounded .",
    "we also demonstrate how clauses ( [ eq : sinz_card_2 ] ) , ( [ eq : sinz_card_3 ] ) , ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) are unit propagated into clauses ( [ eq : equiv_clause_1])([eq : equiv_clause_4 ] ) .",
    "notice that for @xmath196 every instance of clause ( [ eq : equiv_clause_1 ] ) contains literal @xmath197 , the only literal of the unit clause ( [ eq : sinz_card_3 ] ) .",
    "thus , every instance of clause ( [ eq : equiv_clause_1 ] ) for @xmath196 is redundant .    for @xmath198 and @xmath199 , clause ( [ eq : equiv_clause_1 ] )",
    "contains @xmath200 , the only literal of the unit clause ( [ eq : sinz_card_2 ] ) , so for @xmath198 and @xmath199 , the instance of clause ( [ eq : equiv_clause_1 ] ) is also redundant .    for @xmath198 and @xmath201 , an instance of the unit clause ( [ eq : sinz_card_2 ] ) , namely @xmath202 , unit propagates into ( [ eq : equiv_clause_1 ] ) resulting in a 2-cnf clause @xmath203 .",
    "for @xmath198 and @xmath204 , ( [ eq : equiv_clause_1 ] ) instantiates to @xmath205",
    ".    finally , for @xmath198 and for @xmath206 , clause ( [ eq : equiv_clause_1 ] ) contains @xmath207 , the only literal of the unit clause ( [ eq : equiv_clause_8 ] ) .",
    "thus , for @xmath198 and @xmath206 the instances of clause ( [ eq : equiv_clause_1 ] ) are redundant .    by a further consideration of cases , one can see that the set of all non - redundant simplified instance of clause ( [ eq : equiv_clause_1 ] ) , for @xmath208 and @xmath209 , consists of @xmath210 ( \\lnot { \\ensuremath{{s}}}^2_3 \\lor { \\ensuremath{{s}}}^2_2 \\lor { \\ensuremath{{s}}}^1_2 )   &   ( \\lnot { \\ensuremath{{s}}}^3_5 \\lor { \\ensuremath{{s}}}^3_4 \\lor { \\ensuremath{{s}}}^2_4 ) . \\end{array}\\ ] ] we group here the clauses in such a way that all clauses in one column correspond to the same value of the parameter @xmath4 .",
    "similarly , instances of clause ( [ eq : equiv_clause_2 ] ) , for @xmath208 and @xmath211 are simplified with the help of unit clause ( [ eq : sinz_card_2 ] ) , ( [ eq : sinz_card_3 ] ) , ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) to @xmath212 ( \\lnot { \\ensuremath{{s}}}^1_2 \\lor { \\ensuremath{{s}}}^1_1 \\lor p_2 ) &   ( \\lnot { \\ensuremath{{s}}}^2_3 \\lor { \\ensuremath{{s}}}^2_2 \\lor p_3 ) & ( \\lnot { \\ensuremath{{s}}}^3_5 \\lor { \\ensuremath{{s}}}^3_4 \\lor p_5 ) . \\\\[2pt ] ( { \\ensuremath{{s}}}^1_2 \\lor p_3 )                     &   ( \\lnot { \\ensuremath{{s}}}^2_4 \\lor { \\ensuremath{{s}}}^2_3 \\lor p_4 ) & \\\\[2pt ] \\mbox { }                                  &   ( { \\ensuremath{{s}}}^2_3 \\lor p_5 )                      & \\\\[2pt ] \\end{array}\\ ] ] the set of all non - redundant simplified instances of clause ( [ eq : equiv_clause_3 ] ) consists of @xmath213                                 & ( \\lnot { \\ensuremath{{s}}}^2_3 \\lor { \\ensuremath{{s}}}^2_4 )     & \\end{array}\\ ] ] and set of all non - redundant simplified instances of clause ( [ eq : equiv_clause_4 ] ) consists of @xmath214 ( \\lnot p_2 \\lor { \\ensuremath{{s}}}^1_2 ) &   ( \\lnot { \\ensuremath{{s}}}^1_2 \\lor \\lnot p_3 \\lor { \\ensuremath{{s}}}^2_3 ) &   ( \\lnot { \\ensuremath{{s}}}^2_3 \\lor \\lnot p_4 \\lor { \\ensuremath{{s}}}^3_4)&\\\\[2pt ] \\mbox { }                    &   ( \\lnot p_4 \\lor { \\ensuremath{{s}}}^2_4 )                      &   ( \\lnot { \\ensuremath{{s}}}^2_4 \\lor \\lnot p_5 \\lor { \\ensuremath{{s}}}^3_5 ) & \\\\[2pt ] \\end{array } \\ ] ] thus , the set @xmath194 consists of 26 clauses grouped in ( [ eq : ex1.1])([eq : ex1.4 ] ) above .",
    "any @xmath36-sequence containing less than or equal to @xmath0 elements is always @xmath0-bounded .",
    "it should be clear then that the discrepancy of a @xmath36 sequence @xmath215 is bounded by @xmath0 if , and only if , for every @xmath216 the subsequence @xmath217 is @xmath0-bounded .",
    "then we define @xmath218 we assume here that for the different values of @xmath5 sets @xmath219 share the same input propositions @xmath47 but use different auxiliary propositions @xmath137 .",
    "then the following theorem is a direct consequence of theorem  [ th : cbounded ]    [ th : discrepancy ] for any assignment @xmath188 the following holds : there exists an extension of @xmath121 to @xmath220 that is a model of @xmath221 if , and only if , @xmath190 encodes a @xmath36 sequence @xmath54 of length @xmath33 and discrepancy at most @xmath0 .",
    "we conclude this section with a description of two optimisations , which we present in the form of propositions . both reduce significantly the size of the unsatisfiability certificate and have some noticeable effect on the running time .",
    "the first optimisation allows one to remove the ` do nt care ' propositions , which do not affect the satisfiability of the problem .",
    "the second optimisation breaks the symmetry in the problem .",
    "[ prop : oddeven ] suppose that a sequence @xmath48 is @xmath0-bounded and either @xmath33 is odd and @xmath0 is even or @xmath33 is even and @xmath0 is odd .",
    "then for an arbitrary value @xmath222 the sequence @xmath223 is @xmath0-bounded .",
    "it suffices to notice that @xmath224 is odd if , and only if , @xmath149 is odd .",
    "thus , under the conditions of the proposition , @xmath225 , and the sequence can be extended arbitrarily .",
    "[ prop : symmetry ] there exists a @xmath36 sequence @xmath54 of length @xmath33 and discrepancy at most @xmath0 if , and only if , there exists a @xmath36 sequence @xmath226 of length @xmath33 and discrepancy at most @xmath0 , in which @xmath227 , for some arbitrary but fixed value of @xmath110 .",
    "the problem is symmetric , that is , the discrepancy of @xmath54 is bounded by @xmath0 if , and only if , the discrepancy of @xmath228 is bounded by @xmath0 .",
    "multiplicativity and complete multiplicativity of @xmath36 sequences can be encoded in sat in a rather straightforward way . assuming that a boolean sequence @xmath229 encodes a @xmath36 sequence @xmath173 so that the logical value @xmath44 encodes the numerical value @xmath45 and the logical value @xmath97 encodes the numerical value @xmath20 , a sat encoding of the fact that @xmath230 is captured by the following clauses , which enumerate all four combinations of values of @xmath231 and @xmath232 : @xmath233 then multiplicativity of @xmath46",
    "is captured by instances of ( [ eq : mult2 ] ) for all coprime pairs @xmath41 and @xmath149 ; and , by ( [ eq : multdef2 ] ) , complete multiplicativity of the sequence @xmath54 is captured by instances of ( [ eq : mult2 ] ) for @xmath149 and @xmath4 such that every product @xmath234 is generated only once . for complete multiplicativity further optimisation",
    "is possible due to the fact that in any such sequence @xmath235 for any @xmath236 .",
    "it can be seen that the cnf formula @xmath237 defined below expresses the complete multiplicativity condition on @xmath41 , for every @xmath238 .",
    "@xmath239    \\{(p_i)\\ }   & \\textrm { if $ i = j^2 $ , for some $ j\\geq 1 $ } \\\\[5pt ]      \\mathsf{prod}_{j , k}\\quad & \\textrm { if none of the cases above applies}\\\\          & \\textrm { and $ j , k$ are some non - trivial divisors of $ i$. } \\end{array } \\right.\\ ] ] then we define two sets of clauses    @xmath240 and @xmath241 the following statement is a direct consequence of theorem  [ th : discrepancy ] .",
    "[ th : mult_discrepancy ] for any assignment @xmath188 the following holds : there exists an extension of @xmath121 to @xmath242 ( or an extension of @xmath121 to @xmath243 ) , which is a model of @xmath244 ( or @xmath245 , respectively ) if , and only if , @xmath190 encodes a multiplicative ( or completely multiplicative , respectively ) @xmath36 sequence @xmath54 of length @xmath33 and discrepancy at most @xmath0 .    finally we notice that the completely multiplicative case can be optimised based on the following observation .",
    "[ prop : cmult_opt ] the discrepancy of a completely multiplicative @xmath36 sequence @xmath54 is bounded by @xmath0 , for some @xmath65 , if , and only if , @xmath54 is @xmath0-bounded .",
    "the necessary condition is trivial by definition of discrepancy . for the sufficient condition",
    "we show that for any @xmath0-bounded sequence @xmath173 and any @xmath246 the subsequence @xmath247 is @xmath0-bounded .",
    "let @xmath248 . then @xmath249 results -------    in our experiments we use ` treengeling ` , a parallel cube - and - conquer flavour of the ` lingeling`sat solver  @xcite version aqw , the winner of the _ sat - unsat _ category of the sat13 competition  @xcite , and the ` glucose`solver  @xcite version 3.0 , the winner of the _ certified unsat _ category of the sat13 competition  @xcite .",
    "all experiments were conducted on pcs equipped with an intel core i5 - 2500k cpu running at 3.30ghz and 16 gb of ram .    in our first series of experiments we investigate the discrepancy of unrestricted @xmath36 sequences .",
    "we encode the existence of a @xmath36 discrepancy @xmath0 sequence of length @xmath33 into sat as described in section  [ sec : encoding ] .",
    "we deploy both optimisations described in proposition  [ prop : oddeven ] and proposition  [ prop : symmetry ] .",
    "we choose as @xmath110 , for which we fix @xmath250 to be @xmath45 , colossally abundant numbers  @xcite , which have many divisors and thus contribute to many homogeneous sequences . specifically for @xmath8 ,",
    "the choice of @xmath251 is more beneficial for satisfiable instances ; however , @xmath252 results in a better reduction of the size of the unsatisfiability proof described below . for consistency of presentation , we use @xmath253 in all our experiments for @xmath8 .    for @xmath8 we establish that the maximal length of a @xmath1 sequence of discrepancy @xmath10 is @xmath11 .",
    "the cnf formula @xmath254 contains @xmath255 propositions and @xmath256 clauses .",
    "it takes the ` treengeling`system about @xmath257  seconds to find an example of such a sequence on our hardware configuration .",
    "one of the sequences of length @xmath11 of discrepancy @xmath10 can be found in appendix  [ sec : sequence ] .    when applied to the cnf formula @xmath258 , which contains @xmath259 propositions and @xmath260 clauses , ` treengeling`reports unsatisfiability . in order to corroborate this statement",
    ", we also use ` glucose ` .",
    "it takes the solver about @xmath261  seconds to generate a drup certificate of unsatisfiability .",
    "the correctness of the generated unsatisfiability certificate has been independently verified with the ` drup - trim`tool  @xcite .",
    "the size of the certificate is about @xmath262  gb , and the time needed to verify the certificate is comparable with the time needed to generate it .",
    "the rup unsatisfiability certificate , that is the drup certificate with all information on the deleted clauses stripped , is @xmath263 mb ; it takes ` drup - trim`about five and a half hours to verify it .",
    "combined with theorem  [ th : discrepancy ] , these two experiments yield a computer proof of the following statement .",
    "[ th : edp2 ] the length of a maximal @xmath36 sequence of discrepancy @xmath10 is @xmath11 .",
    "thus we prove that the erds discrepancy conjecture holds true for @xmath8 .    when applied to @xmath264 for increasing values of @xmath33 our method",
    "could only produce sequences of discrepancy @xmath14 of length in the region of @xmath265 , even though solvers were allowed to run for weeks .",
    "since both multiplicativity and complete multiplicativity restrictions reduce severely the search space , in hope for better performance , we perform the second series of experiments to investigate the discrepancy bound for multiplicative and completely multiplicative sequences .",
    "notice that the optimisation described in proposition  [ prop : symmetry ] is not applicable in this case as the fact that @xmath54 is multiplicative does not imply that @xmath266 is .",
    "we saw in example  [ ex : edp1 ] that multiplicative sequences of discrepancy @xmath44 are longer than completely multiplicative sequences .",
    "the longest completely multiplicative sequence of discrepancy @xmath10 is known to contain @xmath42 elements  @xcite ; tests with @xmath267 show that the longest multiplicative sequence of discrepancy @xmath10 has @xmath268 elements .",
    "thus it would nt be unreasonable to assume that the longest multiplicative discrepancy @xmath14 sequence is longer than the longest completely multiplicative one , but is probably harder to find .",
    "it turns out that this expectation is wrong on both accounts .",
    "we establish that the length of a maximal @xmath1 completely multiplicative discrepancy @xmath14 sequence coincides with the length of a maximal @xmath36 multiplicative discrepancy @xmath14 sequence and is equal to @xmath13 .",
    "it takes ` treengeling`about one  hour and fifty minutes to find a satisfying assignment to @xmath269 , which contains @xmath270 propositions and @xmath271 clauses , and about one hour and thirty five minutes to find a satisfying assignment to @xmath272 , which also contains @xmath270 propositions but @xmath273 clauses .",
    "it takes the ` glucose`solver just under eight hours to generate an approximately 1.95  gb drup proof of unsatisfiability for @xmath274 , which contains @xmath270 propositions and @xmath275 clauses , and about nine and a half hours to generate an approximately 3.78  gb drup proof of unsatisfiability for @xmath276 , which again contains the same number of propositions but @xmath277 clauses .",
    "the optimisation of proposition  [ prop : cmult_opt ] leads reduction in the problem size for the completely multiplicative case ( 446753  propositions and 1738125  clauses for length 127645 and 446759  propositions and 1738149  clauses for length 127646 ) and a significant reduction in the ` treengeling`running time ( about 20 and 30 minutes , respectively ) ; however , it does not reduce the size of the drup certificate for the unsatisfiable case , which is about 2.22  gb . this lack of reduction in size is due to the fact that unit propagation steps are not recorded as part of a drup certificate .",
    "so we get a computer - aided proof of another sharp bound on the sizes of maximal sequences of bounded discrepancy .",
    "[ th : edp3mult ] the length of a maximal multiplicative @xmath36 sequence of discrepancy @xmath14 equals to the length of a maximal completely multiplicative @xmath36 sequence of discrepancy @xmath14 and is @xmath13 .",
    "unrestricted sequences of discrepancy @xmath14 can still be longer than @xmath278 : by requiring that only first @xmath279 elements of a sequence are completely multiplicative , we generate a 130,000 long edp3 sequence in about one hour and fifty minutes thus establishing a slightly better lower bound on the length of @xmath36 sequences of discrepancy @xmath14 than the one from theorem  [ th : edp3mult ] . the solvers struggle to expand it much further .",
    "notice that the optimisation of proposition  [ prop : cmult_opt ] is not applicable here .",
    "we summarise known facts about discrepancy of unrestricted , multiplicative and completely multiplicative sequences in table  [ tab : results ] .",
    "we highlight in boldface cases where the lengths of maximal sequences of different kinds are equal .",
    "we have demonstrated that sat - based methods can be used to tackle the longstanding mathematical questions related to discrepancy of @xmath1 sequences . not only were we able to identify the exact boundary between satisfiability and unsatisfiability of the encoding of the edp for @xmath8 , thus identifying the longest sequences of discrepancy @xmath10 , but",
    "also we have established the surprising fact that the lengths of the longest multiplicative and completely multiplicative sequences of discrepancy @xmath14 coincide .",
    "the latter result helps to establish a novel lower bound on the length of the longest discrepancy @xmath14 sequence",
    ".    there is , however , a noticeable asymmetry in our findings . the fact that a sequence of length 1160 has discrepancy @xmath10 can be relatively easily checked manually .",
    "it is harder but not impossible to verify the correctness of the discrepancy bound for @xmath280-long sequences . on the other hand , even though improvements to our method shortened the wikipedia - size 13  gb proof reported in  @xcite more than tenfold passing thus the psychological barrier of @xmath44  gb , it is still probably one of the longest proofs of a non - trivial mathematical result , and it is equally improbable that a mathematician would verify by hand ten billions or half a billion of automatically generated proof lines .",
    "it should be noted that this gigantic proof is a formal proof in a well - specified proof system and , as such , it has been verified by a third - party tool , and it can potentially be translated into a proof assistant such as coq  @xcite .",
    "the reduction of proof size will be useful for any future analysis of the proof in an attempt to identify patterns and lemmas and produce a compact proof more amenable for human comprehension .",
    "[ [ acknowledgements ] ] acknowledgements + + + + + + + + + + + + + + + +    the authors would like to thank armin biere , marijn heule , pascal fontaine , laurent simon and laurent thry and donald knuth for helpful discussions , comments and ideas following the publication of the preliminary version of this paper  @xcite .",
    "leonidas alaoglu and paul erds . on",
    "highly composite and similar numbers . , 56(3):448469 , 1944 .",
    "noga alon .",
    "transmitting in the _",
    "n_-dimensional cube .",
    ", 37/38:911 , 1992 .",
    "tom  m. apostol . .",
    "undergraduate texts in mathematics .",
    "springer , new york , ny , usa , 1976 .",
    "michal armand , germain faure , benjamin grgoire , chantal keller , laurent thry , and benjamin werner . a modular integration of sat / smt solvers to coq through proof witnesses .",
    "in jean - pierre jouannaud and zhong shao , editors , _ certified programs and proofs - first international conference , cpp 2011 , kenting , taiwan , december 7 - 9 , 2011 . proceedings _",
    ", volume 7086 of _ lecture notes in computer science _ , pages 135150 .",
    "springer , 2011 .",
    "gilles audemard and laurent simon .",
    "glucose 2.3 in the sat 2013 competition . in _ proceedings of sat competition 2013 _ , pages 4243 , helsinki , 2013 .",
    "university of helsinki .",
    "adrian balint , anton belov , marijn j.  h. heule , and matti jrvisalo , editors . .",
    "university of helsinki , 2013 .",
    "jzsef beck and william w.  l. chen . .",
    "cambridge university press , cambridge , 1987 .",
    "jsef beck and vera  t. ss . discrepancy theory . in ronald .",
    "l. graham , martin grtschel , and lsl lovsz , editors , _ handbook of combinatorics _ , volume  2 , pages 14051446 .",
    "elsivier , amsterdam , 1995 .",
    "armin biere , marijn heule , hans van maaren , and toby walsh , editors . , volume 185 of _ fronteers in artificial intelligence and applications_. ios press , amsterdam , 2009 .",
    "armin biere .",
    "ingeling , plingeling and treengeling entering the sat competition 2013 . in _ proceedings",
    "of sat competition 2013 _ , pages 5152 , helsinki , 2013 .",
    "university of helsinki .",
    "peter borwein , stephen k.  k. choi , and michael coons .",
    "completely multiplicative functions taking values in @xmath281 . , 362(12):62796291 , 2010 .",
    "bernard chazelle . .",
    "cambridge university press , new york , 2000 .",
    "paul erds . some unsolved problems .",
    ", 4(3):291300 , 1957 .",
    "evguenii  i. goldberg and yakov novikov .",
    "verification of proofs of unsatisfiability for cnf formulas . in _ proceedings of design ,",
    "automation and test in europe conference and exposition ( date 2003 ) , 3 - 7 march 2003 , munich , germany _",
    ", pages 1088610891 , 2003 .",
    "timothy gowers . is massively collaborative mathematics possible ?",
    ", 2009 . retrieved april , 10 2014 from http://gowers.wordpress.com/2009/01/27/is-massively-collaborative-mathematics-possible/    timothy gowers .",
    "erds and arithmetic progressoins . in _",
    "erds centennial conference _ , 2013 .",
    "retrieved april , 10 2014 from http://www.renyi.hu/conferences/erdos100/program.html    marijn heule , warren a.  hunt jr . , and nathan wetzler .",
    "trimming while checking clausal proofs . in _ proceedings of formal methods in computer - aided design , fmcad 2013 _ , pages 181188 .",
    "ieee , 2013 .",
    "boris konev and alexei lisitsa . a sat attack on the erds discrepancy conjecture . ,",
    "abs/1402.2184 , 2014 .",
    "boris konev and alexei lisitsa .",
    "a sat attack on the erds discrepancy conjecture . in _ proceedings of the 17th international conference on theory and applications of satisfiability testing , sat 2014 _ , 2014 . to appear .",
    "a.  r.  d. mathias . on a conjecture of erds and udakov .",
    "combinatorics , geometry and probability , 1993 .",
    "ji matouek and joel spencer .",
    "discrepancy in arithmetic progressions .",
    ", 9(1):195204 , 1996 .",
    "ji matouek . , volume  18 of _ algorithms and combinatorics_. springer , 1999 .",
    "s.  muthukrishnan and aleksandar nikolov . optimal private halfspace counting via discrepancy . in _ proceedings of the 44th symposium on theory of computing _ , stoc 12 , pages 12851292 , new york , ny , usa , 2012 .",
    "aleksandar nikolov and kunal talwar .",
    "on the hereditary discrepancy of homogeneous arithmetic progressions . , abs/1309.6034v1 , 2013 .",
    "erds discrepancy problem : polymath wiki , 2010 . retrieved april , 10 2014 from http://michaelnielsen.org/polymath1/index.php?title=the_erds_discrepancy_problem    d.h.j . polymath .",
    "human proof that completely multiplicative sequences have discrepancy greater than 2 , 2011 . retrieved april , 10 2014 from http://michaelnielsen.org/polymath1/index.php?title=human_proof_that_completely_multiplicative_sequences_have_discrepancy_at_least_2    wolfgang rautenberg . .",
    "springer , new york , 3 edition , 2010 .",
    "klaus  f. roth .",
    "remark concerning integer sequence .",
    ", 9:257260 , 1964 .",
    "olivier roussel and vasco  m. manquinho .",
    "pseudo - boolean and cardinality constraints . in armin biere , marijn heule , hans van maaren , and toby walsh , editors , _ handbook of satisfiability",
    "_ , volume 185 of _ fronteers in artificial intelligence and applications _ , pages 695733 .",
    "ios press , amsterdam , 2009 .",
    "carsten sinz . towards an optimal cnf encoding of boolean cardinality constraints . in _ principles and practice of constraint programming - cp 2005 , 11th international conference ,",
    "cp 2005 , sitges , spain , october 1 - 5 , 2005 , proceedings _ , volume 3709 of _ lecture notes in computer science _ , pages 827831 .",
    "springer , 2005 .    grigory  s. tseitin . on the complexity of derivation in propositional calculus . in anatol",
    "o. slisenko , editor , _ studies in constructive mathematics and mathematical logic , part 2 _ , pages 115125 , new york , 1970 .",
    "consultants bureau .",
    "nikolai udakov .",
    "theory of the characters of number semigroups .",
    ", 20:1115 , 1956 .",
    "in this section we give proofs of the technical results used in the main text .",
    "we re - state propositions and theorems here for the reader s convenience .",
    "proposition  [ prop : sinz ] .",
    "_ let @xmath141 be as defined above . then _    1 .   for any assignment @xmath151 such that @xmath121 satisfies @xmath282 ,",
    "any @xmath152 and @xmath153 we have @xmath154 2 .   for any @xmath49-sequence @xmath155",
    "there exists an assignment @xmath156 such that @xmath157 , for @xmath120 ; @xmath121 satisfies @xmath141 ; and for any @xmath158 and @xmath139 if @xmath159 then @xmath160 , for @xmath161 .    1 .",
    "the proof proceeds by induction on the lexicographical partial order @xmath283 on pairs of non - negative integers : @xmath284 iff @xmath285 .",
    "fix some @xmath286 .",
    "+ consider cases : * suppose that @xmath287 . then formula  ( [ eq : sinz_card_1 ] ) , one of the conjuncts of @xmath288 , instantiates to @xmath289 .",
    "therefore , for an assignment @xmath121 such that @xmath290 satisfies @xmath291 we have @xmath292 .",
    "furthermore , for the satisfying assignment we have @xmath293 and @xmath294 .",
    "it follows then that @xmath295 , which is equivalent to the statement of the proposition for the case @xmath147 .",
    "* suppose that  @xmath199 and @xmath296 .",
    "for a satisfying assignment @xmath121 we have @xmath297 ( as ( [ eq : sinz_card_2 ] ) is a conjunct of @xmath288 ) .",
    "on the other hand for @xmath296 we have @xmath298 .",
    "thus the statement of the proposition holds true in this case . *",
    "suppose that @xmath299 , @xmath300 .",
    "for a satisfying assignment @xmath121 we have @xmath301 if and only if @xmath302 or @xmath303 ( by satisfaction of ( [ eq : sinz_card_1 ] ) ) . by induction hypothesis",
    "the later is equivalent to @xmath304 or @xmath305 and @xmath306 , which in turn is equivalent to @xmath307 .",
    "first notice that any assignment @xmath308 can be extended in a unique way to the assignment @xmath156 .",
    "indeed , satisfaction of ( [ eq : sinz_card_2 ] ) and ( [ eq : sinz_card_3 ] ) defines uniquely the values of satisfying assignment @xmath121 on @xmath309 for the cases @xmath310 and @xmath311 , respectively .",
    "further , using satisfaction condition for ( [ eq : sinz_card_1 ] ) the values of @xmath121 on the remaining variables @xmath309 with @xmath312 are defined uniquely by induction on @xmath283 .",
    "the remaining condition , that is for any @xmath158 and @xmath139 if @xmath159 then @xmath160 , for @xmath161 , now follows from item  ( _ i _ ) above .",
    "theorem  [ th : cbounded ] .",
    "_ for any assignment @xmath188 the following holds : there exists an extension of @xmath121 to @xmath189 that is a model of @xmath187 if , and only if , the sequence @xmath190 is @xmath0-bounded .",
    "_    @xmath313 assume that for an assignment @xmath314 the sequence @xmath315 is @xmath0-bounded .",
    "by item ( _ ii _ ) of proposition  [ prop : sinz ] , @xmath121 can be extended to an assignment @xmath316 such that @xmath317 , for all @xmath318 ; @xmath319 satisfies @xmath320 ; and , furthermore , @xmath321 if , and only if , @xmath322 .",
    "we show that @xmath319 is , in fact , a model of @xmath323 .",
    "it suffices to demonstrate that clauses ( [ eq : equiv_clause_8 ] ) and ( [ eq : equiv_clause_6 ] ) are true under @xmath319 .    1 .",
    "assume to the contrary that @xmath324 , for some @xmath325 and @xmath326 .",
    "then by proposition  [ prop : sinz ] we have @xmath327 as the number of occurrences of @xmath44 in @xmath328 is @xmath329 ( and , hence , the number of occurrences of @xmath97 in @xmath328 is @xmath330 ) , the difference between the number of occurrences of @xmath97 and the number of occurrences of @xmath44 is at least @xmath331 .",
    "+ as we supposed that @xmath332 , the difference between the number of occurrences of @xmath97 and the number of occurrences of @xmath44 exceeds @xmath333 ( by ( [ eq : proof2 ] ) ) and therefore the sequence @xmath334 and hence @xmath315 is not @xmath0-bounded contradicting our assumption .",
    "2 .   assume to the contrary that @xmath321 for some @xmath325 and @xmath335 .",
    "then @xmath336 ( by proposition  [ prop : sinz ] ) now we estimate the difference between the number of occurrences of @xmath44 in @xmath337 and the number of occurrences of @xmath97 in @xmath337 . we have + @xmath338 +",
    "it follows that the sequence @xmath315 is not @xmath0-bounded contradicting our assumption .",
    "@xmath339 consider an assignment @xmath340 and assume that its extension to @xmath341 is a model of @xmath323 .",
    "now we are to show that @xmath342 is @xmath0-bounded .",
    "assume to the contrary that it is not @xmath0-bounded .",
    "as @xmath319 is an extension of @xmath121 we have that @xmath343 is also not @xmath0-bounded . then we have @xmath344 for some @xmath149 .",
    "consider two cases :    1 .",
    "the number of occurrences of @xmath44 in @xmath345 , for @xmath346 , exceeds the number of occurrences of @xmath97 by more than @xmath0 .",
    "let @xmath347 .",
    "then we have @xmath348 that is @xmath349 and @xmath350 .",
    "now we have @xmath351 , by the satisfaction condition for ( [ eq : equiv_clause_8 ] ) , and @xmath321 , by @xmath347 . a contradiction .",
    "the number of occurrences of @xmath97 in @xmath345 , for @xmath346 , exceeds the number of occurrences of @xmath44 by more than @xmath0 .",
    "let @xmath352 .",
    "then we have @xmath353 that is , @xmath354 and @xmath355 .",
    "then , by the satisfaction condition for ( [ eq : equiv_clause_6 ] ) , we have @xmath321 and , @xmath352 , we have @xmath324 . a contradiction .",
    "we give a graphical representation of one of the sequences of length @xmath11 obtained from the satisfying assignment computed with the ` treengeling`solver . here",
    "@xmath356 stands for @xmath45 and @xmath357 for @xmath20 , respectively .",

  ],
  "abstract_text": [
    "<S> in 1930s paul erds conjectured that for any positive integer @xmath0 in any infinite @xmath1 sequence @xmath2 there exists a subsequence @xmath3 , for some positive integers @xmath4 and @xmath5 , such that @xmath6 . </S>",
    "<S> the conjecture has been referred to as one of the major open problems in combinatorial number theory and discrepancy theory . for the particular case of @xmath7 </S>",
    "<S> a human proof of the conjecture exists ; for @xmath8 a bespoke computer program had generated sequences of length @xmath9 of discrepancy @xmath10 , but the status of the conjecture remained open even for such a small bound . we show that by encoding the problem into boolean satisfiability and applying the state of the art sat solvers , one can obtain a discrepancy @xmath10 sequence of length @xmath11 and a _ proof _ of the erds discrepancy conjecture for @xmath8 , claiming that no discrepancy 2 sequence of length @xmath12 , or more , exists . in the similar way , we obtain a precise bound of @xmath13 on the maximal lengths of both multiplicative and completely multiplicative sequences of discrepancy @xmath14 . </S>"
  ]
}
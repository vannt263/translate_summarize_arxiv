{
  "article_text": [
    "exascale supercomputers will deliver @xmath0 flop / s and will be likely composed of thousand million cores @xcite .",
    "the development of software for exascale computing platforms faces unprecedented challenges @xcite .",
    "the efficient exploitation of the exascale extreme parallelism is among the most important ones @xcite .",
    "many traditional algorithms require by design implementations with local and global parallel communication that lead to a decrease of the code scalability .",
    "the electrostatic solvers in particle mesh ( pm ) methods are part of these algorithms , that require frequent and global communication , and are often cause of limited scalability of particle simulations .",
    "scalability will become on exascale computing platforms even a more severe problem , that needs to be addressed to avoid the degradation of the performance .",
    "it is a strong belief in high performance computing ( hpc ) community that not only new developments and enhancements of programming models , runtime systems , auto - tuners and compilers are required , but also the development of new algorithms and the reformulation of traditional methods are crucial @xcite to exploit efficiently the exascale supercomputers .",
    "the design of new algorithms and the reformulation of well - known algorithms specifically for the exascale computing are topic of many recent investigations @xcite .",
    "these studies include communication avoiding iterative sparse solvers @xcite , task - based reformulation of linear algebra algorithms @xcite , synchronization reducing algorithms @xcite , and mixed precision calculations @xcite .",
    "new algorithms for exascale particle simulations have been also proposed .",
    "for instance , event - driven simulations with asynchronous methodology @xcite and the gap - tooth methods are promising new algorithms @xcite for exascale computing .    in this article",
    ", we propose a reformulation of the electrostatic solvers for particle simulations in oder to achieve scalability on future exascale supercomputers .",
    "electrostatic solvers are the main computational engine of many application codes for bio - molecular , material science and plasma systems .",
    "for instance , the particle - particle - particle - mesh ( p@xmath1 m ) method @xcite for molecular dynamics ( md ) simulations includes an electrostatic solver for calculating the long - range electrostatic forces . among the most famous md software packages , gromacs @xcite comprises a p@xmath1 m method and a pm electrostatic solver .",
    "moreover , p@xmath1 m methods and electrostatic solvers are extensively used in material science studies@xcite .",
    "finally , the simulation of plasmas for fusion reactors , astrophysics , and space physics require electrostatic solvers also @xcite . because electrostatic solvers are present in many pm codes , the development of fast and scalable electrostatic solver is crucial for many science fields .",
    "the proposed method is based on solving the explicit discretization of the ampere s law ( one of the four maxwell s equations ) .",
    "this approach has been proposed previously by markidis and lapenta in refs .",
    "@xcite and by chen _",
    "@xcite for carrying out plasma simulations .",
    "in both works the numerical scheme is based on the implicit discretization of the ampere s law and particle equations of motion .",
    "these previous methods lead to the formulation of the first energy conserving pm methods .",
    "however , they require the solution of non - linear and linear solvers , making the algorithm not scalable on massively parallel supercomputer . instead ,",
    "it is here proposed to use the explicit discretization of the ampere s law .",
    "the main advantage of this new formulation is that the calculation of the electric field becomes an embarrassingly parallel problem , not requiring parallel communication on supercomputers .",
    "the goal of this article is to present an electrostatic solver , extremely scalable and therefore suitable for extreme parallelism of exascale supercomputers .",
    "the article is organized as follows . in the second section ,",
    "the traditional electrostatic solvers in pm methods are described . the proposed electrostatic solver , and in particular the governing equations , the algorithm , and numerical properties , and the suitability for exascale computing are presented in the third section . in the fourth section",
    ", the new electrostatic solver is verified against a standard benchmark of computational plasma physics to prove its correctness .",
    "the computational performance of the new method is presented in section 5 , and section 6 concludes the article summarizing the main results .",
    "in pm electrostatic methods , the evolution of the system is determined by computing the trajectories of interacting particles via an electric field .",
    "the particle positions and velocities ( @xmath2 , @xmath3 ) are calculated by solving the equation of motion for each particle : @xmath4 where @xmath5 is the electrostatic field acting on the particle @xmath6 , and @xmath7 and @xmath8 are the particle charge and mass .",
    "the most common and simple technique to discretize these equations is the leapfrog scheme , also known as verlet algorithm @xcite : @xmath9 where where @xmath10 is the time level . in the leap - frog method ,",
    "particle positions are calculated at an integer time level while the velocities at a half - integer time level .",
    "other forces might be present in the system , and their contributions should be included in the right hand of the second equation of the system above .",
    "the leapfrog scheme is a symplectic method , second order accurate in time and very simple to be implemented in computer codes .",
    "other schemes can be used to increase the accuracy order and enhance numerical properties @xcite .    in particle simulations ,",
    "the main difficulty is to calculate the electric field @xmath11 acting on the particles .",
    "it can be computed directly by adding the contributions from all the other particles , exerting a force on the particle .",
    "however , this method becomes unfeasible in practice when a large number of particles is present in the system .",
    "instead , in the pm methods the electric field is calculated by introducing a mesh , and mapping the particle charge density @xmath12 to the mesh by using interpolation function @xmath13 : @xmath14 where @xmath15 is the volume of the cell @xmath16 .",
    "typically , the b - spline functions are chosen as interpolation functions . once the charge density on the grid is known , it is possible to calculate the electrostatic field @xmath17 by solving the poisson equation : @xmath18 where @xmath19 is the vacuum dielectric constant .",
    "after @xmath17 is calculated , the electric field is computed as @xmath20 .",
    "the traditional electrostatic solvers all include the solution of the poisson equation .",
    "finally , the electric field acting on the particle @xmath6 is calculated by interpolating electric fields on the mesh points back to the particles : @xmath21 in this article , it is proposed to replace the solution of the poisson equation ( equation [ poisson2 ] ) with the calculation of ampere s law .",
    "in classical electromagnetism , the ampere s law relates the magnetic field @xmath22 to the electric current @xmath23 and to the change in time of the electric field @xmath24 : @xmath25 where @xmath26 is the magnetic permittivity of vacuum . in the electrostatic limit , the magnetic field @xmath27",
    "is fixed so that @xmath28 . in this case , the ampere s law reduces to : @xmath29 so that : @xmath30 in a system with no initial current @xmath31 , the ampere s law simply becomes : @xmath32 if this equation is solved numerically , it can be simply discretized in time as follows : @xmath33 alternative discretizations of equation [ ampere1 ] can be used to achieve higher order accuracies , but they are not here considered .",
    "the electric field can be calculated from the previous equation as : @xmath34 therefore , the electric field field can be simply updated using the current @xmath23 .",
    "the charge density @xmath35 is not calculated during the computational cycle , as in the traditional electrostatic solvers .",
    "if a charge unbalance , and consequently an electrostatic field , is present at the beginning of the simulation , the electric field need to be calculated consistently by solving the poisson equation on the first computational cycle of the simulation .",
    "in addition , equation [ solvee ] does not require boundary conditions on the electric field .",
    "however , the boundary conditions should be enforced at the beginning of the simulation .",
    "the current @xmath36 is calculated by interpolation : @xmath37 the interpolation is carried out using the particle position at time level @xmath38 , that can be calculated as follows : @xmath39    in summary , the pm algorithm with the ampere electrostatic solver is presented in figure [ algo ] . after the particle positions and velocities are initialized , an electric field is calculated by solving the poisson equation .",
    "the computational cycle is then repeated many times .",
    "each cycle includes the update of particle positions , the calculation of the current on the grid points , the update of the electric field , the calculation of the electric field acting on the particles , and finally the update of particle velocities .",
    "the proposed ampere electrostatic solver offers many advantages to the respect to the traditional approach . as shown before , the calculation of the electric field is simply an update of the previous electric field values , and therefore it requires only @xmath40 operations .",
    "instead , the solution of the poisson equation requires the solution of sparse diagonal linear system or the computation of fast fourier transform ( fft ) .",
    "typically , these algorithms have @xmath41 computational cost , and only in particular cases they can achieve @xmath42 performance .    the proposed solver is perfectly suited for exascale massively parallel computing .",
    "in fact , to update the values of the electric fields using equation [ solvee ] is an embarrassingly parallel problem .",
    "the electrostatic solver in the simple formulation does not require any parallel communication and therefore has ideal scalability . on the contrary ,",
    "the traditional approach of solving the poisson equation requires point - to - point and global parallel communication limiting already the scalability on current petascale computing platforms .",
    "one of the main advantages of the ampere s solver is that very small changes are required to include the proposed electrostatic solver in current production codes .",
    "going from petascale to exascale , it is likely that an incremental approach will be chosen in the existing petascale applications , while disruptive algorithms requiring the use of new data structures will be avoided .",
    "the electrostatic ampere s solver can be implemented using the existing data structures of the pm codes .",
    "the only modifications are to add a variable for the vector current @xmath23 on the grid points , and to replace the charge deposition of the traditional approach with the current @xmath23 deposition .",
    "it is clear from equation [ solvee ] , that the electric field depends on the value of the electric current .",
    "spatial regions , characterized by strong currents , are subject to strong variations of the electric fields , while other regions with null or small currents have approximately unaltered electric field .",
    "thus , a prompt update of the electric field is required only in regions with strong current .",
    "for instance , when an object is immersed in a plasma , the boundary layer between the object and the plasma is the spatial region with strong currents and therefore with strong variation of the electric field . instead ,",
    "far from the object , the currents vanish and therefore the electric field remains constant and the update of the electric field is not necessary . with the ampere electrostatic solver it is possible to update the electric field only in regions with strong currents , while neglecting other regions with no currents .",
    "this allows user to adapt the time step locally in region with strong electric current , eliminating the need of dedicating computing resources to solve the electric field in spatial regions with null electric currents .",
    "the evolution of the electric and magnetic field ( @xmath22 ) is governed by the four maxwell s equations : @xmath43 in the electrostatic limit , the maxwell s equations reduce to : @xmath44 this system comprises three equations that must be satisfied concurrently to describe correctly the evolution of the electric field .",
    "therefore , the electric field calculated with equation [ solvee ] should satisfy additional two constraints : the electrostatic field must be consistent with the gauss ( @xmath45 ) and the faraday s ( @xmath46 ) laws .",
    "in fact , when the poisson equation is solved in the traditional approach , a combination of gauss and faraday s laws is computed .",
    "in fact , the electrostatic force is a conservative force , and therefore the electric field is irrotational ( it satisfies the faraday s law ) : @xmath47 and therefore @xmath24 can be written as a gradient of a scalar function @xmath17 : @xmath48 substituting this last expression into the gauss law , it is obtained : @xmath49    on the contrary , in the proposed new approach the electric field is advanced in time using the ampere s law , and there is no guarantee that the gauss and faraday s laws are satisfied also .",
    "these two laws can be regarded as conservation laws , as it is done for other macroscopic quantities that are not conserved in computer simulations , such as the total energy and momentum of the system . however",
    ", different techniques have been proposed to enforce@xmath50 while solving the ampere s law .",
    "markidis and lapenta suggested to use the method of pseudo - current , introduced by marder @xcite .",
    "this technique reduces the numerical error but it does not eliminate it . it has been proved that a particular interpolation scheme can eliminate this error @xcite .      in the chosen discretization of the ampere s law and particle equations of motion , both",
    "the total energy and momentum are not conserved .",
    "the traditional approach with poisson electrostatic solver leads to the exact conservation of the total momentum @xcite , while the implicit formulation of the ampere law and particle equation motion leads to the exact energy conservation @xcite . in general ,",
    "the variation of the momentum and energy depends on the time step , number of particles , and kind and order of the interpolation functions @xcite . a small time step , an increased number of particles and higher order interpolation functions lead to energy and momentum conservation at higher degree .",
    "the total energy and momentum of the system should be monitored and simulation should be disregarded when a in important violation ( typically > 5% ) occurs .",
    "the disadvantage of the proposed solver is a higher variation of the conserved quantities ( total energy , momentum ) .",
    "an important violation of such conserved quantities might lead to numerical instabilities .",
    "the electrostatic ampere solver has been implemented in a one dimensional matlab / octave pm code for plasma simulations .",
    "the code is presented in the appendix of this article .",
    "the algorithm has been tested against a standard benchmark where the analytical calculation provides a result simulation can be compared with .",
    "a well - known benchmark , called _ two stream instability _",
    ", has been used @xcite .",
    "the instability grows exponentially in time according @xmath51 law in the linear regime of the instability .",
    "after the linear phase , the non linear effects become important , and analytical theory and simulation can not be compared further .",
    "the analytical theory provides the growth rate ( @xmath52 ) of the instability for a given wavenumber @xmath53 , where @xmath54 is the wavelength of the spectral component .",
    "this exponential growth appears as a line in a semilogarithmic plot ( red line in figure 2 ) .    in the _ two stream instability _",
    "benchmark , two electron beams move in opposite directions with @xmath55 speed , where @xmath56 is the speed of light in vacuum .",
    "a population of protons is present , but do not move and contribute only with a background charge density .",
    "the system is @xmath57 long and periodic . in this set - up",
    ", the growth rate @xmath52 for @xmath58 ( @xmath59 is the electron skin depth ) in the linear regime can be calculated and it is equal to @xmath60 , where @xmath61 is the plasma frequency .",
    "a pm mesh simulation with 100,000 particles , 256 grid points , a time step @xmath62 , 1600 computational cycles , has been carried out .",
    "figure [ comp_linear_theory ] shows a comparison of the instability growth calculated with the analytical theory ( only valid in the linear regime of the instability ) and with the ampere electrostatic solver . in the linear regime of the instability , the slope of the curves , calculated with the simulation and linear theory matches , and therefore the electrostatic solver provides the correct results .",
    "figure [ phase_space ] shows the characteristic configuration of the phase space of the stream instability during the non linear regime @xcite .",
    "as discussed previously , the proposed method introduces an error arising from not satisfying the gauss law .",
    "because the simulation is one dimensional , the faraday s law @xmath46 is trivially satisfied .",
    "simulation in two and tree dimensions are necessary to assess the importance of errors arising from the violation of faraday s law , and eventually devise numerical techniques to reduce or eliminate it .",
    "figures 4 and 5 show that the total energy and momentum of the system are not conserved but vary in time .",
    "however , the degree to which gauss law is satisfied and total energy and momentum are conserved depends strongly on the simulation parameters . for instance , it is found that a decrease of the simulation time step reduces the error arising from the gauss law .",
    "this result is presented in figure [ gausslaw1 ] , where the two stream instability has been simulated with different time step values .",
    "moreover it is found ( but not shown here ) that reducing the time step has a beneficial effect on the conservation of the total energy and momentum also .     of the electric field",
    "shows that the simulated instability has the same growth rate predicted by the theory ( same slope of the curves ) . this comparison verifies the correctness of the ampere electrostatic solver.,width=240 ]    .",
    "each point represents one of the 100,000 particles with a given position a velocity .",
    "the instability leads to the formation of the characteristic electron _ hole _ in the phase space.,width=240 ]    , representing the degree the gauss law is not exactly satisfied.,width=240 ]            , representing the degree the gauss law is not satisfied , using different values of the simulation time step @xmath63 . decreasing the time step , the gauss law is satisfied at a higher degree .",
    "in addition , energy and momentum ( not shown here ) variations decrease with smaller time steps.,width=240 ]",
    "the computational performance of the proposed algorithm and of the traditional approach , utilizing the poisson equation , has been compared .",
    "the same simulation set - up presented in the verification study in section 3 is chosen for the performance study .",
    "gnu octave , version 3.2.3 version has been used on a 2.26 ghz intel core 2 duo with 2 gb ram memory on a 10.6.8 mac os x. the poisson equation is solved by computing a tridiagonal linear system using octave command , that chooses the most efficient solver for a given matrix .",
    "figure [ computperfo ] shows a comparison of the execution time , expressed in seconds , of the electrostatic solver , based on the poisson equation ( in blue color ) and on the ampere s law ( in red color ) varying the number of grid points ( ng ) . in all the cases , the ampere s solver is faster than the traditional poisson solver .",
    "in addition , the ampere s solver has approximately constant execution time , while the poisson solver execution time increases with the increase of the number of grid points .",
    "the pm codes with ampere s law does not allow to reuse the interpolation weight during the two interpolation stages .",
    "in fact , the current deposition is carried out using the particle positions at time level @xmath38 : @xmath64 instead , the electric field acting on the particle , used in equation [ eom ] , is calculated by using the particle positions at time level @xmath65 : @xmath66 on the contrary , pm codes with traditional poisson electrostatic solver requires only interpolations at time level @xmath65 allowing the reuse of the interpolation coefficients from previous calculations .",
    "an alternative approach to calculate the electrostatic fields in pm codes has been proposed .",
    "the method is based on solving the ampere s law instead of the poisson s equation . because the proposed numerical scheme requires simply an update of the electric field using the values of the electric current , the new method results very scalable and suitable for the next exascale computing platforms .",
    "the computational cost of ampere electrostatic solver is @xmath67 and does not require communication on parallel computers",
    ". on the contrary , traditional electrostatic solver , based on solving the poisson equation , exhibits limited scalability because the algorithm requires parallel communication .",
    "the proposed electrostatic solver can be simply implemented in production codes without introducing disruptive changes , since it uses the same data structures of previous solvers .",
    "in addition , the proposed algorithm is suitable for the implementation of asynchronous particle simulation and adaptive technologies .",
    "current work focuses on implementing an asynchronous pm method with the ampere s electrostatic solver to remove the synchronizations barriers @xcite",
    ".    a one dimensional implementation of a matlab / octave pm code has been developed to show that the ampere electrostatic solver produces the correct results .",
    "the gauss and faraday s laws , the energy and momentum conservations might be violated at a certain degree when the ampere s electrostatic solver is used .",
    "however , special numerical techniques can be devised to reduce and eliminate these errors .",
    "this research has received funding from the european commission s fp7 program inside the grant agreement cresta ( cresta-project.eu ) .",
    "10 [ 1]#1 url@samestyle [ 2]#2 [ 2]l@#1=l@#1#2    p.  kogge , k.  bergman , s.  borkar , d.  campbell , w.  carson , w.  dally , m.  denneau , p.  franzon , w.  harrod , k.  hill , and others , `` exascale computing study : technology challenges in achieving exascale systems , '' university of notre dame , cse dept . , tech . rep . , 2008 .",
    "j.  dongarra , p.  beckman , t.  moore , p.  aerts , g.  aloisio , j.  c. andre , d.  barkai , j.  y. berthou , t.  boku , b.  braunschweig , and et  al .",
    ", `` the international exascale software project roadmap , '' _ international journal of high performance computing applications _ , vol .  25 , no .  1 , pp . 360 , 2011 .",
    "[ online ] .",
    "available : http://hpc.sagepub.com/cgi/doi/10.1177/1094342010391989    v.  sarkar , w.  harrod , and a.  e. snavely , `` software challenges in extreme scale systems , '' _ journal of physics conference series _ , vol .",
    "180 , no .  1 ,",
    ", jul . 2009 .",
    "d.  e. keyes , `` exaflop / s : the why and the how , '' _ comptes rendus mecanique _ , vol .",
    "339 , pp . 7077 , feb .",
    "j.  demmel , m.  hoemmen , m.  mohiyuddin , and k.  yelick , `` avoiding communication in sparse matrix computations , '' _ parallel and distributed processing symposium , international _ , vol .  0 , pp . 112 , 2008 .",
    "f.  song , a.  yarkhan , and j.  dongarra , `` dynamic task scheduling for linear algebra algorithms on distributed - memory multicore systems , '' in _ proceedings of the conference on high performance computing networking , storage and analysis _ ,",
    "ser . sc 09.1em plus 0.5em minus 0.4em new york , ny , usa : acm , 2009 , pp . 19:119:11 . [ online ] .",
    "available : http://doi.acm.org/10.1145/1654059.1654079    e.  agullo , j.  demmel , j.  dongarra , b.  hadri , j.  kurzak , j.  langou , h.  ltaief , p.  luszczek , and s.  tomov , `` numerical linear algebra on emerging architectures : the plasma and magma projects , '' _ journal of physics conference series _",
    "180 , no .  1",
    ", p. 012037",
    "m.  baboulin , a.  buttari , j.  dongarra , j.  kurzak , j.  langou , j.  langou , p.  luszczek , and s.  tomov , `` accelerating scientific computations with mixed precision algorithms , '' _ computer physics communications _",
    "180 , pp . 25262533 , dec .",
    "h.  karimabadi , j.  driscoll , y.  a. omelchenko , and n.  omidi , `` a new asynchronous methodology for modeling of physical systems : breaking the curse of courant condition , '' _ journal of computational physics _",
    "755775 , may 2005 .    c.  w. gear , j.  li , and i.  g. kevrekidis , `` the gap - tooth method in particle simulations , '' _ physics letters a _ , vol .",
    "190195 , sep .",
    "r.  w. hockney and j.  w. eastwood , _ computer simulation using particles _ ,",
    "hockney , r.  w.  & eastwood , j.  w. , ed . , 1981 .",
    "e.  lindahl , b.  hess , and d.  van  der spoel , `` gromacs 3.0 : a package for molecular simulation and trajectory analysis , '' _ journal of molecular modeling _",
    ", vol .  7 , pp . 306317 , 2001 , 10.1007/s008940100045 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1007/s008940100045    s.  markidis , g.  lapenta , and rizwan - uddin , `` multi - scale simulations of plasma with ipic3d , '' _ mathematics and computers in simulation _ , vol .",
    "80 , no .  7 , pp .",
    "1509  1519 , 2010 .",
    "s.  markidis and g.  lapenta , `` the energy conserving particle - in - cell method , '' _ journal of computational physics _ ,",
    "230 , no .  18 , pp . 7037  7052 , 2011 .",
    "g.  lapenta and s.  markidis , `` particle acceleration and energy conservation in particle in cell simulations , '' _ physics of plasmas _ , vol .",
    "18 , no .  7 , p. 072101",
    "[ online ] .",
    "available : http://link.aip.org/link/?php/18/072101/1    g.  chen , l.  chacon , and d.  barnes , `` an energy- and charge - conserving , implicit , electrostatic particle - in - cell algorithm , '' _ journal of computational physics _ , vol .",
    "230 , no .  18 , pp .",
    "7018  7036 , 2011 .",
    "[ online ] .",
    "available : http://www.sciencedirect.com/science/article/pii/s0021999111003421    e.  hairer , c.  lubich , and g.  wanner , _ _ , 2nd  ed.1em plus 0.5em minus 0.4em berlin : springer , 2006 .",
    "[ online ] .",
    "available : http://archive-ouverte.unige.ch/unige:12343    c.  k. birdsall and a.  b. langdon , _ plasma physics via computer_.1em plus 0.5em minus 0.4emnew york , ny , usa : mcgraw - hill , inc . , 1985 .",
    "the simple octave / matlab pm code with the ampere s electrostatic solver is presented .",
    ".... % simulation parameters l=2*pi/3.0600 ; % simulation box length dt= .025 % time step nt= 1600 % number of computational cycles ng= 256 ; % number of grid points n=100000 ; % number of particles wp=1 ; % plasma frequency qm=-1 ; % mass ratio v0=0.2 ; % beam velocity vt=0.0 ; % thermal velocity dx = l / ng ; % grid spacing xp1=1 ; v1=0.0 ; mode=1 ; % perturbation values q = wp^2/(qm*n / l ) ; % particle charge rho_back =- q*n",
    "/ l ; % background density xp",
    "= linspace(0,l - l / n , n ) '",
    "; % initial particle positions vp = vt*randn(n,1 ) ; % maxwellian velocity distribution pm=[1:n ] ' ; pm=1 - 2*mod(pm,2 ) ; vp = vp+pm.*v0 ; % 2 beams % perturbation xp = xp+xp1*(l / n)*sin(2*pi*xp / l*mode ) ; % make poisson tridiagonal matrix p=1:n;p=[p p ] ; un = ones(ng-1,1 ) ; poisson = spdiags([un -2*un un],[-1 0 1],ng-1,ng-1 ) ; % calculate the charge density rho from particle positions g1=floor(xp / dx-.5)+1 ; g=[g1;g1 + 1 ] ;",
    "fraz1=1-abs(xp / dx - g1+.5 ) ; fraz=[fraz1;1-fraz1 ] ; out=(g<1);g(out)=g(out)+ng ; out=(g > ng);g(out)=g(out)-ng ; mat = sparse(p , g , fraz , n , ng ) ; % calculate initial charge density rho = full((q / dx)*sum(mat))'+rho_back ;   % solve poisson equation phi = poisson\\(-rho(1:ng-1)*dx^2);phi=[phi;0 ] ; % calculate e as   - gradient of phi eg = ( [ phi(ng ) ; phi(1:ng-1)]-[phi(2:ng);phi(1)])/(2*dx ) ; ; for it=1:nt     xp = xp+vp*dt ;       % apply periodic boundary conditions     out=(xp<0 ) ; xp(out)=xp(out)+l ;     out=(xp>=l);xp(out)=xp(out)-l ;     % calculate the x at n+1/2 time level     x_average = xp + vp*dt/2 ;     g1=floor(x_average / dx-.5)+1 ; g=[g1;g1 + 1 ] ;     fraz1=1-abs(x_average(1:n)/dx - g1+.5 ) ; fraz=[(fraz1);1-fraz1 ] ;         out=(g<1);g(out)=g(out ) + ng ; out=(g > ng);g(out)=g(out)- ng ;      mat = sparse(p , g , fraz , n , ng ) ;     % calculate the j     fraz=[(fraz1).*vp;(1-fraz1).*vp ] ;         mat = sparse(p , g , fraz , n , ng ) ;     j = full((q / dx)*sum(mat ) ) ' ;      % calculate e with ampere 's law with      eg = eg - j*dt ;     % calculate ep from xp^{n+1 }     g1=floor(xp / dx-.5)+1 ; g=[g1;g1 + 1 ] ;     fraz1=1-abs(xp / dx - g1+.5 ) ; fraz=[fraz1;1-fraz1 ]    ;     out=(g<1);g(out)=g(out)+ng ; out=(g > ng);g(out)=g(out)-ng ;     mat = sparse(p , g , fraz , n , ng ) ;     % update particle velocity     vp = vp+mat*qm*eg*dt ; end ...."
  ],
  "abstract_text": [
    "<S> in preparation to the exascale era , an alternative approach to calculate the electrostatic forces in particle mesh ( pm ) methods is proposed . while the traditional techniques are based on the calculation of the electrostatic potential by solving the poisson equation , in the new approach the electric field is calculated by solving the ampere s law . </S>",
    "<S> when the ampere s law is discretized explicitly in time , the electric field values on the mesh are simply updated from the previous values . in this way , </S>",
    "<S> the electrostatic solver becomes an embarrassingly parallel problem , making the algorithm extremely scalable and suitable for exascale computing platforms . </S>",
    "<S> an implementation of a one dimensional pm code is presented to show that the proposed method produces correct results , and it is a very promising algorithm for exascale pm simulations . </S>"
  ]
}
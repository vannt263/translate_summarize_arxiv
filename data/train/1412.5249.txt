{
  "article_text": [
    "the switch chain is a natural markov chain for sampling from a set of graphs with a given degree sequence .",
    "each move of the chain selects two distinct , non - incident edges edges uniformly at random and attempts to replace these edges by a perfect matching of the four endvertices , chosen uniformly at random .",
    "the proposed move is rejected if a multiple edge would be formed .",
    "we call each such move a _ switch_. ryser  @xcite used switches to study the structure of 0 - 1 matrices .",
    "markov chains based on switches have been introduced by besag and clifford  @xcite for 0 - 1 matrices ( bipartite graphs ) , diaconis and sturmfels  @xcite for contingency tables and rao , jana and bandyopadhyay  @xcite for directed graphs .",
    "the switch chain is aperiodic and its transition matrix is symmetric .",
    "it is well - known that the switch chain is irreducible for any ( undirected ) degree sequence : see  @xcite . in order for the switch chain to be useful for sampling",
    ", it must converge quickly to its stationary distribution .",
    "( for markov chain definitions not given here , see  @xcite . )    cooper , dyer and greenhill  @xcite showed that the switch chain is rapidly mixing for regular undirected graphs . here",
    "the degree @xmath4 may depend on @xmath3 , the number of vertices .",
    "the mixing time bound is given as a polynomial in @xmath5 and @xmath3 .",
    "earlier , kannan , tetali and vempala  @xcite investigated the mixing time of the switch chain for regular bipartite graphs .",
    "greenhill  @xcite proved that the switch chain for regular directed graphs ( that is , @xmath5-in , @xmath5-out directed graphs ) is rapidly mixing , again for any @xmath4 .",
    "mikl ' os , erds and soukup  @xcite proved that the switch chain is rapidly mixing on half - regular bipartite graphs ; that is , bipartite degree sequences which are regular for vertices on one side of the bipartition , but need not be regular for the other .",
    "the proofs of all these mixing results used a multicommodity flow argument  @xcite . in each case , regularity ( or half - regularity ) was only required for one lemma , which we will call the _ critical lemma_. this is a counting lemma which is used to bound the maximum load of the flow ( see  ( * ? ? ?",
    "* lemma 4 ) ,  ( * ? ? ?",
    "* lemma 5.6 ) and  ( * ? ? ?",
    "* lemma 6.15 ) ) .    in section  [ s : analysis ] we give an alternative proof of the critical lemma which does not require regularity .",
    "this establishes the following theorem , extending the rapid mixing result from  @xcite to irregular degree sequences which are not too dense .",
    "given a degree sequence @xmath6 , write @xmath7 for the set of all ( simple ) graphs with vertex set @xmath8 = \\ { 1,2,\\ldots , n\\}$ ] and degree sequence @xmath9 .",
    "recall that @xmath9 is called _ graphical _ when @xmath7 is nonempty .",
    "we restrict our attention to graphical sequences .",
    "write @xmath10 and @xmath0 for the minimum and maximum degree in @xmath9 , respectively , and let @xmath11 be the sum of the degrees .",
    "let @xmath6 be a graphical degree sequence such that @xmath12 and @xmath13 the mixing time @xmath14 of the switch markov chain with state space @xmath7 satisfies @xmath15 [ main ]    this result covers many different degree sequences , for example :    * sparse graphs with constant average degree and maximum degree a sufficiently small constant times @xmath16 , * dense graphs with linear average degree and maximum degree a sufficiently small constant times @xmath3 .",
    "the mixing time bound given above is at most a factor of @xmath3 larger than that obtained in  @xcite in the regular case .",
    "( to see this , substitute @xmath17 , which holds when @xmath9 is regular : note that @xmath18 always holds , as @xmath2 is the sum of the degrees . )",
    "we expect that our approach also applies to directed graphs , which should allow the rapid mixing proof from  @xcite to be extended to irregular directed degree sequences , under conditions analogous to those in theorem  [ main ] .",
    "there are several approaches to the problem of sampling graphs with a given degree sequence , though none is known to be efficient for all degree sequences .",
    "the configuration model of bollob ' as  @xcite gives expected polynomial time uniform sampling if @xmath19 .",
    "mckay and wormald  @xcite adapted the configuration model to give an algorithm which performs uniform sampling from @xmath7 in expected polynomial time when @xmath20 .",
    "jerrum and sinclair  @xcite used a construction of tutte s to reduce the problem of sampling from @xmath7 to the problem of sampling perfect matchings from an auxilliary graph .",
    "the resulting markov chain algorithm is rapidly mixing if the degree sequence @xmath9 is _ stable _ : see  @xcite .",
    "stable sequences are those in which small local changes to the degree sequences do not greatly affect the size of @xmath21 . many degree sequences which satisfy the conditions of theorem  [ main ] are stable",
    "; however , not all stable sequences satisfy the conditions of theorem  [ main ] .",
    "( for example , if @xmath22 and @xmath23 then @xmath9 is stable  @xcite but then @xmath24 , which is not large enough for theorem  [ main ] . )",
    "steger and wormald  @xcite gave an easily - implementable algorithm for sampling regular graphs , and proved that their algorithm performs asymptotically uniform sampling in polynomial time when @xmath25 ( where @xmath5 denotes the degree ) .",
    "kim and vu  @xcite gave a sharper analysis and established that @xmath26 suffices for efficient asymptotically uniform sampling .",
    "bayati , kim and saberi  @xcite extended steger and wormald s algorithm to irregular degree sequences , giving polynomial - time asymptotically uniform sampling when @xmath27 . from this",
    "they constructed a sequential importance sampling algorithm for @xmath7 .",
    "recently , zhao  @xcite described and analysed a similar approach to that of  @xcite , in a general combinatorial setting .",
    "zhao shows that for sampling from @xmath7 , when @xmath27 , his algorithm performs asymptotically uniform sampling in time @xmath28 .    finally we note that barvinok and hartigan  @xcite showed that the adjacency matrix of a random element of @xmath7 is `` close '' to a certain `` maximum entropy matrix '' , when the degree sequence is _",
    "tame_. the definition of tame depends on the maximum entropy matrix , but a sufficient condition is that @xmath29 and @xmath30 for some constants @xmath31 .",
    "some degree sequences satisfying this latter condition are stable sequences , and many of these degree sequences also satisfy the condition of theorem  [ main ]",
    ". it would be interesting to explore further the connections between stable degree sequences , tame degree sequences and the mixing rate of the switch markov chain .",
    "it is not known whether the corresponding counting problem ( exact evaluation of @xmath21 ) is @xmath32-complete .",
    "there are several results giving asymptotic enumeration formulae for @xmath21 under various conditions on @xmath9 : see for example  @xcite and references therein .",
    "a transition of the switch chain on @xmath7 is performed as follows : from the current state @xmath33 , choose an unordered pair of two distinct non - adjacent edges uniformly at random , say @xmath34 , and choose a perfect matching @xmath35 from the set of three perfect matchings of ( the complete graph on ) @xmath36 , chosen uniformly at random . if @xmath37 then the next state is the graph @xmath38 with edge set @xmath39 , otherwise the next state is @xmath40 .",
    "define @xmath41 . if @xmath42 and @xmath43 then @xmath44 , where @xmath45 is the number of unordered pairs of distinct nonadjacent edges in @xmath46 .",
    "this shows that the markov chain is symmetric .",
    "the chain is aperiodic since by definition @xmath47 for all @xmath33 .      to bound the mixing time of the switch chain",
    ", we apply a multicommodity flow argument .",
    "suppose that @xmath48 is the graph underlying a markov chain @xmath49 , so that @xmath50 is an edge of @xmath48 if and only if @xmath51 . a _ flow _ in @xmath48 is a function @xmath52 such that @xmath53 here @xmath54 is the set of all simple directed paths from @xmath55 to @xmath56 in @xmath48 and @xmath57 .",
    "extend @xmath58 to a function on oriented edges by setting @xmath59 , so that @xmath60 is the total flow routed through @xmath61 .",
    "write @xmath62 for the edge @xmath63 .",
    "let @xmath64 be the length of the longest path with @xmath65 , and let @xmath66 be the _ load _ of the edge @xmath61 .",
    "the _ maximum load _ of the flow is @xmath67 . using sinclair  ( * ? ?",
    "* proposition 1 and corollary 6 ) , the mixing time of @xmath49 can be bounded above by @xmath68 where @xmath69 .",
    "the definition of the multicommodity flow given in  ( * ? ? ?",
    "* section 2.1 ) carries across to irregular degree sequences without change .",
    "this is because the flow from @xmath46 to @xmath38 depends only on the symmetric difference @xmath70 of @xmath46 and @xmath38 , treated as a 2-edge - coloured graph ( with edges from @xmath71 coloured blue and edges from @xmath72 coloured red , say ) .",
    "the blue degree at a given vertex equals the red degree at that vertex , but in general the blue degree sequence will not be regular . hence the multicommodity flow definition given in  @xcite is already general enough to handle irregular degree sequences .    the multicommodity flow is defined using a process which we now sketch . given @xmath73 :    * define a bijection from the set of blue edges incident at @xmath74 to the set of red edges incident at @xmath74 , for each vertex @xmath75 $ ] .",
    "the vector of these bijections is called a _ pairing _ @xmath76 , and the set of all possible pairings is denoted @xmath77 . *",
    "the pairing gives a canonical way to decompose the symmetric difference @xmath70 into a sequence of _ circuits _ , where each circuit is a blue / red - alternating closed walk .",
    "* each circuit is decomposed in a canonical way into a sequence of simpler circuits of two types : 1-_circuits _ and 2-_circuits_. a 1-circuit is an alternating cycle in @xmath70 , while a 2-circuit is an alternating walk with one vertex of degree 4 , the rest of degree 2 , consisting of two odd cycles which share a common vertex .",
    "each 1-circuit or 2-circuit has a designated _",
    "start vertex_. ( the start vertex of a 2-circuit is the unique vertex of degree 4 . ) an important fact is that the 1-circuits and 2-circuits are _ pairwise edge - disjoint_. * each 1-circuit or 2-circuit is processed in a canonical way to give a segment of the canonical path @xmath78",
    ".    for full details see  ( * ? ? ?",
    "* section 2.1 ) .",
    "now we show how to bound the load of the flow by adapting the analysis from  @xcite .",
    "note that some proofs in  @xcite used the assumption @xmath79 , since ( for regular sequences ) the general result follows by complementation .",
    "this trick does not work for irregular degree sequences , so we can not make a similar assumption here .",
    "given matrices @xmath46 ,",
    "@xmath38 , @xmath80 , define the _ encoding _ @xmath81 of @xmath82 ( with respect to @xmath83 ) by @xmath84 by identifying each of @xmath82 , @xmath46 and @xmath38 with their symmetric 0 - 1 adjacency matrices .",
    "then @xmath81 is a symmetric @xmath85 matrix with entries in @xmath86 and with zero diagonal .",
    "entries which equal @xmath87 or 2 are called _",
    "defect entries_. treating @xmath81 as an edge - labelled graph with edges labelled @xmath88 ( and omitting edges corresponding to zero entries ) , a _ defect edge _ is an edge labelled @xmath87 or @xmath89 .",
    "( in  @xcite these were called `` bad edges '' . ) specifically , we will refer to @xmath90-_defect edges _ and to @xmath89-_defect edges_. a 2-defect edge is present in both @xmath46 and @xmath38 but is absent in @xmath82 , while a @xmath90-defect edge is absent in both @xmath46 and @xmath38 but is present in @xmath82 .",
    "we say that the _ degree _ of vertex @xmath74 in @xmath81 is the sum of the labels of the edges incident with @xmath74 ( equivalently , the sum of the entries in the row of @xmath81 corresponding to @xmath74 ) . by definition",
    ", the degree sequence of @xmath81 equals @xmath9 .",
    "some proofs from  @xcite also apply in the irregular case without any substantial change ( after replacing @xmath5 by @xmath0 ) .",
    "these proofs refer only to the symmetric difference and the process used to construct the multicommodity flow ( and none of them use the assumption @xmath91 ) .",
    "we state two of these results now .",
    "suppose that @xmath92 are such that @xmath93 is a transition of the switch chain which lies on the canonical path @xmath78 for some @xmath94 .",
    "let @xmath81 be the encoding of @xmath82 with respect to @xmath95 .",
    "then the following statements hold :    1 .   _",
    "( ( * ? ? ?",
    "* lemma 1 ) ) _  from @xmath93 , @xmath81 and @xmath76 it is possible to uniquely recover @xmath46 and @xmath38 .",
    "[ unique ] 2 .",
    "_ _ ( ( * ? ? ?",
    "* lemma 2))__there are at most four defect edges in @xmath81 .",
    "the labelled graph consisting of the defect edges in @xmath81 must form a subgraph of one of the five labelled graphs shown in figure  [ f : possible ] , where _ `` ? '' _ represents a label which may be either @xmath87 or 2 .",
    "[ defects ]                    * @xmath105 is a _ shortcut edge _ which is present in @xmath106 but which is absent in @xmath82 .",
    "( see  ( * ? ? ?",
    "* figure 4 ) . ) in this case , @xmath55 and @xmath56 are vertices on some 2-circuit , which is an alternating blue / red walk in the symmetric difference @xmath70 . hence both @xmath55 and @xmath56 have degree at least two in @xmath46 .",
    "* @xmath104 is an _ odd chord _ which is present in @xmath106 but which is absent in @xmath82 .",
    "( see the section `` processing a 1-circult '' in  @xcite . ) in this case , @xmath55 and @xmath56 are vertices on some 1-circuit , which is an alternating blue / red walk in the symmetric difference @xmath70 .",
    "again , this shows that both @xmath55 and @xmath56 have degree at least two in @xmath46 .",
    "next , if @xmath56 is incident with two edges of defect 2 then it must be that one is an odd chord for a 1-circuit @xmath107 and one is a shortcut edge for a 2-circuit @xmath108 .",
    "then @xmath56 is incident in @xmath46 with an edge of @xmath107 , an edge of @xmath108 and the two edges @xmath104 , @xmath109 which are 2-defect edges in @xmath81 .",
    "since @xmath107 and @xmath108 are edge - disjoint and no defect edge belongs to @xmath70 , it follows that @xmath101 , proving ( ii ) .",
    "now we extend the term `` encoding '' to refer to any symmetric @xmath85 matrix with entries in @xmath86 which has zero diagonal and row sums given by @xmath9 .",
    "we say that an encoding @xmath81 is _ consistent _ with @xmath82 if @xmath110 only takes entries in @xmath111 .",
    "say that an encoding is _ valid _ if it satisfies the conclusions of lemma  [ oldstuff](ii ) , and that a valid encoding is _ good _ if it also satisfies the conclusion of lemma  [ structure ] .",
    "let @xmath112 be the set of valid encodings which are consistent with @xmath82 , and let @xmath113 be the set of good encodings which are consistent with @xmath82",
    ". in  @xcite the set @xmath112 was studied , but we require a bit more information about our encodings , so we will focus on the smaller set @xmath113 .      in  ( * ? ? ?",
    "* lemma 5 ) and  ( * ? ? ?",
    "* lemma 1 ) it was shown that @xmath116 when @xmath117 is a regular degree sequence .",
    "( the assumption @xmath91 is not used in this proof . ) the proof relied on the fact that @xmath112 contains all encodings which may arise along a canonical path .",
    "but the same is true for @xmath118 , by lemma  [ oldstuff](ii ) and lemma  [ structure ] , so the proof goes through without change in the irregular setting ( after replacing @xmath5 by @xmath0 ) .",
    "the switch operation can be extended to encodings in the natural way : each switch reduces two edge labels by one and increases two edge labels by one , without changing the degrees .",
    "it was shown in  ( * ? ? ?",
    "* lemma 3 ) that from any valid encoding , one could obtain a graph ( with no defect edges ) by applying a sequence of at most three switches . in  ( * ? ? ?",
    "* lemma 4 ) we used this fact to bound the ratio @xmath119 for regular degree sequences .",
    "this provided an upper bound for the flow @xmath60 through a transition @xmath114 ( as in lemma  [ fbound ] , above ) .",
    "the proof of  ( * ? ? ?",
    "* lemma 3 ) uses regularity to prove the existence of certain edges which are needed in order to find switches to remove the defect edges .",
    "this argument fails for irregular degree sequences .",
    "instead , we consider a slightly more complicated operation than a switch , which we call a _ 3-switch_. ( this operation is called a `` circular @xmath120-swap '' in  @xcite ) .",
    "a 3-switch is described by a 6-tuple @xmath121 of distinct vertices such that @xmath122 , @xmath123 , @xmath124 are all edges and @xmath125 , @xmath126 , @xmath127 are all non - edges .",
    "the 3-switch deletes the three edges @xmath122 , @xmath123 , @xmath124 from the edge set and replaces them with @xmath125 , @xmath126 , @xmath127 , as shown in figure  [ 3-switch ] .",
    "( 10,3)(0,0 ) ( 0.5,0.5 )   ( 0.2,1.5)@xmath128 ( 0.9,2.8)@xmath129 ( 2.5,2.8)@xmath130 ( 3.0,1.8)@xmath131 ( 2.3,0.2)@xmath132 ( 1.1,0.2)@xmath133 ( 5.1,1.7)@xmath128 ( 5.7,2.8)@xmath129 ( 7.3,2.8)@xmath130 ( 8.1,1.5)@xmath131 ( 7.2,0.2)@xmath132 ( 5.9,0.2)@xmath133    let @xmath134 be the set of encodings in @xmath118 with precisely @xmath135 defect edges labelled 2 and precisely @xmath136 defect edges labelled @xmath87 , for @xmath137 and @xmath138",
    ". then @xmath139 and @xmath140 where this union is disjoint .",
    "( note that @xmath141 , by lemma  [ oldstuff](ii ) . )    for @xmath75 $ ] , given an encoding @xmath81 , write @xmath142 to denote the set of @xmath143\\setminus \\{v\\}$ ] such that @xmath144 .",
    "this is the set of neighbours of @xmath74 in @xmath81 , where neighbours along defect edges are not included . if @xmath145 then there are precisely @xmath146 non - defect edges in @xmath81 .",
    "( to see this , note that the sum of all entries in the matrix @xmath81 must equal @xmath2 , and @xmath81 has zero diagonal . )",
    "we prove that any @xmath149 can be transformed into an element of @xmath7 ( with no defect edges ) using a sequence of at most three 3-switches .",
    "the strategy is as follows : in phase 1 we aim to remove two defects per 3-switch ( one 2-defect and one @xmath90-defect ) , then in phase 2 we remove one 2-defect per 3-switch , and finally in phase 3 we remove one @xmath90-defect per 3-switch",
    ". there is at most one step in phase 1 , though the other phases may have more than one step : any phase may be empty .",
    "each 3-switch we perform gives rise to an upper bound on certain ratios of the sizes of the sets @xmath134 , by double counting . the proof is completed by combining these bounds .",
    "( such an argument is often called a `` switching argument '' in the asymptotic enumeration literature : see  @xcite for example . )",
    "* phase 1 . *",
    "if @xmath150 then phase 1 is empty : proceed to phase 2 .",
    "otherwise , suppose that @xmath151 where @xmath152 .",
    "then @xmath153 , and it follows from figure  [ f : possible ] that there must be a vertex @xmath129 which is incident with a 2-defect @xmath154 and a @xmath90-defect @xmath155 .",
    "we count the number of 3-switches @xmath121 which may be applied to @xmath81 to produce an encoding @xmath156 .",
    "this operation is shown in figure  [ double - switch ] , where defect edges are shown using thicker lines : a thick solid line is a 2-defect edge while a thick dashed line is a @xmath90-defect edge .",
    "( 10,3)(0,0 ) ( 0.5,0.5 ) , @xmath157.,title=\"fig : \" ] ( 0.2,1.5)@xmath128 ( 0.9,2.8)@xmath129 ( 2.5,2.8)@xmath130 ( 3.0,1.8)@xmath131 ( 2.3,0.2)@xmath132 ( 1.1,0.2)@xmath133 ( 5.1,1.7)@xmath128 ( 5.7,2.8)@xmath129 ( 7.3,2.8)@xmath130 ( 8.1,1.5)@xmath131 ( 7.2,0.2)@xmath132 ( 5.9,0.2)@xmath133    given @xmath158 , there is at least one vertex @xmath159 . to see this",
    ", first suppose that @xmath130 is not incident with a 2-defect .",
    "then @xmath160 has at least @xmath161 elements , leaving at least one which is distinct from @xmath128 . otherwise",
    ", if @xmath130 is incident with a 2-defect then it can be incident with at most one 2-defect , since @xmath162 .",
    "then there are at least @xmath163 choices for @xmath131 in @xmath164 , and this number is positive by lemma  [ structure](iii ) .",
    "next , we choose @xmath165 such that all six vertices are distinct , @xmath166 and @xmath167 .",
    "there are @xmath168 possibilities for @xmath165 with @xmath166 , but we must reject those which are incident with the four vertices already chosen , or which are incident to a neighbour of @xmath128 or @xmath131 .",
    "we need to be careful with @xmath90-defect edges . hence , for all @xmath169 $ ] , let @xmath170 be the number of @xmath90-defect edges _ other than _ @xmath171 which are incident with @xmath55 in @xmath81 .",
    "then @xmath172 } \\eta_x \\leq 4 $ ] since there are at most two more @xmath90-defect edges in @xmath81 .",
    "furthermore , @xmath173 .",
    "the number of bad choices for @xmath165 is at most @xmath174 to see this , note that @xmath175 so all edges incident with @xmath130 are counted in the final sum ( with @xmath176 ) .",
    "furthermore , for each @xmath177 , the edge from @xmath128 to @xmath55 is among those counted by @xmath178 , so the first sum covers all edges incident with @xmath128 or a neighbour of @xmath128 ( and similarly for the second sum ) .",
    "hence the number of bad choices for @xmath165 is at most @xmath179 the final inequality follows from setting @xmath180 , the maximum possible , and letting @xmath181 for some @xmath182 ( as well as bounding @xmath183 and @xmath184 by @xmath0 ) .",
    "now we consider the reverse of this operation , which is given by reversing the arrow in figure  [ double - switch ] . given @xmath188 , we need an upper bound on the number of 6-tuples @xmath121 such that @xmath189 and @xmath190 . since the encoding @xmath151 produced by this reverse operation must be consistent with @xmath82 , it follows that @xmath171 must be an edge of @xmath82 .",
    "hence there are precisely @xmath2 choices for @xmath191",
    ". there are at most @xmath192 ways to choose @xmath193 and at most @xmath194 ways to choose @xmath195 . from figure",
    "[ f : possible ] , if @xmath196 then @xmath197 , and if @xmath198 then @xmath199 .",
    "furthermore , @xmath200 .",
    "( otherwise , the reverse switching would produce an encoding which is not valid . ) therefore , @xmath201    finally we must choose @xmath202 such that @xmath203 , the vertices @xmath204 are distinct from the four vertices chosen so far and @xmath205 .",
    "when @xmath206 we ignore all conditions except @xmath207 , and take @xmath208 as an upper bound for the number of good choices of @xmath202 .",
    "when @xmath209 there are no 2-defects in @xmath210 , as @xmath211 , so there are at most @xmath212 good choices for @xmath202 .",
    "( the existence of any additional @xmath90-defect edges incident with @xmath128 , @xmath129 , @xmath130 or @xmath133 can only help here . )",
    "hence the number of ways to apply the reverse operation to @xmath188 to produce a consistent encoding @xmath151 is at most @xmath213 .",
    "* phase 2 . *",
    "once phase 1 is complete , we have reached an encoding @xmath151 with @xmath150 .",
    "if @xmath216 then phase 2 is empty : proceed to phase 3 . otherwise , we have @xmath217 .",
    "we count the number of ways to perform a 3-switch to reduce the number of 2-defect edges by one , as shown in figure  [ 2 - 3-switch ] .",
    "( 10,3)(0,0 ) ( 0.5,0.5 ) . , title=\"fig : \" ] ( 0.2,1.5)@xmath128 ( 0.9,2.8)@xmath129 ( 2.5,2.8)@xmath130 ( 3.0,1.8)@xmath131 ( 2.3,0.2)@xmath132 ( 1.1,0.2)@xmath133 ( 5.1,1.7)@xmath128 ( 5.7,2.8)@xmath129 ( 7.3,2.8)@xmath130 ( 8.1,1.5)@xmath131 ( 7.2,0.2)@xmath132 ( 5.9,0.2)@xmath133    choose an ordered pair @xmath218 such that @xmath185 , in @xmath219 ways .",
    "the number of ways to choose the ordered pair @xmath220 such that @xmath221 are all distinct , @xmath222 and @xmath223 , is at least @xmath224 this uses the fact that @xmath81 may contain up to two @xmath90-defect edges , so the worst case is when @xmath225 and @xmath226 .",
    "next , choose an ordered pair @xmath165 such that all six vertices are distinct , @xmath166 and @xmath227 .",
    "this can be done in at least @xmath228 ways , arguing as above .",
    "( again , the worst case is when @xmath180 and @xmath181 for some @xmath182 . )",
    "hence there are at least @xmath229 such choices for @xmath121 , using the stated upper bound on @xmath0 .    for the reverse operation , let @xmath230 where @xmath231 .",
    "we need an upper bound on the number of 6-tuples @xmath121 with @xmath232 and @xmath233 .",
    "there are at most @xmath234 choices for @xmath218 with @xmath235 , and then there are at most @xmath236 choices for @xmath237 .",
    "this uses the fact that there are at most two defect edges in @xmath210 , and hence @xmath238 , by choice of @xmath218 .",
    "finally there are at most @xmath239 choices for @xmath202 , so the number of 6-tuples where the reverse operation can be performed is at most @xmath240",
    ".      * phase 3 . *  after phase 2",
    ", we may suppose that @xmath216 .",
    "let @xmath242 where @xmath243 .",
    "we count the number of 6-tuples @xmath121 where a 3-switch can be performed with @xmath157 . performing",
    "this 3-switch will produce @xmath244 , as illustrated in figure  [ 1switch ] .",
    "( 10,3)(0,0 ) ( 0.5,0.5 ) . ,",
    "title=\"fig : \" ] ( 0.2,1.5)@xmath128 ( 0.9,2.8)@xmath129 ( 2.5,2.8)@xmath130 ( 3.0,1.8)@xmath131 ( 2.3,0.2)@xmath132 ( 1.1,0.2)@xmath133 ( 5.1,1.7)@xmath128 ( 5.7,2.8)@xmath129 ( 7.3,2.8)@xmath130 ( 8.1,1.5)@xmath131 ( 7.2,0.2)@xmath132 ( 5.9,0.2)@xmath133    there are @xmath245 ways to choose @xmath246 , and at least @xmath247 ways to choose @xmath193 .",
    "then there are at least @xmath248 ways to choose @xmath159 .",
    "( note that the presence of other @xmath90-defect edges incident with @xmath129 or @xmath130 only helps here . ) finally , we must choose @xmath165 with @xmath166 such that all vertices are distinct , @xmath249 and @xmath250 .",
    "the number of choices for @xmath165 is at least @xmath251 the penultimate line follows by substituting @xmath252 and letting @xmath253 for some @xmath182 .",
    "hence the number of 3-switches which can be performed in @xmath81 to reduce the number of 2-defects by exactly one is at least @xmath254 using the given bounds on @xmath0 .    for the reverse operation ,",
    "let @xmath255 , where @xmath243 .",
    "we need an upper bound on the number of 6-tuples such that @xmath256 , @xmath257 and @xmath171 is an edge of @xmath82 .",
    "there are at most @xmath2 choices for @xmath191 satisfying the latter condition , then at most @xmath258 ways to choose @xmath202 with @xmath207 and @xmath259 all distinct .",
    "similarly , there at most @xmath2 ways to choose @xmath260 .",
    "hence the number of reverse operations is at most @xmath261 .",
    "( _ proof of theorem  [ main]_)we wish to apply ( [ flowbound ] ) .",
    "it follows from the configuration model ( see  ( * ? ? ?",
    "* equation ( 1 ) ) ) that the set @xmath7 has size @xmath270 hence the smallest stationary probability @xmath271 satisfies @xmath272 .",
    "next , @xmath273 since each transition along a canonical path replaces an edge of @xmath46 by an edge of @xmath38 .    finally , if @xmath114 is a transition of the switch chain then @xmath274 , using ( [ ad ] ) . combining this with lemmas  [ fbound ] and  [ 3switches ] gives @xmath275 .",
    "substituting these expressions into ( [ flowbound ] ) gives the claimed bound on the mixing time .",
    "rao , r.  jana and s.  bandyopadhyay , a markov chain monte carlo method for generating random ( 0,1)-matrices with given marginals , _ sankhy@xmath277 : the indian journal of statistics _ * 58 * ( 1996 ) , 225242 ."
  ],
  "abstract_text": [
    "<S> the problem of efficiently sampling from a set of ( undirected ) graphs with a given degree sequence has many applications . </S>",
    "<S> one approach to this problem uses a simple markov chain , which we call the switch chain , to perform the sampling . </S>",
    "<S> the switch chain is known to be rapidly mixing for regular degree sequences . </S>",
    "<S> we prove that the switch chain is rapidly mixing for any degree sequence with minimum degree at least 1 and with maximum degree @xmath0 which satisfies @xmath1 , where @xmath2 is the sum of the degrees . </S>",
    "<S> the mixing time bound obtained is only an order of @xmath3 larger than that established in the regular case , where @xmath3 is the number of vertices . </S>"
  ]
}
{
  "article_text": [
    "bilevel optimization constitutes a challenging class of optimization problems , where one optimization task is nested within the other .",
    "a large number of studies have been conducted in the field of bilevel programming @xcite , and on its practical applications @xcite .",
    "classical approaches commonly used to handle bilevel problems include the karush - kuhn - tucker approach @xcite , branch - and - bound techniques @xcite and the use of penalty functions @xcite . despite a significant progress made in classical optimization towards solving bilevel optimization problems ,",
    "most of these approaches are rendered inapplicable for bilevel problems with higher levels of complexity . over the last two decades , technological advances and availability of enormous computing resources",
    "have given rise to heuristic approaches for solving difficult optimization problems .",
    "heuristics such as evolutionary algorithms are recognized as potent tools for handling challenging classes of optimization problems .",
    "a number of studies have been performed towards using evolutionary algorithms @xcite for solving bilevel problems . however , the research on evolutionary algorithms for bilevel problems is still in nascent stage , and significant improvement in the existing approaches is required .",
    "most of the heuristic approaches lack a finite time convergence proof for optimization problems .",
    "therefore , it is a common practice among researchers to demonstrate the convergence of their algorithms on a test bed constituting problems with various complexities . to the best of our knowledge , there does not exist a systematic framework for constructing single - objective bilevel test problems with controlled difficulties .",
    "test problems , which offer various difficulties found in practical application problems , are often required during the construction and evaluation of algorithms .",
    "past studies @xcite on bilevel optimization have introduced a number of simple test problems .",
    "however , the levels of difficulty can not be controlled in these test problems . in most of the studies ,",
    "the problems are either linear @xcite , or quadratic @xcite , or non - scalable with fixed number of decision variables .",
    "application problems in transportation ( network design , optimal pricing ) @xcite , economics ( stackelberg games , principal - agent problem , taxation , policy decisions ) @xcite , management ( network facility location , coordination of multi - divisional firms ) @xcite , engineering ( optimal design , optimal chemical equilibria ) @xcite have also been used to demonstrate the efficiency of algorithms . for most real - world problems ,",
    "the true optimal solution is unknown .",
    "therefore , it is hard to identify , whether a particular solution obtained using an existing approach is close to the optima . under these uncertainties ,",
    "it is not possible to systematically evaluate solution procedures on practical problems .",
    "these drawbacks pose hurdles in algorithm development , as the performance of the algorithms can not be evaluated on various difficulty frontiers .",
    "a test - suite with controllable level of difficulties helps in understanding the bilevel algorithms better .",
    "it gives information on what properties of bilevel problems are handled efficiently by the algorithm and what are not .",
    "an algorithm which performs well on the test problem by effectively tackling most of the challenges offered by the test - suite is expected to perform good on other simpler problems as well .",
    "therefore , controlled test problems are necessary to advance the research on bilevel optimization using evolutionary algorithms .    in this paper , we identify the challenges that are commonly encountered in bilevel optimization problems .",
    "based on these findings , we propose a procedure for constructing test problems that mimic these difficulties in a controllable manner .",
    "using the construction procedure , we propose a collection of bilevel test problems that are scalable in terms of variables and constraints .",
    "the proposed scheme allows the user to control the difficulties at the two levels independently of each other . at the same time",
    ", it also allows the control of the extent of difficulty arising due to interaction of the two levels . to make algorithm evaluation easier , the problems generated using the framework are such that the optimal solution of the bilevel problem is known",
    "moreover , the induced set of the bilevel problem is known as a function of the upper level variables .",
    "such information helps the algorithm developers to debug their procedures during the development phase , and also allows to evaluate the convergence properties of the approach .",
    "the paper is organized as follows . in the next section ,",
    "we explain the structure of a general bilevel optimization problem and introduce the notation used in the paper .",
    "section  [ sec : framework ] presents our framework for constructing scalable test problems for bilevel programming .",
    "thereafter , following the guidelines of the construction procedure , we suggest a set of twelve scalable test problems in section  [ sec : testproblems ] . to create a benchmark for evaluating different solution algorithms ,",
    "the problems are solved using a simple nested bilevel evolutionary algorithm which is a nested scheme described in section  [ sec : nested - algorithm ] .",
    "the results for the baseline algorithm are discussed in section  [ sec : results ] .",
    "a bilevel optimization problem involves two levels of optimization tasks , where one level is nested within the other .",
    "the outer optimization task is usually called upper level optimization task , and the inner optimization task is called lower level optimization task .",
    "the hierarchical structure of the problem requires that only the optimal solutions of the inner optimization task are acceptable as feasible members for the outer optimization task .",
    "the problem contains two types of variables ; namely the upper level variables @xmath0 , and the lower level variables @xmath1 .",
    "the lower level is optimized with respect to the lower level variables @xmath1 , and the upper level variables @xmath0 act as parameters .",
    "an optimal lower level vector and the corresponding upper level vector @xmath0 constitute a feasible upper level solution , provided the upper level constraints are also satisfied .",
    "the upper level problem involves all variables @xmath2 , and the optimization is to be performed with respect to both @xmath0 and @xmath1 . in the following ,",
    "we provide two equivalent formulations for a general bilevel optimization problem with one objective at both levels :    0.1 cm    let @xmath3 denote the product of the upper - level decision space @xmath4 and the lower - level decision space @xmath5 , i.e. @xmath6 , if @xmath7 and @xmath8 . for upper - level objective function @xmath9 and lower - level objective function @xmath10 ,",
    "a general bilevel optimization problem is given by @xmath11 where the functions @xmath12 , @xmath13 , represent lower - level constraints and @xmath14 , @xmath15 , is the collection of upper - level constraints .",
    "0.2 cm    in the above formulation , a vector @xmath16 is considered feasible at the upper level , if it satisfies all the upper level constraints , and vector @xmath17 is optimal at the lower level for the given @xmath18 .",
    "we observe in this formulation that the lower - level problem is a parameterized constraint to the upper - level problem",
    ". an equivalent formulation of the bilevel optimization problem is obtained by replacing the lower - level optimization problem with a set value function which maps the given upper - level decision vector to the corresponding set of optimal lower - level solutions . in the domain of stackelberg games ,",
    "such mapping is referred as the rational reaction of the follower to the leader s choice @xmath0 .",
    "0.2 cm    let set - valued function @xmath19 , denote the optimal - solution set mapping of the lower level problem , i.e. @xmath20 a general bilevel optimization problem ( blop ) is then given by @xmath21 where the function @xmath22 may be a single - vector valued or a multi - vector valued function depending on whether the lower level function has multiple global optimal solutions or not .",
    "0.2 cm    in the test problem construction procedure , the @xmath22 function provides a convenient description of the relationship between the upper and lower level problems .",
    "figures  [ fig : figure1_par ] and [ fig : figure2_par ] illustrate two scenarios , where @xmath22 can be a single vector valued or a multi - vector valued function respectively . in figure",
    "[ fig : figure1_par ] , the lower level problem is shown to be a paraboloid with a single minimum function value corresponding to the set of upper level variables @xmath0 .",
    "figure  [ fig : figure2_par ] represents a scenario where the lower level function is a paraboloid sliced from the bottom with a horizontal plane .",
    "this leads to multiple minimum values for the lower level problem , and therefore , multiple lower level solutions correspond to the set of upper level variables @xmath0 .    before discussing the test problem construction framework ,",
    "we provide further insights into bilevel programming through a simple real - world problem @xcite .",
    "the problem is chosen from the domain of game theory , where there are two entities in stackelberg competition with each other .",
    "the upper level entity is a leader firm and the lower level entity is a follower firm .",
    "the leader and the follower firms compete with each other in order to maximize their profits @xmath23 and @xmath24 respectively .",
    "the leader makes the first move and therefore has the first mover s advantage . for any given action of the leader firm ,",
    "the follower firm reacts optimally . with complete knowledge about the follower firm ,",
    "the leader firm solves the following bilevel optimization problem in order to determine the stackelberg optimum .",
    "@xmath25 where @xmath26 is the quantity demanded , @xmath27 is the price of the goods sold , and @xmath28 is the cost of production of the respective firm .",
    "the variables in this model are the production levels of each firm @xmath29 , @xmath30 and demand @xmath26 .",
    "the leader sets its production level first , and then the follower chooses its production level based on the leader s decision .",
    "this simple model assumes homogeneity of the products manufactured by the firms .",
    "additionally , constraint ( [ eq : demand ] ) ensures that all demand is satisfied . by assuming that the firms produce and sell homogeneous goods , we specify a single linear price function for both firms as an inverse demand function of the form @xmath31 where @xmath32 are constants . since costs often tend to increase with the amount of production , we assume convex quadratic cost functions for both firms to be of the form @xmath33 where @xmath34 denote the fixed costs of the respective firm , and @xmath35 and @xmath36 are positive constants .",
    "it is possible to solve this bilevel problem analytically .",
    "the optimal strategies of the leader and follower , @xmath37 , in this simple linear - quadratic model can be found by using simple differentiation . for brevity",
    ", we avoid the steps and directly provide the analytical optimum for the problem .",
    "@xmath39 equations ( [ eq : optlead ] ) and ( [ eq : optfol ] ) are the strategies of the leader and follower at stackelberg equilibrium .",
    "these depend only on the constant parameters of the model . given these values ,",
    "the leader will choose the production level given by equation ( [ eq : optlead ] ) , and the follower will react optimally by choosing its production level using equation ( [ eq : optfol ] ) . at the optimum , constraint ( [ eq : demand ] ) holds as a strict equality , which provides us the optimal demand @xmath40 .",
    "in the presence of linear and quadratic functions , it is possible to solve the model analytically .",
    "however , as soon as the functions get complicated , it becomes difficult to find the optimum using analytical or numerical approaches .",
    "next , we provide a test problem construction framework that allows us to create scalable bilevel test problems with a variety of difficulties commonly encountered in bilevel optimization .",
    "the presence of an additional optimization task within the constraints of the upper level optimization task leads to a significant increase in complexity , as compared to any single level optimization problem . in this section",
    ", we describe various kinds of complexities , which a bilevel optimization problem can offer , and provide a test problem construction procedure that can induce these difficulties in a controllable manner . in order to create realistic test problems ,",
    "the construction procedure should be able to control the scale of difficulties at both levels independently and collectively , such that the performance of algorithms in handling the two levels is evaluated .",
    "the test problems created using the construction procedure are expected to be scalable in terms of number of decision variables and constraints , such that the performance of the algorithms can be evaluated against increasing number of variables and constraints .",
    "the construction procedure should be able to generate test problems with the following properties :    1 .",
    "the optimal solution of the bilevel optimization should be known .",
    "clear identification of a relationship between the lower level optimal solutions and the upper level variables .    1 .   controlled difficulty in convergence at upper and lower levels .",
    "2 .   controlled difficulty caused by interaction of the two levels .",
    "3 .   multiple global solutions at the lower level for a given set of upper level variables .",
    "4 .   possibility to have either conflict or cooperation between the two levels .",
    "scalability to any number of decision variables at upper and lower levels .",
    "6 .   constraints ( preferably scalable ) at upper and lower levels .",
    "next , we provide the bilevel test problem construction procedure , which is able to induce most of the difficulties suggested above .      to create a tractable framework for test - problem construction , we split the upper and lower level functions into three components .",
    "each of the components is specialized for induction of certain kinds of difficulties into the bilevel problem .",
    "the functions are determined based on the required complexities at upper and lower levels independently , and also by the required complexities because of the interaction of the two levels . in this",
    "setting , a generic bilevel test problem can be written as follows :    @xmath41     & + vector & purpose & vector & purpose + @xmath42 & complexity on upper - level & @xmath43 & complexity on lower - level + @xmath44 & interaction with lower - level & @xmath45 & interaction with upper - level +     +   + & + component & purpose & component & purpose + @xmath46 & difficulty in convergence & @xmath47 & functional dependence + @xmath48 & conflict / co - operation & @xmath49 & difficulty in convergence + @xmath50 & difficulty in interaction & @xmath51 & difficulty in interaction +    in the above equations , each of the levels contains three terms .",
    "a summary on the roles of different terms is provided in table  [ tab : framework ] .",
    "the upper level and lower level variables have been broken into two smaller vectors ( see panel a in table  [ tab : framework ] ) .",
    "the vectors @xmath42 and @xmath43 are used to induce complexities at the upper and lower levels independently .",
    "the vectors @xmath44 and @xmath45 are responsible to induce complexities because of interaction . in a similar fashion",
    ", we decompose the upper and lower level functions such that each of the components is specialized for a certain purpose only ( see panel b in table  [ tab : framework ] ) . at the upper level ,",
    "the term @xmath46 is responsible for inducing difficulty in convergence solely at the upper level .",
    "similarly , at the lower level , the term @xmath49 is responsible for inducing difficulty in convergence solely at the lower level .",
    "the term @xmath48 decides if there is a conflict or a cooperation between the upper and lower levels .",
    "the terms @xmath52 and @xmath53 are interaction terms which can be used to induce difficulties because of interaction at the two levels .",
    "term @xmath52 may also induce a cooperation or a conflict . finally , @xmath47 is a fixed term for the lower level optimization problem and does not induce any convergence difficulties .",
    "it is used along with the lower level interaction term to create a functional dependence between lower level optimal solution(s ) and the upper level variables .",
    "the difficulties related to constraints are handled separately .",
    "the test - problem framework allows introduction of difficulties in terms of convergence at both levels of a bilevel optimization problem while retaining sufficient control . to demonstrate this ,",
    "let us consider the structure of the lower level minimization problem .",
    "for a given @xmath54 , the lower level minimization problem is written as , @xmath55 where the upper level variables @xmath56 act as parameters for the optimization problem .",
    "the corresponding optimal - set mapping is given by , @xmath57 where @xmath58 does not appear due to its independence from @xmath1 . since all of the terms are independent of each other , we note that the optimal value of the function @xmath59 can be recovered by optimizing the functions @xmath60 and @xmath61 individually .",
    "function @xmath60 contains only lower level variables @xmath43 , which do not interact with upper level variables .",
    "it introduces convergence difficulties at the lower level without affecting the upper level optimization task .",
    "function @xmath61 contains both lower level variables @xmath45 , and upper level variables @xmath44 .",
    "the optimal value of this function depends on @xmath44 .",
    "the following example shows that the calibration of the desired difficulty level for the lower level problem boils down to the choice of functions @xmath60 and @xmath61 such that their optima are known .",
    "example 1:_[ex : simple - lower ] to create a simple lower level function , let the dimension of the variable sets be as follows : @xmath62 , @xmath63 , @xmath64 and @xmath65",
    ". consider a special case where @xmath66 , then the three functions could be defined as follows , @xmath67 where @xmath58 affects only the value of the function without inducing any convergence difficulties .",
    "the corresponding optimal set mapping @xmath22 is reduced to an ordinary vector valued function , @xmath68    as discussed above , other functions can be chosen with desired complexities to induce difficulties at the lower level and come up with a variety of lower level functions .",
    "similarly , @xmath69 is a function of @xmath42 , which does not interact with any lower level variables .",
    "it causes convergence difficulties at the upper level without introducing any other form of complexity in the bilevel problem .",
    "next , we consider difficulties due to interaction between the upper and lower level optimization tasks .",
    "the upper level optimization task is defined as a minimization problem over the graph of the optimal solution set mapping @xmath22 , i.e. , @xmath70 where the objective function @xmath71 is a sum of three independent terms .",
    "our primary interest is on the last two terms @xmath48 and @xmath50 , which determine the type of interaction there is going to be between the optimization problems .",
    "this can be done in two different ways , depending on whether a cooperation or a conflict is desired between the upper and lower level problems .",
    "0.2 cm    a bilevel optimization problem is said to be co - operative , if in the vicinity of @xmath72 for a particular @xmath0 , an improvement in the lower level function value leads to an improvement in the upper level function value . within our test problem framework ,",
    "the independence of terms in the upper level objective function @xmath73 implies that the co - operative condition is satisfied when for any upper level decision @xmath0 the corresponding lower level decision @xmath74 is such that @xmath75 and @xmath76 .",
    "0.2 cm    0.2 cm    a bilevel optimization problem is said to be conflicting , if in the vicinity of @xmath72 for a particular @xmath0 , an improvement in the lower - level function value leads to an adverse effect on the upper level function value . in our framework , a conflicting test problem is obtained when for any upper level decision @xmath0 the corresponding lower level decision @xmath74 is such that @xmath77 and @xmath78 .    0.2 cm    in the above general form , the functions @xmath60 and @xmath61 may have multiple optimal solutions for any given upper level decision @xmath0 . however , in order to create test problems with tractable interaction patterns , we would like to define them such that each problem has only a single lower level optimum for a given @xmath0 . to ensure the existence of single lower level optimum , and to enable realistic interactions between the two levels , we consider imposing the following simple restrictions on the objective functions :    0.2 cm _ case 1 .",
    "creating co - operative interaction : _ a test problem with co - operative interaction pattern can be created by choosing @xmath79 where @xmath80 is any function of @xmath44 whose minimum is known . 0.2 cm _ case 2 .",
    "creating conflicting interaction : _ a test problem with a conflict between the two levels can be created by simply changing the signs of terms @xmath60 and @xmath61 on the right hand side in , @xmath81 the choice of @xmath82 and @xmath83 suggested here is a special case , and there can be many other ways to achieve conflict or co - operation using the two functions . 0.2 cm _ case 3 . creating mixed interaction : _ there may be a situation of both cooperation and conflict if functions @xmath82 and @xmath83 are chosen with opposite signs as , @xmath84 or @xmath85 0.2 cm    _ example 2 : _ consider a bilevel optimization problem where the lower level task is given by example 1 . according to the above procedures , we can produce a test problem with a conflict between the upper and lower level by defining the upper level objective function as follows , @xmath86 the chosen formulation corresponds to case 2 , where @xmath87 .",
    "the final optimal solution of the bilevel problem is @xmath88 for @xmath89 .      in this subsection , we discuss constructing test problems with lower level function having multiple global solutions for a given set of upper level variables . to achieve this , we formulate a lower level function which has multiple lower level optima for a given @xmath90 , such that @xmath91",
    ". then we ensure that out of all these possible lower level optimal solutions one of them ( @xmath92 ) corresponds to the best upper level function value , i.e. , @xmath93    to incorporate this difficulty in the problem , we choose the second functions at the upper and lower levels .",
    "given that the term @xmath49 is responsible for causing complexities only at the lower level , we can freely formulate it such that it has multiple lower level optimal solutions . from this",
    "it necessarily follows that the entire lower level function has multiple optimal solutions .",
    "0.2 cm _ example 3 : _ we describe the construction procedure by considering a simple example , where the cardinalities of the variables are , @xmath94 , @xmath95 , @xmath96 and @xmath97 , and the lower level function is defined as follows , @xmath98 here , we observe that @xmath49 induces multiple optimal solutions , as its minimum value is @xmath99 for all @xmath100 . at the minimum @xmath51 fixes the values of @xmath101 and @xmath102 to @xmath103 and @xmath104 respectively .",
    "next , we write the upper level function ensuring that out of the set @xmath100 , one of the solutions is best at upper level , @xmath105 the formulation of @xmath48 , as sum of squared terms ensures that @xmath106 provides the best solution at the upper level for any given @xmath56 .      in this subsection , we discuss the types of constraints that can be encountered in a bilevel optimization problem .",
    "we only consider inequality constraints in this bilevel test problem construction framework . considering that the bilevel problems have",
    "the possibility to have constraints at both levels , and each constraint could be a function of two different kinds of variables , the constrained set at both levels can be further broken down into smaller subsets as follows :    .composition of the constraint sets at both levels . [",
    "cols=\"^,<,<,<\",options=\"header \" , ]     the nested bilevel evolutionary algorithm was able to solve all the test problems with @xmath107 dimensions .",
    "we consider a test problem solved if the difference between the function value achieved by the algorithm and the optimal function value is no more than @xmath108 .",
    "however , the number of function evaluations required to obtain the optimal solutions in each of the test problems is large .",
    "the function evaluations at the upper level are much smaller , as compared to the function evaluations at the lower level .",
    "a large number of lower level function evaluations are required , as a lower level optimization task is executed for each upper level vector .",
    "for every newly created upper level vector , we first find the lower level optimal solution and then evaluate the upper level function value .",
    "therefore , the number of function evaluations at the upper level is same as the number of times the lower level optimization task is executed .",
    "when the size of the test problems is increased to @xmath109 , we observe that the number of function evaluations increase significantly .",
    "the nested approach is able to successfully solve the first 5 test problems in all the runs . for test problems smd6 , smd7 and smd8 , it is unable to solve the problems in all the runs , rather it arrives at the optimal solutions for more than @xmath110 of the runs . for smd6",
    "the success rate was @xmath111 , for smd7 it was @xmath112 and for smd8 it was @xmath113 .",
    "the nested approach fails to handle the constrained test problems for the chosen algorithm parameters .",
    "the lower level problems could not be completely solved for smd9 to smd12 , which introduced infeasible members at the upper level . in case of @xmath114",
    "dimensional test problems , the nested approach is able to solve smd1 to smd5 for all the runs .",
    "it is able to handle smd6 in @xmath113 of the runs , but fails to handle smd7 to smd12 .",
    "the results demonstrate that a high number of function evaluations are required to solve bilevel problems . with an increase in the number of dimensions ,",
    "the complexity increases significantly and the available computational resources quickly become insufficient to solve larger versions of the problems . in this paper , we utilize a global optimizer at both levels , which successfully solved smaller versions of the test problems , but failed for constrained test problems with high dimensions",
    ". given , the complex nature of bilevel optimization problems , evolutionary algorithms might be a useful approach to follow .",
    "however , using evolutionary algorithms alone would demand a large number of function evaluations to solve even simple bilevel problems .",
    "therefore , an intelligent approach which utilizes results from the classical literature within an evolutionary algorithm might be a feasible direction towards handling such problems .",
    "the set of test problems proposed in this paper would be useful to evaluate such algorithms across various difficulties which a bilevel optimization problem could offer .",
    "in this paper we have provided a test problem construction procedure for unconstrained as well as constrained bilevel optimization .",
    "the procedure offers the flexibility to control the difficulties at the two levels individually as well as collectively . to demonstrate the framework , we have created a test - bed of 12 bilevel optimization problems , out of which 8 are unconstrained and 4 are constrained .",
    "the test - suite contains problems , which are scalable in terms of number of variables as well as constraints .",
    "moreover , the optimal solutions for all the test problems are clearly identified , which would be useful in testing and evaluating bilevel optimization algorithms .",
    "the test problem construction procedure should allow researchers to create additional test problems by varying the basic functions used in different test problems . as a benchmark for comparison",
    ", we have provided results from a nested bilevel evolutionary scheme , which utilizes a global optimizer at both levels .",
    "five and ten - variable instances of all the test problems have been solved , which demonstrate the high computational requirement of bilevel problems even for smaller instances .",
    "this amply indicates that the solution of bilevel problems , even with an evolutionary algorithm , is a challenging task and more attention must be devoted to develop computationally faster algorithms .",
    "authors a. sinha and p. malo wish to thank the wallenberg foundation and liikesivistysrahasto for supporting this study .",
    "p. malo acknowledges the support provided by the emil aaltonen foundation .",
    "k. deb acknowledges start - up grant from department of electrical and computer engineering and college of engineering at michigan state university , east lansing , usa ."
  ],
  "abstract_text": [
    "<S> in this paper , we propose a procedure for designing controlled test problems for single - objective bilevel optimization . </S>",
    "<S> the construction procedure is flexible and allows its user to control the different complexities that are to be included in the test problems independently of each other . </S>",
    "<S> in addition to properties that control the difficulty in convergence , the procedure also allows the user to introduce difficulties caused by interaction of the two levels . as a companion to the test problem construction framework </S>",
    "<S> , the paper presents a standard test suite of twelve problems , which includes eight unconstrained and four constrained problems . </S>",
    "<S> most of the problems are scalable in terms of variables and constraints . to provide baseline results , </S>",
    "<S> we have solved the proposed test problems using a nested bilevel evolutionary algorithm . </S>",
    "<S> the results can be used for comparison , while evaluating the performance of any other bilevel optimization algorithm . </S>",
    "<S> the codes related to the paper may be accessed from the website http://bilevel.org .    </S>",
    "<S> * keywords : * bilevel optimization , bilevel test - suite , test problem construction , evolutionary algorithm . </S>"
  ]
}
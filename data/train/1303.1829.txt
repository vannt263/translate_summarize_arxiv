{
  "article_text": [
    "the watershed is a versatile and powerful segmentation tool .",
    "its use for segmentation is due to ch.lantujoul and s.beucher @xcite .",
    "it may be applied on an image considered as a topographic surface @xcite , @xcite , @xcite .",
    "an image may be considered as a node weighted graph ; the nodes are the pixels of the image , weighted by their grey tone ; the edges connect neighboring nodes and are not weighted .  .  or the watershed may be applied on an edge weighted graph , such as a region adjacency graph @xcite , where the nodes are unweighted and represent the catchment basins , and the edges connecting neighboring basins are weighted by the altitude of the pass point separating two basins .     in the first case",
    ", one has to find the watershed on a node weighted graphs , in the second on an edge weighted graph @xcite .",
    "definitions and algorithms are not the same in both worlds , although the have the same physical inspirations .  the rain model , where the destiny of a drop of water falling on the surface defines the catchment basins ; a catchment basin is the attraction zone of a minimum , i.e. the set of nodes from where a drop of water may reach this minimum .",
    "catchment basins generally overlap.the flooding model where the relief is flooded from sources placed at the regional minima and meet for forming a partition .",
    "the later method being often implemented as shortest distance algorithms @xcite , @xcite .",
    "there is no opposition between these models as the same trajectory may be followed from bottom to top , and we have a flooding model or from top to bottom and we have a rain model .  a good review on the watershed may be found in @xcite , and in the recent book @xcite .",
    "this paper aims at showing the equivalence between edge or node weighted graphs for the construction of the watershed .",
    "a _ non oriented graph _",
    "@xmath0   $ ] is a collection @xmath1 of vertices or nodes and of edges @xmath2 an edge @xmath3 being a pair of vertices ( see @xcite,@xcite ) .    _",
    "a chain _ of length @xmath4 is a sequence of @xmath4 edges @xmath5 , such that each edge @xmath6 of the sequence @xmath7 shares one extremity with the edge @xmath8 @xmath9 , and the other extremity with @xmath10 @xmath11 .    a _ path _ between two nodes @xmath12 and",
    "@xmath13 is a sequence of nodes @xmath14 such that two successive nodes @xmath15 and @xmath16 are linked by an edge .     _ a cycle",
    "_ is a chain or a path whose extremities coincide .    _",
    "a cocycle _ is the set of all edges with one extremity in a subset @xmath17 and the other in the complementary set @xmath18    the subgraph spanning a set @xmath19 is the graph @xmath20 $ ] , where @xmath21 are the edges linking two nodes of @xmath22    the partial graph associated to the edges @xmath23 is @xmath24.$ ]    _ a connected graph _ is a graph where each pair of nodes is connected by a path .      in a graph @xmath0",
    ", $ ] edges and nodes may be weighted : @xmath25 is the weight of the edge @xmath26 and @xmath15 the weight of the node @xmath27 the weights take their value in the completely ordered lattice @xmath28 .      [",
    "[ regional - minima ] ] regional minima + + + + + + + + + + + + + + +    a subgraph @xmath29 of an edge weighted graph @xmath30 is a flat zone , if any two nodes of @xmath29 are connected by a chain of uniform altitude .    a subgraph @xmath29 of a graph @xmath30 is a regional minimum",
    "if @xmath29 is a flat zone and all edges in its cocycle have a higher altitude .    [ [ catchment - basins ] ] catchment basins + + + + + + + + + + + + + + + +    a chain @xmath31 is a _ flooding chain _",
    ", if each edge @xmath32 is one of the lowest edges of its extremity @xmath33 and if along the chain the weigths of the edges is never increasing .",
    "the catchment basin of a minimum @xmath34 is the set of nodes linked by a flooding chain with a node within @xmath35      [ [ regional - minima-1 ] ] regional minima + + + + + + + + + + + + + + +    a subgraph @xmath29 of a node weighted graph @xmath30 is a flat zone , if any two nodes of @xmath29 are connected by a path along which all nodes have the same altitude .    a subgraph @xmath29 of a graph @xmath30 is a regional minimum if @xmath29 is a flat zone and all neighboring nodes have a higher altitude .    [",
    "[ catchment - basins-1 ] ] catchment basins + + + + + + + + + + + + + + + +    a _ flooding path _ between two nodes is a path along which the weigths of the nodes is never increasing .",
    "the catchment basin of a minimum @xmath34 is the set of nodes linked by a non ascending path with a node within @xmath35    the definition of the catchment basins is the loosest possible , compatible with the physical inspiration of the rain model : a drop of water falling on a surface can not go upwards .  with this definition",
    ", the same node may belong to various catchment basins .",
    "in other words there are large overlapping zones of the catchment basins . as most algorithm aim at producing a partition",
    ", they propose various methods for suppressing these overlapping zones .",
    "we want to show the equivalence of the watershed on node and edge weighted graphs .",
    "we first present the outline of the method on the two simple graphs in fig.[wshdex1 ] , the left one being edge weighted and the right being node weighted .",
    "[ ptb ]    wshdex1-eps-converted-to.pdf    consider first the edge weighted graph .",
    "it has 4 nodes a , b , c  and  d separated by weighted edges .  in a flooding chain ,",
    "each node is linked with the next node by one of its lowest edges .",
    "for this reason , if an edge is not the lowest edge of one of its extremities , it will never be crossed by a flooding chain .",
    "it is the case for the edge bc : the lowest adjacent edge of b is ab and the lowest adjacent edge of  c is cd .",
    "for this reason , this edge bc can be suppressed from the graph ( as presented in the second line ) , without modifying the flooding chains of the original graph .  in a last step",
    "we assign weights to the nodes : each node gets the weight of its lowest adjacent edge , as represented in the third line  .he resulting graph is called flooding graph . in our case , it has two regional minima , which are identical if one considers them from the point of view of the edge weights or the node weights .  for this simple graph , they constitute the catchment basins .",
    "consider now the node weigthed graph on the right of fig.[wshdex1 ]  .",
    "it has two isolated regional minima .",
    "one adds a loop edge linking each isolated node with itself as shown in fig.[wshdex1 ] .",
    "this modification does not change the flooding paths of the initial graph .",
    "the last step consists in assigning , as weight to each edge , the maximal weight of its extremities .",
    "the added loops algo get an edge weight .  as a result we get again a flooding graph with the following features :    * the edges spanning the regional minima of the node weighted graph are the regional minima of the edge weighted graph .",
    "* the lowest adjacent edge of a node has the same weight as this node .",
    "for this reason each flooding path of the node weighted graph is simultaneously a flooding chain of the edge weighted graph .",
    "having an identity between the minima and between flooding paths and chains , the catchment basins of both graphs are the same . in our case",
    "we have two basins with an overlapping zone containing the node f@xmath36",
    "we define two operators between edges and nodes : - an erosion @xmath37   _ { ij}=n_{i}\\wedge n_{j}$ ] and its adjunct dilation @xmath38   _ { i}=\\underset{(k\\text{\\thinspace neighbors\\thinspace of\\thinspace}\\,i)}{\\bigvee e_{ik}}$]- a dilation @xmath39   _ { ij}=n_{i}\\vee n_{j}$ ] and its adjunct erosion @xmath40   _ { i}=\\underset{(k\\text{\\thinspace neighbors\\thinspace of\\thinspace}\\,i)}{\\bigwedge e_{ik}}$ ]    the pairs @xmath41 and @xmath42 are adjunct operators .",
    "the pairs @xmath43 and @xmath44 dual operators .",
    "we call the first pair * flooding adjunction * as we may give it a physical explanation .",
    "let us consider a region adjacency graph of a topographical surface , where @xmath15 and @xmath45 represent the flood level in the basins @xmath46 and @xmath47 and @xmath25 represents the altitude of the pass pont between both basins .  then : the altitudes of the nodes @xmath46 and @xmath47 the lowest flood covering @xmath46 and @xmath48 has the altitude @xmath49   _ { ij}=n_{i}\\vee n_{j}$ ] if @xmath46 represents a catchment basin , @xmath50 the altitude of the pass points with the neighboring basin @xmath51 then the highest level of flooding without overflow through an adjacent edge is @xmath40   _ { i}=\\underset{(k\\text{\\thinspace neighbors\\thinspace of\\thinspace}\\,i)}{\\bigwedge e_{ik}}.$ ]    as @xmath52 and @xmath53 are adjunct operators , the operator @xmath54 is a closing on @xmath4 and @xmath55 is an opening on @xmath56 .",
    "we consider first an edge weighted graph @xmath58  and study the effect of the opening @xmath57 on its edge weights .",
    "fig.[wfal22 ] presents from left to right : 1 ) an edge weighted graph , , 2 ) the result of the erosion @xmath52 , 3 ) the subsequent dilation producing an opening . the edges in red are those whose weight has been reduced by the opening .",
    "the others , invariant by the opening * *  * * @xmath57 are the edges which are , as we establish below , the lowest edge of one of their extremities .",
    "two possibilities exist for an edge @xmath26 with a weight @xmath59 the edge @xmath26 has lower neighboring edges at each extremity . hence @xmath60 and @xmath61 ; hence @xmath62 the edge @xmath26 is not invariant by the opening @xmath57 the edge @xmath26 is the lowest edge of the extremity @xmath27 then @xmath63 and @xmath64 ; hence @xmath65 the edge @xmath26 is invariant by the opening @xmath57    hence the edges which are invariant by @xmath57 are all edges which are the lowest edges for one of their extremities .",
    "the operator keeping for each node only its lowest adjacent edges is written @xmath66as each node has at least one lowest neighboring edge , the resulting graph @xmath67 spans all the nodes .",
    "the resulting graph also contains all flooding chains of the initial graph ( since in a flooding chain , each edge is the lowest edge of one of its extremities ) .",
    "consider an edge weighted graph @xmath58 invariant by the opening @xmath68 we assign to the nodes the weights @xmath69we call @xmath70 the graph on which one only considers the node weights .",
    "if an edge weighted graph @xmath58 is invariant by the opening @xmath71 then its regional minima edges span the regional minima nodes of @xmath72    * proof : * a regional minimum @xmath34 of the graph @xmath58 is a plateau of edges with altitude @xmath73 , with all adjacent edges in the cocycle having a weight higher than @xmath74if a node @xmath46 belongs to this regional minimum , its adjacent edges have a weight @xmath75 but it has at least one neighboring edge with weight @xmath73 : hence the weight of @xmath46 is @xmath76 consider now an edge @xmath77 with @xmath78 inside the regional minimum and @xmath79 outside",
    ".  then @xmath80 .  as @xmath81is invariant by @xmath71",
    "the edge @xmath82 is one of the lowest edges of the nodes @xmath79 : thus the weight of @xmath79 is @xmath83this shows that the nodes spanned by the regional minimum @xmath34 form a regional minimum of the graph @xmath72      consider now a node weighted graph @xmath85the closing @xmath84 is obtained by a dilation @xmath53 of the node weights followed by an erosion @xmath69    the closing @xmath84 replaces each isolated node constituting a regional minimum by its lowest neighboring node and leaves all other nodes unchanged .",
    "consider a node with a weight @xmath73 belonging to a regional minimum : consider the case where the node @xmath46 is an isolated regional minimum .",
    "then @xmath53 assigns to all edges adjacent to @xmath46 a weight bigger than @xmath74the subsequent erosion @xmath52 assigns to @xmath46 the smallest of these weights , which is the weight of the smallest neighbor .  the node @xmath46 is not invariant by the closing @xmath86 suppose that @xmath46 belongs to a regional minimum which is not isolated .",
    "the dilation @xmath53 assigns to each edge adjacent to @xmath46 a weight @xmath87if @xmath46 has a a neighbor @xmath48 with a weight @xmath88then @xmath53 assigns to the edge @xmath26 the weight @xmath74the subsequent erosion @xmath52 assigns to @xmath46 the smallest of these weights , that is @xmath89 the node @xmath46 is invariant by the closing @xmath86    hence if @xmath30 has isolated regional minima , it is not invariant by @xmath90if we add a loop edge linking each isolated regional minimum with itself we obtain a graph invariant by @xmath91indeed , if @xmath46 is an isolated regional minimum with weight @xmath92 we add a loop edge @xmath93 ; the dilation @xmath53 assigns to the loop the weight @xmath73 and to all other edges adjacent to @xmath94 a weight @xmath95the subsequent erosion @xmath52 assigns to @xmath46 the smallest of these weights , which is the weight of the loop , i.e.  @xmath89    we write @xmath96 the operator which adds to a node weighted graph a loop between each isolated regional minimum and itself .",
    "consider a node weighted graph @xmath70 invariant by the closing @xmath86 we assign to the edges the weights @xmath97we call @xmath58 the graph on which one only consider the edge weights .",
    "if @xmath30 is invariant by the closing @xmath98 then the edges spanning the regional minima nodes of @xmath70 form the regional minima edges of @xmath99    * proof : * a regional minimum @xmath34 of @xmath70 is a plateau of pixels with altitude @xmath73 , containing at least two nodes ( there are no isolated regional minima as @xmath70 is invariant by @xmath84 ) .",
    "all internal edges of the plateau get the valuation @xmath73 by @xmath100 if an edge @xmath26 has the extremity @xmath46 in the minimum and the extremity @xmath48 outside , then @xmath101hence , for the graph @xmath102 the edges spanning the nodes of @xmath34 form a regional minimum .",
    "we consider now a graph @xmath103 on which both nodes and edges are weighted .  if we consider only the edge weights we write @xmath58 and @xmath70 if we consider only the node weights .",
    "* definition : * an edge and node weighted graph @xmath104 $ ] is a flooding graph iff its weight distribution @xmath105 verifies both @xmath106 and @xmath107    in a flooding graph , the weight distribution @xmath105 verifies @xmath108 and @xmath109 showing that @xmath110 and @xmath111    as @xmath30 is invariant by @xmath71 all its edges are the lowest edge of one of their extremities . and as @xmath30 is invariant by @xmath98 it has no isolated regional minimum .    we have established earlier that :    * if a graph @xmath58 is invariant by @xmath71 then its regional minima edges span the regional minima nodes of @xmath112 * if a graph @xmath70 is invariant by @xmath98 then the edges spanning the regional minima nodes of @xmath70 form the regional minima edges of @xmath99    as a flooding graph is both invariant by @xmath57 and by @xmath98 we get the following theorem .    * * if @xmath30 is a flooding graph then the node weighted graph @xmath70 and the edge weighted graph @xmath58 have the same regional minima subgraph .",
    "more precisely , the regional minima nodes of @xmath70 are spanned by the regional minima edges of @xmath99    fig.[wfal28 ] presents the same flooding graph , on the left with its edge weights and on the right with its node weights : they have exactly the same regional minima .       consider a flooding path on @xmath113 i.e. a path @xmath114 of neighboring nodes with a non increasing weight , starting at node @xmath115 and ending at node @xmath116 belonging to a regional minimum of @xmath70 .",
    "as @xmath117 , the weight of the edge @xmath118 obtained by @xmath53 is equal to the weight of @xmath15 and is one of teh lowest edges of @xmath119 this shows , that the series of edges @xmath120 form a flooding chain of @xmath58 , ending in a regional minimum of @xmath121    inversely , consider a flooding chain@xmath122 $ ] of @xmath99 the weights of the edges are not increasing .",
    "furthermore , the edge @xmath118 is the lowest edge of the node @xmath15 .  as in a flooding graph the lowest edge of a node has the same weight than this node , the edge @xmath123 has the same weight than the node @xmath124thus the path @xmath114 also is a flooding path of @xmath70 ending a regional minimum of @xmath72    there is a one to one correspondance between the regional minima of @xmath58 and @xmath70 ; there is also a one to one correspondance between the flooding paths and the flooding tracks , with the same weight distribution .",
    "this shows that both graphs , @xmath58 on which we only consider the edge weights and @xmath70 on which we only consider the node weights , have the same catchment basins .",
    "consider an arbitrary edge weighted graph @xmath58 with edge weights @xmath125 and without node weights .",
    "the operator @xmath67 suppresses all edges which are not invariant by @xmath126the remaining edges are invariant by @xmath57 and verify : @xmath127    if we assign to the nodes of @xmath58 weights equal to @xmath128 then @xmath129 and the resulting graph is a flooding graph .",
    "[ [ illustration ] ] illustration + + + + + + + + + + + +    fig.[wshdex4]a presents an edge weighted graph @xmath130 on which the node weights are produced by the erosion @xmath131 in fig.[wshdex4]b a dilation @xmath53 applied after the erosion produces an opening of the initial edge weights .",
    "the weights with a red color are those which are lowered by the opening .",
    "these edges are suppressed producing the graph @xmath67 in fig.[wshdex4]c .",
    "the erosion @xmath132 applied on @xmath30 or on @xmath67 produces the same node weights .",
    "the resulting graph is a flooding graph .",
    "[ wshdex4]d shows the regional minima of the complete graph if one considers only the node weights .",
    "in contrast , fig .",
    "[ wshdex4]e shows the regional minima of the flooding graph , if one only considers the node weights .",
    "they are not identical .     if we consider only the edge weights of the flooding graph , we write @xmath58 and @xmath70 if we consider only the node weights .",
    "one verifies that the edges spanned by the regional minima nodes of @xmath70 in fig .",
    "[ wshdex4]e are spanned by the regional minima edges of @xmath58 in fig.[wshdex4]f .",
    "one also verifies that flooding paths and flooding chains are identical , each node being followed by an edge with the same weight .",
    "[ ptb ]    wshdex4-eps-converted-to.pdf      consider an arbitrary node weighted graph @xmath70with node weights @xmath133 and without edge weights .",
    "the operator @xmath134 adds a loop edge between each isolated regional minimum and itself , producing a graph invariant by @xmath91the nodes verify @xmath135    if we assign to the edges of @xmath70 weights equal to @xmath136 then @xmath137 and the resulting graph is a flooding graph .",
    "[ [ illustration-1 ] ] illustration + + + + + + + + + + + +    fig.[wshdex7]a presents a node weighted graph .",
    "it is not invariant by @xmath84 as it has isolated regional minima .",
    "one adds a loop edge linking each isolated regional minimum with itself , producing the graph in fig.[wshdex7]b .",
    "the dilation @xmath53 produces the edge weights .",
    "the resulting edge and node weighted graph in [ wshdex7]c is a flooding graph .",
    "the regional minima have been highlighted by distinct colors .",
    "again , the identity between flooding paths and flooding chains is clearly visible .",
    "[ ptb ]    wshdex7-eps-converted-to.pdf      we have presented how to derive from any node or edge weighted graph a flooding graph with the same regional minima .",
    "to each flooding path corresponds a flooding chain with the same weight distribution , as each node is followed by an edge with the same weight .",
    "the reverse also is true : to each flooding chain corresonds a flooding path with the same weight distribution .     the catchment basins , as defined earlier , are exactly the same .",
    "as all non ascending paths and chains are accepted for defining the catchment basins , we also have the largest overlaping zones between them .",
    "two classes of watershed algorithms have been developed , the ones for node weighted graphs , the others for edge weighted graphs .",
    "since we have a one to one correspondance between flooding paths and flooding chains , each algorithm developed for a node ( resp .",
    "edge ) weighted graph may now also be applied for an edge ( .resp node ) weighted graph , by applying it on the associated flooding graph .",
    "fig.[wshdex8]a1 presents a flooding graph with three regional minima .",
    "the three associated catchment basins overlap at a node p with weight 4 .  in order to break the tie , only one edge adjacent to the node @xmath138 should be kept , and the others suppressed .",
    "three solutions are possible , illustrated by the figures [ wshdex8]a2 , b2 and c2 .",
    "there is no means to decide between one or the other solution if one considers only the weight on one edge .",
    "if one considers the first two edges of each flooding path , we obtain a lexicographic measure , by concatenating the weight of the first and the second , illustrated in fig .",
    "[ wshdex8]b1 .",
    "there remains now two choices between the edges with weights @xmath139 represented in figures figures [ wshdex8]b2 and c2 .",
    "considering a third edge along the flooding paths leaves only one choice , as the edge with the weight @xmath140 is the lowest .  the corresponding waterhed segmentation is presented in fig .",
    "[ wshdex8]c2 .",
    "this example shows that we are able to reduce the number of partitions associated to a flooding graph , if one considers not only the first neighboring nodes or edges in the flooding paths or chains , but a number of nodes , ordered in a lexicographic order .",
    "[ ptb ]    wshdex8-eps-converted-to.pdf    by defining a lexicographic order among the flooding chains of depth @xmath141 has permitted to break the ties , leaving only one solution .",
    "given a node or weighted graph we first derive its flooding graph @xmath142.$ ] we associate to @xmath30 an oriented graph @xmath143 by replacing the edge @xmath144 by an arrow @xmath145 if @xmath146and@xmath147by two arrows @xmath145 and @xmath148 if @xmath149 . the loop edge linking an isolated regional minimum node @xmath34 with itself also is replaced by an arrow @xmath150 the graph @xmath143 verifies the property @xmath151 : @xmath152 there exists at least an oriented path @xmath153 of @xmath143 ( with a positive or null length ) linking @xmath138 with a regional minimum .",
    "we define the catchment basin of a regional minimum as the set of nodes linked by an oriented path with this minimum .",
    "obviously , each node belongs to at least one catchment basins .",
    "catchment basins may overlap and form a watershed zone when two paths having the same node as origin reach two distinct regional minima .",
    "we aim at pruning the graph @xmath154 without any arbitrary choices , and get a partial graph @xmath155 for which the property @xmath151 still holds but the watershed zones are smaller .",
    "as soon the path @xmath153 reaches a regional minimum , it may be prolonged into a path of infinite length , by infinitely cycling between @xmath156 nodes within the regional minimum or along the loop joining each isolated regional minimum with itself .",
    "all oriented paths or chains are thus of infinite length .",
    "and we may consider them , either in their full infinite length or consider only the first @xmath157 edges .",
    "we now define a family of preorder relations ( order relation without antisymmetry ) between the paths of @xmath158    the lexicographic preorder relation of length @xmath157 compares the infinite paths @xmath159 and @xmath160 by considering the @xmath157 first nodes and edges : @xmath161 if @xmath162 or there exists @xmath163 such that    [ c]l@xmath164 + @xmath165    @xmath166 if @xmath161 or if @xmath167    this preorder relation is total , as it permits to compare all paths ; for this reason , among all paths linking a node @xmath138 with a regional minimum , there exists always at least one which is the smallest for @xmath168 we say that this path is the steepest for the lexicographic order of depth @xmath169    for @xmath170 we consider the infinite paths and we simply write @xmath171 .    if @xmath172 and@xmath173 are two paths of infinite length verifying @xmath174 , then the paths @xmath175 and@xmath176 obtained by skipping the @xmath177 first nodes also verify @xmath178if @xmath172 is the smallest path linking its origin with a regional minimum , then @xmath175 is the smallest path leading from @xmath179 to the same regional minimum .",
    "consider two lexicographic order relations @xmath180 and @xmath181 with @xmath182 then for @xmath183 and @xmath184 @xmath185 or equivalently @xmath186 the steepest path for the lexicographic order @xmath177 also is steepest for the lexicographic order @xmath157 .  as a consequence , a catchment basin for @xmath187",
    "is included in the catchment basin for @xmath188    for increasing values of @xmath51 the catchment basins become larger , are nested , and the watershed zones are reduced or vanish . for @xmath170",
    "a node is linked by two minimal paths with two distinct minima , only if these two paths have exactly the same weights , which seldom happens in natural images .",
    "in particular , if the regional minima have distinct weights , the catchment basins form a partition .",
    "we associate to each order relation @xmath189 of length @xmath157 a pruning operator @xmath190the pruning @xmath191 suppresses each edge which is not the first edge of a steepest path for @xmath189 among all paths with the same origin @xmath36after pruning , each node outside the regional minima is the origin of one or several @xmath192steepest flooding tracks or @xmath192steepest flooding paths  we say that the graph @xmath193 has a k - steepness or is k - steep . as for @xmath182 @xmath194 , we have @xmath195 .  furthermore @xmath196    each pruning @xmath193 suppresses a number of edges still present in @xmath197 ; it suppresses them all , without doing any arbitrary choices between them .",
    "[ [ particular - k - steep - graphs ] ] particular k - steep graphs + + + + + + + + + + + + + + + + + + + + + + + + +    applied to an arbitrary graph , the pruning @xmath198 suppresses the edges which are not the lowest edge of one of their extremities .  in a flooding graph , each edge it the lowest edge of one of its extremities and @xmath199 is inoperant .",
    "the pruning @xmath200 keeps for each node @xmath46 the adjacent edges linking @xmath46 with one of its lowest neighboring nodes .",
    "the pruning @xmath201 only keeps the first edge of the steepest paths .",
    "* lemma : * any oriented path in @xmath193 of length @xmath157 is of maximal steepness for @xmath168    for this reason , a node @xmath138 belongs to a @xmath192catchment basin associated to a node @xmath34 in a regional minimum , if there exists an oriented path in @xmath193 from @xmath138 to @xmath202for increasing values of @xmath51 the catchment basins are decreasing , and so are the overlapping zones between them .",
    "the operator @xmath191 defined above has nice properties but is not a local operator .",
    "it is however possible to implement it using only local operators as we present now .",
    "the adjunctions @xmath203 and @xmath204 were defined for non oriented graphs .",
    "we now define the equivalent operators for oriented graphs .",
    "the erosion from arrows to nodes assigns to each node @xmath138 the minimal weight of all arrows having @xmath138 as origin : @xmath205    the dilation is obtained by adjunction .  consider a weight distribution @xmath78 on the nodes of the oriented graph and a weight distribution @xmath56 on the arrows .",
    "@xmath206for @xmath207    the dilation @xmath208 assigns to the arrow @xmath145 the weight of its origin @xmath209     we also will need the dual erosion @xmath210 assigning to the arrow @xmath211 the weight of its extremity @xmath212 .",
    "consider an arrow @xmath213the erosion @xmath214 assigns to the node @xmath138 the minimal weight of all arrows having @xmath138 as origin .",
    "the subsequent dilation assigns to the arrow @xmath145 the weight of @xmath215 i.e. the the minimal weight of all arrows having @xmath138 as origin .",
    "thus if @xmath216 leaves the arrow @xmath145 unchanged , it means that this arrow is one of the lowest arrows having @xmath138 as origin .",
    "we define a pruning operator @xmath217 which cuts all arrows which are not invariant by the opening @xmath218 i.e. which are not one of the lowest edges of their origin .",
    "we say that an edge and node weighted graph is an oriented flooding graph if the weights of the nodes and of the arrows verify :    for the node weights @xmath219 and for the edge weights : @xmath220 such a graph is invariant by the opening @xmath221 and by the closing @xmath222        we start with a node and edge weighted flooding graph @xmath85as explained above , we associate to @xmath30 an oriented graph @xmath143 by replacing the edge @xmath144 by an arrow @xmath145 if @xmath223and@xmath147by two arrows @xmath145 and @xmath148 if @xmath149 . the loop edge linking an isolated regional minimum node @xmath34 with itself also is replaced by an arrow @xmath150    it is easy to show that if @xmath30 is a flooding graph , then @xmath143 is an oriented flooding graph .     in order to identify edges which belong to flooding chains of maximal lexicographic @xmath192steepness , we have to shift the weight distribution of nodes and weights along the oriented flooding track upwards .",
    "this is obtained thanks to the erosion @xmath224 which assigns to the arrow @xmath145 the weight of its extremity @xmath225    after this erosion , we get an edge weight distribution which is not invariant anymore by the opening @xmath226applying the pruning operator @xmath217 leaves a graph which is invariant by @xmath226a final erosion @xmath227 assigns to the nodes their new weights .     thus we have applied to @xmath143 the following operators : @xmath228 from nodes to arrows , the pruning operator @xmath229 on the edges followed by a last erosion @xmath230 from the edges to the nodes , producing node weights @xmath231the resulting graph is an oriented flooding graph .",
    "indeed the edges verify @xmath232we call @xmath233 the succession of these three operators .  in every day words ,",
    "the operator @xmath233 does the following : each node is assigned the minimal weight of all arrows for which it is origin ; each arrow is assigned a weight equal to its extremity ; each arrow with a higher weight than its origin is suppressed .     every time that we apply @xmath234 new edges are pruned and the weight distribution along the flooding paths and chains moves upwards .",
    "for @xmath235 we obtain a graph @xmath236 which contains only flooding paths and chains of steepness @xmath237      [ [ case - of - an - initially - edge - weighted - graph ] ] case of an initially edge weighted graph + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the fig .",
    "[ wshdex9]a represents an edge weighted graph on which the regional minima edges are indicated in red .",
    "[ wshdex9]b presents the associated flooding graph @xmath30 .",
    "we associate to @xmath30 an oriented graph @xmath143 by replacing the edge @xmath144 by an arrow @xmath145 if @xmath146and@xmath147by two arrows @xmath145 and @xmath148 if @xmath149 and get fig .",
    "[ wshdex9]c .",
    "the operator @xmath233 produces a new weight distribution for both nodes and edges in fig .",
    "[ wshdex9]d .",
    "furthermore two arrows are cut as they are not invariant by the opening @xmath238 as each connected component contains only one regional minimum , we can stop the pruning and we obtain the final watershed partition .",
    "this partition is indicated in false color on top of the flooding graph @xmath30 in fig.[wshdex9]e and also in false color on top of the complete initial graph in fig.[wshdex9]f .",
    "[ ptb ]    wshdex9-eps-converted-to.pdf    [ [ case - of - an - initially - node - weighted - graph ] ] case of an initially node weighted graph + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    fig.[wshdex10]a presents a node weighted graph .",
    "it contains a number of some difficulties , like the presence of 2  plateaux and of a buttonhole at the node with weight @xmath239 in a first step we add loop edges linking each isolated regional minimum with itself as shown in fig.[wshdex10]b .",
    "the next step produces edge weights by the dilation @xmath53 of the node weights , yielding the initial flooding graph @xmath30 in fig.[wshdex10]c the oriented graph @xmath143 is produced in fig.[wshdex10]d .  with each new applications of the operator @xmath233",
    "the graph @xmath143 is further pruned , yielding the graphs of fig.[wshdex10 ] e , f and g.  fig.[wshdex10]h transports the arrows of the graph fig.[wshdex10]g onto the graph @xmath240the remaining flooding tracks are clearly visible , on a graph which has kept the initial node weights .",
    "[ ptb ]    wshdex10-eps-converted-to.pdf",
    "we now summarize the results of this study . starting from a node or edge weighted graph , we want to construct a watershed partition , without arbitrary choices , or with a minimum number of arbitrary choices . in a first step",
    "we derive the flooding graph .",
    "an edge weighted graph looses the edges which are not the lowest neighboring edges of one of their extremities , but keeps the edge weights .",
    "the node weights are obtained by the erosion @xmath241to a node weighted graph are added some loops linking each isolated regional minimum with itself .",
    "the node weights keep their initial weights and the edge weights are obtained by the dilation @xmath242 in both cases we obtain a graph with a perfect coupling between edge and node weights ; furthermore , the edge regional minima span the node regional minima .",
    "and the flooding chains span the flooding paths , each node being followed by an edge with the same weight .",
    "* method 1 : * the ties are broken by a watershed algorithm applied on the flooding graph .  any algorithm of the literature developed for node ( resp .",
    "edge ) weighted graphs may now be applied to the flooding graph , even if the initial graph is an edge ( resp .",
    "node ) weighted graph .",
    "the algorithm of b.marcotegui et al @xcite for constructing the watershed on an edge weighted graph is derived from prim s algorithm for constructing a minimum spanning tree or forest .",
    "this algorithm is myopic and considers only flooding chains with a lexicographic depth equal to 1 .",
    "the algorithms proposed in @xcite are or the same myopic type .  using an algorithm @xcite based on the topographic distance @xcite,@xcite , and",
    "applied to node weighted graphs , choses flooding chains with a lexicographic depth equal to 2 , and for this reason are more selective .",
    "such an algorithm , designed for node weighted graphs may now be applied to a graph which initially was edge weighted .",
    "the arbitrary choices for producing a watershed partition is taken in charge by the watershed algorithms applied to the flooding graph . in the case of @xcite or @xcite , by the scheduling of the shortest distance algorithm ( ultrametric flooding distance for node weighted graphs or topographic distance for node weighted graphs ) .",
    "these are only a few examples of algorithms which may be used , among a large number of others .",
    "we have seen how to reduce the number of flooding tracks and paths .  the flooding graph @xmath30 is transformed into an oriented graph @xmath243the operator @xmath233 prunes further this graph , again without arbitrary choices .",
    "after @xmath157 iterations , only the flooding paths or flooding tracks of the graph @xmath30 with a lexicographic depth @xmath244 remain . we then `` transport '' the arrows of the graph @xmath236 onto the flooding graph @xmath30 and get a graph @xmath245 we keep an edge @xmath144 of @xmath30 if and only if there exists an arrow @xmath145 or @xmath148 in the graph @xmath246like that we obtain a flooding graph @xmath30 in which the only remaining flooding tracks and paths have a steepness @xmath237 a node @xmath138 belongs to two catchment basins , if there exists two flooding paths towards the corresponding minima , with identical @xmath244 first edges forming a track of @xmath244 maximal steepness",
    ". fig.[wshdex11 ] presents 4 pruning states of the node weighted graph in fig.[wshdex10]a .",
    "fig.[wshdex11]a presents the associated flooding graph ( without the loops on the isolated regional minima ) , where the edge weights have been added .",
    "two types of methods may be applied to this graph .",
    "* method 2 : * after @xmath157 steps of pruning , the graph @xmath247 has only flooding paths and chains of steepness @xmath248again any algorithm developed for node or edge weighted graph may be applied to this graph .",
    "but as the remaining flooding paths are extremely scarce , even the loosest and most myopic algorithms will do a good job .",
    "in particular the algorithm by b.marcotegui which normally selects flooding paths of steepness @xmath249 now selects paths of steepness @xmath250 as they are the only available .",
    "the same is true for the algorithm based on the topographic distance , selecting flooding paths of steepness @xmath251 the remaining arbitrary choice , if any , is taken in charge by the scheduling of the shortest distance algorithm ( ultrametric flooding distance for node weighted graphs or topographic distance for node weighted graphs ) .",
    "[ ptb ]    wshdex11-eps-converted-to.pdf    * method 3 : * we continue the pruning @xmath236 until there remain no arrows which are head to tail , except in the regional minima .",
    "this is the case in fig.[wshdex10]f .",
    "there exists a node with weight @xmath252 which is the origin of two arrows with weight @xmath253if we arbitrarily suppress one of them , we are also done and have a partition .",
    "there are two solutions possible at this stage of pruning .",
    "thus if a node is the origin of several arrows , one leaves only one .",
    "( this method has often been used in hardware implementations , but without preliminary pruning @xcite,@xcite ) .      for @xmath170 we obtain a maximal pruning of the flooding graph .",
    "in fact we may stop as soon the graph is cut into a number of components containing each one regional minimum .",
    "the node and edge weights remain identical as in the graph @xmath130 but there remains only a minimal number of flooding paths and chains .",
    "a node will be linked to two distinct minima by two flooding chains only if there exists two paths with exactly the same weight distributions towards these two minima ; this will rarely happen in natural images .",
    "if the minima have distinct weights , each node is linked with one and only one minimum by a flooding path of maximal steepness .",
    "* method 4 : * we continue the pruning @xmath236 until each connected component contains only one regional minimum and we are done .",
    "if this can not be achieved , then we resort to method 3 .  after an infinite number of prunings",
    ", @xmath254 does not contain any head and tail arrows and method 3 can be applied .",
    "* method 5 : * we slightly change the weights of the minima so that they are all distinct .",
    "we continue the pruning @xmath236 until each connected component contains only one regional minimum and we are done .  we know that this will happen for @xmath255",
    "we have established that node and weighted graphs represent the same topography , with the same minima and the same catchment basins .",
    "we have presented a method to reduce the overlapping zones of the catchment basins without arbitrary choices .",
    "we finally have presented how to introduce such arbitrary choices if needed ."
  ],
  "abstract_text": [
    "<S> watersheds have been defined both for node and edge weighted graphs . </S>",
    "<S> we show that they are identical : for each edge ( resp .  </S>",
    "<S> node ) weighted graph exists a node ( resp . </S>",
    "<S> edge ) weighted graph with the same minima and catchment basin . </S>"
  ]
}
{
  "article_text": [
    "program title : : :    deposit licensing provisions : : :    gnu general public license version 3 no . of lines in distributed program , including test data , etc . : : : distribution format : : :    tar.gz programming language : : :    c++ computer : : :    any computer that can run c++ compiler .",
    "operating system : : :    any operating system that can run c++ compiler .",
    "classification : : :    2.4 , 2.6 , 4.10 , 4.11 nature of problem : : :    for a given impact parameter @xmath2 to calculate the    deposited energy @xmath1 as a 3d integral over a coordinate    space , and ionization probabilities @xmath3 .    +    for a given energy to calculate the total and @xmath0-fold    electron - loss cross sections using @xmath1 values .",
    "solution method : : :    direct calculation of the 3d - integral @xmath1 .",
    "one - dimension quadrature formula of the highest accuracy based upon    the nodes of the yacobi polynomials for the    @xmath4 $ ] angular variable is applied .",
    "the simpson rule for the    @xmath5 $ ] angular variable is used .",
    "newton - cotes pattern of the    seventh order embedded into every segment of the logarithmic grid for    the radial variable @xmath6 $ ] is applied .",
    "clamped    cubic spline interpolation is done for the integrand of the    @xmath1 .",
    "+    bisection method and further parabolic interpolation is applied for    the solving of the nonlinear equation for the total cross - section .",
    "the    simpson rule for the @xmath0-fold cross - section calculation is    applied . running time : : :    for a given energy , the total and @xmath0-fold cross sections    are calculated within about @xmath7 minutes on    @xmath8-core system .",
    "the running time is directly proportional    to the number of cores .",
    "electron loss ( also called projectile ionization or stripping ) of positive and negative ions , colliding with neutral atoms , is an important collision process playing a key role in many problems of plasma physics @xcite-@xcite and physics of accelerators @xcite-@xcite .",
    "for example , electron - loss ( el ) cross sections are required for estimation of the ion - beam lifetimes and vacuum conditions ( residual - gas pressure and concentrations ) in accelerators and storage rings , for energy losses of high - temperature plasmas and for heavy - ion beam - probe ( hibp ) diagnostics of plasmas in tokamaks and stellarators .",
    "general properties of various atomic processes occurring in the collisions of heavy ions with neutral atomic and molecular targets are investigated in detail and presented in various review articles and books @xcite-@xcite .    at low and intermediate energies",
    ", a multiple - electron losses contribution to the el cross sections can be very large  @xcite-@xcite ( up to  50% and more ) , but with the energy increasing a contribution of multiple el processes goes down and single - electron losses become dominate . at high and relativistic energies",
    "the el cross sections can be calculated in the relativistic born approximation  @xcite-@xcite . at low and intermediate energies ,",
    "the total el cross sections can be calculated in the classical approximation using the ctmc approach  @xcite , @xcite-@xcite ( classical trajectory monte carlo ) or the energy - deposition model @xcite-@xcite .    in the ctmc approach all projectile and target electrons",
    "are considered as classical particles described by a system of a few hundred coupled newton - type first - order differential equations with a few thousand trajectories .",
    "the corresponding computer code is quite complicated in use and takes a very long run - time .",
    "the deposit program was created as an alternative code to the ctmc one and is intended to calculate the energy @xmath1 deposited as a function of impact parameter @xmath2 to the projectile ( positive or negative _ ion _ ) during a collision with a neutral atom .",
    "the obtained @xmath1 values are then used for total and @xmath0-fold el cross - section calculations ( see section  [ physmodel1 ] ) .",
    "the code is based on the classical energy - deposition model suggested by n. bohr @xcite and developed later in @xcite-@xcite for multiple - electron ionization of _ atoms _ by positive ions . in the deposit program ,",
    "the problem of obtaining the energy deposited to the _ ions _ by neutral atoms is reduced to the calculation of a 3d - integral over the ion coordinate space .",
    "the code requires much less computer time and provides approximately the same accuracy of the el cross sections as the ctmc method , i.e. a factor of 2 .    in this paper",
    "we describe a numerical implementation of the energy - deposition model in the deposit computer code and give a brief user guide .",
    "one important property of the code is that it allows one to simulate electron - loss cross sections for an arbitrary projectile ( neutral atom , positive or negative ion ) colliding with arbitrary atomic target .",
    "the validity conditions of the code are also discussed .    the article is organized as follows . in section [ physmodel1 ]",
    "we briefly describe basic ideas and physical points of the developed method .",
    "in section [ numericalproc2 ] we use these results and explain the numerical implementation of the model . some basic examples on how to use the deposit code from the user s point of view",
    "are set out in section [ examplesio3 ] .",
    "finally , conclusions are given in section [ resultsdiscsect ] .",
    "atomic units are used throughout the paper .",
    "the energy @xmath1 transferred to the projectile ion by a neutral target atom as a function of the impact parameter @xmath2 is given by a 3d - integral over the projectile coordinate space @xcite : @xmath9 in the sum index @xmath10 labels principal  @xmath11 and orbital  @xmath12 quantum numbers of atomic shell , @xmath13 .",
    "the summation is over all occupied shells of the projectile ion .    in the deposit code ,",
    "the projectile electron density @xmath14 for the @xmath10-shell is presented by the nodeless slater wave function @xmath15^{1/2}r^{\\mu}e^{-\\beta r},\\ ] ] and normalized to the total number of the projectile electrons @xmath16 @xmath17 here @xmath18 is the gamma function , @xmath19 and @xmath20 are slater parameters  @xcite , @xcite .    in the classical approximation the kinetic energy , deposited to the shell @xmath10 by the target atom can be expressed in the form : @xmath21 where @xmath22 is the orbital velocity of the electron in the @xmath10-shell and @xmath23 denotes the energy gain by the electron .",
    "the values @xmath22 and @xmath23 are obtained from the classical equations @xmath24 @xmath25 where @xmath26 is the binding energy of the projectile @xmath10-shell .",
    "the function @xmath27 denotes the field of a neutral atom at a distance  @xmath28 from its nucleus and is calculated as a sum of three yukawa - type potentials with five fitting parameters @xmath29 , @xmath30 obtained from the dirac - hartree - fock - slater calculations @xcite : @xmath31 @xmath32 here @xmath33 denotes the velocity of the projectile ( the straight - line trajectory approximation is used ) and @xmath34 is the relative velocity .",
    "the impact parameter @xmath35 is a function of @xmath36 and @xmath37 and in spherical coordinates ( @xmath38 , @xmath39 , @xmath40 ) has the following dependence in the frame of the moving projectile : @xmath41    the energy gain @xmath23 in eq .",
    "( [ ederivative ] ) diverges at small impact parameters @xmath42 and must be renormalized  @xcite .",
    "after normalization of @xmath23 the deposited energy @xmath43 is finally determined depending on the relation between ion velocity @xmath33 and orbital velocity @xmath22 as @xmath44 where @xmath45 @xmath46 ^ 2 } { v^2(p^2 + z^2/v^4)}.\\ ] ] the step theta - function @xmath47 is defined in a standard way @xmath48 in order to avoid the thresholds in every point @xmath49 due to the discrete behaviour of the @xmath47 ( i.e. to make the deposited energy @xmath50 a smooth function ) , the step theta - function is replaced by the right - hand side fermi - smearing function @xmath51 the @xmath52 becomes the @xmath47 when @xmath53 .",
    "parameter value @xmath54 is taken by default .",
    "it is an input parameter and can be changed , if it is needed .",
    "thus , @xmath55    the constant variable @xmath56 depends on the mean radius @xmath57 of the projectile shell and on the atomic radius @xmath58 of the target atom @xmath59 where @xmath60 .",
    "the mean radii @xmath58 for neutral atoms are given in @xcite .",
    "the validity conditions are discussed in @xcite .",
    "the function @xmath61 in eqs .",
    "( [ efinallow ] ) and  ( [ efinalhigh ] ) is a result of using the potential @xmath27 in the form ( [ diracur ] ) and is given by @xmath62dx.\\ ] ] it can also be represented as @xmath63 where @xmath64 is the _ modified bessel function of the second kind _  ( see @xcite , p.  375",
    ", eq .  9.6.2 , @xcite ) .",
    "integral  ( [ finalfyexpr ] ) does converge for all positive @xmath65 .",
    "it has the following expansion for @xmath65 close to zero ( which can be obtained from ref .",
    "@xcite , eq .  9.8.7 , p.  379 and",
    "9.8.3 , p.  378 ) @xmath66 to speed up the calculations it is interpolated by using of clumped cubic splines  @xcite , p.  97 .",
    "once the @xmath1 energy is determined , the _ total _ el cross - section can be obtained directly as @xmath67 where @xmath68 is ( numerically ) found from the equation @xmath69 and @xmath70 denotes the ( first ) ionization potential of the projectile .",
    "the @xmath0-fold el cross - section @xmath71 can be calculated as @xmath72 where @xmath3 is a probability to ionize @xmath0 electrons from the projectile .    in the ctmc method",
    "the probabilities @xmath3 are calculated numerically . to calculate @xmath3 in the present approach the russek - meli model @xcite is used . in this model",
    "the @xmath3 probabilities are given in a close analytical form as functions of the deposited energy @xmath1 and the ionization potentials  @xmath73 of the projectile @xmath74",
    "@xmath75 @xmath76 here @xmath77 denotes the binomial coefficient , @xmath78 is the integer part of @xmath79 .",
    "double factorial means @xmath80 with @xmath81 for odd @xmath0 and @xmath82 for even @xmath0 correspondingly , and @xmath83 by definition .",
    "the probabilities @xmath3 satisfy the normalization condition at every impact parameter @xmath2 @xmath84 as it follows from the equations ( [ pmbrussekmeli])-([etarussekmeli ] ) .",
    "the variable @xmath85 here means the number of active electrons considered to be ionized .",
    "actually , @xmath85 in equations ( [ pmbrussekmeli ] ) , ( [ pmsum1 ] ) should be equal to the number of projectile electrons @xmath16 , but due to the rapid convergence of the sum ( [ pmsum1 ] ) it can be cut off at @xmath86 value .",
    "using the deposited energies @xmath1 calculated in the deposit code and the ionization potentials  @xmath73 of the projectile ion , the @xmath0-fold el cross sections @xmath71 can be calculated straightforwardly by applying equation ( [ sigmam ] ) .",
    "from the numerical point of view the challenge for the evaluation of the deposited energy  ( [ tb3dintegral ] ) is a three - dimensional integral over the projectile - ion coordinate space . for a given @xmath10-shell",
    "it can be written in general form as @xmath87 for simplicity , @xmath10-notation is skipped in the right - hand side of the integral .",
    "parameter @xmath2 is fixed , and functions @xmath88 and @xmath89 are smooth , real and do not have any singularities .",
    "function @xmath89 is nothing but @xmath50 given by the expressions ( [ efinallow ] ) and  ( [ efinalhigh ] ) , and the radial function @xmath88 has a slater - type behaviour and represents the electron - density contribution  ( [ rhodencity ] ) @xmath90 here @xmath91 is a normalization factor from the equation ( [ rhodencity ] ) , @xmath92 is the number of electrons in given @xmath10-shell .    in the expression ( [ ebnumintgrl ] ) all three integrals over the variables @xmath93 and @xmath40 have a constant upper and lower limits .",
    "it means that each can be split out and considered separately like one - dimensional integral with a given set of fixed parameters , namely @xmath94 @xmath95 @xmath96      in the integral ( [ anglephiintegral ] ) the dependency on @xmath40 is expressed only by @xmath97 as it follows from the equation ( [ pbtetphibound ] ) . due to the symmetry of the @xmath97 function , implementation of the simpson s rule  @xcite , @xcite to the integral ( [ anglephiintegral ] ) can be done in the following way @xmath98 @xmath99 where @xmath100 must be even and @xmath101 .",
    "discrepancy estimation for eq .",
    "( [ krylovangle2int ] ) is given in ref .",
    "@xcite .",
    "integral  ( [ cosx11integral ] ) can be done by the following rule @xmath102 @xmath103 ^ 2},\\ ] ] with an error estimation given in ref .",
    "@xcite . here",
    ", @xmath104 is a yacobi polynomial , @xmath105 is the @xmath106-th root of the polynomial @xmath104 , @xmath107 . for",
    "the choice of the @xmath108 numeric error is equal to @xmath109 , where numeric factor @xmath110 depends on a given system , i.e. the function @xmath111 .    to speed up the computing procedure based on formulas ( [ krylov2intlab ] ) , ( [ krylov2akoefflab ] ) preliminary calculations of the yacobi polynomial roots @xmath105 and coefficients",
    "@xmath112 have been done .",
    "these two data sets have been directly built in the present code .",
    "due to the slater - type behaviour of the radial function ( [ radialslaterfunc ] ) , integrand @xmath113 decreases exponentially .",
    "the main contribution to the integral ( [ radialintegral ] ) function @xmath113 makes in the range @xmath114 $ ] .",
    "the infinity limit can be cut off in the @xmath115 point .",
    "the value of @xmath115 is an input parameter , which is ordinary taken approximately equal to  @xmath116 , depending on the projectile ion size .",
    "input parameters are described in section  [ examplesio3 ] .    to do integral  ( [ radialintegral ] ) the logarithmic grid with an input parameter @xmath117",
    "is used @xmath118 and a newton - cotes quadrature formula for the seven - points interval @xmath119 , \\end{split}\\ ] ] is applied for every range @xmath120 $ ] ( see ref .",
    "@xcite , p.886 , eq .",
    "25.4.16 ) .",
    "here @xmath121 and points in the interval @xmath122 $ ] are distributed uniformly .    in this way",
    "integral ( [ radialintegral ] ) can be done by the following rule @xmath123      the total - cross section @xmath124 is calculated from equation  ( [ sigmatoteq ] ) , where the @xmath68 parameter is taken as a numerical solution of equation ( [ bmaxequation ] ) .",
    "function @xmath1 monotonically decreases with increasing of parameter @xmath2 near the @xmath68 point ( a typical example of @xmath1 behaviour is given in figure  [ fig1lbl ] ) .",
    "to solve equation  ( [ bmaxequation ] ) under these conditions the bisection method is applied within a given range @xmath125 $ ] , where @xmath126 and @xmath127 are input parameters .",
    "the bisection procedure is stopped when the condition @xmath128 is satisfied , where @xmath129 is the number of iteration .",
    "then the quadratic interpolation procedure is used to find the local minimum of the @xmath130 function near the @xmath68 value using three abscissa points @xmath131 where @xmath132 , @xmath133 is the final bisection step controlled by the condition  ( [ bisectcond ] ) .",
    "once the @xmath68 parameter is determined , the @xmath124 value is calculated by applying the equation  ( [ sigmatoteq ] ) .",
    "the @xmath0-fold cross sections @xmath134 are calculated by formula  ( [ sigmam ] ) , where the integration is done from @xmath135 up to @xmath68 . to do integral  ( [ sigmam ] ) one ,",
    "first of all , needs to calculate @xmath1 values in every point of the integration grid as it follows from equations  ( [ pmbrussekmeli ] ) and ( [ etarussekmeli ] ) .",
    "the grid is taken with a fixed step @xmath136 on the @xmath137 $ ] range .",
    "the number of points @xmath138 \\cdot 2,\\ ] ] and the grid points are @xmath139 the integer part of @xmath79 in equation  ( [ probabnpgrid ] ) is labeled as @xmath78 , and the integer division operation is noted as * div*.    the simpson rule @xmath140,\\ ] ] @xmath141 is applied to do integration  ( [ sigmam ] ) on grid  ( [ probabgrid ] ) .",
    "the probabilities @xmath3 are implemented in correspondence to equations  ( [ pmbrussekmeli ] )  ( [ etarussekmeli ] ) with the following boundary conditions @xmath142 @xmath143 where @xmath144 and @xmath145 , @xmath85 is a cutoff value for the sum  ( [ pmsum1 ] ) .    to avoid divergence in the numeric calculations of factorials and powers of @xmath146 , @xmath147 and @xmath148 in equations  ( [ pmbrussekmeli ] ) and  ( [ smxrussekmeli ] ) the following approach to @xmath3 calculation",
    "have been implemented @xmath149^{-1},\\ ] ] @xmath150 @xmath151 @xmath152 @xmath153 @xmath154 @xmath155 @xmath156    summation in the first sum of equation  ( [ factsumoddeven ] ) over @xmath157 is done for all even positive @xmath158 , if @xmath0 is even , and for all odd positive @xmath157 , if @xmath0 is odd , as well as summation over even / odd positive @xmath159 for even / odd @xmath129 in the second sum of equation  ( [ factsumoddeven ] ) correspondingly .",
    "integral ( [ sigmam ] ) for every @xmath160 is done on the same grid  ( [ probabgrid ] ) @xmath137 $ ] .",
    "an example of the @xmath3 probabilities is given in figure  [ fig2lbl ] .",
    "integral ( [ tb3dintegral ] ) representing the deposited energy @xmath1 after all implementation steps is finally reduced to the summation rule  ( [ tbimpliiip1 ] ) .",
    "it can be broken down into the @xmath161 subsumes where @xmath161 is the number of mpi ( message passing interface ) threads ( cores ) .",
    "for parallel version of the present code the openmpi library is used  @xcite .    in the parallel version integration in  ( [ tbimpliiip1 ] ) for a given @xmath162-th core , @xmath163 ,",
    "is done by the rule @xmath164}^{i_2[q]-1 } i^{i+1}_{i},\\ ] ] where @xmath165=q\\left(\\left\\{\\frac{n_{grid}}{n_{core}}\\right\\}+1\\right),\\ ] ] @xmath166= \\begin{cases } i_1[q+1 ] , \\quad i_1[q+1 ] \\le n_{grid } , \\\\",
    "n_{grid } , \\quad otherwise . \\end{cases}\\ ] ] the integer part of @xmath79 is labeled as @xmath78 . after the partial summations  ( [ inpartsum ] ) on every core the final result @xmath167 is collected by calling the",
    "` allreduce ` mpi function .",
    "as one can see the parallelization having done in the way  ( [ inpartsum ] ) does not harm the rule  ( [ newtonkotessappr ] ) .",
    "this remarkable property combines high accuracy with high performance .",
    "all input parameters for the program are set up by means of one input text file with the proper keywords .",
    "every keyword can be put in arbitrary place of the input file without a definite compliance of the order .",
    "the program is case - sensitive to the keywords .",
    "comments can be added in @xmath168/@xmath168++ programming language style .",
    "the keywords are : ` vi ` - velocity of the projectile in frame of the neutral atomic target given in atomic units , ` za ` - atomic charge and ` ra ` - effective radius of the atomic target , see equations  ( [ efinallow ] ) , ( [ efinalhigh ] ) and  ( [ neffcase ] ) . each of these parameters should be followed by one or several spaces and a real number ( the value of the parameter ) . for example , for the @xmath169 collision at the energy @xmath170  mev / u they are    ....   vi      10.0   za       8.0   ra       1.239652 ....    two values @xmath171 and @xmath172 for the equation  ( [ diracur ] ) are given after the keyword ` a_exp ` .",
    "three values @xmath173 , @xmath174 , @xmath175 for the equation ( [ diracur ] ) are given after the keyword ` alf_exp ` .    ....",
    "a_exp      0.0625    0.9375 alf_exp    14.823    2.0403    0.0 ....    first integer value after the keyword ` shells ` sets up the number of the ion @xmath10-shells . the number of electrons @xmath176 , the values of the coefficients @xmath177 , @xmath178 , @xmath179 for the density ( [ radialslaterfunc ] ) and binding energy @xmath26 must be put in as well . for every @xmath10-shell it is more convenient to set up the five parameters from a new line .",
    "rules for calculation of the @xmath177 , @xmath178 , @xmath179 parameters are given in the references  @xcite ,  @xcite .",
    "the binding energies @xmath26 are put in electron - volts  ( ev ) .",
    "the values of @xmath26 can be found in @xcite ,  @xcite-@xcite .",
    "....   shells 7 //n       c1       mu     beta      i(ev )    8      7.778    4.0    2.5625     33.11    //",
    "5sp8   10    121.07     3.5    4.8143    106.044   // 4d10    8    956.5335   3.5    8.0714    215.52    // 4sp8   10   2252.830    3.0   11.6167    801.35    //",
    "3d10    8   5404.971    3.0   14.9167   1152.6     //",
    "3sp8    8   3951.539    2.0   25.925    5542.13    // 2sp8    2    831.405    1.0   55.7     37455.41    //",
    "1s2 ....    the keyword ` b_range ` gives @xmath180 , @xmath68 , and @xmath181 for calculating and plotting @xmath1 .    .... //",
    "t(b ) curve     b_range   0.0   3.0   0.01 ....    the step parameter @xmath181 does not need to be the range devided by an integer ; @xmath2-points are chosen by the rule @xmath182 , @xmath183 , @xmath184 , @xmath185 .    to calculate the total cross section @xmath124 one needs to give a keyword ` sigma_tot ` with three parameter values : bisection start range @xmath186 $ ] ( see section  [ sigtotsect ] ) and the first ionization potential  @xmath70  [ ev ] .    .... // total cross section     sigma_tot   0.0   11.0     34.45 ....    to calculate @xmath0-fold cross sections @xmath160 , where @xmath187 , one needs to give a keyword ` sigma_m_fold ` with @xmath188 values : the value of @xmath85 parameter and @xmath85 values of @xmath0-th ionization potentials @xmath189  [ ev ] ( see equations  ( [ sigmam])-([pmsum1 ] ) and section  [ sigmfoldsect ] ) .    .... //",
    "m - fold cross section     sigma_m_fold   30     34.45    48.40    62.35    76.30    92.53     107.1    139.2    155.7    232.2    266.0     299.8    333.6    367.4    401.2    437.8     472.0    506.2    540.5    672.6    710.3     747.9    785.6    839.2    878.2    975.9    1016.0   1586.0   1688.0   1790.0   1892.0 ....    one important point is that in order to calculate @xmath0-fold cross sections one must also calculate the @xmath68 value from equation  ( [ bmaxequation ] ) .",
    "it is needed to cut off the integration grid in equation  ( [ sigmam ] ) .",
    "thus , the ` sigma_m_fold ` keyword must be given in the text file with the keyword ` sigma_tot ` and all their data .",
    "the remaining parameters should be kept with the default values .    ....",
    "rgrid      70.0   600   30   ksmear     3.0   cosn       54 ....    parameter ` rgrid ` sets up the @xmath115 , @xmath117 and @xmath190 values for equation  ( [ rgriddef ] ) .",
    "the @xmath115 corresponds to the physical infinity for the atomic radial variable .",
    "parameter ` ksmear ` fixes the @xmath106 value in equation  ( [ ksmear ] ) and parameter ` cosn ` sets up the number of points @xmath100 in equations  ( [ krylovangle2int])-([nceq31 ] ) .",
    "value of the ` cosn ` parameter must be only even .",
    "the name of the input file is passed to the program input with the name of the output file via command line when the program starts .",
    "the output of the program is sent to console .    ....",
    "> deposit file_name1_inp file_name2_out ....    the program writes a text file with the deposited energy called ` energy_tb_[file_name2_out ] ` , if the ` b_range ` keyword is given .",
    "the file consists of several columns .",
    "the first column contains the @xmath2-values , the second column is the @xmath1 energy and the rest of the columns are the deposited energies for every @xmath10-shell .",
    "the program also writes a text file with the probabilities @xmath3 called ` probability_pm_[file_name2_out ] ` , if the ` sigma_m_fold ` keyword is given .",
    "the file consists of several columns .",
    "the first column is the @xmath2-values in eq .",
    "( [ pmbrussekmeli ] ) and the other ones are values of the @xmath3 probabilities for the corresponding @xmath2 points and @xmath191 .",
    "all input parameters are printed out to the console ( for the user s control ) and the program starts the calculations .    ....",
    "* * * *   deposit code ( version 1.27/p ) * * * *     number of mpi threads = 8     input reading from file :   ba2+_o.txt     vi = 10.0   za = 8   ra = 1.23965     a_exp :      0.06250    0.93750    0.00000   alf_exp :   14.82300    2.04030    0.00000     shells = 7     n         c1      mu    beta       i[ev ]    .    8.0       7.778   4.0    2.562       33.11   .",
    "10.0     121.070   3.5    4.814      106.04   .",
    "8.0     956.534   3.5    8.071      215.52   .",
    "10.0    2252.830   3.0   11.617      801.35   .",
    "8.0    5404.971   3.0   14.917     1152.60   .    8.0    3951.539   2.0   25.925     5542.13   .",
    "2.0     831.405   1.0   55.700    37455.41   .",
    "i[au ]       u       neff   .      1.22     1.56      ---   .      3.90     2.79      ---   .",
    "7.92     3.98      ---   .",
    "29.45     7.67      ---   .",
    "42.36     9.20      ---   .",
    "203.67    20.18    0.0511   .",
    "1376.46    52.47    0.0019     ( r_max =   70.0    ngr = 600    t0 = 30.0    ksmear = 3.0    cosn = 54 )     slater w.f .",
    "normalization test :    p_1 :   1.0000    p_2 :   1.0000    p_3 :   1.0000    p_4 :   1.0000    p_5 :   1.0000    p_6 :   1.0000    p_7 :   1.0000 ....    according to the equations  ( [ efinallow ] ) and ( [ efinalhigh ] ) the @xmath56 parameter is used only if @xmath192 . in this case",
    "the @xmath56 values are printed out in the ` neff ` column . otherwise , when @xmath193 , only a dashed line is printed .    for calculations of the deposited energy @xmath1 the program prints out the @xmath2-mesh information and two columns ( @xmath2-values and @xmath1-values ) .    ....",
    "b_grid :   [ 0.000 ; + 0.010 ; 3.000 ]   npoints = 301     deposited energy t(b ) calculation        b           t(b )    0.000000     706.586257    0.010000     706.333016    0.020000     705.566015    . . . . . . . . . . .",
    "2.980000       0.216640    2.990000       0.210448",
    "3.000000       0.204421   output t(b ) into the file :   energy_tb_ba2+_o_out.txt ....    for the @xmath124 calculations the program prints out the input parameters , bisection search history  ( [ bisectcond ] ) , and interpolation data  ( [ parabolamin ] ) . finally , it prints out the @xmath68 and @xmath124 values .    ....",
    "total cross - section calculation   i1 =      1.2660 a.u .",
    "b_min =   0.0000    b_max = 11.0000     bisection search :        b        t(b ) - i1    0.000000     705.320243   11.000000      -1.266014    5.500000      -1.265965    2.750000      -0.851313    1.375000       8.266428    2.062500       1.021403    2.406250      -0.245276    2.234375       0.280613    2.320312      -0.005746    2.277344       0.131173    2.298828       0.061201    2.309570       0.027356    2.314941       0.010713    2.317627       0.002461    2.318970      -0.001648",
    "2.318298       0.000405     interpolate :    2.318384       0.000143    2.318634      -0.000622    2.318884      -0.001386     b_total      =     2.318431   sigma_total =    16.886438 a.u .",
    "sigma_total =     4.728683e-16 cm2 ....    for the @xmath0-fold cross - section @xmath134 calculations , it prints out input values of ionization potentials , @xmath2-grid data for the integral  ( [ sigmam ] ) and values of the deposited energy .",
    "once @xmath1 energy is calculated , the @xmath134 data are evaluated and printed out . to check out the calculation the sum rule ( [ sigmatoteq ] )",
    "is applied to the @xmath134 values and printed after the partial cross sections .    ....",
    "m - fold cross - sections calculation    i_1 =      1.2660 a.u .",
    "=        34.450 ev    i_2 =      1.7787 a.u .",
    "=        48.400 ev    . . .",
    "i_28 =     62.0329 a.u .",
    "=      1688.000 ev   i_29 =     65.7813 a.u .",
    "=      1790.000 ev   i_30 =     69.5297 a.u .",
    "=      1892.000 ev     m - fold probability grid :   n_points   = 232   b_max      =    2.3184   grid_step =    0.0100   save points :       b           t(b )    0.0000       706.5863    0.0100       706.3334    0.0200       705.5674    0.0300       704.2550    . . .",
    "2.2885         1.3606    2.2984         1.3284    2.3084",
    "1.2969    2.3184         1.2660      m - fold cross - sections :      m        a.u .",
    "cm2      1     6.512001    1.823545e-16      2     3.688431    1.032866e-16      3     1.949328    5.458672e-17      4     1.146097    3.209396e-17      5     0.750239    2.100883e-17     . . . . . . . . . . . . . . .",
    "26     0.000030    8.382028e-22     27     0.000000    2.943365e-25     28     0.000000    1.303180e-30     29     0.000000    2.553841e-40     30     0.000000    0.000000e+00    sum    16.886438    4.728683e-16     output pm(b ) into the file :   probability_pm_ba2+_o_out.txt     start time : sun may 20 14:18:36 2012   stop   time : sun may 20 14:27:55 2012 ....    example of the calculated @xmath0-fold cross sections versus collision energies is given in figure  [ fig3lbl ] .",
    "a description of the deposit computer code , based on the energy - deposition model , is presented .",
    "this approach gives an agreement with experimental data within a factor of two .",
    "numerical implementation of the model is given as well .",
    "the algorithms realized in the program allows one to simulate ion - atomic collisions at low and intermediate energies for arbitrary ion - atomic colliding systems .",
    "the code is parallelized and can be run in single and parallel modes ( on a user pc or supercomputer cluster ) .",
    "the computational speed is proportional to the number of cores .",
    "the author is very grateful to v.  p.  shevelko for valuable discussions and advice during the preparation of this work .",
    "the author is also grateful to o.v .",
    "ivanov and p.  thnstrom for helpful discussions of numeric questions .",
    "the computations were performed on resources provided by the swedish national infrastructure for computing ( snic ) at uppsala multidisciplinary center for advanced computational science ( uppmax ) under the project _",
    "s00311 - 8 _ and on resources provided by snic at the national supercomputer center ( nsc ) under the project",
    "_ matter2_.      i. hofmann , nucl .",
    "instrum . methods a * 415 * ( 1998 ) 11 .",
    "g. kraft , progr .",
    "* 45 * ( 2000 ) 473 ( suppl .",
    "2 ) . r.l .",
    "hickok , rev .",
    "* 38 * ( 1967 ) 142 .",
    "k. ikeda , progress in the iter physics basics nucl .",
    "fusion * 47 * ( 2007 ) .",
    "j. meyer , plasma phys .",
    "fusion * 31 * ( 1989 ) 1613 .",
    "i. hofmann , g. plass , the hidif - study report gsi-98 - 06 ( darmstadt : gsi ) ( 1998 ) .",
    "w. erb , gsi report gsi - p-78 ( darmstadt : gsi ) ( 1978 ) .",
    "b. franzke , ieee trans .",
    "sci * 28 * ( 1981 ) 2116 .",
    "d. mueller , l. grisham , i. kagonovich , r.l .",
    "watson , v. horvat , k.e .",
    "zaharakis , m.s .",
    "armel , phys .",
    "plasmas * 8 * ( 2001 ) 1753 .",
    "d. mueller , l. grisham , i. kaganovich , r. l. watson , v. horvat , k. e. zaharakis and y. peng , laser and part .",
    "beams * 20 * ( 2002 ) 551 .",
    "betz , rev .",
    "* 44 * ( 1972 ) 465 .",
    "janev , l.p .",
    "presnyakov , v.p .",
    "shevelko , physics of highly charged ions , springer , berlin ( 1985 ) .",
    "bransden , m.r.c .",
    "mcdowell , charge exchange and the theory of ion - atom collisions , clarendon , oxford ( 1992 ) .",
    "j. eichler , w.e .",
    "meyerhof , relativistic atomic collisions , academic press , ny ( 1995 ) .",
    "mcguire , introduction to dynamic correlation : multiple electron transitions in atomic collisions , tulane university press , new orleans , la , ( 1997 ) .",
    "n. stolterfoht , r.d .",
    "dubois , r.d .",
    "rivarola , electron emission in heavy ion - atom collisions , springer , berlin ( 1997 ) .",
    "shevelko , h.tawara , atomic multielectron processes , springer , berlin ( 1998 ) .",
    "h. beyer , v.p .",
    "shevelko ( eds . ) , atomic physics with heavy ions , springer , berlin ( 1999 ) .",
    "h. geissel , h. weick , c. scheidenberger , et al .",
    "instr . and meth .",
    "b * 195 * ( 2002 ) 3 .",
    "voitkiv , phys . rep .",
    "* 392 * ( 2004 ) 191 .",
    "olson , r.l .",
    "watson , v. horvat , k.e .",
    "zaharakis , j. phys .",
    "b * 35 * ( 2002 ) 1893 . r.e .",
    "olson , r.l .",
    "watson , v. horvat et al , j. phys .",
    "b. * 37 * ( 2004 ) 4539 .",
    "pirumal , v. horvat , r.l .",
    "watson , et al .",
    "b * 227 * ( 2005 ) 251 .",
    "shevelko , th .",
    "sthlker , i.yu .",
    "tolstikhina , nucl .",
    "b * 184 * ( 2001 ) 295 .",
    "beigman , i.yu .",
    "tolstikhina , v.p .",
    "shevelko , tech . phys .",
    "* 53 * ( 2008 ) 546 .",
    "andreev , i.l .",
    "beigman , i.yu .",
    "tolstikhina , v.p .",
    "shevelko , g. baur , th .",
    "sthlker , bulletin of the lebedev physical institute * 35 * ( 2008 ) 89 .",
    "shevelko , i.l .",
    "beigman , m.s .",
    "litsarev , h. tawara , i.yu .",
    "tolstikhina , g. weber , nucl .",
    "instr . meth . in phys .",
    "research b * 269 * ( 2011 ) 1455 .",
    "shevelko , m.s .",
    "litsarev , h. tawara , j. phys .",
    "b : at . mol .",
    "* 41 * ( 2008 ) 115204 .",
    "song , m.s .",
    "litsarev , v.p .",
    "shevelko , h. tawara , j .- s .",
    "yoon , nucl .",
    "meth . in phys .",
    "research b * 267 * ( 2009 ) 2369 .",
    "shevelko , m.s .",
    "litsarev , m .- y .",
    "song , h. tawara , j .- s .",
    "yoon , j. phys .",
    "b : at . mol .",
    "* 42 * ( 2009 ) 065202 .",
    "shevelko , d. kato , m.s .",
    "litsarev , h. tawara , j. phys .",
    "b : at . mol .",
    ". phys . * 43 * ( 2010 ) 215202 .",
    "carlson , c.w .",
    "nestor jr . ,",
    "n. wasserman , j.p .",
    "mcdowell , atom .",
    "data nucl .",
    "data tables * 2 * ( 1970 ) 63 .",
    "k. rashid , m.z .",
    "saadi , m. yasin , at .",
    "data nucl .",
    "data tables * 40 * ( 1988 ) 365 .",
    "w. lotz , josa * 60 * ( 1970 ) 206 .",
    "g. zschornack , g. musiol , w. wagner , dirack - fock - slater x - ray energy shifts and electron binding energy changes for all ion ground states in elements up to uranium .",
    "preprint zfk-574 zentralinstitut fur kernforschung , rossendorf bei dresden ( 1986 ) ."
  ],
  "abstract_text": [
    "<S> a description of the deposit computer code is presented . </S>",
    "<S> the code is intended to calculate _ total _ and @xmath0__-fold _ _ electron - loss cross sections ( @xmath0 is the number of ionized electrons ) and the energy @xmath1 deposited to the projectile ( positive or negative ion ) during a collision with a neutral atom at low and intermediate collision energies as a function of the impact parameter @xmath2 . </S>",
    "<S> the deposited energy is calculated as a 3d - integral over the projectile coordinate space in the classical energy - deposition model . </S>",
    "<S> examples of the calculated deposited energies , ionization probabilities and electron - loss cross sections are given as well as the description of the input and output data .    </S>",
    "<S> cross - section , ion - atom collisions , electron - loss , deposited energy , impact parameter , slater wave function </S>"
  ]
}
{
  "article_text": [
    "a polling model is a single - server system in which the server visits @xmath0 queues @xmath1 in cyclic order .",
    "customers that arrive at @xmath2 are referred to as type @xmath3 customers .",
    "the special feature of the model considered in the present paper is that , within a customer type , we distinguish high and low priority customers .",
    "more specifically , we study a polling system which consists of two queues , @xmath4 and @xmath5 .",
    "the first of these queues contains customers of two priority classes , high ( @xmath6 ) and low ( @xmath7 ) . the exhaustive ,",
    "gated and globally gated service disciplines are studied .",
    "our motivation to study a polling model with priorities is that the performance of a polling system can be improved through the introduction of priorities . in production environments , e.g.",
    ", one could give highest priority to jobs with a service requirement below a certain threshold level .",
    "this might decrease the mean waiting time of an arbitrary customer without having to purchase additional resources @xcite .",
    "priority polling models also can be used to study traffic intersections where conflicting traffic flows face a green light simultaneously ; e.g. traffic which takes a left turn may have to give right of way to conflicting traffic that moves straight on , even if the traffic light is green for both traffic flows .",
    "another application is discussed in @xcite , where a priority polling model is used to study scheduling of surgery procedures in medical emergency rooms . in the computer science community",
    "the bluetooth and 802.11 protocols are frequently modelled as polling systems , cf .",
    "many scheduling policies that have been considered or implemented in these protocols involve different priority levels in order to improve quality - of - service ( qos ) for traffic that is very sensitive to delays or loss of data , such as voice over wireless ip .",
    "the 802.11e amendment defines a set of qos enhancements for wireless lan applications by differentiating between high priority traffic , like streaming multimedia , and low priority traffic , like web browsing and email traffic .",
    "although there is quite an extensive amount of literature available on polling systems , only very few papers treat priorities in polling models .",
    "most of these papers only provide approximations or focus on pseudo - conservation laws . in @xcite exact mean",
    "waiting time results are obtained using the mean value analysis ( mva ) framework for polling systems , developed in @xcite .",
    "the mva framework can only be used to find the first moment of the waiting time distribution for each customer type , and the mean residual cycle time .",
    "the main contribution of the present paper is the derivation of laplace stieltjes transforms ( lsts ) of the distributions of the marginal waiting times for each customer type ; in particular it turns out to be possible to obtain exact expressions for the waiting time distributions of both high and low priority customers at a queue of a polling system .",
    "probability generating functions ( pgfs ) are derived for the joint queue length distribution at polling epochs , and for the steady - state marginal queue length distribution of the number of customers at an arbitrary epoch .",
    "the present paper is structured as follows : section [ general ] gathers known results of nonpriority polling models which are relevant for the present study .",
    "sections [ gated ] ( gated ) , [ globallygated ] ( globally gated ) , and [ exhaustive ] ( exhaustive ) give new results on the priority polling model .",
    "in each of the sections we successively discuss the joint queue length distribution at polling epochs , the cycle time distribution , the marginal queue length distributions and waiting time distributions . the mean waiting times",
    "are given at the end of each section .",
    "a numerical example is presented in section [ numericalexample ] to illustrate some of the improvements that can be obtained by introducing prioritisation in a polling system .",
    "the model that is considered in this section , is a nonpriority polling model with two queues ( @xmath4 and @xmath5 ) .",
    "we consider three service disciplines : gated , globally gated , and exhaustive .",
    "the gated service discipline states that during a visit to @xmath2 , the server serves only those type @xmath3 customers who are present at the polling epoch .",
    "all type @xmath3 customers that arrive during this visit will be served in the next cycle . in this respect ,",
    "a cycle is the time between two successive visit beginnings to a queue .",
    "the exhaustive service discipline states that when the server arrives at @xmath2 , all type @xmath3 customers are served until no type @xmath3 customer is present in the system .",
    "we also consider the globally gated service discipline , which means that during a cycle only those customers will be served that were present at the beginning of that cycle .",
    "customers of type @xmath3 arrive at @xmath2 according to a poisson process with arrival rate @xmath8 @xmath9 .",
    "service times can follow any distribution , and we assume that a customer s service time is independent of other service times and independent of the arrival processes .",
    "the lst of the distribution of the generic service time @xmath10 of type @xmath3 customers is denoted by @xmath11 .",
    "the fraction of time that the server is serving customers of type @xmath3 equals @xmath12 .",
    "switches of the server from @xmath2 to @xmath13 ( all indices modulo 2 ) , require a switch - over time @xmath14 .",
    "the lst of this switch - over time distribution is denoted by @xmath15 .",
    "the fraction of time that the server is working ( i.e. , not switching ) is @xmath16 .",
    "we assume that @xmath17 , which is a necessary and sufficient condition for the steady state distributions of cycle times , queue lengths and waiting times to exist .",
    "@xcite studied this model , but without switch - over times and only with the exhaustive service discipline .",
    "@xcite analysed this polling system for any number of queues , and for both gated and exhaustive service disciplines .",
    "@xcite obtained results for a polling system with switch - over times ( but only exhaustive service ) by relating the pgfs of the joint queue length distributions at visit beginnings , visit endings , service beginnings and service endings .",
    "@xcite was the first to point out the relation between polling systems and multitype branching processes with immigration in each state .",
    "his results can be applied to polling models in which each queue satisfies the following property :    [ resingproperty ] if the server arrives at @xmath2 to find @xmath18 customers there , then during the course of the server s visit , each of these @xmath18 customers will effectively be replaced in an i.i.d .",
    "manner by a random population having probability generating function @xmath19 , which can be any @xmath0-dimensional probability generating function .",
    "we use this property , and the relation to multitype branching processes , to find results for our polling system with two queues , two priorities in the first queue , and gated , globally gated , and exhaustive service discipline .",
    "notice that , unlike the gated and exhaustive service disciplines , the globally gated service discipline does not satisfy property [ resingproperty ] .",
    "but the results obtained by resing also hold for a more general class of polling systems , namely those which satisfy the following ( weaker ) property that is formulated in @xcite :    [ borstproperty ] if there are @xmath18 customers present at @xmath2 at the beginning ( or the end ) of a visit to @xmath20 , with @xmath21 , then during the course of the visit to @xmath2 , each of these @xmath18 customers will effectively be replaced in an i.i.d .",
    "manner by a random population having probability generating function @xmath19 , which can be any @xmath0-dimensional probability generating function .",
    "globally gated and gated are special cases of the synchronised gated service discipline , which states that only customers in @xmath2 will be served that were present at the moment that the server reaches the `` parent queue '' of @xmath2 : @xmath20 . for gated service , @xmath22 , for globally gated service , @xmath23 .",
    "the synchronised gated service discipline is discussed in @xcite , but no observation is made that this discipline is a member of the class of polling systems satisfying property [ borstproperty ] which means that results as obtained in @xcite can be extended to this model .",
    "@xcite combined the results of @xcite and @xcite to find a relation between the pgfs of the marginal queue length distribution for polling systems with and without switch - over times , expressed in the fuhrmann - cooper queue length decomposition form @xcite .",
    "the probability generating function @xmath19 which is mentioned in property [ resingproperty ] depends on the service discipline . in a polling system with two queues and gated service",
    "we have @xmath24 . for exhaustive service",
    "this pgf becomes @xmath25 , where @xmath26 is the lst of a busy period ( bp ) distribution in an @xmath27 system with only type @xmath3 customers , so it is the root of the equation @xmath28 .",
    "we choose the beginning of a visit to @xmath4 as start of a cycle . in order to find the joint queue length distribution at the beginning of a cycle",
    ", we relate the numbers of customers in each queue at the beginning of a cycle to those at the beginning of the previous cycle . customers always enter the system during a switch - over time , or during a visit period . the first group is called _ immigration _ , whereas a customer from the second group is called _ offspring _ of the customer that is served at the moment of his arrival .",
    "we define the immigration pgf for each switch - over time and the offspring pgf for each visit period analogous to @xcite .",
    "the immigration pgfs are : @xmath29 @xmath30 is the pgf of the joint distribution of type @xmath31 and @xmath32 customers that arrive during @xmath33 . for @xmath34 things",
    "are slightly more complicated , since type @xmath32 customers arriving during @xmath34 may be served before the end of the cycle , and generate offspring .",
    "@xmath35 is the joint pgf of the type @xmath31 and @xmath32 customers present at the end of the cycle that either arrived during @xmath34 , or are offspring of type 2 customers that arrived during @xmath34 .",
    "the total immigration pgf is the product of these two pgfs : @xmath36 we define the offspring pgfs for each visit period in a similar manner:@xmath37 the term for @xmath4 is again slightly more complicated than the term for @xmath5 , since type 2 customers arriving during a server visit to @xmath4 may be served before the end of the cycle , and generate offspring .",
    "@xcite shows that the following recursive expression holds for the joint queue length pgf at the beginning of a cycle ( starting with a visit to @xmath4 ) : @xmath38 this expression can be used to compute moments of the joint queue length distribution .",
    "alternatively , iteration of this expression yields the following closed form expression for @xmath39 : @xmath40 where we use the following recursive definition for @xmath41 , @xmath42 : @xmath43 @xcite proves that this infinite product converges if and only if @xmath17 .",
    "we can relate the joint queue length distribution at other polling epochs to @xmath39 .",
    "we denote the pgf of the joint queue length distribution at a visit beginning to @xmath2 by @xmath44 , so @xmath45 .",
    "the pgf of the joint queue length distribution at a visit completion to @xmath2 is denoted by @xmath46 .",
    "the following relations hold : @xmath47      the cycle time , starting at a visit _ beginning _ to @xmath4 , is the sum of the visit times to @xmath4 and @xmath5 , and the two switch - over times which are independent of the visit times . since type 2 customers who arrive during the visit to @xmath4 or the switch from @xmath4 to @xmath5 will be served during the visit to @xmath5 , it can be shown that the lst of the distribution of the cycle time @xmath48 , @xmath49 , is related to @xmath50 as follows : @xmath51 where @xmath52 is the lst of the distribution of the time that the server spends at @xmath2 due to the presence of one type @xmath3 customer there .",
    "for gated service @xmath53 , for exhaustive service @xmath54 . a proof of can be found in @xcite .    in some cases",
    "it is convenient to choose a different starting point for a cycle , for example when analysing a polling system with exhaustive service . if we define @xmath55 to be the time between two successive visit",
    "_ completions _ to @xmath4 ,",
    "the lst of its distribution , @xmath56 , is : @xmath57 with @xmath58 .",
    "we denote the pgf of the steady - state marginal queue length distribution of @xmath4 at the visit beginning by @xmath59 .",
    "analogously we define @xmath60 , and @xmath61 .",
    "it is shown in @xcite that the steady - state marginal queue length of @xmath2 can be decomposed into two parts : the queue length of the corresponding @xmath27 queue with only type @xmath3 customers , and the queue length at an arbitrary epoch during the intervisit period of @xmath2 , denoted by @xmath62 .",
    "@xcite show that by virtue of pasta , @xmath62 has the same distribution as the number of type @xmath3 customers seen by an arbitrary type @xmath3 customer arriving during an intervisit period , which equals @xmath63 where @xmath64 is the number of type @xmath3 customers at the beginning of an intervisit period @xmath65 , and @xmath66 is the number of type @xmath3 customers at the end of @xmath65 .",
    "since the beginning of an intervisit period coincides with the completion of a visit to @xmath2 , and the end of an intervisit period coincides with the beginning of a visit , we know the pgfs for the distributions of these random variables : @xmath67 and @xmath68 .",
    "this leads to the following expression for the pgf of the steady - state queue length distribution of @xmath2 at an arbitrary epoch , @xmath69 $ ] : @xmath70 = \\frac{(1-\\rho_i)(1-z)\\beta_i(\\lambda_i(1-z))}{\\beta_i(\\lambda_i(1-z))-z } \\cdot\\frac{\\widetilde{v}_{c_i}(z ) - \\widetilde{v}_{b_i}(z)}{(1-z)(e(n_{i|i_{\\textit{end } } } ) - e(n_{i|i_{\\textit{begin}}}))}.    \\label{queuelengthdecomposition}\\ ] ] @xcite show that the distributional form of little s law can be used to find the lst of the marginal waiting time distribution : @xmath71 , hence @xmath72/\\beta_i(\\omega)$ ] .",
    "this can be substituted into : @xmath73 = & \\frac{(1-\\rho_i)\\omega}{\\omega-\\lambda_i(1-\\beta_i(\\omega))}\\cdot \\frac{\\widetilde{v}_{c_i}\\left(1-\\frac{\\omega}{\\lambda_i}\\right ) - \\widetilde{v}_{b_i}\\left(1-\\frac{\\omega}{\\lambda_i}\\right)}{(e(n_{i|i_{\\textit{end } } } ) - e(n_{i|i_{\\textit{begin}}}))\\omega/\\lambda_i }    \\nonumber\\\\ = & e[{\\textrm{e}}^{-\\omega w_{i|m / g/1}}]e\\left[\\left(1-\\frac\\omega{\\lambda_i}\\right)^{n_{i|i}}\\right].\\label{waitingtimedecomposition}\\end{aligned}\\ ] ] the interpretation of this formula is that the waiting time of a type @xmath3 customer in a polling model is the sum of two independent random variables : the waiting time of a customer in an @xmath27 queue with only type @xmath3 customers , @xmath74 , and the remaining intervisit time for a customer that arrives at an arbitrary epoch during the intervisit time of @xmath2 .    for _ gated _ service ,",
    "the number of type @xmath3 customers at the beginning of a visit to @xmath2 is exactly the number of type @xmath3 customers that arrived during the previous cycle , starting at @xmath2 . in terms of pgfs : @xmath75 .",
    "the number of type @xmath3 customers at the end of a visit to @xmath2 are exactly those type @xmath3 customers that arrived during this visit . in terms of pgfs : @xmath76 .",
    "we can rewrite @xmath77 as @xmath78 , because this is the number of type @xmath3 customers that arrive during an intervisit time . in section [ momentsgeneral ]",
    "we show that @xmath79 . using these expressions we can rewrite equation for gated service to : @xmath80 = \\frac{(1-\\rho_i)\\omega}{\\omega-\\lambda_i(1-\\beta_i(\\omega))}\\cdot \\frac{\\gamma_i(\\lambda_i(1-\\beta_i(\\omega ) ) ) - \\gamma_i(\\omega)}{(1-\\rho_i)\\omega e(c)}.\\label{lstwgated}\\ ] ] for _ exhaustive _ service , @xmath81 , because @xmath2 is empty at the end of a visit to @xmath2 .",
    "the number of type @xmath3 customers at the beginning of a visit to @xmath2 in an exhaustive polling system is equal to the number of type @xmath3 customers that arrived during the previous intervisit time of @xmath2 .",
    "hence , @xmath82 , where @xmath83 is the lst of the intervisit time distribution for @xmath2 .",
    "substitution of @xmath84 in leads to the following expression for the lst of the steady - state waiting time distribution of a type @xmath3 customer in an exhaustive polling system : @xmath80 = \\frac{(1-\\rho_i)\\omega}{\\omega-\\lambda_i(1-\\beta_i(\\omega))}\\cdot \\frac{1-\\widetilde{i}_i(\\omega)}{\\omega e(i_i)}.\\label{lstwexhaustive}\\ ] ] to the best of our knowledge , the following result is new .",
    "let the cycle time @xmath85 be the time between two successive visit _",
    "completions _ to @xmath2 .",
    "the lst of the cycle time distribution is given by .",
    "an equivalent expression for @xmath86 $ ] if @xmath2 is served exhaustively , is : @xmath73 & = \\frac{1-\\gamma^*_i(\\omega - \\lambda_i(1-\\beta_i(\\omega)))}{(\\omega-\\lambda_i(1-\\beta_i(\\omega)))e(c)}\\label{lstwexhaustivec}\\\\ & =   e[{\\textrm{e}}^{-(\\omega - \\lambda_i(1-\\beta_i(\\omega ) ) ) c^*_{i,\\textit{res}}}],\\nonumber\\end{aligned}\\ ] ] where @xmath87 is the residual length of @xmath85 .",
    "the cycle time is the length of an intervisit period @xmath65 plus the length of a visit @xmath88 , which is the time required to serve all type @xmath3 customers that have arrived during @xmath65 , and their type @xmath3 descendants .",
    "hence , the following equation holds : @xmath89 we use this equation to find the inverse relation : @xmath90 if we substitute @xmath91 , we find @xmath92 substitution of into gives",
    ".    we can write and as follows : @xmath93 where @xmath94 equals the laplace exponent of the lvy process @xmath95 , with @xmath96 a poisson process with intensity @xmath8 , and with @xmath97 , which is known to be the inverse of @xmath94 .",
    "the focus of this paper is on lst and pgf of distribution functions , not on their moments .",
    "moments can be obtained by differentiation , and are also discussed in @xcite . in this subsection",
    "we will only mention some results that will be used later .",
    "first we will derive the mean cycle time @xmath98 .",
    "unlike higher moments of the cycle time , the mean does not depend on where the cycle starts : @xmath99 .",
    "this can easily be seen , because @xmath100 is the fraction of time that the server is not working , but switching .",
    "the total switch - over time is @xmath101 .",
    "the expected length of a visit to @xmath2 is @xmath102 .",
    "the mean length of an intervisit period for @xmath2 is @xmath103 .",
    "notice that these expectations do not depend on the service discipline used .",
    "the expected number of type @xmath3 customers at polling moments does depend on the service discipline . for gated service the expected number of type @xmath3 customers at the beginning of a visit to @xmath2",
    "is @xmath104 . for exhaustive service",
    "this is @xmath78 .",
    "the expected number of type @xmath3 customers at the beginning of a visit to @xmath13 is @xmath105 for gated service , and @xmath106 for exhaustive service .",
    "moments of the waiting time distribution for a type @xmath3 customer at an arbitrary epoch can be derived from the lsts given by , and .",
    "we only present the first moment : @xmath107 notice that the start of @xmath108 is the _ beginning _ of a visit to @xmath2 , whereas the start of @xmath85 is the _ end _ of a visit .",
    "equations and are in agreement with equations ( 4.1 ) and ( 4.2 ) in @xcite .",
    "although at first sight these might seem nice , closed formulas , it should be noted that the expected residual cycle time and the expected residual intervisit time are not easy to determine , requiring the solution of a large set of equations .",
    "mva is an efficient technique to compute mean waiting times , the mean residual cycle time , and also the mean residual intervisit time .",
    "we refer to @xcite for an mva framework for polling models .",
    "in this section we study the gated service discipline for a polling system with two queues and two priority classes in the first queue : high ( @xmath6 ) and low ( @xmath7 ) priority customers .",
    "all type @xmath6 and @xmath7 customers that are present at the moment when the server arrives at @xmath4 , will be served during the server s visit to @xmath4 .",
    "first all type @xmath6 customers will be served , then all type @xmath7 customers .",
    "type @xmath6 customers arrive at @xmath4 according to a poisson process with intensity @xmath109 , and have a service requirement @xmath110 with lst @xmath111 .",
    "type @xmath7 customers arrive at @xmath4 with intensity @xmath112 , and have a service requirement @xmath113 with lst @xmath114 .",
    "if we do not distinguish between high and low priority customers , we can still use the results from section [ general ] if we regard the system as a polling system with two queues where customers in @xmath4 arrive according to a poisson process with intensity @xmath115 and have service requirement @xmath116 with lst @xmath117 .",
    "we follow the same approach as in section [ general ] .",
    "first we study the joint queue length distribution at polling epochs , then the cycle time distribution , followed by the marginal queue length distribution and waiting time distribution .",
    "the last subsection provides the first moment of these distributions .",
    "equations and give the pgfs of the joint queue length distribution at visit beginnings , @xmath118 .",
    "a type 1 customer entering the system is a type @xmath6 customer with probability @xmath119 , and a type @xmath7 customer with probability @xmath120 .",
    "we can express the pgf of the joint queue length distribution in the polling system with priorities , @xmath121 , in terms of the pgf of the joint queue length distribution in the polling system without priorities , @xmath122 .",
    "[ p1_3qs ] @xmath123    let @xmath124 be the number of high priority customers present in @xmath4 at the beginning of a visit to @xmath2 , @xmath125 .",
    "similarly define @xmath126 to be the number of low priority customers present in @xmath4 at the beginning of a visit to @xmath2 .",
    "let @xmath127 .",
    "since the type @xmath6/@xmath7 customers in @xmath4 are exactly those @xmath6/@xmath7 customers that arrived since the previous visit beginning at @xmath2 , we know that @xmath128 hence @xmath129 & = \\sum_{i=0}^\\infty\\sum_{j=0}^\\infty z_h^iz_l^j p(x_h = i , x_l = j|x_1=k ) \\\\ & = \\left(\\frac{\\lambda_h z_h + \\lambda_l z_l}{\\lambda_1}\\right)^k.\\end{aligned}\\ ] ] finally , @xmath130      the lst of the cycle time distribution is still given by if we define @xmath115 and @xmath131 , because the cycle time does not depend on the order of service .",
    "equation is valid for polling systems with queues having any branching type service discipline . in the present section",
    "we can derive an alternative , shorter expression for @xmath49 by explicitly using the fact that @xmath4 receives gated service .",
    "the type 1 ( i.e. both @xmath6 and @xmath7 ) customers present at the visit beginning to @xmath4 are those that arrived during the previous cycle : @xmath132 . by setting @xmath133 , this leads to the following expression for the lst of the distribution of @xmath48 if service in @xmath4 is gated : @xmath134      we first determine the lst of the waiting time distribution for a type @xmath7 customer , using the fact that this customer will not be served until the next cycle ( starting at @xmath4 ) .",
    "the time from the start of the cycle until the arrival will be called `` past cycle time '' , denoted by @xmath135 .",
    "the residual cycle time will be denoted by @xmath136 .",
    "the waiting time of a type @xmath7 customer is composed of @xmath136 , the service times of all high priority customers that arrived during @xmath137 , and the service times of all low priority customers that have arrived during @xmath135 .",
    "let @xmath138 be the number of high priority customers that have arrived during time interval @xmath139 , and equivalently define @xmath140 .",
    "@xmath141 = & \\frac{\\gamma_1(\\lambda_h(1-\\beta_h(\\omega))+\\lambda_l(1-\\beta_l(\\omega ) ) ) - \\gamma_1(\\omega+\\lambda_h(1-\\beta_h(\\omega)))}{(\\omega-\\lambda_l(1-\\beta_l(\\omega)))e(c)}.\\end{aligned}\\ ] ]    @xmath141 & = e\\left[{\\textrm{e}}^{-\\omega ( c_{1r}+\\sum_{i=1}^{n_h(c_{1p}+c_{1r})}b_{h , i}+\\sum_{i=1}^{n_l(c_{1p})}b_{l , i})}\\right ] \\nonumber\\\\ & = \\int_{t=0}^\\infty \\int_{u=0}^\\infty \\sum_{m=0}^\\infty\\sum_{n=0}^\\infty e\\left[{\\textrm{e}}^{-\\omega\\sum_{i=1}^{m}b_{h , i}}\\right]e\\left[{\\textrm{e}}^{-\\omega\\sum_{i=1}^{n}b_{l , i}}\\right ] \\nonumber\\\\ & \\quad\\cdot{\\textrm{e}}^{-\\omega u } \\frac{(\\lambda_h(t+u))^m}{m!}{\\textrm{e}}^{-\\lambda_h(t+u)}\\frac{(\\lambda_l t)^n}{n!}{\\textrm{e}}^{-\\lambda_lt } { \\,\\textrm{d}}p(c_{1p}<t , c_{1r}<u)\\nonumber\\\\ \\nonumber\\\\ & = \\int_{t=0}^\\infty \\int_{u=0}^\\infty { \\textrm{e}}^{-t(\\lambda_h(1-\\beta_h(\\omega))+\\lambda_l(1-\\beta_l(\\omega)))}{\\textrm{e}}^{-u(\\omega + \\lambda_h(1-\\beta_h(\\omega ) ) ) } { \\,\\textrm{d}}p(c_{1p}<t , c_{1r}<u)\\nonumber\\\\ & = \\frac{\\gamma_1(\\lambda_h(1-\\beta_h(\\omega))+\\lambda_l(1-\\beta_l(\\omega ) ) ) - \\gamma_1(\\omega+\\lambda_h(1-\\beta_h(\\omega)))}{(\\omega-\\lambda_l(1-\\beta_l(\\omega)))e(c)}. \\label{lstwlgated}\\end{aligned}\\ ] ]    for the last step in the derivation of we used @xmath142 = \\frac{e[{\\textrm{e}}^{-\\omega_p c_1}]-e[{\\textrm{e}}^{-\\omega_r c_1}]}{(\\omega_r-\\omega_p)e(c)},\\ ] ] which is obtained in @xcite .",
    "the fuhrmann - cooper decomposition @xcite still holds for the waiting time of type @xmath7 customers , because can be rewritten into @xmath141 = & \\frac{(1-\\rho_l)\\omega}{\\omega-\\lambda_l(1-\\beta_l(\\omega ) ) } \\nonumber\\\\ & \\cdot \\frac{\\gamma_1(\\lambda_h(1-\\beta_h(\\omega))+\\lambda_l(1-\\beta_l(\\omega ) ) ) - \\gamma_1(\\omega+\\lambda_h(1-\\beta_h(\\omega)))}{(1-\\rho_l)\\omega e(c)}.\\label{lstwlgateddecomposition}\\end{aligned}\\ ] ] we recognise the first term on the right - hand side of as the lst of the waiting time distribution of an @xmath27 queue with only type @xmath7 customers .",
    "an interpretation of the other two terms on the right - hand side can be found when regarding the polling system as a polling system with _ three _",
    "queues @xmath143 and no switch - over time between @xmath144 and @xmath145 .",
    "the service discipline of this equivalent system is synchronised gated , which is a more general version of gated .",
    "the gates for queues @xmath144 and @xmath145 are set simultaneously when the server arrives at @xmath144 , but the gate for @xmath5 is still set when the server arrives at @xmath5 . in the following paragraphs we show that the second and third term on the right - hand side of together can be interpreted as @xmath146 $ ] , where @xmath147 is the number of type @xmath7 customers at a random epoch during the intervisit period of @xmath145 .    the expression for the lst of the distribution of the number of type @xmath7 customers at an arbitrary epoch is determined by first converting the waiting time lst to sojourn time lst , i.e. , multiplying expression with @xmath148 .",
    "second , we apply the distributional form of little s law @xcite to .",
    "this law can be applied because the required conditions are fulfilled for each customer class ( h , l , and 2 ) : the customers enter the system in a poisson stream , every customer enters the system and leaves the system one at a time in order of arrival , and for any time @xmath149 the entry process into the system of customers after time @xmath149 and the time spent in the system by any customer arriving before time @xmath149 are independent .",
    "the result is : @xmath150 = \\frac{(1-\\rho_l)(1-z)\\beta_l(\\lambda_l(1-z))}{\\beta_l(\\lambda_l(1-z))-z } \\cdot \\frac{\\widetilde{v}_{c_l}(z ) - \\widetilde{v}_{b_l}(z)}{(1-z)(e(n_{l|i_{\\textit{end } } } ) - e(n_{l|i_{\\textit{begin}}}))}.\\label{gfzlgateddecomposition}\\ ] ] in this equation @xmath151 denotes the pgf of the distribution of the number of type @xmath7 customers at the beginning of a visit to @xmath145 , and @xmath152 denotes the pgf at the completion of a visit to @xmath145 : @xmath153 the last term in is the pgf of the distribution of the number of type @xmath7 customers at an arbitrary epoch during the intervisit period of @xmath145 , @xmath154 $ ] .",
    "substitution of @xmath155 in , and using @xmath156 , shows that the second and third term at the right - hand side of together indeed equal @xmath146 $ ] .",
    "the derivation of the lsts of @xmath157 and @xmath158 is similar and leads to the following expressions : @xmath159 = & \\frac{(1-\\rho_h)\\omega}{\\omega-\\lambda_h(1-\\beta_h(\\omega ) ) } \\cdot \\frac{\\gamma_1(\\lambda_h(1-\\beta_h(\\omega ) ) ) - \\gamma_1(\\omega)}{(1-\\rho_h)\\omega e(c)},\\label{lstwhgated}\\\\ e\\left[{\\textrm{e}}^{-\\omega w_2}\\right ] = & \\frac{(1-\\rho_2)\\omega}{\\omega-\\lambda_2(1-\\beta_2(\\omega ) ) } \\cdot \\frac{\\gamma_2(\\lambda_2(1-\\beta_2(\\omega ) ) ) - \\gamma_2(\\omega)}{(1-\\rho_2)\\omega e(c)}.\\label{lstw2gated}\\end{aligned}\\ ] ]    equations and are equivalent to the lst of @xmath160 in a nonpriority polling system , which illustrates that the fuhrmann - cooper decomposition also holds for the waiting time distributions of high priority customers in @xmath4 and type 2 customers in a polling system with gated service .",
    "application of the distributional form of little s law to these expressions results in : @xmath161 & = \\frac{(1-\\rho_h)(1-z)\\beta_h(\\lambda_h(1-z))}{\\beta_h(\\lambda_h(1-z))-z } \\cdot \\frac{\\gamma_1(\\lambda_h(1-\\beta_h(\\lambda_h(1-z ) ) ) ) - \\gamma_1(\\lambda_h(1-z))}{\\lambda_h(1-\\rho_h)(1-z)e(c)},\\\\ e\\left[z^{n_2}\\right ] & = \\frac{(1-\\rho_2)(1-z)\\beta_2(\\lambda_2(1-z))}{\\beta_2(\\lambda_2(1-z))-z } \\cdot \\frac{\\gamma_2(\\lambda_2(1-\\beta_2(\\lambda_2(1-z ) ) ) ) - \\gamma_2(\\lambda_2(1-z))}{\\lambda_2(1-\\rho_2)(1-z)e(c)}.\\end{aligned}\\ ] ]    if the service discipline in @xmath5 is not gated , but another branching type service discipline that satisfies property [ resingproperty ] , should be replaced by the more general expression .      as mentioned in section [ momentsgeneral ] ,",
    "we do not focus on moments in this paper , and we only mention the mean waiting times of type @xmath6 and @xmath7 customers . for a type @xmath6 customer , it is immediately clear that @xmath162 .",
    "the mean waiting time for a type @xmath7 customer can be obtained by differentiating .",
    "this results in : @xmath163 these formulas can also be obtained using mva , as shown in @xcite .",
    "in this section we discuss a polling model with two queues @xmath164 and two priority classes ( @xmath6 and @xmath7 ) in @xmath4 with globally gated service . for this service discipline , only customers that were present when the server started its visit to @xmath4 are served .",
    "this feature makes the model exactly the same as a nonpriority polling model with three queues @xmath143 .",
    "although this system does not satisfy property [ resingproperty ] , it does satisfy property [ borstproperty ] which implies that we can still follow the same approach as in the previous sections .",
    "we define the beginning of a visit to @xmath4 as the start of a cycle , since this is the moment that determines which customers will be served during the next visits to the queues .",
    "arriving customers will always be served in the next cycle , so the three @xmath165 offspring pgfs are : @xmath166 the two @xmath167 immigration functions are : @xmath168 using these definitions , the formula for the pgf of the joint queue length distribution at the beginning of a cycle is similar to the one found in section [ general ] : @xmath169    notice that in a system with globally gated service it is possible to express the joint queue length distribution at the beginning of a cycle in terms of the cycle time lst , since all customers that are present at the beginning of a cycle are exactly all of the customers that have arrived during the previous cycle :    @xmath170      since only those customers that are present at the start of a cycle , starting at @xmath4 , will be served during this cycle , the lst of the cycle time distribution is @xmath171 substitution of into this expression gives us the following relation : @xmath172 @xcite show that this relation leads to the following expression for the cycle time lst : @xmath173 where @xmath174 , and @xmath175 is recursively defined as follows : @xmath176      for type @xmath6 and @xmath7 customers , the expressions for @xmath177 and @xmath178 are exactly the same as the ones found in section [ gatedmarginalw ] , but with @xmath49 as defined in .",
    "the expression for @xmath179 can be obtained with the method used in section [ gatedmarginalw ] : @xmath180 = & \\sigma_1(\\omega)\\cdot\\frac{\\gamma_1(\\sum_{i = h , l,2}\\lambda_i(1-\\beta_i(\\omega ) ) ) - \\gamma_1(\\omega+\\sum_{i = h , l}\\lambda_i(1-\\beta_i(\\omega)))}{(\\omega-\\lambda_2(1-\\beta_2(\\omega)))e(c)}\\\\ = & \\sigma_1(\\omega)\\cdot\\frac{(1-\\rho_2)\\omega}{\\omega-\\lambda_2(1-\\beta_2(\\omega ) ) } \\\\ & \\cdot \\frac{\\gamma_1(\\sum_{i = h , l,2}\\lambda_i(1-\\beta_i(\\omega ) ) ) - \\gamma_1(\\omega+\\sum_{i = h , l}\\lambda_i(1-\\beta_i(\\omega)))}{(1-\\rho_2)\\omega e(c)}.\\end{aligned}\\ ] ]    we can use the distributional form of little s law to determine the lst of the marginal queue length distribution of @xmath5 : @xmath181 = & \\sigma_1(\\lambda_2(1-z))\\frac{(1-\\rho_2)(1-z)\\beta_2(\\lambda_2(1-z))}{\\beta_2(\\lambda_2(1-z))-z } \\\\ & \\cdot \\frac{\\gamma_1\\left(\\sum_{i = h , l,2}\\lambda_i(1-\\beta_i(\\lambda_2(1-z)))\\right ) - \\gamma_1\\left(\\lambda_2(1-z)+\\sum_{i = h , l}\\lambda_i(1-\\beta_i(\\lambda_2(1-z)))\\right ) } { \\lambda_2(1-\\rho_2)(1-z)e(c)}.\\end{aligned}\\ ] ]    the fuhrmann - cooper queue length decomposition also holds for all customer classes in a polling system with globally gated service .",
    "the expressions for @xmath182 and @xmath183 from section [ momentsgated ] also hold in a globally gated polling system , but with a different mean residual cycle time .",
    "we only provide the mean waiting time of type 2 customers : @xmath184",
    "in this section we study the same polling model as in the previous two sections , but the two queues are served exhaustively .",
    "the section has the same structure as the other sections , so we start with the derivation of the lst of the joint queue length distribution at polling epochs , followed by the lst of the cycle time distribution .",
    "lsts of the marginal queue length distributions and waiting time distributions are provided in the next subsection . in the last part of the section the mean waiting time of each customer type is studied .",
    "it should be noted that , although we assume that both @xmath4 and @xmath5 are served exhaustively , a model in which @xmath5 is served according to another branching type service discipline , requires only minor adaptations .",
    "we can derive the joint queue length distribution at the beginning of a cycle for a polling system with two queues and two priority classes in @xmath4 , @xmath185 , directly from for @xmath39 .",
    "similar to the proof of lemma [ p1_3qs ] , we can prove that @xmath186 the same holds for @xmath187 and visit completion epochs @xmath188 , for @xmath189 .",
    "for the cycle time starting with a visit to @xmath4 , is still valid .",
    "however , when studying the waiting time of a specific customer type in an exhaustively served queue , it is convenient to consider the _ completion _ of a visit to @xmath4 as the start of a cycle . hence , in this section the notation @xmath190 , or the lst of its distribution , @xmath56 , refers to the cycle time starting at the completion of a visit to @xmath4 .",
    "equation gives the lst of the distribution of @xmath190 .",
    "using the fact that customers in @xmath4 are served exhaustively , we can find an alternative , compact expression for @xmath191 .",
    "the type 1 ( i.e. both type @xmath6 and @xmath7 customers ) customers at the beginning of a visit to @xmath4 are exactly those type 1 customers that have arrived during the previous intervisit time : @xmath192 .",
    "hence , by setting @xmath193 , we get @xmath194 , and thus by , @xmath195      analysis of the model with exhaustive service requires a different approach .",
    "the key observation , made by @xcite , is that a nonpriority polling system from the viewpoint of a type @xmath3 customer is an @xmath27 queue with multiple server vacations .",
    "this implies that the fuhrmann - cooper decomposition can be used , even though the intervisit times are strongly dependent on the visit times .",
    "the @xmath27 queue with priorities and vacations can be analysed by modelling the system as a special version of the _ nonpriority _ @xmath27 queue with multiple server vacations , and then applying the results from fuhrmann and cooper .",
    "this approach has been used by @xcite who used the concept of _ delay cycles _ , and also by @xcite who used _",
    "level crossing analysis _ ; see also @xcite .",
    "we apply kella and yechiali s approach to the polling model under consideration to find the waiting time lst for type @xmath6 and @xmath7 customers . in @xcite systems with single and multiple vacations , preemptive resume and nonpreemptive service are considered . in the present paper",
    "we do not consider preemptive resume , so we only use results from the case labelled as npmv ( nonpreemptive , multiple vacations ) in @xcite .",
    "we consider the system from the viewpoint of a type @xmath6 and type @xmath7 customer separately to derive @xmath196 $ ] and @xmath197 $ ] .    from the viewpoint of a type @xmath6 customer and as far as waiting times are concerned , a polling system is a _",
    "nonpriority _ single server system with multiple vacations .",
    "the vacation can either be the intervisit period @xmath198 , or the service of a type @xmath7 customer .",
    "the lsts of these two types of vacations are : @xmath199 & = p_1(1-\\omega/\\lambda_1 , 1 ) , \\label{intervisitexhaustive}\\\\ e[{\\textrm{e}}^{-\\omega b_l } ] & = \\beta_l(\\omega ) .",
    "\\nonumber\\end{aligned}\\ ] ] equation follows immediately from the fact that the number of type 1 ( i.e. both h and l ) customers at the beginning of a visit to @xmath4 is the number of type 1 customers that have arrived during the previous intervisit period : @xmath200 $ ] .",
    "we now use the concept of delay cycles , introduced in @xcite , to find the waiting time lst of a type @xmath6 customer .",
    "the key observation is that an arrival of a tagged type @xmath6 customer will always take place within either an @xmath201 cycle , or an @xmath202 cycle .",
    "an @xmath201 cycle is a cycle that starts with an intervisit period for @xmath4 , followed by the service of all type @xmath6 customers that have arrived during the intervisit period , and ends at the moment that no type @xmath6 customers are left in the system .",
    "notice that at the start of the intervisit period , no type @xmath6 customers were present in the system either .",
    "an @xmath202 cycle is a similar cycle , but starts with the service of a type @xmath7 customer .",
    "this cycle also ends at the moment that no type @xmath6 customers are left in the system .",
    "the fraction of time that the system is in an @xmath202 cycle is @xmath203 , because type @xmath7 customers arrive with intensity @xmath112 .",
    "each of these customers will start an @xmath202 cycle and the length of an @xmath202 cycle equals @xmath204 : @xmath205 where @xmath206 is the mean length of a busy period of type @xmath6 customers .",
    "the fraction of time that the system is in an @xmath201 cycle , is @xmath207 .",
    "this result can also be obtained by using the argument that the fraction of time that the system is in an intervisit period is the fraction of time that the server is not serving @xmath4 , which is equal to @xmath208 . a cycle which starts with such an intervisit period and",
    "stops when all type @xmath6 customers that arrived during the intervisit period and their type @xmath6 descendants have been served , has mean length @xmath209 .",
    "this also leads to the conclusion that @xmath210 is the fraction of time that the system is in an @xmath201 cycle .",
    "a customer arriving during an @xmath201 cycle views the system as a nonpriority @xmath27 queue with multiple server vacations @xmath198 ; a customer arriving during an @xmath202 cycle views the system as a nonpriority @xmath27 queue with multiple server vacations @xmath113 .",
    "@xcite showed that the waiting time of a customer in an @xmath27 queue with server vacations is the sum of two independent quantities : the waiting time of a customer in a corresponding @xmath27 queue without vacations , and the residual vacation time .",
    "hence , the lst of the waiting time distribution of a type @xmath6 customer is : @xmath211 = \\frac{(1-\\rho_h)\\omega}{\\omega-\\lambda_h(1-\\beta_h(\\omega))}\\cdot \\left[\\frac{1-\\rho_1}{1-\\rho_h } \\cdot \\frac{1-\\widetilde{i}_1(\\omega)}{\\omega e(i_1)}+ \\frac{\\rho_l}{1-\\rho_h}\\cdot\\frac{1-\\beta_l(\\omega)}{\\omega e(b_l)}\\right].\\label{lstwhexhaustive}\\ ] ] equation is in accordance with the more general equation in section 4.1 in @xcite .",
    "the lst of the distribution of the waiting time of a high priority customer in a two priority @xmath27 queue without vacations is @xmath212 = \\frac{(1-\\rho_1)\\omega+\\lambda_l(1-\\beta_l(\\omega))}{\\omega-\\lambda_h(1-\\beta_h(\\omega))}\\label{lstwhmg1},\\\\\\ ] ] see , e.g. , equation ( 3.85 ) in @xcite , chapter iii.3 .",
    "equation can be rewritten to , with @xmath213 replaced by 1 .",
    "hence , the waiting time distribution of a high priority customer in a two priority @xmath27 queue equals the waiting time distribution of a customer in a nonpriority @xmath27 queue with only type @xmath6 customers , where the server goes on a vacation @xmath113 with probability @xmath203 .",
    "substitution of in expresses @xmath196 $ ] in terms of the lst of the cycle time distribution starting at a visit _ completion _ to @xmath4 , @xmath191 : @xmath211 = \\frac{1-\\gamma_1^*(\\omega - \\lambda_h(1-\\beta_h(\\omega ) ) - \\lambda_l(1-\\beta_l(\\omega ) ) ) + \\lambda_l ( 1-\\beta_l(\\omega))e(c)}{(\\omega-\\lambda_h(1-\\beta_h(\\omega)))e(c)}.\\label{lstwhexhaustivec}\\ ] ]    the concept of cycles is not really needed to model the system from the perspective of a type @xmath7 customer , because for a type @xmath7 customer the system merely consists of @xmath214 cycles .",
    "an @xmath214 cycle is the same as an @xmath201 cycle , discussed in the previous paragraphs , except that it ends when no type @xmath6 _ or @xmath7 _ customers are left in the system .",
    "so the system can be modelled as a nonpriority @xmath27 queue with server vacations .",
    "the vacation is the intervisit time @xmath198 , plus the service times of all type @xmath6 customers that have arrived during that intervisit time and their type @xmath6 descendants .",
    "we will denote this extended intervisit time by @xmath215 with lst @xmath216 the mean length of @xmath215 equals @xmath217 .",
    "we also have to take into account that a busy period of type @xmath7 customers might be interrupted by the arrival of type @xmath6 customers .",
    "therefore the alternative system that we are considering will not contain regular type @xmath7 customers , but customers still arriving with arrival rate @xmath112 , whose service time equals the service time of a type @xmath7 customer in the original model , plus the service times of all type @xmath6 customers that arrive during this service time , and all of their type @xmath6 descendants .",
    "the lst of the distribution of this extended service time @xmath218 is @xmath219 this extended service time is often called _ completion time _ in the literature . in this alternative system , the mean service time of these customers equals @xmath220 .",
    "the fraction of time that the system is serving these customers is @xmath221 .",
    "now we use the results from the @xmath27 queue with server vacations ( starting with the fuhrmann - cooper decomposition ) to determine the lst of the waiting time distribution for type @xmath7 customers : @xmath222 = & \\frac{(1-\\rho_l^*)\\omega}{\\omega-\\lambda_l(1-\\beta_l^*(\\omega ) ) } \\cdot \\frac{1-\\widetilde{i}_1^*(\\omega)}{\\omega e(i_1^ * ) } \\nonumber\\\\ = & \\frac{(1-\\rho_1)(\\omega+\\lambda_h(1-\\pi_h(\\omega)))}{\\omega-\\lambda_l(1-\\beta_l(\\omega+\\lambda_h(1-\\pi_h(\\omega ) ) ) ) } \\cdot \\frac{1-\\widetilde{i}_1(\\omega+\\lambda_h(1-\\pi_h(\\omega)))}{(\\omega + \\lambda_h(1-\\pi_h(\\omega)))e(i_1)}. \\label{lstwlexhaustive}\\end{aligned}\\ ] ] the last term of is the lst of the distribution of the residual intervisit time , plus the time that it takes to serve all type @xmath6 customers and their type @xmath6 descendants that arrive during this residual intervisit time .",
    "the first term of is the lst of the waiting time distribution of a low - priority customer in an @xmath27 queue with two priorities , without vacations ( see e.g. ( 3.76 ) in @xcite , chapter iii.3 ) .",
    "the @xmath27 queue with two priorities can be viewed as a nonpriority @xmath27 queue with vacations , if we consider the waiting time of type @xmath7 customers .",
    "we only need to rewrite the first term of : @xmath223 = & \\frac{(1-\\rho_1)(\\omega+\\lambda_h(1-\\pi_h(\\omega)))}{\\omega-\\lambda_l(1-\\beta_l(\\omega+\\lambda_h(1-\\pi_h(\\omega))))}\\\\ = & \\frac{(1-\\rho_l^*)\\omega}{\\omega-\\lambda_l(1-\\beta_l^*(\\omega ) ) } \\cdot \\frac{1-\\rho_1}{1-\\rho_l^ * } \\cdot \\frac{\\omega+\\lambda_h(1-\\pi_h(\\omega))}{\\omega } \\\\",
    "= & e[e^{-\\omega w_{l|m / g/1}^ * } ] \\cdot\\left[(1-\\rho_h ) + \\rho_h \\frac{1-\\pi_h(\\omega)}{\\omega e(\\textit{bp}_h)}\\right],\\end{aligned}\\ ] ] where @xmath224 $ ] is the lst of the waiting time distribution of a customer in an @xmath27 queue where customers arrive at intensity @xmath112 and have service requirement lst @xmath225 . so with probability @xmath226 the waiting time of a customer is the waiting time in an @xmath27 queue with no vacations , and with probability @xmath227 the waiting time of a customer is the sum of the waiting time in an @xmath27 queue and the residual length of a vacation , which is a busy period of type @xmath6 customers .",
    "substitution of in leads to a different expression for @xmath197 $ ] : @xmath222 & = \\frac{1-\\gamma^*_1(\\omega - \\lambda_l(1-\\beta_l(\\omega+\\lambda_h(1-\\pi_h(\\omega)))))}{(\\omega-\\lambda_l(1-\\beta_l(\\omega+\\lambda_h(1-\\pi_h(\\omega)))))e(c)}\\nonumber\\\\ & = e[{\\textrm{e}}^{-(\\omega - \\lambda_l(1-\\beta_l(\\omega+\\lambda_h(1-\\pi_h(\\omega)))))c^*_{1,\\textit{res}}}].\\label{lstwlexhaustivec}\\end{aligned}\\ ] ]    the waiting time of type 2 customers is not affected at all by the fact that @xmath4 contains multiple classes of customers , so is still valid for @xmath179 .",
    "we will refrain from mentioning the pgfs of the marginal queue length distributions here , because they can be obtained by applying the distributional form of little s law as we have done before .",
    "the mean waiting times for high and low priority customers can be found by differentiation of and : @xmath228 differentiation of and leads to alternative expressions , that can also be found in @xcite .",
    "consider a polling system with two queues , and assume exponential service times and switch - over times .",
    "suppose that @xmath230 .",
    "the workload of this polling system is @xmath231 .",
    "this example is extensively discussed in @xcite where mva was used to compute mean waiting times and mean residual cycle times for the gated and exhaustive service disciplines .    in this example",
    "we show that the performance of this system can be improved by giving higher priority to jobs with smaller service times .",
    "we define a threshold @xmath149 and divide the jobs into two classes : jobs with a service time less than @xmath149 receive high priority , the other jobs receive low priority . in figures [ fig : gated ] and [ fig : exhaustive ] the mean waiting times of customers in @xmath4 are shown as a function of the threshold @xmath149 .",
    "the following four cases are distinguished :    * the mean waiting time of the low priority customers in @xmath4 ( indicated as `` type l '' ) ; * the mean waiting time of the high priority customers in @xmath4 ( indicated as `` type h '' ) ; * a weighted average of the above two mean waiting times : @xmath232 ( indicated as `` type 1 with priorities '' ) .",
    "this can be interpreted as the mean waiting time of an arbitrary customer in @xmath4 ; * the mean waiting time of an arbitrary customer in @xmath4 if no priority rules would be applied to this queue ( indicated as `` type 1 no priorities '' ) .",
    "in this situation there is no such thing as high and low priority customers , so the mean waiting time does not depend on @xmath149 , and has already been computed in @xcite .",
    "the figures show that a unique optimal threshold exists that minimises the mean weighted waiting time for customers in @xmath4 .",
    "this value depends on the service discipline used and is discussed in @xcite . in this example the optimal threshold is 1 for gated , and 1.38 for exhaustive .",
    "figure [ fig : gated ] confirms that the mean waiting times for type @xmath6 and @xmath7 customers in the gated model only differ by a constant value : @xmath233 . for globally gated service",
    "no figure is included , because we again have @xmath233 .",
    "the mean residual cycle time is different from the one in the gated model , but this does not affect the optimal threshold which is still @xmath234 .    in the exhaustive model we have the following relation : @xmath235 if we increase threshold @xmath149 , the fraction of customers in @xmath4 that receive high priority grows , and so does their mean service time .",
    "this means that @xmath227 increases as @xmath149 increases , so @xmath236 gets bigger , which can be seen in figure [ fig : exhaustive ] .",
    "notice that @xmath237 , so it does not depend on @xmath149 .     in the gated polling system , versus threshold @xmath149.[fig : gated ] ]     in the exhaustive polling system , versus threshold @xmath149.[fig : exhaustive ] ]    it is interesting to also consider the variance , or rather the standard deviation of the waiting time .",
    "figures [ fig : gatedvar ] and [ fig : exhaustivevar ] show the standard deviation of the type @xmath6 and @xmath7 customers versus the threshold @xmath149 .",
    "the figures also show the standard deviation of an arbitrary customer in @xmath4 , with and without priorities .",
    "the figures indicate that the waiting times in the gated system have smaller standard deviations than in the exhaustive case . in this example",
    ", the introduction of priorities affects the standard deviation of an arbitrary type 1 customer only slightly .",
    "however , it is interesting to zoom in to investigate the influence of threshold @xmath149 .",
    "figure [ fig : gatedexhaustivevarzoom ] contains zoomed versions of figures [ fig : gatedvar ] and [ fig : exhaustivevar ] and indicates that the threshold @xmath149 that minimises the overall mean waiting time of type @xmath31 customers in the priority system does not minimise the standard deviation .",
    "in fact , changing threshold @xmath149 affects the entire service time distributions @xmath110 and @xmath113 , which results in two local minima for the standard deviation as function of threshold @xmath149 .     in the gated polling system , versus threshold @xmath149.[fig : gatedvar ] ]     in the exhaustive polling system , versus threshold @xmath149.[fig : exhaustivevar ] ]     ( left ) and [ fig : exhaustivevar ] ( right).[fig : gatedexhaustivevarzoom],title=\"fig : \" ]   ( left ) and [ fig : exhaustivevar ] ( right).[fig : gatedexhaustivevarzoom],title=\"fig : \" ]",
    "the polling system studied in the present paper leaves many possibilities for extensions or variations . in this section",
    "we discuss some of them .",
    "probably the most obvious extension of the model under consideration , is a polling system with any number of queues and any number of priority levels in each queue . in recent research @xcite",
    ", we have discovered that such a polling model can be analysed in detail .",
    "each queue can have its own service discipline , either exhaustive or ( synchronised ) gated .      in the present paper , the service of low priority customers is not interrupted by the arrival of a high priority customer .",
    "if we allow for service interruptions , these would only take place in a queue with exhaustive service , since ( globally ) gated service forces high priority customers to wait behind the gate .",
    "we note that allowing service interruptions does not affect the joint queue length distributions at polling instants , nor the cycle time .",
    "also the waiting time of low priority customers is unaffected ( but they might have a longer _ sojourn time _ ) .",
    "it only affects the waiting time of high priority customers , because they do not have to wait for a residual service time of a low priority customer .",
    "the lst of the waiting time distribution of a high priority customer if service is preemptive resume , is : @xmath211 = \\frac{(1-\\rho_h)\\omega}{\\omega-\\lambda_h(1-\\beta_h(\\omega))}\\cdot \\left[\\frac{1-\\rho_1}{1-\\rho_h } \\cdot \\frac{1-\\widetilde{i}_1(\\omega)}{\\omega e(i_1)}+ \\frac{\\rho_l}{1-\\rho_h}\\right].\\ ] ]      in the present paper , customers in @xmath4 receive either exhaustive or ( globally ) gated service .",
    "one may consider serving each priority level according to a different service discipline . in @xcite ,",
    "high priority customers receive exhaustive service , whereas low priority customers receive gated service .",
    "this gives high priority customers an additional advantage , but it turns out that for low priority customers this strategy may be better than , e.g. , gated service for all priority levels",
    ". a mixture of globally gated service for low priority customers and exhaustive service for high priority customers can be analysed similarly .",
    "the `` opposite '' strategy , where low priority customers are served exhaustively and high priority customers are served according to the gated service discipline is easier to analyse , since we can model it as a nonpriority polling model with @xmath4 replaced by two queues , @xmath238 and @xmath145 , containing the type @xmath6 and type @xmath7 customers and having gated and exhaustive service respectively .",
    "a variant of the gated service discipline is partially gated service : every customer , type @xmath6 or @xmath7 , standing in front of the gate is served during a visit with a fixed probability @xmath239 , and is not served with probability @xmath240 .",
    "the probability @xmath239 might even depend on the customer type . whether a rejected customer is eligible for service in the next cycle , or leaves the system , does not matter",
    ". both situations can be analysed .",
    "we assume that the server alternates between @xmath4 and @xmath5 .",
    "a different way of introducing priorities to a polling system is by increasing the frequency of visits to a queue within a cycle .",
    "one can , e.g. , decide to visit @xmath4 two consecutive times if gated service is used .",
    "or one can think of a system where the server switches to @xmath241 after completing a visit to @xmath2 with probability @xmath242 .",
    "@xcite establishes fluid limits for polling systems with any branching type service discipline and _ deterministic _ switch - over times tending to infinity .",
    "the scaled waiting time distribution is shown to converge to a uniform distribution with bounds that can be computed explicitly .",
    "the results are relevant to applications in production systems , where large setup times are common .",
    "these fluid limits can also be computed for the polling model that is discussed in the present paper and give explicit insight in when each of the discussed service disciplines is optimal .",
    "m.  a.  a. boon , i.  j. b.  f. adan , and o.  j. boxma . a two - queue polling model with two priority levels in the first queue .",
    "_ valuetools 2008 ( third international conference on performance evaluation methodologies and tools , athens , greece , october 20 - 24 , 2008 ) _ , 2008 .",
    "m.  cicin - sain , c.  e.  m. pearce , and j.  sunde . on the application of a polling model with non - zero walk times and priority processing to a medical emergency - room environment .",
    "_ proceedings of the 23rd international conference on information technology interfaces , 2001 _",
    ", 1:0 4956 , 2001 .",
    "r.  y.  w. lam , v.  c.  m. leung , and h.  c.  b. chan .",
    "polling - based protocols for packet voice transport over ieee 802.11 wireless local area networks . _ ieee transactions on wireless communications _ , 13:0 2229 , 2006 ."
  ],
  "abstract_text": [
    "<S> in this paper we consider a single - server cyclic polling system consisting of two queues . between visits to successive queues , the server is delayed by a random switch - over time . </S>",
    "<S> two types of customers arrive at the first queue : high and low priority customers . </S>",
    "<S> for this situation the following service disciplines are considered : gated , globally gated , and exhaustive . </S>",
    "<S> we study the cycle time distribution , the waiting times for each customer type , the joint queue length distribution at polling epochs , and the steady - state marginal queue length distributions for each customer type .    </S>",
    "<S> * keywords : * polling , priority levels , queue lengths , waiting times </S>"
  ]
}
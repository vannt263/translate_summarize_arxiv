{
  "article_text": [
    "in wireless networks , the links ( transmitter - receiver pairs ) may not be able to transmit simultaneously due to interference .",
    "a scheduling algorithm , or mac ( medium access control ) protocol , determines which links can access the medium in each time instant so that no active links interfere with each other . since many wireless network applications today",
    "have stringent bandwidth and delay requirements but the resources ( e.g. , spectrum , power ) are often quite limited in a wireless setting , designing low - complexity scheduling algorithms to achieve high throughput and low delay is of great importance .",
    "it is well known that the queue - length based _ maximum weighted scheduling _ ( mws ) algorithm is _ throughput - optimal _",
    "@xcite , meaning that it can stabilize the network queues for all arrival rates in the capacity region of the network .",
    "however , mws requires the network to select a max - weight independent set in the interference graph in every time slot , which is np - hard for general interference graphs @xcite .",
    "there exist several low - complexity alternatives such as _ maximal scheduling _ and _ greedy maximal scheduling _ , but in general these algorithms can only guarantee to achieve a fraction of the capacity region ( see @xcite and references therein ) .    due to their simplicity",
    ", random access type scheduling algorithms such as aloha and carrier sense multiple access ( csma ) are widely used in practice .",
    "performance analysis of random access algorithms in single - hop wireless networks can be found in @xcite . in @xcite",
    "the authors introduced a continuous - time markov chain model to analyze the performance of a ( fixed - parameter ) csma algorithm in multi - hop wireless networks , and it was shown that the stationary distribution over the schedules has a product form .",
    "the model was used in @xcite to study throughput and fairness issues of the csma algorithm , and its insensitivity properties were studied in  @xcite . a discrete - time version of the algorithm was studied in @xcite .",
    "in @xcite the authors proposed an adaptive csma algorithm where the links adaptively adjust their parameters based on locally measured arrival and service rates .",
    "the algorithm was shown to be throughput - optimal under a time - scale separation assumption ( the csma markov chain converges to its steady - state distribution instantaneously compared to the time - scale of adaptation of the csma parameters ) which can be justified using a stochastic - approximation argument @xcite . in @xcite",
    "the authors established throughput - optimality of their adaptive csma algorithm without the time - scale separation assumption by choosing the link parameters to be slowly varying functions of the queue lengths .",
    "the discrete - time equivalent of this analysis for the model in @xcite appears in @xcite .",
    "central to these csma algorithms is the so - called _ glauber dynamics _ , which is a markov chain monte carlo method that can be used to sample the independent sets of a graph according to a product - form distribution @xcite .",
    "under traditional glauber dynamics , in each time slot one link will be selected uniformly at random , and only that link can change its state while other links will keep their states unchanged . for the chosen link ,",
    "if all of its neighboring links were in state @xmath0 ( inactive ) in the previous slot , then the link will choose to be in state @xmath1 ( active ) with probability @xmath2 and in state @xmath0 with probability @xmath3 ; otherwise ( i.e. , if at least one of its neighboring links was in state @xmath1 in the previous slot ) , the link will choose to be in state @xmath0 definitely . in statistical physics , the parameter @xmath4 is called the _",
    "fugacity _ since it indicates how likely a selected site will change its state .",
    "is shared by all links under the traditional glauber dynamics . in the current paper , however , we need to consider heterogeneous fugacities .",
    "that is , different links have different fugacities . ]",
    "glauber dynamics has many applications in statistical physics , graph coloring , approximate counting , and combinatorial optimization ( e.g. , @xcite ) . in these applications ,",
    "the performance of the glauber dynamics is often determined by how fast the markov chain converges to the stationary distribution .",
    "the glauber dynamics is said to be _ fast mixing _ if the _ mixing time _",
    "( will be defined formally later ) grows polynomially in the size of the graph .",
    "the algorithm in @xcite is a generalization of glauber dynamics where multiple links are allowed to update their states in parallel .",
    "the csma algorithm in @xcite can be viewed as continuous - time glauber dynamics with fixed parameters , and the csma algorithms in @xcite can be viewed as continuous - time glauber dynamics with adaptive parameters . in this paper , we focus on the discrete - time csma algorithm suggested in @xcite .",
    "an important feature of this algorithm is that the _ overhead _ for signaling is constant ( independent of the size of the network ) even taking into account the collisions during the signaling phase .",
    "the results in this paper can be extended to other versions of csma algorithms as well .",
    "the recently proposed glauber dynamics based csma algorithms have made an important progress to the design of low - complexity distributed scheduling algorithms to achieve maximum throughput in wireless networks .",
    "on the other hand , the delay performance of these csma algorithms has not been well understood . as shown in a recent work @xcite , for general networks",
    ", it may not be possible to design low - complexity scheduling algorithms which can achieve both low delay ( i.e. , grows polynomially in the number of links ) and even a diminishingly small fraction ( i.e. , approaches zero when the number of links increases ) of the capacity region unless @xmath5 or @xmath6 . in this paper",
    "we prove a positive result .",
    "we show that our parallel glauber dynamics based csma scheduling algorithm can achieve both low delay and a fraction ( independent of the size of the network ) of the capacity region when the interference graphs satisfy certain properties .",
    "the main contributions of this paper include :    * we analyze the mixing time of glauber dynamics with parallel updates and heterogenous fugacities .",
    "we derive various conditions on the system parameters such as fugacities , vertex degrees and update probabilities , under which the mixing time grows logarithmically in the number of vertices . *",
    "based on the above mixing time results , we show that , for wireless networks with bounded - degree interference graphs , the parallel glauber dynamics based csma algorithm can achieve a small queue length ( @xmath7 where @xmath8 is the number of links in the network ) at each link if the arrival rate lies within a fraction ( independent of @xmath8 ) of the capacity region and the fugacities of the links are appropriately chosen and fixed .",
    "moreover , we consider an adaptive version of the csma algorithm where the fugacities of the links are adjusted based on local queue length information .",
    "we show that the total queue length in the network grows polynomially ( @xmath9 ) under the adaptive csma algorithm .",
    "* unlike prior analysis of glauber dynamics based csma algorithms which uses the _ conductance _ method to obtain exponential bounds on the mixing time and the queue lengths , here we use the _ coupling _ method which allows us to obtain polynomial bounds on the queue lengths for a fraction of the capacity region . * for a special but important network topology ( wireless lans ) , we show that glauber dynamics based csma can support the full capacity region with linear mixing time .    in a related work @xcite , the authors proposed a csma algorithm which can achieve order - optimal delay performance ( i.e.",
    ", the per - node delay is bounded by a constant ) for networks with _ polynomial growth structure _ ( the number of @xmath10-hop neighbors of any node is bounded by a polynomial of @xmath10 ) .",
    "the key idea is to ( periodically ) partition the network into sub - networks with bounded number of nodes in each sub - network such that the mixing time of the markov chain of the schedule in each sub - network is bounded by a constant .",
    "however , the partition is realized by a distributed coloring algorithm which requires the nodes to exchange messages with their multi - hop neighbors , and this overhead can be significant and may increase with the size of the network , especially when the discrete nature of signaling is considered .",
    "so a direct comparison of our results and the results in @xcite appears to be difficult .",
    "the paper is organized as follows . in section  [ sec : parallelgd ] we introduce a csma scheduling algorithm based on a generalization of glauber dynamics with parallel updates and heterogenous fugacities . in section  [ sec : mixingpgd ] we derive bounds on the mixing time of parallel glauber dynamics , with the proof presented in section  [ s.proof-fast ] . in section  [ sec : queuelength ] we analyze the delay performance of the csma scheduling algorithms using the mixing time results .",
    "section  [ s.complete-graph ] is dedicated to the analysis of complete interference graphs .",
    "the paper is concluded in section  [ sec : conclusion ] .",
    "for a wireless link @xmath11 , we use @xmath12 to denote the set of conflicting links ( called _ conflict _ set or _ neighbor _ set ) of link @xmath11 : if any link in @xmath12 is active ( transmitting ) , then link @xmath11 can not be active .    the interference relationship among the wireless links",
    "can be represented by the so - called _ interference graph _ ( or _ conflict graph _ )",
    "@xmath13 , where the vertices in @xmath14 represent _ wireless links _ in the network , and there is an edge between two vertices in @xmath15 if the corresponding wireless links interfere with each other .",
    "( for example , fig.[fig:3-link](a ) shows a wireless network of 3 links , where link @xmath16 interferes with links @xmath1 and @xmath17 , and links @xmath1 and @xmath17 do nt interfere with each other .",
    "so , the associated interference graph is shown in fig.[fig:3-link](b ) , and the conflict set of link 2 is @xmath18 , etc . ) an _ independent set _ of @xmath15 is a subset of the vertices in @xmath14 where no two vertices are neighbors of each other .",
    "let @xmath19 be the set of all independent sets of @xmath20 .",
    "a _ feasible _ _ schedule _ of the network is a set of wireless links that can be active at the same time according to the conflict set constraint , i.e. , no two links in a feasible schedule conflict with each other .",
    "this corresponds to an independent set of vertices in the interference graph .",
    "( in fig.[fig:3-link](b ) , for example , the sets @xmath21 are all feasible schedules . )",
    "we will use _ links _ and _ vertices _ interchangeably throughout this paper .",
    "suppose @xmath22 .",
    "we can represent a feasible schedule by a vector @xmath23 of the form @xmath24 , with @xmath25 for all @xmath26 . for a link @xmath11 and a schedule @xmath23",
    ", we say link @xmath11 is included in the schedule ( written as @xmath27 ) if @xmath28 .",
    "note that @xmath23 is a feasible schedule if the set @xmath29 is an independent set of @xmath15 , i.e. , if @xmath30 let @xmath31 be the set of all feasible schedules on @xmath15 .",
    "we consider a time - slotted system .",
    "a _ scheduling algorithm _ is a procedure to decide which schedule to be used in every time slot for data transmission . in @xcite",
    "we proposed a scheduling algorithm based on a generalization of glauber dynamics ( called _ parallel glauber dynamics _ ) where multiple links are allowed to update their states in a single time slot .",
    "the key idea is that in every time slot , we select an independent set of links @xmath32 to update their states according to a randomized procedure , i.e. , we select @xmath32 with probability @xmath33 , where @xmath34 we call @xmath35 the _ decision schedule _ .. a link is included in the decision schedule if ( and only if ) it sends an intent message while none of its neighbors sends such a message . ]    the parallel glauber dynamics",
    "is formally described as follows .     +",
    "* parallel glauber dynamics ( in time slot @xmath36 ) *    * randomly choose a decision schedule @xmath37 with probability @xmath38 .",
    "* for every link @xmath39 : + * if * @xmath40 + ( a ) @xmath41 with probability @xmath42 + ( b ) @xmath43 with probability @xmath44 + * else * + ( c ) @xmath43 . * for every link @xmath45 + ( d ) @xmath46 .    under the parallel glauber dynamics based csma ( called * pgd - csma * for short ) , @xmath47 is used as the _ transmission schedule _ in time slot @xmath36 : link @xmath11 will transmit a data packet if @xmath41 , and will keep silent if @xmath43 .",
    "note that link @xmath11 knows whether @xmath48 by conducting _",
    "carrier sensing _ in time slot @xmath49 : the channel ( medium ) will be sensed idle if none of its neighboring links were transmitting ( i.e. , @xmath40 ) .",
    "@xmath50 is called the _ link activation probability _ , which is determined by the fugacity @xmath51 of link @xmath11 .",
    "we can show that if the transmission schedule used in the previous slot and the decision schedule used in the current slot both are feasible , then the transmission schedule generated in the current slot is also feasible @xcite .",
    "moreover , given the fugacities @xmath51 s , because @xmath47 only depends on the previous schedule @xmath52 and some randomly selected decision schedule @xmath53 , @xmath47 evolves as a discrete - time markov chain ( dtmc ) .",
    "[ theorem : productform ] _ ( @xcite )",
    "a necessary and sufficient condition for the parallel glauber dynamics to be irreducible and aperiodic is @xmath54 or equivalently , the probability of selecting link @xmath11 in the decision schedule @xmath55 for all @xmath26 . in this case",
    "the markov chain is reversible and has the following product - form stationary distribution : _",
    "@xmath56    based on the product - form distribution , one can establish throughput - optimality of pgd - csma by either choosing the link activation probabilities ( fugacities ) as appropriate increasing functions of the ( time - varying ) queue lengths , or adjusting the fugacities based on the measured arrival and service rates , as in @xcite .",
    "the focus of this paper is to analyze the mixing time of parallel glauber dynamics and the delay performance of pgd - csma .",
    "we will show that the parallel glauber dynamics is fast mixing when the fugacities satisfy certain conditions , and this implies that pgd - csma induces small queue lengths when the arrival rates lie in a fraction of the capacity region .",
    "consider a finite - state , irreducible , aperiodic markov chain @xmath57 where @xmath58 denotes the transition matrix , @xmath59 denotes the state space , and @xmath60 denotes the unique stationary distribution .",
    "first we describe a notion of distance between distributions .    _ the _ variation distance _ between two distributions @xmath61 on @xmath59 is defined as _ @xmath62 and @xmath63 if and only if @xmath64 .",
    "_ the _ mixing time _",
    "@xmath65 of the markov chain is defined as the time required for the markov chain to get close to the stationary distribution .",
    "more precisely , _ @xmath66 _ where @xmath67 is the distribution of the markov chain at time @xmath36 if the markov chain starts with state @xmath68 .",
    "_      we now state the main theorem of this section and a corollary on the mixing time of parallel glauber dynamics with fixed fugacities @xmath69 .",
    "the proof of the main theorem will be presented in the next section .",
    "we associate a weight @xmath70 to each vertex ( or link ) @xmath71 , and call @xmath72 the _ weight function_.    [ thm : main ] _ for any positive weight function @xmath73 of @xmath74 , let @xmath75 , @xmath76 , and @xmath77 .",
    "if _ @xmath78 _ where @xmath79 , as defined before , is the probability that vertex @xmath80 is included in the decision schedule , then under the parallel glauber dynamics , _ @xmath81    one can specify the weight function @xmath72 to obtain various conditions on the fugacities for fast mixing .",
    "we will show one of them below which will be used later to analyze the delay performance of pgd - csma .",
    "other conditions are given in appendix  [ conditions ] .",
    "[ coro : c3 ] let @xmath82 , @xmath83 and @xmath77 , where @xmath84 is the degree of @xmath80 in the interference graph .",
    "if @xmath85 for all @xmath74 , then @xmath86 where @xmath87    choose @xmath88 . by theorem  [ thm : main ] , the parallel glauber dynamics is fast mixing if @xmath89    to achieve that , we need @xmath90 , @xmath91 it is sufficient to have @xmath92 , @xmath93 , which is equivalent to @xmath94 .",
    "[ remark : boundeddegree ] _ let @xmath95 be the maximum vertex degree of @xmath15 . if each link ( vertex ) sends the intent message independently with probability 1/2 , then @xmath96 , so @xmath97 and @xmath98",
    ". then we have @xmath99 i.e. , the mixing time grows as @xmath7 for bounded - degree graphs when @xmath100 . on the other hand ,",
    "it was shown in @xcite that traditional single - site glauber dynamics has a mixing time at least @xmath101 for bounded - degree graphs .",
    "therefore , parallel glauber dynamics reduces the mixing time by an order of magnitude . _    _ for interference graphs with special structure , more relaxed conditions can be obtained to ensure fast mixing .",
    "this will be discussed in section [ s.complete-graph ] . _",
    "this section presents the proof of theorem [ thm : main ] . in particular",
    ", we use the coupling method to establish the logarithmic mixing time . readers who are only interested in the main results",
    "could skip the section without loss of continuity .",
    "a useful technique to bound the mixing time of a markov chain is via _",
    "_ a _ coupling _ of the markov chain is a stochastic process @xmath102 on @xmath103 such that @xmath104 and @xmath105 marginally are copies the original markov chain , and if @xmath106 , then @xmath107 . _",
    "let @xmath108 be a _ distance function _",
    "( _ metric _ ) defined on @xmath103 , which satisfies that for any @xmath109 : ( 1 ) @xmath110 , with equality if and only if @xmath111 ; ( 2 ) @xmath112 ; ( 3 ) @xmath113 let @xmath114    the following theorem ( e.g. , @xcite ) can be used to bound the mixing time of the markov chain .",
    "[ theorem : coupling ] _",
    "suppose @xmath115 is coupling of the markov chain where @xmath116 has distribution @xmath117 and @xmath118 has distribution @xmath119 .",
    "if there exists some constant @xmath120 such that , for all @xmath121 , _",
    "@xmath122   \\leq \\beta \\phi(x , y).\\ ] ] _ then _",
    "@xmath123    in general , determining @xmath124 in the contraction condition ( [ eq : betacoupling ] ) is hard since we need to check the condition for all pairs of configurations @xmath125 .",
    "in @xcite the so - called _ path coupling _ method was introduced by bubley and dyer to simplify the calculation . using path coupling , we only need to check the contraction condition for certain pairs of configurations .",
    "the path coupling method is described in the following theorem .",
    "[ theorem : pathcoupling ] _ let @xmath126 and suppose that for all @xmath127 , there exists a path @xmath128 between @xmath68 and @xmath129 such that @xmath130 for @xmath131 and @xmath132 suppose @xmath115 is a coupling of the markov chain as in theorem  [ theorem : coupling ] .",
    "if there exists @xmath120 such that for any @xmath133 , the contraction condition ( [ eq : betacoupling ] ) holds , then we have ( [ eq : dvbound ] ) and the mixing time of the markov chain is bounded as in ( [ eq : mixingbound ] ) . _    note that the key simplification in the _ path coupling theorem _ ( theorem  [ theorem : pathcoupling ] ) , compared to the _ coupling theorem _ ( theorem  [ theorem : coupling ] ) , is that the contraction condition ( [ eq : betacoupling ] ) needs to hold only for @xmath133 , instead of @xmath134 .",
    "now we analyze the mixing time of glauber dynamics with parallel updates and heterogenous fugacities using the path coupling technique .",
    "we use the following _ distance function _ between feasible schedules .",
    "for any @xmath135 , let @xmath136 where @xmath70 is the _ weight function _ of @xmath137 and @xmath138 is the _ symmetric difference _ between @xmath23 and @xmath139 .",
    "note that the distance function is a weighted hamming distance function and satisfies all the properties of a metric .",
    "consider the following _ coupling _ @xmath140 : in every time slot both chains select the same decision schedule and use the same coin toss for every vertex in the decision schedule if that vertex can be added to both schedules .",
    "let @xmath141 $ ] be the ( conditional ) expected change of the the distance between the states of the two markov chains @xmath142 and @xmath143 after one slot : @xmath144 & = & e[\\phi(\\sigma(t+1 ) , \\eta(t+1)|\\sigma(t)=\\sigma , \\eta(t)=\\eta ] \\\\ & & - \\phi(\\sigma , \\eta).\\end{aligned}\\ ] ]    for any @xmath145 , let @xmath146=e[\\delta\\phi(\\sigma,\\eta)|\\mathbf m \\mbox { is the decision schedule}].\\ ] ]    we say that @xmath135 are _ adjacent _ and we write @xmath147 if there exists @xmath74 such that @xmath23 and @xmath139 differ only at @xmath80 .",
    "let @xmath148 be the set of all pairs of adjacent schedules .",
    "note that under the distance function defined in ( [ eq : distfun ] ) , for all @xmath149 , we can find a path @xmath150 between @xmath23 and @xmath139 such that @xmath151 for @xmath152 and @xmath153    [ lemma : dist_multiset ] _ consider a pair of adjacent schedules @xmath23 and @xmath139 that differ only at @xmath80 ( so @xmath154 ) , _",
    "@xmath155 \\leq -q_v f(v)+\\sum_{w\\in\\mathcal n_v } q_w\\frac { \\lambda_w}{1+\\lambda_w}f(w).\\end{aligned}\\ ] ]    without loss of generality , suppose @xmath156 and @xmath157 note that @xmath158 implies that @xmath159 for all @xmath160 .",
    "since , @xmath23 and @xmath139 differ only at @xmath80 , this also means that @xmath161 for all @xmath160 .",
    "we have @xmath162 \\\\ & = &   e_{\\mathbf m}\\big[e[\\delta^{\\mathbf m}\\phi(\\sigma,\\eta ) ] \\big ] = \\sum_{\\mathbf m \\in \\mathcal{i}}q_{\\mathbf m}e[\\delta^{\\mathbf m}\\phi(\\sigma,\\eta)]\\\\ & = & \\sum_{\\mathbf m \\in \\mathcal{i}}q_{\\mathbf m}\\sum_{y\\in\\mathbf m}e[\\delta^y\\phi(\\sigma,\\eta ) ] = \\sum_{y\\in v}q_y e[\\delta^y\\phi(\\sigma,\\eta)].\\end{aligned}\\ ] ]    note that only updates on vertices @xmath80 and @xmath163 can affect the value of @xmath141 $ ] because updates on other vertices will have the same outcomes due to coupling .    if @xmath80 is selected for update and since we use the same coin toss for both markov chains , then @xmath164 and @xmath165 .",
    "thus @xmath166=-f(v)$ ] .",
    "if @xmath160 is selected for update , under schedule @xmath167 @xmath168 can only take value @xmath0 because @xmath168 has a neighbor ( i.e. , @xmath80 ) belongs to @xmath139 .",
    "while under schedule @xmath169 there are two cases : + ( 1 ) if @xmath168 has a neighbor in @xmath23 , then @xmath168 can only take value @xmath0 ; + ( 2 ) if @xmath168 has no neighbors in @xmath23 , @xmath168 can take value @xmath1 with probability @xmath170 and value @xmath0 otherwise .",
    "hence for @xmath160 , @xmath171 \\leq \\frac{\\lambda_w}{1+\\lambda_w}f(w).$ ] summing up all contributions we have ( [ eq : dist_dif ] ) .",
    "now we are ready to prove theorem [ thm : main ] .",
    "( theorem [ thm : main ] ) for any pair of adjacent schedules @xmath172 that differ only at some vertex @xmath74 , from ( [ eq : dist_dif ] ) and ( [ eq : theta ] ) we have : @xmath173   \\leq   -\\theta \\leq -\\frac{\\theta}{m}\\phi(\\sigma,\\eta),\\ ] ] where we use the fact that @xmath174 therefore , @xmath175\\leq\\big(1-\\frac{\\theta}{m}\\big)\\phi(\\sigma,\\eta).\\ ] ] by applying theorem  [ theorem : pathcoupling ] where @xmath176 and @xmath177 , we have ( [ eq : dvboundpgd ] ) and the bound in ( [ eq : mixingpgb ] ) .",
    "in this section we analyze the delay performance of pgd - csma . in time slot @xmath36 , let @xmath178 be the number of packets arriving at link @xmath11 , @xmath179 . assume arrivals occur at the beginning of a time slot and are i.i.d . with mean arrival rate @xmath180=\\nu_i \\leq 1 $ ] . for simplicity , we assume bernoulli arrivals , i.e. , @xmath181 with @xmath182 . note that our results hold for more general arrival processes as long as the second moment @xmath183<\\infty$ ] , @xmath179 .",
    "let @xmath184 be the queue length of link @xmath11 at the end of time slot @xmath36 .",
    "then it has the following dynamics : @xmath185_+ \\label{eq : q_dynamics}\\end{aligned}\\ ] ] where @xmath186_+=q$ ] if @xmath187 and @xmath186_+=0 $ ] otherwise .",
    "the _ capacity region _ of the network is the set of all arrival rates @xmath188 for which there exists a scheduling algorithm that can stabilize the queues , i.e. , the queues are bounded in some appropriate stochastic sense depending on the arrival model used . in this paper , stability refers to the _ positive recurrence _ of the markov chain .",
    "it is known ( e.g. , @xcite ) that the capacity region is given by @xmath189 where @xmath190 is the _ convex hull _ of the set of feasible schedules , i.e. , @xmath191 if @xmath192 , where @xmath193 and @xmath194 can be viewed as the fraction of time that schedule @xmath23 is used .",
    "when dealing with vectors , inequalities are interpreted component - wise .",
    "we also define @xmath195    we use the parallel glauber dynamics to generate the transmission schedule @xmath47 in every time slot",
    ". we will show that a small mixing time of pgd implies a small average queue length in a wireless network under pgd - csma . by little s law",
    "this also implies a small average delay in the network .",
    "the following theorem is slightly extended from @xcite .",
    "_ given any @xmath196 , there exist suitable fugacities @xmath197 such that for every link @xmath11 , its mean service rate @xmath198 is equal to the mean arrival rate @xmath199 under pgd - csma with fugacities @xmath197 , where @xmath200 is given in ( [ eq : productformpgd ] ) .",
    "in other words , the service rates of pgd - csma can exactly meet the arrival rates at all links .",
    "denote @xmath201 .",
    "the vector @xmath202 is the solution of the convex optimization problem @xmath203 where @xmath204 _    _ a way to understand this result is that @xmath205 where @xmath206 is the mean service rate of link @xmath11 with the fugacity @xmath207 .",
    "_    now we characterize the suitable fugacities @xmath197 when @xmath208 is in a fraction of the capacity region .",
    "_ the interference degree @xmath209 of a link @xmath11 is the maximum number of links in its conflict set @xmath12 that can be active simultaneously .",
    "the interference degree of @xmath15 is defined as @xmath210 .",
    "_    [ lemma : fugacitybound ] _ for an arrival rate vector @xmath211 ,",
    "let @xmath212 be the vector of fugacities such that the mean service rate @xmath213 is equal to the mean arrival rate @xmath214 for every link @xmath11 under pgd - csma . if @xmath215 ( which means that @xmath216 ) for some @xmath217 , then _ @xmath218    for easy notation",
    "we write @xmath212 as @xmath219 in this proof . under pgd - csma with fugacities @xmath219 , let @xmath220 be the steady - state probability that no link in @xmath12 is transmitting , i.e. , @xmath221 using ( [ eq : productformpgd ] ) , it is not difficult to show that ( a detailed derivation is given in appendix  [ proof : mrf ] ) @xmath222    since @xmath223 is the probability that at least one link in @xmath12 is transmitting , a union bound yields @xmath224    on the other hand , note that @xmath225 , hence there exists a scheduling algorithm which can serve @xmath226 . under that scheduling algorithm , @xmath227 is the fraction of time link @xmath11 is idle . the links in @xmath12 can be served only when link @xmath11 is idle , and in this case at most @xmath228 of them can be served .",
    "therefore , @xmath229    combining ( [ eq : pi0 ] ) and ( [ eq : nuj ] ) we have @xmath230 since @xmath231 . hence @xmath232 which implies @xmath233 and @xmath234 .",
    "note that for any graph its interference degree @xmath228 is smaller than or equal to its maximum vertex degree @xmath95 , hence we have :    [ coro : fugacities ] _ if the arrival rate vector @xmath235 , then _ @xmath236      consider a wireless network with @xmath8 links and suppose that the maximum degree of the interference graph is @xmath95 which is independent of @xmath8 .",
    "the queue length of link @xmath11 , @xmath184 , follows the dynamics in ( [ eq : q_dynamics ] ) .",
    "_ if the arrival rate vector @xmath237 for some constant @xmath238 , then there exist fugacities @xmath219 such that in the steady state , the expected queue length @xmath239=o(\\log n)$ ] under pgd - csma with @xmath219 .",
    "_    first , we have @xmath240 .",
    "this is a direct consequence of theorem 1 in @xcite .",
    "choose a constant @xmath241",
    ". then @xmath242 .",
    "next we state a lemma used in @xcite .",
    "[ lemma : linearcap ] _ if @xmath243 and @xmath244 , then @xmath245 .",
    "_    since @xmath237 , there exists @xmath246 such that @xmath247 . by lemma [ lemma : linearcap ]",
    ", we have @xmath248 .",
    "so @xmath249 .",
    "let @xmath219 be the fugacities such that @xmath250 , where @xmath213 is the mean service rate for link @xmath11 under pgd - csma with ( fixed ) fugacities @xmath219 .",
    "that yields the desired service rates @xmath213 s , we can use the ( fully - distributed ) adaptive csma algorithms with diminishing step sizes as proposed in @xcite . in these algorithms ,",
    "the links dynamically adjust the fugacities and make them converge to the proper @xmath219 . in this subsection",
    ", we quantify the expected queue lengths after such @xmath219 is found and fixed .",
    "] by lemma [ lemma : fugacitybound ] , we know that @xmath251 < 1/(\\delta-1),\\forall i$ ]",
    ". therefore the pgd has a mixing time of @xmath252 .    from ( [ eq : q_dynamics ] ) and since @xmath253",
    ", we have @xmath254_++a_i(t+1).\\end{aligned}\\ ] ] more generally , consider @xmath255 consecutive time slots beginning from slot @xmath36 , we have @xmath256_+ + \\sum_{k=1}^{t}a_i(t+k ) \\nonumber \\\\ & = & [ q_i(t)-t\\hat{s}_i]_+ + t \\hat{a}_i,\\end{aligned}\\ ] ] where @xmath257 and @xmath258 are the average arrival and service rates during the @xmath255 slots .",
    "the rhs of ( [ eq : qt ] ) can be viewed as the _ virtual _ queue length after @xmath255 slots if we assume arrivals to link @xmath11 during the @xmath255 slots occur at the end of time slot @xmath259 , which is clearly larger than or equal to the actual queue length @xmath260 .    from ( [ eq : qt ] ) and",
    "note that @xmath261 , we have @xmath262_+ + t",
    "\\hat{a}_i\\big)^2 \\nonumber \\\\ & \\leq & [ q_i(t)-t\\hat{s}_i]^2 + 2t\\hat{a}_iq_i(t ) + t^2 \\hat{a}^2_i \\nonumber \\\\ & = & q_i^2(t ) + 2tq_i(t)\\big(\\hat{a}_i-\\hat{s}_i\\big ) + t^2(\\hat{a}^2_i+\\hat{s}^2_i ) .",
    "\\nonumber\\\\ & \\leq & q_i^2(t ) + 2tq_i(t)\\big(\\hat{a}_i-\\hat{s}_i\\big ) + 2t^2.\\end{aligned}\\ ] ]    note that @xmath263 evolves as a markov chain .",
    "define the lyapunov function @xmath264 . from ( [ eq : q^2 ] ) and since @xmath265 = q_i(t)e[\\hat{s}_i|\\sigma(t)]$ ] , we have @xmath266 \\nonumber \\\\ & \\leq & t\\sum_{i}q_i(t)(\\nu_i - e[\\hat{s}_i|\\sigma(t)])+nt^2.\\end{aligned}\\ ] ]    now let us compute @xmath267 $ ] for every link @xmath11 : @xmath268 & = & \\frac{1}{t}\\sum_{k=1}^{t}e[\\sigma_{i}(t+k)|\\sigma(t)]\\\\ & = & \\frac{1}{t}\\sum_{k=1}^{t}\\pr(\\sigma_{i}(t+k)=1|\\sigma(t ) ) \\\\ & = & \\frac{1}{t}\\sum_{k=1}^{t}\\sum_{\\sigma\\in\\omega:\\sigma_{i}=1}\\mu_{\\mathbf \\sigma(t),k}(\\sigma)\\end{aligned}\\ ] ] where @xmath269 is the distribution of the markov chain of the schedules after @xmath270 slots if the markov chain starts with schedule @xmath47 .",
    "remember @xmath271 , so @xmath272-s_i| \\\\ & = & | \\frac{1}{t}\\sum_{k=1}^{t } \\big ( \\sum_{\\sigma\\in\\omega:\\sigma_{i}=1}\\mu_{\\mathbf \\sigma(t),k}(\\sigma)- \\sum_{\\sigma\\in\\omega:\\sigma_{i}=1}\\pi(\\sigma ) \\big)| \\\\ & \\leq & \\frac{1}{t}\\sum_{k=1}^{t}|\\sum_{\\sigma\\in\\omega:\\sigma_{i}=1}\\mu_{\\sigma(t),k}(\\sigma)-\\sum_{\\sigma\\in\\omega:\\sigma_{i}=1}\\pi(\\sigma)|\\\\ & \\leq & \\frac{1}{t}\\sum_{k=1}^{t}||\\mu_{\\sigma(t ) , k}-\\pi||_{var}.\\end{aligned}\\ ] ]    since @xmath273 , from theorem  [ thm : main ] and corollary  [ coro : c3 ] we know that the parallel glauber dynamics under @xmath219 is fast mixing , and we can find @xmath177 and @xmath274 such that @xmath275",
    "so @xmath276 , we have @xmath277-s_i|   & \\leq & \\frac{1}{t}\\sum_{k=1}^{t_0 } 1 + \\frac{1}{t}\\sum_{k = t_0 + 1}^{t } d \\beta^{k } \\nonumber \\\\   & \\leq & \\frac{t_0+\\frac{1}{1-\\beta}}{t } \\leq \\frac{\\bar{t}_{mix}}{t } \\label{eq : mix_diff}\\end{aligned}\\ ] ] where @xmath278 if we choose @xmath279 for some @xmath280 , then @xmath281-s_i| \\leq \\epsilon$ ] and @xmath282 \\geq s_i-\\epsilon , \\forall i.\\end{aligned}\\ ] ] plugging into ( [ eq : drift ] ) , we have @xmath283   \\\\ & \\leq & -t \\sum_{i}q_i(t)(s_i-\\nu_i-\\epsilon ) + nt^2\\end{aligned}\\ ] ] where the right - hand - side is negative if @xmath284 and @xmath285 is sufficiently large .",
    "this establishes the _ negative drift _ of @xmath286 . by the foster - lyapunov criterion",
    ", @xmath287 is positive recurrent .    in the steady state , taking expectations of both sides of ( [ eq : q^2 ] ) and using ( [ eq : sibound ] ) , we have @xmath288 = 0 \\leq   -2 t e[q_i(t)](s_i-\\nu_i-\\epsilon ) + 2t^2\\end{aligned}\\ ] ] which implies @xmath289   \\leq   \\frac{t}{s_i-\\nu_i-\\epsilon } \\leq \\frac{\\bar{t}_{mix}+1}{\\epsilon(s_i-\\nu_i-\\epsilon ) } = \\frac{4(\\bar{t}_{mix}+1)}{(s_i-\\nu_i)^2}\\label{eq : per - queue - bound}\\end{aligned}\\ ] ] by choosing @xmath290 and @xmath279 in our analysis of link @xmath11 . recall that @xmath291 is independent of @xmath8 .",
    "also , as we have proved in section  [ subsec : fastmixing ] , for bounded - degree interference graphs , @xmath292 .",
    "these facts combined imply that @xmath239=o(\\log n)$ ] under pgd - csma .      in this subsection",
    "we consider pgd - csma with dynamic parameters ( fugacities ) .",
    "that is , unlike the last subsection where we assumed that suitable fugacities have been found and fixed , here the fugacities are dynamically adjusted based on the local queue length information .",
    "given an interference graph @xmath15 with @xmath8 links .",
    "suppose @xmath15 has a maximum degree @xmath95 and an interference degree @xmath228 which are all independent of @xmath8 .",
    "let @xmath293 be such that @xmath294 .",
    "assume that @xmath295 where @xmath296 , and that each element @xmath297 for some constant @xmath298 .",
    "[ pro : lambda]_under the above assumptions of @xmath208 , we have _",
    "@xmath299    by lemma [ lemma : fugacitybound ] , we have @xmath300 . also , by ( [ eq : mrf ] ) , one has @xmath301 $ ] .",
    "since @xmath302 , we have @xmath303 .    _ let @xmath304 where @xmath305 is defined in ( [ eq : f ] ) . since @xmath306 , we have @xmath307,\\forall i$ ] , where @xmath308 .",
    "_    we further select @xmath293 such that if @xmath309 , then the parallel glauber dynamics is fast mixing and the mixing time is upper - bounded by @xmath292 ( by corollary  [ coro : c3 ] , this can be achieved when @xmath310 ) .",
    "now we propose an algorithm to dynamically adjust the fugacities of pgd - csma .",
    "* algorithm 1 : * the fugacities of the links , denoted by the vector @xmath197 , are updated every @xmath255 time slots , where @xmath311 with @xmath312 and @xmath313dr>0 .",
    "\\label{eq : delta}\\ ] ]    specifically , at the end of slot @xmath314 , link @xmath270 updates its fugacity to be @xmath315=\\exp(\\min\\{r_{k}[j],b\\}),\\forall k \\label{eq : lambda_update}\\ ] ] with @xmath316:=\\frac{\\alpha}{t}q_{k}[j]+r_{min}-\\alpha\\label{eq : r_update}\\ ] ] where @xmath317 $ ] is the queue length of link @xmath270 at the end of slot @xmath318 , i.e. , @xmath317=q_{k}(jt)$ ] .",
    "note that @xmath319 follows the dynamics ( [ eq : q_dynamics ] ) .",
    "also note that the fugacity vector @xmath320 $ ] is used for @xmath255 time slots ( from slot @xmath321 to @xmath322 , which we call `` frame @xmath323 '' ) .",
    "_ by ( [ eq : lambda_update ] ) and ( [ eq : r_update ] ) , link @xmath270 increases its fugacity when its queue length increases ( unless the fugacity has reached @xmath324 ) .",
    "so link @xmath270 transmits more aggressively when its queue builds up .",
    "also , since @xmath325\\le \\exp ( b ) , \\forall k$ ] at all time , pgd is fast mixing in each frame of @xmath255 slots .",
    "_    _ algorithm 1 is designed such that @xmath326 $ ] is attracted towards @xmath327^n$ ] .",
    "so , by ( [ eq : r_update ] ) , the queue lengths are attracted towards an affine function of @xmath328 and are therefore stabilized ; and by ( [ eq : lambda_update ] ) , @xmath329 $ ] is attracted to @xmath330 .",
    "_    algorithm 1 and the consequent proof techniques are quite different from existing works ( e.g. , @xcite ) . specifically , unlike @xcite ,",
    "the fugacities in algorithm 1 are direct functions of the queue lengths . also , we derive a polynomial delay bound instead of an exponential bound in @xcite . to do that",
    ", we apply the mixing time results in section  [ sec : mixingpgd ] and use a novel lyapunov function in the stability proof .",
    "[ thm : q_stable ] _ the queue length vector @xmath331 is stable ( i.e. , positive recurrent ) under algorithm 1 . _",
    "we first need a lemma .",
    "[ lem : gap ] _ for any vector @xmath332 with some element @xmath333 , we have @xmath334 , where @xmath335 is defined in ( [ eq : delta ] ) .",
    "note that @xmath336 is independent of @xmath8 .",
    "we first show that @xmath337 if @xmath338 for some @xmath270 .",
    "denote @xmath339 then clearly @xmath340 .",
    "so it is sufficient to prove @xmath341    denote the solution of rhs of ( [ eq : max - func ] ) by @xmath342 , and let @xmath343 .",
    "then , the envelope theorem implies that @xmath344    by the definition of @xmath342 , we know that for any @xmath345 , @xmath346 , so @xmath347 .",
    "therefore , @xmath348 .",
    "note that @xmath349 . given a @xmath350 $ ] , by lemma [ lemma : fugacitybound ] we know that @xmath351 for any @xmath352 .",
    "so @xmath353 .",
    "since @xmath354 , using lemma  [ lemma : linearcap ] we have @xmath355\\lambda$ ] .",
    "since @xmath356 for any @xmath352 , it must be that @xmath357 . using ( [ eq : derivative - max - func ] )",
    ", one has @xmath358 .",
    "therefore , we have@xmath359d\\bar{r}_{k}\\\\   & \\le & f({\\bf r}^{*};{\\boldsymbol \\nu})-\\int_{\\bar{r}_{k}=b_{\\epsilon}}^{b}[\\frac{\\exp(\\bar{r}_{k})}{1+\\exp(\\bar{r}_{k})}-\\frac{\\exp(b_{\\epsilon})}{1+\\exp(b_{\\epsilon})}]d\\bar{r}_{k}.\\end{aligned}\\ ] ]    so , ( [ eq : suff ] ) holds with @xmath336 defined in ( [ eq : delta ] ) .    finally , we need to show that @xmath360 if @xmath361 for some @xmath270 . given such a @xmath362 , one can find a @xmath363 on the line segment between @xmath362 and @xmath328 to satisfy @xmath364 .",
    "we already know that @xmath365 . by the concavity of @xmath366",
    ", we have @xmath367 .",
    "now we are ready to prove theorem [ thm : q_stable ] .",
    "( theorem  [ thm : q_stable ] ) we first show that @xmath326 $ ] is stable .",
    "equation ( [ eq : r_update ] ) implies that @xmath368\\ge r_{min}-\\alpha,\\forall k , j$ ] .",
    "denote @xmath369:=\\min\\{r_{k}[j],b\\}.\\ ] ] then @xmath325=\\exp(r'_{k}[j])$ ] , and @xmath370\\in\\tilde{{\\cal b}}:=[r_{min}-\\alpha , b]^{n},\\forall j.$ ]    we define a _ lyapunov function _",
    "@xmath371 where @xmath372i(r_{k}<b ) .",
    "\\end{aligned}\\ ] ] then , @xmath373    .,width=302 ]    for simplicity , we write @xmath305 as @xmath374 . for a @xmath375 but @xmath376 ,",
    "let @xmath377 be its projection on @xmath378 ( i.e. , @xmath379 .",
    "[ fig : rprojection ] for an illustration ) .",
    "then by the concavity of @xmath374 we have @xmath380 where the last step has used lemma [ lem : gap ] .",
    "we then claim that given any @xmath326\\in[r_{min}-\\alpha,\\infty)^{n}$ ] , @xmath381)\\le l_{k}(\\tilde{r}_{k}[j+1]),\\forall k\\label{eq : lk_ineq}\\ ] ] where @xmath382:=r_{k}[j]+\\alpha[\\hat{a}_{k}[j]-\\hat{s}_{k}[j]]$ ] , with @xmath383 $ ] denoting the average arrival rate from slot @xmath321 to @xmath322 , and @xmath384 $ ] denoting the average service rate in the same interval with the fugacity vector @xmath385 $ ] .    to show ( [ eq : lk_ineq ] ) we consider two cases :    \\(i ) if from slot @xmath321 to @xmath322 , queue @xmath270 is not empty whenever it is scheduled to transmit in the csma protocol , then @xmath386=q_{k}[j]+t[\\hat{a}_{k}[j]-\\hat{s}_{k}[j]]$ ] . by ( [ eq : r_update ] ) , we have @xmath387=r_{k}[j]+\\alpha[\\hat{a}_{k}[j]-\\hat{s}_{k}[j]]=\\tilde{r}_{k}[j+1]$ ]",
    ". then @xmath388)=l_{k}(r_{k}[j+1])$ ] .",
    "\\(ii ) otherwise , one has @xmath389>q_{k}[j]+t[\\hat{a}_{k}[j]-\\hat{s}_{k}[j]].\\label{eq : served - empty - queue}\\ ] ] inequality ( [ eq : qt ] ) is equivalent to @xmath386\\le[q_{k}[j]-t\\cdot\\hat{s}_{k}[j]]_{+}+t\\cdot\\hat{a}_{k}[j]$ ] .",
    "suppose that @xmath386>t$ ] , then @xmath390-t\\cdot\\hat{s}_{k}(j)]_{+}\\ge q_{k}[j+1]-t\\cdot\\hat{a}_{k}[j]>t - t\\cdot\\hat{a}_{k}[j]\\ge0 $ ] , which implies that @xmath317>t\\cdot\\hat{s}_{k}[j]$ ] .",
    "but if this holds , queue @xmath270 never gets empty from slot @xmath321 to @xmath322 , contradicting the assumption .",
    "therefore , we have @xmath386\\le t$ ] . using this , ( [ eq : served - empty - queue ] ) and ( [ eq : r_update ] ) , one has@xmath391<r_{k}[j+1]\\le r_{min},\\ ] ] which implies ( [ eq : lk_ineq ] ) since @xmath392 .",
    "this completes the proof of ( [ eq : lk_ineq ] ) .",
    "inequality ( [ eq : lk_ineq ] ) immediately implies that @xmath393)\\le l(\\tilde{{\\bf r}}[j+1]).\\label{eq : l_neq}\\ ] ]    let @xmath394 be the @xmath23-field generated by @xmath395,{\\bf r}[j'],{\\bf \\sigma}[j']\\},j'=0,1,2,\\dots , j$ ] where @xmath396={\\bf \\sigma}(j't)$ ] is the state of the csma markov chain ( i.e. , the schedule used in time slot @xmath397 ) . in the following ,",
    "we write the conditional expectation @xmath398 simply as @xmath399 . using taylor expansion , @xmath400 & : = & e_{j}[l({\\bf r}[j+1])-l({\\bf r}[j])]\\nonumber \\\\   & \\le & e_{j}[l(\\tilde{{\\bf r}}[j+1])-l({\\bf r}[j])]\\nonumber \\\\   & \\le & \\alpha\\sum_{k}\\big\\{[\\nu_{k}-e_{j}(\\hat{s}_{k}[j])]\\frac{\\partial l({\\bf r}[j])}{\\partial r_{k}[j]}\\big\\}+\\frac{1}{2}n\\alpha^{2}\\nonumber \\\\   & \\le & \\alpha\\sum_{k}\\big\\{[\\nu_{k}-s_{k}({\\bf r}'[j])]\\frac{\\partial l({\\bf r}[j])}{\\partial r_{k}[j]}\\big\\}+\\alpha\\sum_{k}\\big\\{[s_{k}({\\bf r}'[j])\\nonumber \\\\   &   & -e_{j}(\\hat{s}_{k}[j])]\\frac{\\partial l({\\bf r}[j])}{\\partial r_{k}[j]}\\big\\}+\\frac{1}{2}n\\alpha^{2}.\\label{eq : drift1}\\end{aligned}\\ ] ]    by ( [ eq : t ] ) and ( [ eq : mix_diff ] )",
    ", we have @xmath401-s_{k}({\\bf r}'[j])|\\le\\delta/(4n\\cdot d_{max}),\\forall j , k.\\label{eq : mixing - bound}\\ ] ] where @xmath402 .    if @xmath326\\notin\\tilde{{\\cal b}}$ ]",
    ", we use ( [ eq : drift1 ] ) , ( [ eq : mixing - bound ] ) and ( [ eq : strictly - negative ] ) to derive the following : @xmath403)-l({\\bf r}[j])]\\\\   & \\le & \\alpha\\sum_{k}\\frac{\\partial f({\\bf r}'[j])}{\\partial r_{k}'[j]}\\frac{\\partial l({\\bf r}[j])}{\\partial r_{k}[j]}+\\alpha\\sum_{k}(\\frac{\\delta}{4n\\cdot d_{max}}d_{max})\\\\   &   & + \\frac{1}{2}n\\alpha^{2}\\\\   & = & \\alpha\\sum_{k}\\frac{\\partial f({\\bf r}'[j])}{\\partial r_{k}'[j]}\\frac{\\partial l({\\bf r}[j])}{\\partial r_{k}[j]}+\\alpha\\frac{\\delta}{4}+\\frac{1}{2}n\\alpha^{2}\\\\   & \\le & \\alpha(-\\delta+\\frac{\\delta}{4}+\\frac{1}{2}n\\alpha ) = -\\alpha\\delta/4   \\end{aligned}\\ ] ] which establishes the negative drift of @xmath404)$ ] .    by the foster - lyapunov criterion ,",
    "@xmath326 $ ] is stable , and by ( [ eq : r_update ] ) , @xmath405 $ ] is also stable . since in each time slot , the change of each queue length is at most 1 , we conclude that @xmath331 is stable .",
    "[ thm : mean_q_dynamic ] _ suppose that the arrival rate vector @xmath237 where @xmath406 , and each element @xmath407 .",
    "let @xmath408 so that @xmath409 .",
    "let @xmath410 where the constant @xmath411 , so that if @xmath412 , the parallel glauber dynamics has a mixing time of @xmath413 .",
    "_ _ then , the queue lengths under algorithm 1 satisfy _ @xmath414 _ where @xmath415 is the average expected queue length at link @xmath270 .",
    "_    denote @xmath416 .",
    "then if @xmath417 , we have @xmath418 .",
    "define@xmath419_{+}.\\ ] ]    note that @xmath420-r_{k}[j]|\\le\\alpha,\\forall k$ ] .",
    "also , ( [ eq : l_derivative ] ) implies that @xmath421 . then @xmath422    case 1 : if @xmath404)-\\bar{l}>c$ ] , then @xmath423)-\\bar{l}>0 $ ] , and @xmath424)-g^{2}({\\bf r}[j])\\\\   & = & [ l({\\bf r}[j+1])-\\bar{l}]^{2}-[l({\\bf r}[j])-\\bar{l}]^{2}\\\\   & = & 2[l({\\bf r}[j])-\\bar{l}][l({\\bf r}[j+1])-l({\\bf r}[j])]+\\\\   &   & [ l({\\bf r}[j+1])-l({\\bf r}[j])]^{2}\\\\   & \\le & 2g({\\bf r}[j])[l({\\bf r}[j+1])-l({\\bf r}[j])]+c^{2}.\\end{aligned}\\ ] ] therefore @xmath425)-g^{2}({\\bf r}[j ] ) ] & \\le & 2g({\\bf r}[j])\\delta[j]+c^{2}\\\\   & \\le & -g({\\bf r}[j])\\alpha\\delta/2+c^{2}.   \\end{aligned}\\ ] ]    case 2 : if @xmath426)\\le c$ ] , then @xmath427)\\le g({\\bf r}[j])+c$ ] .",
    "therefore@xmath428)-g^{2}({\\bf r}[j])]\\\\   & \\le & 2cg({\\bf r}[j])+c^{2}\\le3c^{2}\\\\   & \\le & -g({\\bf r}[j])\\alpha\\delta/2+c\\alpha\\delta/2 + 3c^{2}.\\end{aligned}\\ ] ]    combining case 1 and 2 , we have@xmath429)-g^{2}({\\bf r}[j])]\\le - g({\\bf r}[j])\\alpha\\delta/2+c\\alpha\\delta/2 + 3c^{2}.\\ ] ]    taking expectations on both sides yields@xmath430)-g^{2}({\\bf r}[j])]\\le - e[g({\\bf r}[j])]\\alpha\\delta/2+c\\alpha\\delta/2 + 3c^{2}.\\ ] ]    summing the above inequality from @xmath431 to @xmath432 , and dividing both sides by @xmath433 , we have @xmath434)-g^{2}({\\bf r}[0])]/j \\\\ & \\le & -(\\alpha\\delta/2)\\sum_{j=0}^{j-1}e[g({\\bf r}[j])]/j+c\\alpha\\delta/2 + 3c^{2}.\\end{aligned}\\ ] ]    therefore , @xmath435))/j\\le\\frac{c\\alpha\\delta/2 + 3c^{2}}{\\alpha\\delta/2}=c+6n\\frac{c^{2}}{\\delta^{2}}=o(n).\\ ] ]    note that @xmath436    so@xmath437))/j\\le o(n)+\\bar{l}=o(n)\\ ] ] since @xmath438 .    in view of ( [ eq : r_update ] )",
    ", we then have @xmath439)/j = o(\\frac{t}{\\alpha}n)=o(n^{3}\\log n).\\ ] ] since @xmath440 , we have @xmath441)/j\\\\   & \\le & \\frac{1}{\\epsilon}\\limsup_{j\\rightarrow\\infty}\\sum_{j=0}^{j-1}\\sum_{k}(b - r_{k}^{*})q_{k}[j]/j = o(n^{3}\\log n).\\end{aligned}\\ ] ]    since in a slot each queue is increased at most by 1 , @xmath442)/j+t$ ] where @xmath443",
    ". therefore ( [ eq : average - q ] ) holds .",
    "we have shown that in general interference graphs , pgd - csma can achieve polynomial queue lengths when the arrival rate vector lies in @xmath444 of the capacity region . in this section",
    ", we will show that the polynomial - delay region can be further improved for certain interference graphs .",
    "we only consider fixed - parameter pgd - csma for simplicity .",
    "consider a wireless local area network where every mobile station maintains a @xmath1-hop link to the access point .",
    "this is an important scenario in practice , where all links conflict with each other and the interference graph is a complete graph .",
    "in such a complete interference graph with @xmath8 links ( note that this graph does not have a bounded degree as @xmath445 ) , suppose the fugacity of link @xmath11 is @xmath51 .",
    "under pgd - csma with fugacities @xmath219 , the steady - state probability that link @xmath11 is active is simply @xmath446 where @xmath447 is the schedule with only link @xmath11 active , @xmath448 , and @xmath213 is the mean service rate of link @xmath11 . also , denote @xmath449 .    to determine the decision schedule in each time slot , similar to the scheme in @xcite",
    ", each link independently sends an intent message with probability @xmath450 .",
    "if the transmitter of link @xmath11 sends the packet and the packet is successfully received ( indicated by an acknowledgement from the receiver ) , then link @xmath11 is included in the decision schedule .",
    "so , the decision schedule which only includes link @xmath11 is chosen with probability @xmath451 where @xmath452 ; and the decision schedule which includes no links is chosen with probability @xmath453 .",
    "[ lem : mix_complete_graph ] _ let @xmath454 be the distribution of the transmission schedule in slot @xmath36 with any initial schedule @xmath455 , we have _",
    "@xmath456 _ where _",
    "@xmath457    consider two copies of the markov chain @xmath116 and @xmath118 .",
    "we will construct a coupling @xmath458 , with @xmath459 chosen from the stationary distribution @xmath60 . with this coupling , we show that for any @xmath460 , @xmath461.\\label{eq : one - step}\\end{aligned}\\ ] ]    since there is at most one link active in a given slot , for convenience , we write the state as @xmath11 if link @xmath462 is active in the slot , and 0 if no link is active .",
    "if @xmath111 , then the two markov chains have already coupled in slot @xmath36 , so that @xmath463 . if @xmath464 , there are three cases .",
    "\\(i ) @xmath465 and @xmath466 where @xmath467 and @xmath468 .    according to the glauber dynamics defined above , with probability @xmath469 ,",
    "one link is _ selected _ in the _ decision schedule _ , and with probability @xmath453 no link is selected .",
    "we define the following _ coupling_.    if link @xmath470 is selected in the process @xmath471 , then select link @xmath472 in the process @xmath473 .",
    "wlog , assume that @xmath474 . then ,",
    "turn off link @xmath470 in @xmath471 w. p. @xmath475 .",
    "if link @xmath470 is turned off , then also turn off link @xmath472 in @xmath473 .",
    "if link @xmath470 is not turned off , turn off link @xmath472 w. p. @xmath476/[\\lambda_{i_{1}}/(1+\\lambda_{i_{1}})]$ ] .",
    "then it is easy to see that link @xmath472 is turned off w. p. @xmath477 .",
    "if link @xmath472 is selected in @xmath471 , then select link @xmath470 in @xmath473 .",
    "clearly , after the selection , they can not be turned on .",
    "if a link other than @xmath470 and @xmath472 is selected in @xmath471 , then select the same link in @xmath473 .",
    "also , any link selected must remain off at time 1 .",
    "if no link is selected in @xmath471 , then also select no link in @xmath473 .",
    "therefore , @xmath478\\\\   & \\ge & c_{min}/[n\\cdot(1+\\lambda_{max } ) ] = \\bar{c}.\\end{aligned}\\ ] ]    \\(ii ) @xmath479 and @xmath480 where @xmath481 .    in @xmath471 and @xmath473 , we choose the same link ( in the decision schedule ) , and use the same coin toss to decide whether the chosen link should try to turn on or off .",
    "therefore , w. p. @xmath469 , link @xmath11 is chosen , and then @xmath107 .",
    "so , @xmath482    \\(iii ) @xmath483 and @xmath484 where @xmath481 .",
    "this is symmetric to case ( ii ) .",
    "therefore , in any case , ( [ eq : one - step ] ) holds , and we have @xmath485 this implies that @xmath486    by the well - known coupling lemma ( e.g. , @xcite ) , @xmath487 for any initial state @xmath488 hence proving ( [ eq : mixing ] ) .",
    "_ given any @xmath489 ( which is independent of @xmath8 ) , pgd - csma can support @xmath490 with a mixing time of @xmath491 . _    for the complete interference graph , @xmath492 therefore , since @xmath493 , we have @xmath494 .",
    "so , @xmath495 satisfies that @xmath496 . as a result , @xmath497 .",
    "let @xmath197 be the vector of fugacities such that @xmath498 under pgd - csma is equal to @xmath499 at each link @xmath11 .",
    "we have @xmath500 and@xmath501    therefore , @xmath502 . using lemma [ lem : mix_complete_graph ] and ( [ eq : mixingbound ] ) , we know that the mixing time @xmath503",
    "in this paper , we have shown that glauber dynamics based csma can result in queue lengths that only grow polynomially in the network size in bounded degree graphs if the arrival rates lie within a certain fraction of the capacity region .",
    "this establishes a positive result in contrast to previous results which showed that polynomial queue lengths are not possible if the interference graph of the network can be arbitrary @xcite . to establish our results",
    ", we use markov chain coupling theory to estimate the mixing time of parallel glauber dynamics .",
    "it is interesting that our upper bound on the queue lengths is larger ( in an order sense ) for the dynamic - parameter algorithm compared to the fixed - parameter algorithm .",
    "however , it is unclear whether this is an artifact of our bounding techniques or if it is an inherent penalty due to the time required for adaptation",
    ". it would be interesting to explore this issue in future work .",
    "we are also interested to study the throughput and delay performance of csma scheduling algorithms in other important classes of interference graphs , and design enhanced or new algorithms to further improve the performance .",
    "[ [ conditionsother - conditions - for - fast - mixing - of - parallel - glauber - dynamics ] ] [ conditions]other conditions for fast mixing of parallel glauber dynamics ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                let @xmath517 .",
    "then @xmath518 . let @xmath519 .",
    "clearly , @xmath520 .",
    "define @xmath521 , where @xmath522 is the @xmath8-dimensional vector whose @xmath11-th element is 1 and all other elements are 0 . we claim that @xmath523 .",
    "( indeed , any @xmath524 can be written as @xmath525 for some @xmath526 .",
    "so @xmath527 .",
    "also , any @xmath527 is in @xmath528 . ) therefore , @xmath529 . by ( [ eq : productformpgd ] )",
    ", we have @xmath530 .",
    "so @xmath531 . as a result ,",
    "@xmath532 , proving ( [ eq : mrf ] ) .                        l.  jiang and j.  walrand . a distributed csma algorithm for throughput and utility maximization in wireless networks . in _",
    "proceedings 46th annual allerton conference on communication , control and computing _ ,",
    "september 2008 .",
    "j.  ni , b.  tan , and r.  srikant . : queue - length based csma / ca algorithms for achieving maximum throughput and low delay in wireless networks . in _ proceedings of ieee",
    "infocom mini - conference _ , march 2010 ."
  ],
  "abstract_text": [
    "<S> glauber dynamics is a powerful tool to generate randomized , approximate solutions to combinatorially difficult problems . </S>",
    "<S> it has been used to analyze and design distributed csma ( carrier sense multiple access ) scheduling algorithms for multi - hop wireless networks . in this paper </S>",
    "<S> we derive bounds on the mixing time of a generalization of glauber dynamics where multiple links are allowed to update their states in parallel and the fugacity of each link can be different . </S>",
    "<S> the results can be used to prove that the average queue length ( and hence , the delay ) under the parallel glauber dynamics based csma grows polynomially in the number of links for wireless networks with bounded - degree interference graphs when the arrival rate lies in a fraction of the capacity region . </S>",
    "<S> we also show that in specific network topologies , the low - delay capacity region can be further improved . </S>"
  ]
}
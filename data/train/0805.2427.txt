{
  "article_text": [
    "iterative algorithms for decoding low - density parity - check ( ldpc ) codes @xcite have been the focus of research over the past decade and most of their properties are well understood @xcite .",
    "these algorithms operate by passing messages along the edges of a graphical representation of the code known as the tanner graph , and are optimal when the underlying graph is a tree .",
    "message passing decoders perform remarkably well which can be attributed to their ability to correct errors beyond the traditional bounded distance decoding capability . however , in contrast to bounded distance decoders ( bdds ) , the guaranteed error correction capability of iterative decoders is largely unknown .",
    "the problem of recovering from a fixed number of erasures is solved for iterative decoding on the binary erasure channel ( bec ) . if the size of the minimum stopping set in the tanner graph of a code is at least @xmath2 , then the decoder is guaranteed to recover from any @xmath3 erasures .",
    "@xcite studied the relation between stopping sets and girth and derived bounds on the smallest stopping set in any @xmath4-left regular tanner graph with girth @xmath5 .",
    "an analogous result does not exist for decoding on other channels such as the binary symmetric channel ( bsc ) and the additive white gaussian noise ( awgn ) channel . in this paper , we present such a result for hard decision decoding algorithms .",
    "gallager @xcite proposed two binary message passing algorithms , namely gallager a and gallager b , for decoding over the bsc .",
    "he showed that for the column - weight @xmath6 and @xmath7 , there exist @xmath8 and we follow standard terminology from @xcite and @xcite ] regular ldpc codes for which the bit error probability asymptotically tends to zero whenever we operate below the threshold .",
    "the minimum distance was shown to increase linearly with the code length , but correction of a linear fraction of errors was not shown .",
    "zyablov and pinsker @xcite analyzed ldpc codes under a simpler decoding algorithm known as the bit flipping algorithm , and showed that almost all the codes in the regular ensemble with @xmath9 can correct a constant fraction of worst case errors .",
    "sipser and spielman @xcite used expander graph arguments to analyze two bit flipping algorithms , serial and parallel .",
    "specifically , they showed that these algorithms can correct a fraction of errors if the underlying tanner graph is a good expander .",
    "burshtein and miller @xcite applied expander based arguments to show that message passing algorithms can also correct a fixed fraction of worst case errors when the degree of each variable node is more than five . feldman _",
    "@xcite showed that the linear programming decoder @xcite is also capable of correcting a fraction of errors .",
    "recently , burshtein @xcite showed that regular codes with variable nodes of degree four are capable of correcting a linear number of errors under bit flipping algorithm .",
    "he also showed tremendous improvement in the fraction of correctable errors when the variable node degree is at least five .",
    "tanner @xcite studied a class of codes constructed based on bipartite graphs and short error correcting codes .",
    "tanner s work is a generalization of the ldpc codes proposed by gallager @xcite and hence these codes are referred to as generalized ldpc ( gldpc ) codes .",
    "tanner proposed code construction techniques , decoding algorithms and complexity and performance analysis to analyze these codes and derived bounds on the rate and minimum distance for these codes .",
    "sipser and spielman @xcite analyzed a special case of gldpc codes ( which they termed as expander codes ) using expansion arguments and proposed explicit constructions of asymptotically good codes capable of correcting a fraction of errors .",
    "zemor @xcite improved the fraction of correctable errors under a modified decoding algorithm .",
    "barg and zemor in @xcite analyzed the error exponents of expander codes and showed that expander codes achieve capacity over the bsc .",
    "janwa and lal @xcite studied gldpc codes in the most general setting by considering unbalanced bipartite graphs .",
    "miladinovic and fossorier @xcite derived bounds on the guaranteed error correction capability of gldpc codes for the special case of failures only decoding .",
    "the focus of this paper is to establish lower and upper bounds on the guaranteed error correction capability of ldpc codes and gldpc codes as a function of their column - weight and girth . for the case of gldpc codes",
    ", we also find the expansion required to guarantee correction of a fraction of errors under the parallel bit flipping algorithm , as a function of the error correction capability of the sub - code .",
    "our approach can be summarized as follows : ( a ) to establish lower bounds , we determine the size of variable node sets in a left regular tanner graph which are guaranteed to have the expansion required by bit flipping algorithms , based on the moore bound @xcite and ( b ) to find upper bounds , we study the sizes of smallest possible trapping sets @xcite in a left regular tanner graph .",
    "it is well known that a random graph is a good expander with high probability @xcite . however , the fraction of nodes having the required expansion is very small and hence the code length to guarantee correction of a fixed number of errors must be large .",
    "moreover , determining the expansion of a given graph is known to be np hard @xcite , and spectral gap methods can not guarantee an expansion factor of more than @xmath10 @xcite . on the other hand ,",
    "code parameters such as column weight and girth can be easily determined or are assumed to be known for the code under consideration .",
    "we prove that for a given column - weight , the error correction capability grows exponentially in girth .",
    "however , we note that since the girth grows logarithmically in the code length , this result does not show that the bit flipping algorithms can correct a linear fraction of errors .    to find an upper bound on the number of correctable errors , we study the size of sets of variable nodes which lead to decoding failures .",
    "a decoding failure is said to have occurred if the output of the decoder is not equal to the transmitted codeword @xcite .",
    "the conditions that lead to decoding failures are well understood for a variety of decoding algorithms such as maximum likelihood decoding , bounded distance decoding and iterative decoding on the bec . however , for iterative decoding on the bsc and awgn channel",
    ", the understanding is far from complete .",
    "two approaches have been taken in this direction , namely trapping sets @xcite and pseudo - codewords @xcite .",
    "we adopt the trapping set approach in this paper to characterize decoding failures .",
    "richardson @xcite introduced the notion of trapping sets to estimate the error floor on the awgn channel . in @xcite , trapping sets were used to estimate the frame error rate of column - weigh - three ldpc codes . in this paper , we define trapping sets with the help of fixed points for the bit flipping algorithms ( both serial and parallel ) .",
    "we then find bounds on the size of trapping sets based on extremal graphs known as cage graphs @xcite , thereby finding an upper bound on the guaranteed error correction capability . by saying that a code with column weight @xmath0 and girth @xmath11 is not guaranteed to correct @xmath12 errors , we mean that there exists a code with column weight @xmath0 and girth @xmath11 that fails to correct @xmath12 errors .",
    "the rest of the paper is organized as follows . in section [ section2 ] ,",
    "we provide a brief introduction to ldpc codes , decoding algorithms and trapping sets @xcite . in section [ section3 ]",
    ", we prove our main theorem relating the column weight and girth to the size of variable node sets which expand by a factor of at least @xmath1 .",
    "we derive bounds on the size of trapping sets based on cage graphs in section [ section4 ] . in section [ section5 ]",
    ", we prove that the parallel bit flipping algorithm can correct a fraction of errors if the underlying tanner graph is a good expander .",
    "we conclude with a few remarks in section [ section6 ] .",
    "in this section , we first establish the notation and then proceed to give a brief introduction to ldpc codes and hard decision decoding algorithms .",
    "we then give the relation between the error correction capability of the code and the expansion of the underlying tanner graph .",
    "we finally describe trapping sets for the algorithms .",
    "we adopt the standard notation in graph theory ( see @xcite for example ) .",
    "@xmath13 denotes a graph with set of nodes @xmath14 and set of edges @xmath15 . when there is no ambiguity , we simply denote the graph by @xmath16 .",
    "an edge @xmath17 is an unordered pair @xmath18 of nodes and is said to be incident on @xmath19 and @xmath20 .",
    "two nodes @xmath19 and @xmath20 are said to be adjacent ( neighbors ) if there is an edge @xmath21 incident on them .",
    "the order of the graph is @xmath22 and the size of the graph is @xmath23 .",
    "the degree of @xmath24 , @xmath25 , is the number of its neighbors . a node with degree one",
    "is called a leaf or a pendant node .",
    "a graph is @xmath4-regular if all the nodes have degree @xmath4 .",
    "the average degree @xmath26 of a graph is defined as @xmath27 .",
    "the girth @xmath28 of a graph @xmath16 , is the length of smallest cycle in @xmath16 .",
    "@xmath29 denotes a bipartite graph with two sets of nodes ; variable ( left ) nodes @xmath30 and check ( right ) nodes @xmath31 and edge set @xmath32 .",
    "nodes in @xmath30 have neighbors only in @xmath31 and vice versa .",
    "a bipartite graph is said to be @xmath0-left regular if all variable nodes have degree @xmath0 , @xmath33-right regular if all check nodes have degree @xmath33 and @xmath34 regular if all variable nodes have degree @xmath0 and all check nodes have degree @xmath33 .",
    "the girth of a bipartite graph is even .",
    "ldpc codes @xcite are a class of linear block codes which can be defined by sparse bipartite graphs @xcite .",
    "let @xmath16 be a bipartite graph with two sets of nodes : @xmath35 variable nodes and @xmath36 check nodes .",
    "this graph defines a linear block code @xmath37 of length @xmath35 and dimension at least @xmath38 in the following way : the @xmath35 variable nodes are associated to the @xmath35 coordinates of codewords .",
    "a vector @xmath39 is a codeword if and only if for each check node , the modulo two sum of its neighbors is zero .",
    "such a graphical representation of an ldpc code is called the tanner graph @xcite of the code .",
    "the adjacency matrix of @xmath16 gives a parity check matrix of @xmath40 .",
    "an @xmath8 regular ldpc code has a tanner graph with @xmath35 variable nodes each of degree @xmath0 ( column weight ) and @xmath41 check nodes each of degree @xmath33 ( row weight ) .",
    "this code has length @xmath35 and rate @xmath42 @xcite .",
    "we now describe a simple hard decision decoding algorithm known as the parallel bit flipping algorithm @xcite to decode ldpc codes .",
    "as noted earlier , each check node imposes a constraint on the neighboring variable nodes . a constraint ( check node )",
    "is said to be satisfied by a setting of variable nodes if the sum of the variable nodes in the constraint is even ; otherwise the constraint is unsatisfied .",
    "* parallel bit flipping algorithm *    * in parallel , flip each variable that is in more unsatisfied than satisfied constraints . *",
    "repeat until no such variable remains .    a serial version of the algorithm is also defined in @xcite and all the results in this paper hold for the serial bit flipping algorithm also .",
    "the bit flipping algorithms are iterative in nature but do not belong to the class of message passing algorithms ( see @xcite for an explanation ) .",
    "sipser and spielman @xcite analyzed the performance of the bit flipping algorithms using the expansion properties of the underlying tanner graph of the code .",
    "we summarize the results from @xcite below for the sake of completeness .",
    "we start with the following definitions from @xcite .",
    "let @xmath13 with @xmath43 .",
    "then _ every set of at most @xmath44 nodes expands by a factor of @xmath45 _ if , for all sets @xmath46 @xmath47    we consider bipartite graphs and expansion of variable nodes only .",
    "a graph is a @xmath48 expander if it is a @xmath34 regular bipartite graph in which every subset of at most @xmath49 fraction of the variable nodes expands by a factor of at least @xmath45 .",
    "the following theorem from @xcite relates the expansion and error correction capability of an @xmath8 ldpc code with tanner graph @xmath16 when decoded using the parallel bit flipping decoding algorithm .",
    "* theorem 11 ) let @xmath16 be a @xmath50 expander over @xmath35 variable nodes , for any @xmath51 .",
    "then , the simple parallel decoding algorithm will correct any @xmath52 fraction of errors after @xmath53 decoding rounds .    _",
    "notes : _    1 .",
    "the serial bit flipping algorithm can also correct @xmath54 fraction of errors if @xmath16 is a @xmath55 expander .",
    "2 .   the results hold for any left regular code as expansion is needed for variable nodes only .    from the above discussion",
    ", it is observed that finding the number of variable nodes which are guaranteed to expand by a factor of at least @xmath1 , gives a lower bound on the guaranteed error correction capability of ldpc codes .",
    "we now characterize failures of the iterative decoders using fixed points and trapping sets",
    ". some of the following discussion appears in @xcite , @xcite , @xcite and we include it for sake of completeness .",
    "consider an ldpc code of length @xmath35 and let @xmath56 be the binary vector which is the input to the iterative decoder .",
    "let @xmath57 be the support of @xmath58 .",
    "the support of @xmath58 is defined as the set of all positions @xmath59 where @xmath60 . the set of variable nodes ( bits ) which differ from their correct value are referred to as corrupt variables .",
    "@xcite a decoder failure is said to have occurred if the output of the decoder is not equal to the transmitted codeword .",
    "@xmath58 is a fixed point of the bit flipping algorithm if the set of corrupt variables remains unchanged after one round of decoding .",
    "@xcite the support of a fixed point is known as a trapping set .",
    "a @xmath61 trapping set @xmath62 is a set of @xmath30 variable nodes whose induced subgraph has @xmath31 odd degree checks .",
    "if the variable nodes corresponding to a trapping set are in error , then a decoder failure occurs .",
    "however , not all variable nodes corresponding to a trapping set need to be in error for a decoder failure to occur .",
    "@xcite the minimal number of variable nodes that have to be initially in error for the decoder to end up in the trapping set @xmath62 will be referred to as _ critical number _",
    "@xmath36 for that trapping set .",
    "@xcite a set of variable nodes which if in error lead to a decoding failure is known as a _",
    "in this section , we prove our main theorem which relates the column weight and girth of a code to its error correction capability . we show that the size of variable node sets which have the required expansion is related to the well known moore bound @xcite .",
    "we start with a few definitions required to establish the main theorem .",
    "the _ reduced graph _",
    "@xmath63 of @xmath29 is a graph with vertex set @xmath64 and edge set @xmath65 given by @xmath66    let @xmath67 be such that @xmath68 .",
    "the _ @xmath0 augmented graph _",
    "@xmath69 is a graph with vertex set @xmath70 and edge set @xmath71 given by @xmath72    ( * ? ? ?",
    "* definition 4 ) the _ edge - vertex incidence graph _ @xmath73 of @xmath13 is the bipartite graph with vertex set @xmath74 and edge set @xmath75    _ notes : _    1 .",
    "the edge - vertex incidence graph is right regular with degree two .",
    "2 .   @xmath76 .",
    "3 .   @xmath77 .",
    "an _ inverse edge - vertex incidence graph _",
    "@xmath78 of @xmath67 is a graph with vertex set @xmath30 and edge set @xmath79 which is obtained as follows . for @xmath80 , let @xmath81 denote the set of neighbors of @xmath82 .",
    "label one node @xmath83 as a root node",
    ". then @xmath84    _ notes : _    1 .",
    "given a graph , the inverse edge - vertex incidence graph is not unique .",
    "@xmath85 , @xmath86 and @xmath87 .",
    "3 .   @xmath88 with equality only if all checks in @xmath89 have degree two .",
    "the term inverse edge - vertex incidence is used for the following reason .",
    "suppose all checks in @xmath90 have degree two .",
    "then the edge - vertex incidence graph of @xmath91 is @xmath90 .",
    "the _ moore bound _",
    "@xcite denoted by @xmath92 is a lower bound on the least number of vertices in a @xmath4-regular graph with girth @xmath5 .",
    "it is given by @xmath93    in @xcite , it was shown that a similar bound holds for irregular graphs .",
    "@xcite the number of nodes @xmath94 in a graph of girth @xmath5 and average degree at least @xmath95 satisfies @xmath96    note that @xmath26 need not be an integer in the above theorem .",
    "we now state and prove the main theorem .",
    "[ thm1 ] let @xmath16 be a @xmath97-left regular tanner graph @xmath16 with @xmath98 .",
    "then for all @xmath99 , any set of @xmath12 variable nodes in @xmath16 expands by a factor of at least @xmath1 .",
    "let @xmath100 denote the subgraph induced by a set of @xmath12 variable nodes @xmath101 . since @xmath16 is @xmath0-left regular , @xmath102 .",
    "let @xmath103 be the reduced graph .",
    "we have @xmath104 .",
    "let @xmath105 denote the maximum number of edges in an arbitrary graph of order @xmath12 and girth @xmath106 . by theorem 2 , for all @xmath107 , the average degree of a graph with @xmath12 nodes and girth @xmath106 is less than @xmath108 .",
    "hence , @xmath109 .",
    "we now have the following lemma .",
    "the number of edges in @xmath110 can not exceed @xmath111 i.e. , @xmath112    the proof is by contradiction .",
    "assume that @xmath113 .",
    "consider @xmath114 , an inverse edge vertex incidence graph of @xmath115 .",
    "we have @xmath116 this is a contradiction as @xmath117 is a graph of order @xmath12 and girth at least @xmath106 .",
    "we now find a lower bound on @xmath118 in terms of @xmath105 .",
    "we have the following lemma .",
    "@xmath119 .",
    "let @xmath120 for some integer @xmath121 . then @xmath122 .",
    "we claim that @xmath123 . to see this , we note that @xmath124 hence we have , @xmath125    the theorem now follows as @xmath126 and therefore @xmath127    let @xmath37 be an ldpc code with column - weight @xmath97 and girth @xmath11 .",
    "then the bit flipping algorithm can correct any error pattern of weight less than @xmath128 .",
    "in this section , we first give necessary and sufficient conditions for a given set of variables to be a trapping set .",
    "we then proceed to define a class of interesting graphs known as cage graphs @xcite and establish a relation between cage graphs and trapping sets .",
    "we then give an upper bound on the error correction capability based on the sizes of cage graphs .",
    "the proofs in this section are along the same lines as in section [ section3 ] .",
    "hence , we only give a sketch of the proofs .",
    "[ thm2 ] let @xmath37 be an ldpc code with @xmath0-left regular tanner graph @xmath16 .",
    "let @xmath62 be a set consisting of @xmath30 variable nodes with induced subgraph @xmath129 .",
    "let the checks in @xmath129 be partitioned into two disjoint subsets ; @xmath130 consisting of checks with odd degree and @xmath131 consisting of checks with even degree .",
    "then @xmath62 is a trapping set for bit flipping algorithm iff : ( a ) every variable node in @xmath129 has at least @xmath132 neighbors in @xmath131 , and ( b ) no @xmath133 checks of @xmath130 share a neighbor outside @xmath129 .",
    "we first show that the conditions stated are sufficient .",
    "let @xmath134 be the input to the bit flipping algorithm , with support @xmath135 .",
    "the only unsatisfied constraints are in @xmath136 . by the conditions of the theorem",
    ", we observe that no variable node is involved in more unsatisfied constraints than satisfied constraints .",
    "hence , no variable node is flipped and by definition @xmath134 is a fixed point implying that @xmath135 is a trapping set .    to see that the conditions are necessary , observe that for @xmath137 to be a trapping set ,",
    "no variable node should be involved in more unsatisfied constraints than satisfied constraints .    _",
    "remark : _ theorem [ thm2 ] is a consequence of fact 3 from @xcite .    to determine whether a given set of variables is a trapping set , it is necessary to not only know the induced subgraph but also the neighbors of the odd degree checks .",
    "however , in order to establish general bounds on the sizes of trapping sets given only the column weight and the girth , we consider only condition ( a ) of theorem [ thm2 ] which is a necessary condition .",
    "a set of variable nodes satisfying condition ( a ) is known as a _ potential trapping set_. a trapping set is a potential trapping set that satisfies condition ( b ) .",
    "hence , a lower bound on the size of the potential trapping set is a lower bound on the size of a trapping set .",
    "it is worth noting that a potential trapping set can always be extended to a trapping set by successively adding a variable node till condition ( b ) is satisfied .",
    "@xcite a @xmath138-_cage graph _ ,",
    "@xmath139 , is a @xmath4-regular graph with girth @xmath5 having the minimum possible number of nodes .    a lower bound , @xmath140 , on the number of nodes @xmath141 in a @xmath138-cage graph is given by the moore bound .",
    "an upper bound @xmath142 on @xmath141 ( see @xcite and references therein ) is given by @xmath143    [ thm3 ] let @xmath37 be an ldpc code with @xmath0-left regular tanner graph @xmath16 and girth @xmath11 .",
    "let @xmath144 denote the size of smallest possible potential trapping set of @xmath37 for the bit flipping algorithm .",
    "then , @xmath145    we first prove the following lemma and then exhibit a potential trapping set of size @xmath146 .",
    "@xmath147 .",
    "let @xmath148 be a trapping set with @xmath149 and let @xmath150 denote the induced subgraph of @xmath148 .",
    "we can construct a @xmath151- cage graph @xmath152 with @xmath149 nodes by removing edges ( if necessary ) from the inverse edge - vertex of @xmath150 which is a contradiction .",
    "we now exhibit a potential trapping set of size @xmath146 .",
    "let @xmath153 be the edge - vertex incidence graph of a @xmath154 .",
    "note that @xmath153 is a left regular bipartite graph with @xmath146 variable nodes of degree @xmath132 and all checks have degree two . now consider @xmath155 , the @xmath0 augmented graph of @xmath153 .",
    "it can be seen that @xmath155 is a potential trapping set",
    ".    there exists a code @xmath37 with @xmath0-left regular tanner graph of girth @xmath11 which fails to correct @xmath146 errors .",
    "let @xmath155 be as defined in theorem [ thm3 ] .",
    "now construct a code @xmath37 with column - weight @xmath0 and girth @xmath11 starting from @xmath155 such that the set of variable nodes in @xmath155 also satisfies condition ( b ) of theorem [ thm2 ] . then , by theorem [ thm2 ] and theorem [ thm3 ] , the set of variable nodes in @xmath155 with cardinality @xmath146 is a trapping set and hence @xmath37 fails to decode an error pattern of weight @xmath146 .",
    "_ remark : _ we note that for @xmath156 and @xmath157 , the above bound is tight .",
    "observe that for @xmath158 , the moore bound is @xmath159 and that a cycle of length @xmath160 with @xmath5 variable nodes is always a potential trapping set .",
    "in fact , for a code with @xmath156 or @xmath161 , and tanner graph of girth greater than eight , a cycle of the smallest length is always a trapping set ( see @xcite for the proof ) .",
    "in this section , we first consider two bit flipping decoding algorithms for gldpc codes .",
    "we then establish a relation between expansion and error correction capability .",
    "we also establish a lower bound on the number of variable nodes that have the required expansion .",
    "we then exhibit a trapping set and as a consequence show that the bound on the required expansion can not be improved when @xmath0 is even .",
    "we also establish bounds on the size of trapping sets .",
    "we begin with the definition of gldpc codes by adopting the terminology from expander codes @xcite .",
    ": let @xmath16 be a @xmath34 regular bipartite graph between @xmath35 variable nodes @xmath162 and @xmath163 check nodes @xmath164 .",
    "let @xmath165 be a function designed so that , for each check node @xmath166 , the variables neighboring @xmath166 are @xmath167 .",
    "let @xmath168 be an error correcting code of block length @xmath33 .",
    "the gldpc code @xmath169 is the code of block length @xmath35 whose codewords are the words @xmath170 such that , for @xmath171 , @xmath172 is a codeword of @xmath173 .    the terms column - weight , row - weight , check nodes , variable nodes and trapping sets mean the same as in case of ldpc codes .",
    "the code @xmath173 at each check node is sometimes referred to as the sub - code .      tanner @xcite proposed different hard decision decoding algorithms to decode gldpc codes .",
    "we now describe an iterative algorithm known as parallel bit flipping algorithm originally described in @xcite , which is employed when the sub - code is capable of correcting @xmath3 errors .",
    "* parallel bit flipping algorithm : * each decoding round consists of the following steps .    *",
    "a variable node sends its current estimate to check nodes . *",
    "a check node performs decoding on incoming messages and finds the nearest codeword . for all variable nodes which differ from the codeword",
    ", the check node sends a flip message .",
    "if the check node does not find a unique codeword , it does not send any flip messages . *",
    "a variable node flips if it receives more than @xmath108 flip messages .",
    "the set of variable nodes which differ from their correct value are known as corrupt variables .",
    "the rest of the variable nodes are referred to as correct variables . following the algorithms",
    ", we have the following definition adopted from @xcite :    a check node is said to be _ confused _ if it sends flip messages to correct variable nodes , or if it does not send flip message to corrupt variable nodes , or both .",
    "otherwise , a check node is said to be _",
    "helpful_.    _ remarks : _    1 .",
    "for the parallel bit flipping decoding algorithm , a check node with sub - code of minimum distance at least @xmath174 can be confused only if it is connected to more than @xmath3 corrupt variable nodes .",
    "the parallel bit flipping algorithm is different from the algorithm presented by sipser and spielman in @xcite for expander codes , but is similar to the algorithm proposed by zemor in @xcite .",
    "however , we note that the codes considered in @xcite are based on @xmath4-regular bipartite graphs and are a special case of doubly generalized ldpc codes , where each variable node is also associated with an error correcting code .",
    "3 .   apart from helpful checks and confused checks , sipser and spielman defined unhelpful checks .",
    "however , our definition of confused checks includes unhelpful checks as well .",
    "4 .   miladinovic and fossorier in @xcite considered a decoding algorithm where the decoding at every check either results in correct decoding or a failure but not miscorrection . while this assumption is reasonable",
    "when the sub - code is a long code , it is not true in general .",
    "we however , point out that the methodology we adopt can be applied to this case as well .",
    "the work by sipser and spielman @xcite , zemor @xcite , barg and zemor @xcite and janwa and lal @xcite focused on asymptotic results and explicit construction of expander codes .",
    "the proofs and constructions are based on spectral gap and as noted earlier , such methods can not guarantee expansion factor of more than 1/2 .",
    "our proofs require a greater expansion factor .",
    "we now prove that the above described algorithm can correct a fraction of errors if the underlying tanner graph is a good expander .",
    "[ thm4 ] let @xmath169 be a gldpc code with a @xmath0-left regular tanner graph @xmath16 .",
    "assume that the sub - code @xmath173 has minimum distance at least @xmath174 and is capable of correcting @xmath3 errors .",
    "let @xmath16 be a @xmath175 expander where @xmath176 then the parallel bit flipping decoding algorithm will correct any @xmath177 fraction of errors .",
    "let @xmath35 be the number of variable nodes in @xmath37 .",
    "let @xmath30 be the set of corrupt variables at the beginning of a decoding round .",
    "assume that @xmath178 .",
    "we will show that after the decoding round , the number of corrupt variables is strictly less than @xmath179 .",
    "let @xmath180 be the set of corrupt variables that fail to flip in one decoding round , and let @xmath31 be the set of variables that were originally uncorrupt , but which become corrupt after one decoding round .",
    "after one decoding round , the set of corrupt variables is @xmath181 . in the worst case scenario",
    ", a confused check sends @xmath3 flip messages to the uncorrupt variables and no flip message to the corrupt variables .",
    "we now have the following lemma :    let @xmath182 be the set of confused checks , then @xmath183 .",
    "each confused check must have at least @xmath2 neighbors in @xmath30 .",
    "let s be the set of helpful checks that have at least one neighbor in @xmath30 .",
    "then , @xmath184 by expansion , @xmath185 ) , we obtain @xmath186 .",
    "the proof is by contradiction .",
    "assume that @xmath187 .",
    "then there exists a subset @xmath188 such that @xmath189 .",
    "we observe that a variable node in @xmath180 can have at most @xmath190 neighbors that are not in @xmath182 .",
    "also , a variable node in @xmath191 must have at least @xmath192 neighbors in @xmath182 , and hence can have at most @xmath193 neighbors that are not in @xmath182 .",
    "let @xmath194 be the set of neighbors of @xmath195 .",
    "then , @xmath196 substituting ( [ lm1 ] ) into ( [ th1 ] ) , we obtain @xmath197 now @xmath198 which is a contradiction .    _",
    "remark : _ the above theorem proves that the parallel bit flipping algorithm can correct a fraction of errors in linear number of rounds ( in code length ) . however , if we assume an expansion of @xmath199 , it can be shown that the number of errors decreases by a constant factor with every iteration resulting in convergence in logarithmic number of rounds .",
    "the following theorem establishes a lower bound on the number of nodes in a left regular graph which expand by a factor required by the above algorithms .",
    "[ thm6 ] let @xmath16 be a @xmath0-left regular bipartite graph with @xmath98 .",
    "then for all @xmath200 , any set of @xmath12 variable nodes in @xmath16 expands by a factor of at least @xmath201 , where @xmath202    the proof is similar to the proof of theorem [ thm1 ] .",
    "following the notation from theorem [ thm1 ] , we note that for all @xmath200 , @xmath203 since @xmath204 , we have @xmath205 .",
    "let @xmath169 be a gldpc code with a @xmath0-left regular tanner graph @xmath16 and @xmath98 .",
    "assume that the sub - code @xmath173 has minimum distance at least @xmath174 and is capable of correcting @xmath3 errors .",
    "then the parallel bit flipping algorithm can correct any error pattern of weight less than @xmath206 .",
    "we now exhibit a trapping set for the parallel bit flipping algorithm . by examining the expansion of the trapping set",
    ", we show that the bound given in theorem [ thm4 ] can not be improved when @xmath0 is even .",
    "[ thm7 ] let @xmath37 be a gldpc code with @xmath0-left regular tanner graph @xmath16 .",
    "let @xmath62 be a set consisting of @xmath30 variable nodes with induced subgraph @xmath129 with the following properties : ( a ) the degree of each check in @xmath129 is either @xmath207 or @xmath2 ; ( b ) each variable node in @xmath30 is connected to @xmath132 checks of degree @xmath2 and @xmath208 checks of degree @xmath207 ; and ( c ) no @xmath133 checks of degree @xmath2 share a variable node outside @xmath129 .",
    "then , @xmath62 is a trapping set .",
    "observe that all the checks of degree @xmath2 in @xmath129 are confused .",
    "further , each confused check does not send flip messages to variable nodes in @xmath30 .",
    "since any variable node in @xmath30 is connected to @xmath132 confused checks , it remains corrupt .",
    "also , no variable node outside @xmath129 can receive more than @xmath208 flip messages .",
    "hence , no variable node which is originally correct can get corrupted . by definition",
    ", @xmath62 is a trapping set .",
    "it can be seen that the total number of checks in @xmath129 is equal to @xmath209 .",
    "hence , the set of variable nodes @xmath30 expands by a factor of @xmath210 when @xmath0 is even .",
    "hence , the bound given in theorem [ thm4 ] can not be improved in this case .    for a set of variable nodes to be a trapping set , it is necessary that every variable node in the set is connected to at least @xmath132 confused checks .",
    "this observation leads to the following bound on the size of trapping sets .",
    "let @xmath37 be a gldpc code with @xmath0-left regular tanner graph @xmath16 and @xmath98 .",
    "let @xmath211 denote the number of left vertices in a @xmath212 regular bipartite graph of girth @xmath11 .",
    "then the size of the smallest possible trapping set of @xmath40 is @xmath213",
    ".    follows from theorem [ thm3 ] and theorem [ thm7 ]",
    "let @xmath169 be a gldpc code with a @xmath0-left regular tanner graph @xmath16 and @xmath98 .",
    "assume that the sub - code @xmath173 has minimum distance at least @xmath174 and is capable of correcting @xmath3 errors .",
    "then the parallel bit flipping algorithm can not be guaranteed to correct all error patterns of weight greater than or equal to @xmath213 .",
    "we derived lower bounds on the guaranteed error correction capability of ldpc and gldpc codes by finding bounds on the number of nodes that have the required expansion .",
    "the bounds depend on two important code parameters namely : column - weight and girth .",
    "since the relations between rate , column - weight , girth and code length are well explored in the literature ( see @xcite for example ) , bounds on the code length needed to achieve certain error correction capability can be derived for different column weights and sub - codes ( for gldpc codes ) .",
    "the bounds presented in the paper serve as guidelines in choosing code parameters in practical scenarios .",
    "the lower bounds derived in this paper are weak .",
    "however , extremal graphs avoiding three , four and five cycles have been studied in great detail ( see @xcite ) and these results can be used to derive tighter bounds when the girth is eight , ten or twelve .",
    "also , since an expansion factor of @xmath1 is not necessary ( see ( * ? ? ?",
    "* theorem 24 ) ) for ldpc codes , it is possible that tighter lower bounds can be derived for some cases .",
    "the results can be extended to message passing algorithms as well .",
    "there is a considerable gap between the lower bounds and upper bounds on the error correction capability .",
    "deriving lower bounds based on the sizes of trapping sets rather than expansion may possibly lead to bridging this gap .",
    "our approach can be used to derive bounds on the guaranteed erasure recovery capability for iterative decoding on the bec by finding the number of variable nodes which expand by a factor of @xmath108 . in @xcite ,",
    "the bounds on the guaranteed erasure recovery capability were derived based on the size of the smallest stopping set .",
    "both approaches give the same bounds , which also coincide with the bounds given by tanner @xcite for the minimum distance .",
    "results similar to the ones reported by miladinovic and fossorier @xcite based on the size of generalized stopping sets can also be derived .",
    "n.  alon , `` spectral techniques in graph algorithms , '' in _",
    "latin 98 : proceedings of the third latin american symposium on theoretical informatics_.1em plus 0.5em minus 0.4emlondon , uk : springer - verlag , 1998 , pp .",
    "206215 .    p.",
    "o. vontobel and r.  koetter , `` graph - cover decoding and finite - length analysis of message - passing iterative decoding of ldpc codes , '' may 2007 , accepted for ieee transactions on information theory .",
    "[ online ] .",
    "available : http://www.citebase.org/abstract?id=oai:arxiv.org:cs/0512078    s.  k. chilappagari , s.  sankaranarayanan , and b.  vasic , `` error floors of ldpc codes on the binary symmetric channel , '' in _ proc . of ieee international conference on communications _",
    ", vol .  3 , june 11 - 15 2006 , pp .",
    "10891094 .",
    "a.  shokrollahi , `` an introduction to low - density parity - check codes , '' in _ theoretical aspects of computer science : advanced lectures_.1em plus 0.5em minus 0.4emnew york , ny , usa : springer - verlag new york , inc . , 2002 , pp",
    ". 175197 .",
    "s.  sankaranarayanan , s.  k. chilappagari , r.  radhakrishnan , and b.  vasic , `` failures of the gallager b decoder : analysis and applications , '' in _ proc . of ucsd center for information theory and its applications inaugural workshop _ ,",
    "feb 6 - 9 2006 .",
    "[ online ] .",
    "available : htpp//ita.5i.net / papers/160.pdf"
  ],
  "abstract_text": [
    "<S> the relation between the girth and the guaranteed error correction capability of @xmath0-left regular ldpc codes when decoded using the bit flipping ( serial and parallel ) algorithms is investigated . a lower bound on the size of variable node sets which expand by a factor of at least @xmath1 </S>",
    "<S> is found based on the moore bound . </S>",
    "<S> an upper bound on the guaranteed error correction capability is established by studying the sizes of smallest possible trapping sets . </S>",
    "<S> the results are extended to generalized ldpc codes . </S>",
    "<S> it is shown that generalized ldpc codes can correct a linear fraction of errors under the parallel bit flipping algorithm when the underlying tanner graph is a good expander . </S>",
    "<S> it is also shown that the bound can not be improved when @xmath0 is even by studying a class of trapping sets . a lower bound on the size of variable node sets which have the required expansion is established .    submitted to ieee transactions on information theory , </S>",
    "<S> may 2008    * index terms *    low - density parity - check codes , bit flipping algorithms , trapping sets , error correction capability </S>"
  ]
}
{
  "article_text": [
    "this paper concerns average - cost optimal control for markovian models .",
    "it is assumed that there is a one - step reward @xmath5 that is a function of state - input pairs . for a given policy that defines the input as a function of present and past state values ,",
    "the resulting average reward is the limit infimum , @xmath6 where @xmath7 , @xmath8 are the state and input sequences . under general conditions ,",
    "the maximum over all policies is deterministic and independent of the initial condition , and the optimal policy is state - feedback  obtained as the solution to the average - reward optimality equations ( aroe ) @xcite .      in this paper the state space @xmath9 on which @xmath10 evolves is taken to be finite , but possibly large .",
    "it is well known that computation of a solution to the aroe may be difficult in such cases .",
    "this is one motivation for the introduction of approximation techniques such as reinforcement learning @xcite .",
    "an interesting alternative is to change the problem so that it is easily solved . in all of the prior work surveyed here ,",
    "the setting is average - cost optimal control , so that the reward function is replaced by a cost function .",
    "brockett in @xcite introduces a class of controlled markov models in continuous time .",
    "the model and cost function are formulated so that the optimal control problem is easily solved numerically .",
    "the ode technique is applied to this special class of mdps in .",
    "the theory developed in was inspired by the work of todorov  @xcite , the similar earlier work of krn  @xcite , and the more recent work @xcite .",
    "the state space @xmath9 is finite , the action space @xmath11 consists of probability mass functions on @xmath9 , and the controlled transition matrix is entirely determined by the input as follows : @xmath12 the mdp has a simple solution only under special conditions on the cost function .",
    "it is assumed in @xcite that it is the sum two terms : the first is a cost function on @xmath9 , which is completely unstructured . the second term is a `` control cost '' , defined using kullback  leibler ( k - l ) divergence ( also known as _ relative entropy _ ) .",
    "the control cost is based on deviation from control - free behavior ( modeled by a nominal transition matrix @xmath13 ) . in most applications , @xmath13 captures randomness from nature .",
    "for example , in a queueing model there is uncertainty in inter - arrival times or service times .",
    "an optimal solution in this framework would allow modification of arrival statistics and service statistics , which may be entirely infeasible .",
    "in this paper the k - l cost framework is broadened to include constraints on the pmf @xmath14 appearing in .",
    "the new approach to computation proposed in this paper is based on the solution of an entire family of mdp problems",
    ". begins with a general mdp model in which the one - step reward function is a smooth function of a real parameter @xmath15 .    for each @xmath0 , the solution to the average - reward optimization problem",
    "is based on a relative value function @xmath16 . under general conditions",
    "it is shown that these functions are obtained as the solution to an ordinary differential equation @xmath17 consequently , _ the solution to an entire family of mdps can be obtained through the solution of a single ordinary differential equation ( ode ) .",
    "_    following the presentation of these general results , the paper focuses on the class of mdps with transition dynamics given in : the input space is a subset of the simplex in @xmath18 , and the cost function @xmath19 is defined with respect to k - l divergence ( see and surrounding discussion ) .",
    "the optimal control formulation is far more general than in the aforementioned work @xcite , as it allows for inclusion of exogenous randomness in the mdp model .",
    "the dynamic programming equations become significantly more complex in this generality , so that in particular , the perron - frobenious computational approach used in prior work is no longer applicable .",
    "nevertheless , the ode approach can be applied to solve the family of mdp optimal control problems .",
    "the vector field @xmath20 has special structure that further simplifies computation of the relative value functions .",
    "simultaneous computation of the optimal policies is essential in applications to `` demand dispatch '' for providing virtual energy storage from a large collection of flexible loads @xcite . in these papers ,",
    "randomized policies are designed for each of many thousands of electric loads in a distributed control architecture . in this context",
    "it is necessary to compute the optimal transition matrix @xmath21 for each @xmath0 .",
    "prior to the present work it was not possible to include any exogenous uncertainty in the load model .    in the companion paper @xcite ,",
    "the results of the present paper are applied to distributed control of flexible loads , including thermostatically controlled devices such as refrigerators and heating systems .",
    "this paper also contains extensions of the ode method to generate transition matrices with desirable properties , without consideration of optimality .",
    "the remainder of the paper is organized as follows .",
    "sets the notation for the mdp models in a general setting , and presents an ode approach to solving the aroe under minimal conditions on the model .",
    "describes the kullback ",
    "leibler cost criterion .",
    "special structure of optimal policies obtained in leads to a simple representation of the ode in . conclusions and topics for future research",
    "are contained in .",
    "consider an mdp with finite state space @xmath22 ; the action space @xmath11 is an open subset of @xmath23 .",
    "the state process is denoted @xmath24 , and the input process @xmath25 .",
    "the dynamics of the model are defined by a _ controlled transition matrix _ : for @xmath26 , and @xmath27 , this is defined by @xmath28 where the right hand side is assumed independent of @xmath29 .",
    "the one - step reward function is parameterized by a scalar @xmath15 .",
    "it is assumed to be continuously differentiable in this parameter , with derivative denoted @xmath30 unless there is risk of confusion , dependency on @xmath0 will be suppressed ; in particular , we write @xmath5 rather than @xmath31",
    ".    there may be hard constraints : for each @xmath32 , there is an open set @xmath33 consisting of feasible inputs @xmath34 when @xmath35 .",
    "the optimal reward @xmath36 is defined to be the maximum of @xmath37 in over all policies . under general conditions on the model , @xmath36 is deterministic , and is independent of @xmath38 . under further conditions ,",
    "this value and the optimal policy are characterized by the aroe : @xmath39 in which the function @xmath40 is called the _ relative value function_. the stationary policy @xmath41 is obtained from the aroe : @xmath42 is a maximizing value of @xmath43 in for each @xmath38 @xcite .",
    "structure for the optimal average reward is obtained under minimal assumptions :    [ t : etaconvex ] suppose that the following hold :    the welfare function is affine in its parameter : @xmath44 for some function @xmath45 and all @xmath46",
    ".    for each @xmath0 , the optimal reward @xmath47 exists , is deterministic , and is independent of the initial condition .    for each @xmath0 ,",
    "the optimal reward @xmath47 is achieved with a stationary policy @xmath48 , and under this policy , the following ergodic limits exist for each initial condition : @xmath49    then , @xmath47 is convex as a function of @xmath0 , with sub - derivative @xmath50 : @xmath51    convexity of @xmath47 will follow from the lower bound . alternatively , convexity is implied by the linear programming representation of average - cost optimal control , where @xmath47 is defined as the maximum of linear functions of @xmath0 @xcite .    to obtain the lower bound ,",
    "choose any @xmath52 , and consider the average reward based on @xmath31 , obtained using @xmath53 for all @xmath54 .",
    "we then have , @xmath55 the first summation on the right hand side is equal to @xmath56 .",
    "the second reduces to @xmath57 on substituting @xmath58 .",
    "we next introduce an ode that solves the aroe for each @xmath0 .",
    "to construct an ordinary differential equation for @xmath59 requires several assumptions .",
    "the first is a normalization : the relative value function is not unique , since we can add a constant to obtain a new solution .",
    "we resolve this by fixing a state @xmath60 , and assume that @xmath61 for each @xmath0 .",
    "for any function @xmath62 , we define a new function on @xmath63 via , @xmath64 similar notation is used for an uncontrolled transition matrix .    * assumptions *    for each @xmath0 , a solution to the aroe @xmath65 exists , with @xmath66 , and the pair is continuously differentiable in @xmath0 . moreover , the function of @xmath67 defined by , @xmath68 is jointly continuously differentiable in @xmath69 , with the representation @xmath70    the stationary policy exists as the minimum @xmath71 and is continuously differentiable in @xmath0 for each @xmath38 .",
    "the optimal transition matrix @xmath21 is irreducible , with unique invariant pmf denoted @xmath72 , where @xmath73    all of these assumptions hold for the class of mdp models considered in .",
    "these assumptions imply that for each @xmath0 there is a solution @xmath74 to _ poisson s equation _ , @xmath75 in which @xmath76 , and @xmath77 .",
    "it is assumed throughout that the solution is normalized , with @xmath78 ; there is a unique solution to with this normalization ( * ? ? ?",
    "17.7.2 ) .",
    "the function @xmath79 is the `` q - function '' that appears in q - learning @xcite . under ( i ) and ( ii ) , it follows from the aroe that for each @xmath38 and @xmath0 , @xmath80      in it is shown that the family of relative value functions solves an ode .",
    "a function @xmath81 is regarded as a vector in @xmath18 .",
    "the vector field @xmath82 is not homogeneous , so it is regarded as a mapping @xmath83 . for a given function @xmath81 and @xmath15 ,",
    "the function @xmath84 is defined through the following steps :    obtain a policy : @xmath85 .",
    "obtain a transition matrix @xmath86 ,  @xmath26 .",
    "obtain the solution to poisson s equation , @xmath87 , in which @xmath88 , @xmath32 , and @xmath89 is the steady - state mean of @xmath90 under this policy .",
    "the solution is normalized so that @xmath91 .",
    "set @xmath92 .",
    "[ t : odeformdp ] under the assumptions of this section :    the family of relative value functions @xmath93 is a solution to the ordinary differential equation ,",
    "@xmath94    @xmath95 , with @xmath96    if the derivative @xmath97 is independent of @xmath0 and @xmath43 for each @xmath38 , then the ode is homogeneous .",
    "that is , for each @xmath98 , the function @xmath84 does not depend on @xmath99 .",
    "the domain of @xmath82 is defined to be any @xmath98 for which the solution to ( 1)(3 ) is possible .",
    "the domain may not include all functions @xmath98 , but it is defined for any of the relative value functions @xmath100 ; this is true by the assumptions imposed in the theorem .",
    "if @xmath101 is independent of @xmath0 and @xmath43 , then @xmath102 for each @xmath103 .",
    "it follows that @xmath104 is independent of @xmath0 in step  1 , and @xmath90 is independent of @xmath0 in step  3 .",
    "hence the vector field is independent of @xmath0 .    to complete the proof it remains to establish ( i ) , which will lead to the representation for @xmath105 in part  ( ii ) of the theorem .",
    "the assumption that @xmath11 is open and that @xmath79 is continuously differentiable is used to apply the first - order condition for optimality of @xmath106 : @xmath107 on differentiating each side of the aroe in the form , we obtain from the chain - rule @xmath108 where in the last equation we have applied .",
    "rearranging terms leads to the fixed point equation @xmath109 taking the mean of each side with respect to @xmath72 implies that @xmath95 .",
    "this establishes ( ii ) , and completes the proof that holds .",
    "an ode can be constructed for the discounted cost problem with discounted factor @xmath110 .",
    "the droe ( discounted - reward optimality equation ) is another fixed point equation , similar to : @xmath111 step  3 in the construction of the vector field for the ode is modified as follows : _ obtain the solution to @xmath112 . _",
    "the solution is unique , so no normalization is possible ( or needed ) .    for both average- and discounted - reward settings ,",
    "an ode can be constructed when @xmath11 is a _",
    "finite set _ rather than an open subset of @xmath23 . in this case , under general conditions",
    ", the vector field @xmath82 is continuous and piecewise smooth , and the optimal policy is piecewise constant as a function of @xmath0 .",
    "we next consider two simple examples to illustrate the conclusions in the average cost setting .",
    "the ode is homogeneous in all of the examples that follow .",
    "consider first the simple scalar linear system , @xmath113 in which @xmath114 .",
    "the disturbance @xmath115 is i.i.d .  with zero mean , and finite variance @xmath116 .",
    "the state space and action space are the real line , @xmath117 .",
    "the reward function is taken to be quadratic in the state variable , @xmath118 , so that @xmath119 is independent of both @xmath0 and @xmath43 .",
    "the cost function @xmath120 is continuously differentiable and convex , its derivative @xmath121 is globally lipschitz continuous , and @xmath122 .",
    "it is assumed in this example that @xmath123 . it can be shown that the relative value function @xmath59 is a concave function of @xmath38 under these assumptions",
    "; it is normalized so that @xmath124 for each @xmath123 ( that is , @xmath125 ) .",
    "the ode can be developed even in this infinite state - space setting .",
    "notation is simplified if this is converted to an average - cost optimization problem , with one - step cost function @xmath126 .",
    "we let @xmath127 , which is a convex function on @xmath128 .",
    "the aroe becomes the average - cost optimality equation , @xmath129 with @xmath130 .",
    "the optimal policy is the minimizer , @xmath131 \\bigr\\ }    \\end{aligned}\\ ] ]    the ode is modified as follows .",
    "let @xmath132 denote the set of non - negative convex functions @xmath133 , and construct the vector field so that @xmath134 . for given @xmath135 , we must define @xmath136 . since we are minimizing cost ,",
    "step  1 in the construction of the vector field becomes ,    obtain a policy : @xmath137 \\bigr\\ } $ ] .",
    "+ this is a convex optimization problem whose solution can be obtained numerically .",
    "step  2 is obtained as follows : @xmath138 the solution to poisson s equation in step  3 of the ode construction is more challenging .",
    "this might be approximated using a basis , as in td - learning @xcite .",
    "if the control cost is quadratic , @xmath139 , then the relative value function is also quadratic , so that @xmath140 , with @xmath141 , and @xmath142 only if @xmath143 .",
    "the optimal policy is linear , @xmath144 for some gain @xmath145 .",
    "the vector field in the ode can be restricted to functions of this form : for any @xmath141 ,    obtain a policy @xmath146 \\bigr\\ } = \\argmin_u\\bigl\\ { u^2 + b [ ( \\alpha x + u)^2 + \\sigma_n^2 ] \\bigr\\ } \\end{aligned}\\ ] ] this gives @xmath144 , with @xmath147 .    with a linear policy",
    "we obtain , @xmath148 .",
    "obtain the solution to poisson s equation , @xmath149 , in which @xmath89 is the steady - state mean of @xmath150 under this policy . since @xmath151 is quadratic",
    ", it follows that @xmath152 is also quadratic , @xmath153 , with @xmath154    set @xmath155 . +",
    "that is , @xmath156 , @xmath157 , @xmath123 .",
    "the ode reduces to a differential equation for the coefficient @xmath158 : @xmath159 on substitution this simplifies to , @xmath160 with boundary condition @xmath161 .",
    "shows the solution to this ode for @xmath162 $ ] with @xmath163 .",
    "the theory in this paper is restricted to models in discrete time , but the main results carry over to the continuous time setting .",
    "an illustration is provided using a class of mdp models introduced in @xcite .    as assumed in the present paper ,",
    "the state space @xmath22 is finite , and the input evolves on an open subset of of @xmath23 .",
    "the dynamics are defined by a controlled rate matrix ( or generator ) , @xmath164 where @xmath165 and @xmath166 are @xmath167 matrices .",
    "it is assumed that the input is defined by state feedback @xmath168 .",
    "the associated controlled rate matrix @xmath169 defines the transition rates for @xmath10 under this policy : @xmath170\\ ] ]    adapting the notation to the present paper , the cost function is taken of the form @xmath171 in which @xmath172 .",
    "for the continuous time model , the average - cost optimality equation becomes @xmath173 in which @xmath174 is the optimal average cost , @xmath175 is the relative value function , and @xmath176 it is assumed that @xmath177 for some state @xmath178 and all @xmath0 .",
    "the minimizer in defines the optimal policy @xmath179 . for this model and cost function",
    ", the minimizer can be obtained by taking the gradient with respect to @xmath43 and setting this equal to zero to obtain : @xmath180    the ode to solve takes the following steps .",
    "first , if @xmath143 then obviously @xmath181 and @xmath182 .",
    "this sets the initial condition for the ode . for other @xmath0",
    "we have as before that @xmath183 solves poisson s equation for the generator @xmath184 obtained with policy @xmath185 : @xmath186 where @xmath187 is the steady - state mean of @xmath188 under this policy , and @xmath189    the following numerical example from @xcite will clarify the construction of the ode . in this example @xmath190 so that @xmath43 is scalar - valued , and @xmath191 .",
    "denote @xmath192 , where in this example @xmath193 the input is restricted to @xmath194 . for @xmath195 , the cost function",
    "is designed to penalize the first and third states : @xmath196 , and @xmath197 . in @xcite",
    "the case @xmath198 is considered , for which it is shown that @xmath199 , and @xmath200 .    written in vector form ,",
    "poisson s equation becomes @xmath201 in which @xmath202 , @xmath203 , @xmath204 , and @xmath205    this example is designed to have simple structure . from the form of the optimal policy , it follows that @xmath206 for any @xmath0 .",
    "moreover , from symmetry of the model it can be shown that @xmath207 , and @xmath208 .",
    "we take @xmath209 so that @xmath210 .",
    "consequently , the 3-dimensional ode for @xmath175 will reduce to a one - dimensional ode for @xmath211 .",
    "the expression for the optimal policy also gives @xmath212 and , since the second row of @xmath213 is zero , it follows that @xmath214 .",
    "we have @xmath215 , and poisson s equation becomes @xmath216 the first two rows of this vector equation give @xmath217 v_\\zeta(1 ) & = \\barkappa_\\zeta   \\\\   0 + 2 v_\\zeta(1 )    & = \\barkappa_\\zeta \\end{aligned}\\ ] ] substituting the second equation into the first gives @xmath218 on making the change of variables @xmath219 we obtain @xmath220 whose solution is given by @xmath221 , with @xmath222 .",
    "in summary , @xmath223 , giving @xmath224 it is necessary to restrict @xmath0 to the interval @xmath225 to respect the constraint that @xmath226 for all @xmath38 .",
    "based on the formula @xmath227 and the preceding formula @xmath228 , it follows that @xmath229 a concave function of @xmath0 , as predicted by .",
    "the general results of the previous section are now applied to a particular class of mdp models .",
    "the dynamics of the mdp are assumed of the form , where the action space consists of a convex subset of probability mass functions on @xmath9 .",
    "the welfare function is assumed to be affine in @xmath0 , as assumed in .",
    "to maintain notational consistency with prior work @xcite we denote @xmath230 and assume that @xmath231 is a function of the state only . in the notation of , we have @xmath232 for all @xmath46 . under these conditions ,",
    "it was shown in that the ode is homogeneous .",
    "the first term @xmath233 in is the negative of a control cost .",
    "its definition begins with the specification of a transition matrix @xmath13 that describes nominal ( control - free ) behavior .",
    "it is assumed to be _ irreducible and aperiodic_. equivalently , there is @xmath234 such that for each @xmath235 , @xmath236 it follows that @xmath13 admits a unique invariant pmf , denoted @xmath237 .    in the mdp model",
    "we deviate from this nominal behavior , but restrict to transition matrices satisfying @xmath238 for each @xmath38 .",
    "in fact , the optimal solutions will be equivalent : @xmath239 under this condition it follows that @xmath240 is also irreducible and aperiodic .",
    "the following representation will be used in different contexts throughout the paper .",
    "any function @xmath241 is regarded as an unnormalized log - likelihood ratio : denote for @xmath26 , @xmath242 in which @xmath243 is the value of @xmath98 at @xmath244 , and @xmath245 is the normalization constant , @xmath246    for any transition matrix @xmath240 , an invariant pmf is interpreted as a row vector , so that invariance can be expressed @xmath247 .",
    "any function @xmath248 is interpreted as a @xmath1-dimensional column vector , and we use the standard notation @xmath249 , @xmath32 .",
    "the _ fundamental matrix _ is the inverse , @xmath250^{-1 } \\label{e : fundkerngen}\\ ] ] where @xmath251 is a matrix in which each row is identical , and equal to @xmath252 . if @xmath240 is irreducible and aperiodic , then it can be expressed as a power series : @xmath253^n \\label{e : z}\\ ] ] with @xmath254 ^ 0 \\eqdef i$ ] ( the @xmath167 identity matrix ) , and @xmath254^n   = p^n - 1\\otimes \\pi$ ] for @xmath255 .",
    "the _ donsker - varadhan rate function _ is denoted , @xmath256 letting @xmath257 and @xmath258 , we have @xmath259 where @xmath260 denotes k - l divergence .",
    "it is called a `` rate function '' because it defines the relative entropy rate between two stationary markov chains , and appears in the theory of large deviations for markov chains @xcite .    for the transition matrix @xmath261 defined in",
    ", the rate function can be expressed in terms of its invariant pmf @xmath262 , the bivariate pmf @xmath263 , and the log moment generating function : @xmath264 \\\\ & = \\sum_{x , x'}\\pi_h(x , x ' )       h ( x ' \\mid x )   -      \\sum_x \\pi_h(x ) \\efn{h}(x )   \\end{aligned } \\label{e : dvrate - h}\\ ] ]    as in @xcite , the rate function is used here to model the cost of deviation from the nominal transition matrix @xmath13 : the control objective in this prior work can be cast as the solution to the convex optimization problem , @xmath265 where @xmath231 , and the maximum is over all transition matrices .",
    "[ [ nature - nurture ] ] nature &  nurture + + + + + + + + + + + + + + + +    in many applications it is necessary to include a model of randomness from nature along with the randomness introduced by the local control algorithm ( nurture ) .",
    "this imposes additional constraints in the optimization problem .",
    "consider a markov model in which the full state space is the cartesian product of two finite state spaces : @xmath266 , where @xmath267 are components of the state that can be directly manipulated through control .",
    "the `` nature '' components @xmath268 are not subject to direct control .",
    "for example , these variables may be used to model service and arrival statistics in a queueing model , or uncertainty in terrain in an application to robotics .",
    "elements of @xmath9 are denoted @xmath269 .",
    "any state transition matrix under consideration is assumed to have the following conditional - independence structure , @xmath270 where @xmath271 for each @xmath38 .",
    "the matrix @xmath272 is out of our control  this models dynamics such as the weather .    to underscore the generality of this model ,",
    "consider a standard mdp model with finite state space @xmath273 , finite action space @xmath274 , and controlled transition law @xmath275 .",
    "letting @xmath276 denote the state process and @xmath277 the input process , we have for any two states @xmath278 , and any action @xmath279 , @xmath280 a randomized policy is defined by a function @xmath281 $ ] for which @xmath282 is a probability law on @xmath274 for each @xmath283 .",
    "[ t : mdpsubsetnaturenurture ] consider the mdp model with transition law @xmath275 and randomized policy @xmath104 .",
    "for each @xmath54 denote @xmath284 and @xmath285 , where @xmath286 is the initial condition .",
    "then @xmath287 is a markov chain on @xmath288 , with transition matrix of the form , where for @xmath289 , @xmath290    from the definitions and bayes rule , @xmath291 recall that @xmath292 .",
    "the pair @xmath293 are conditionally independent given @xmath294 , so that the right hand side becomes , @xmath295 this establishes the desired result : @xmath296      we consider now the optimization problem , subject to the structural constraint , with @xmath272 fixed .",
    "the maximizer defines a transition matrix that is denoted , @xmath297 it is shown in that this can be cast as a convex program , even when subject to the structural constraint .",
    "the optimization variable in the convex program will be taken to be pmfs @xmath298 on the product space @xmath299 .",
    "define for each @xmath300 and @xmath301 the pmf on @xmath299 , @xmath302 the pmf @xmath300 can be recovered from @xmath303 via @xmath304 , @xmath32 , and the matrix @xmath301 can also be recovered via @xmath305 , provided @xmath306 .",
    "the following result shows that we can restrict to @xmath301 for which @xmath307 .",
    "[ t : bk ] for any transition matrix @xmath240 , @xmath308    if @xmath309 then @xmath310 .",
    "this implies that @xmath311 for each @xmath32 satisfying @xmath306 , and also that @xmath312 .    hence , if @xmath309 , then for each @xmath38 and @xmath313 , @xmath314 which establishes one implication : @xmath315 whenever @xmath316 .",
    "conversely , if @xmath315 then @xmath316 by the definition of @xmath317 , and the convention @xmath318 when @xmath319 .",
    "is one step towards the proof of the following convex program representation of :    [ t : idpexists ] the objective function in is concave in the variable @xmath320 , subject to the convex constraints ,    @xmath321    it admits an optimizer @xmath322 , in which @xmath323 for each @xmath38 .",
    "consequently , there exists an optimizer @xmath324 for , with invariant pmf @xmath325 .",
    "we first consider the constraints : ( a ) is by definition , and ( c ) is the invariance constraint for @xmath326 .",
    "constraint ( b ) is without loss of generality , given .",
    "next we turn to the objective function : the function to be maximized in can be expressed @xmath327 in which @xmath328 the second equation follows from the assumption that @xmath240 depends on @xmath301 through .",
    "multiplying each side by @xmath329 and summing over @xmath38 we obtain a representation in terms of the variable @xmath303 , with @xmath330 @xmath331 the k - l divergence @xmath260 is known to be jointly convex in its two arguments @xcite . since @xmath332 is a linear function of @xmath333 , this establishes concavity .",
    "the existence of an optimizer follows from the fact that the function to be optimized is continuous as a function of @xmath303 , and the domain of optimization ( [ e : pirconstraintsa][e : pirconstraintsc ] ) is compact .",
    "it is shown in that the optimal value @xmath47 together with a _ relative value function _ @xmath59 solve the average reward optimization equation ( aroe ) : @xmath334 recall that the relative value function is not unique , since a new solution is obtained by adding a non - zero constant ; the normalization @xmath61 is imposed , where @xmath60 is a fixed state .",
    "the proof of is given in the appendix .",
    "[ t : ipd ] there exist optimizers @xmath335 , and solutions to the aroe @xmath336 with the following properties :    the optimizer @xmath21 can be obtained from the relative value function @xmath59 as follows : @xmath337 where for @xmath338 , @xmath339 , @xmath340 and @xmath341 is the normalizing constant with @xmath342 .",
    "@xmath343 are continuously differentiable in the parameter @xmath0 .",
    "the fact that the domain of optimization ( [ e : pirconstraintsa][e : pirconstraintsc ] ) is compact was helpful in establishing the existence of an optimizer .",
    "however , the results in require that the action space be an _",
    "open _ set .",
    "to apply the results of we can apply  ( i ) , which justifies the restriction .",
    "the restricted action space is an open subset of @xmath23 for some @xmath344 .",
    "representations for the derivatives in  ( ii ) , in particular the derivative of @xmath345 with respect to @xmath0 , lead to a representation for the ode used to compute the optimal transition matrices @xmath346 .      it is shown here that the assumptions of hold , and hence the relative value functions @xmath347 can be obtained as the solution to an ode .    at the start of is is assumed that the action space is an open subset of euclidean space , and this assumption is required in .",
    "this can be imposed without loss of generality since any optimizer satisfies .",
    "it is convenient to generalize the problem slightly here .",
    "let @xmath348 denote a family of functions on @xmath9 , continuously differentiable in the parameter @xmath0 .",
    "they are not necessarily relative value functions , but we maintain the structure established in for the family of transition matrices .",
    "denote , @xmath349 and then define as in , @xmath350 the function @xmath351 is a normalizing constant , exactly as in : @xmath352    we begin with a general method to construct a family of functions @xmath348 based on an ode . using notation similar to ,",
    "the ode is expressed , @xmath353 with boundary condition @xmath354 .",
    "a particular instance of the method will result in @xmath355 for each @xmath0 .    assumed given is a mapping @xmath356 from transition matrices to functions on @xmath9 . following this",
    ", the vector field @xmath82 is obtained through the following two steps : for a function @xmath81 ,    define a new transition matrix via , @xmath357 in which @xmath358 , and @xmath359 is a normalizing constant .",
    "compute @xmath360 , and define @xmath361 .",
    "it is assumed that the functional @xmath356 is constructed so that @xmath362 for any @xmath240 .    in @xcite",
    "the functional @xmath356 is designed to ensure desirable properties in the `` demand dispatch '' application that is the focus of that paper .",
    "it is shown here that a particular choice of the function @xmath356 will provide the solution to the collection of mdps .",
    "its domain will include only transition matrices that are irreducible and aperiodic .",
    "for any transition matrix @xmath240 in this domain , the fundamental matrix @xmath363 is obtained using , and then @xmath364 is defined as @xmath365 \\util ( x'),\\qquad",
    "x\\in\\state \\label{e : fishp}\\ ] ] the function @xmath366 is a solution to poisson s equation , @xmath367 where @xmath368 ( also written @xmath369 ) is the steady - state mean of @xmath370 : @xmath371    the proof of is given in the appendix .",
    "[ t : idpode ] consider the ode with boundary condition @xmath354 , and with @xmath364 defined using for each transition matrix @xmath240 that is irreducible and aperiodic .",
    "the solution to this ode exists , and the resulting functions @xmath372 coincide with the relative value functions @xmath373 .",
    "consequently , @xmath374 for each @xmath0 .",
    "we sketch here the main ideas of the proof of .",
    "the implicit function theorem is used to establish differentiability of the relative value functions and average reward as a function of @xmath0 .",
    "the ode representation can then be obtained from .",
    "the next step is to establish the particular form for the ode .",
    "the statement of the theorem is equivalent to the representation @xmath375 for each @xmath0 , where @xmath59 is the relative value function , @xmath21 is defined in , and @xmath376 the first step in the proof of is a fixed point equation that follows from the aroe .",
    "the following identity is given in : @xmath377 a representation for the derivative of the log moment generating function is obtained in , @xmath378 differentiating each side of then gives , @xmath379 this is poisson s equation , and it follows that @xmath380 .",
    "moreover , since @xmath61 for every @xmath0 , we must have @xmath381 as well .",
    "since the solution to poisson s equation with this normalization is unique , we conclude that holds , and hence @xmath382 as claimed .",
    "it is surprising that an mdp can be solved using an ode under general conditions , and fortunate that this ode admits simple structure in the k - l cost framework that is a focus of the paper .",
    "it is likely that the ode has special structure for other classes of mdps , such as the `` rational inattention '' framework of @xcite .",
    "the computational efficiency of this approach will depend in part on numerical properties of the ode , such as its sensitivity for high dimensional models .",
    "finally , it is hoped that this approach will lead to new approaches to approximate dynamic programming or reinforcement learning .    * appendices *    # 1*#1 *",
    "based on the linear programming ( lp ) approach to dynamic programming @xcite , it can be shown that the aroe is the dual of the primal problem .",
    "the relative value function @xmath383 is the dual variable associated with the invariance constraint @xmath384 @xcite . to prove we require properties of the primal and dual .",
    "the primal is equivalently expressed , @xmath385 the aroe becomes , @xmath386 it will be shown that can be interpreted as a dual of the convex program .",
    "we first characterize its optimizer , denoted @xmath387 .",
    "this representation is based on the convex duality between k - l divergence and the log - moment generating function recalled in .",
    "fix a pmf @xmath388 on @xmath9 . for any function @xmath389 , the log - moment generating function",
    "is denoted @xmath390 the mean of a function @xmath391 under an arbitrary pmf @xmath14 is denoted @xmath392 .",
    "the following lemma can be regarded as a consequence of kullback s inequality ( see eqn ( 4.5 ) of @xcite ) ; see also theorem 3.1.2 of @xcite .",
    "[ t : convexdual ] the log - moment generating function is the convex dual of relative entropy , @xmath393 where the maximum is over all pmfs , and is achieved uniquely with , @xmath394    the following representation for @xmath387 easily follows .",
    "the fixed point equation appearing in was previously stated in .",
    "[ t : ipdfull ] the control matrix maximizing the left hand side of is given by , @xmath395 consequently , the aroe is equivalent to the fixed point equation @xmath396 .",
    "using , the aroe becomes @xmath397 @xmath398 recalling the notation @xmath399 in , we obtain @xmath400 @xmath401    for fixed @xmath38 denote @xmath402 , @xmath403 and @xmath404 , @xmath339 .",
    "the maximization variable in is @xmath14 , and the maximization problem we must solve is , @xmath405 the formula for the optimizer @xmath406 in gives the expression for @xmath387 in .",
    "the fact that the optimal value is @xmath407 implies the fixed point equation .",
    "it is established next that the aroe does indeed hold , by constructing a dual of obtained though a relaxation of the invariance constraint .",
    "a dual functional @xmath408 is defined for any function @xmath81 via @xmath409\\bigr\\}\\ ] ] where @xmath410 are now independent variables , and @xmath240 is obtained from @xmath301 via .",
    "we have @xmath411 for any @xmath98 , and there is no duality gap :    [ t : aroeduality ] there exists @xmath59 such that @xmath412 .",
    "the pair @xmath413 is a solution to the aroe .    to show that there is no duality gap we apply , which establishes that the primal is a convex program , and hence a sufficient condition",
    "is slater s condition ( * ? ? ?",
    "* section  5.3.2 ) .",
    "this condition holds because @xmath414 is in the relative interior of the constraint - set for the primal .",
    "since there is no duality gap , it then follows that there exists a maximizer for @xmath408 , denoted @xmath59 , which satisfies @xmath415 . to obtain the aroe , consider this representation : @xmath416 @xmath417 \\bigr\\}\\ ] ]    the maximum over pmfs @xmath300 is the same as the maximum over @xmath38 : @xmath418 to complete the proof we must remove the maximum over @xmath38 .",
    "for this , recall that @xmath237 and hence @xmath325 have full support ( they are strictly positive on all of @xmath9 ) .",
    "implies that the maximum over @xmath301 is uniquely given by @xmath387 in , so that @xmath419 averaging over the optimizing pmf @xmath325 gives , by invariance , @xmath420 because @xmath421 for every @xmath38 , it follows that the aroe holds : @xmath422",
    "the proof of part  ( ii ) of is obtained through a sequence of lemmas .",
    "we first obtain an alternative representation for the fixed point equation . evaluating this equation at @xmath178 , and recalling that @xmath61 gives , @xmath423 let @xmath424 denote the function on @xmath9 that is identically equal to @xmath425 , and for any function @xmath98 and @xmath15 define a new function on @xmath9 via @xmath426 \\one \\label{e : ffix}\\ ] ] the fixed point equation becomes becomes , @xmath427",
    "the proof of will require the implicit function theorem . the following version of this result is taken from ( * ? ? ? * theorem 11.5 ) .",
    "[ t : looste68 ] suppose that @xmath428 and @xmath429 are open , and that @xmath430 is continuously differentiable .",
    "suppose moreover that there exists @xmath431 for which the following hold : @xmath432 , and the matrix @xmath433 has rank @xmath434 .",
    "then , there is a ball @xmath435 about @xmath436 and a continuously differentiable function @xmath437 such the equation @xmath438 is uniquely determined by @xmath439 , for each @xmath440 .    to apply , we take @xmath441 and @xmath442 , so that @xmath443 and @xmath444 .",
    "we apply the result to any @xmath445 to establish that the mapping @xmath446 is @xmath447 .    for this",
    "we require a representation for the derivative of @xmath448 with respect to the variable @xmath98 .",
    "the derivative is represented as a @xmath167 matrix , defined so that for any function @xmath449 , @xmath450 the following follows from and elementary calculus :    [ t : fderh ] the function @xmath448 is continuously differentiable in @xmath451 .",
    "the partial derivative with respect to the second variable is , @xmath452 in which @xmath261 is the transition matrix defined in , and @xmath453 represents a @xmath167 matrix with each row equal to @xmath454 , and with @xmath455 .",
    "invertibility of the derivative with respect to @xmath98 is obtained in the following :    [ t : zh ] the following inverse exists as a power series , @xmath456^{-1 } = \\sum_{n=0}^\\infty   ( p_h   - \\one\\otimes \\nu   ) ^n\\ ] ] in which @xmath454 is defined in .",
    "moreover , @xmath457 is the unique invariant pmf for @xmath261 .",
    "it is easily established by induction that for each @xmath255 , @xmath458 where @xmath459 .",
    "recall that @xmath261 is irreducible and aperiodic since this is true for @xmath13 .",
    "consequently , as @xmath460 we have @xmath461 and @xmath462 , where @xmath262 is invariant for @xmath261 .",
    "the convergence is geometrically fast , which establishes the desired inverse formula .    from the foregoing we have @xmath463 for @xmath255 , which implies that @xmath464 . from this",
    "we obtain , @xmath465 multiplying each side by @xmath454 gives @xmath466 , so that @xmath467 is invariant .",
    "we also have @xmath468 , where we have used again the identity @xmath464 .",
    "hence @xmath469 as claimed .",
    "since @xmath59 is continuously differentiable in @xmath0 , it follows from that the same is true for @xmath47 .",
    "the following result provides a representation .",
    "the formula for @xmath470 could be anticipated from .",
    "[ t : lambdafish ] for each @xmath0 we have , @xmath471 where @xmath472 , and @xmath473    the first result holds by the definition of @xmath474 and @xmath475 . to obtain the second identity",
    ", we differentiate each side of to obtain poisson s equation . on taking the mean of each side of with respect to @xmath325 , and using invariance @xmath476",
    ", we obtain , @xmath477    part ( i ) is contained in .    part ( ii ) : combining and we see that the conclusions of hold for each pair @xmath445 .",
    "this shows that @xmath478 is a continuously differentiable function of @xmath0 , and hence @xmath21 is also continuously differentiable . to see that @xmath325 is continuously differentiable , apply the representation in",
    "we now prove .",
    "the boundary condition is immediate from the assumptions : @xmath479 is a constant , since @xmath480 . under the assumption that @xmath61 for each @xmath0",
    ", it follows that @xmath481 for each @xmath38 .",
    "it remains to show that the relative value function solves the ode , @xmath482 with @xmath356 defined in .    on differentiating each side of we",
    "obtain , @xmath483 based on the definition , @xmath484 it follows that @xmath485 @xmath486 the equation simplifies as follows : @xmath487 let @xmath488 and @xmath489 . from the foregoing we obtain , @xmath490 this is poisson s equation , with @xmath491 .",
    "this shows that @xmath59 is the solution to the ode defined in , establishing ( i ) and ( ii ) of the theorem .      , _ spectral decomposition of demand - side flexibility for reliable ancillary services in a smart grid _ , in proc .",
    "48th annual hawaii international conference on system sciences ( hicss ) , kauai , hawaii , 2015 , pp .",
    "27002709 , http://dx.doi.org/10.1109/hicss.2015.325[doi : ] .        ,",
    "_ convex analytic methods in markov decision processes _ , in handbook of markov decision processes , vol .",
    "40 of internat .",
    "management sci . ,",
    "kluwer acad .",
    "boston , ma , 2002 , pp .",
    "347375 .                                  , _ rationally inattentive control of markov processes _ , siam j. control optim . ,",
    "54 ( 2016 ) , pp .",
    "9871016 , http://dx.doi.org/10.1137/15m1008476[doi : ] , http://dx.doi.org/10.1137/15m1008476 , http://arxiv.org/abs/http://dx.doi.org/10.1137/15m1008476[arxiv:http://dx.doi.org/10.1137/15m1008476 ] ."
  ],
  "abstract_text": [
    "<S> a new approach to computation of optimal policies for mdp ( markov decision process ) models is introduced . </S>",
    "<S> the main idea is to solve not one , but an entire family of mdps , parameterized by a scalar @xmath0 that appears in the one - step reward function . for an mdp with @xmath1 states , </S>",
    "<S> the family of value functions @xmath2 is the solution to an ode , @xmath3 where the vector field @xmath4 has a simple form , based on a matrix inverse .    </S>",
    "<S> this general methodology is applied to a family of average - cost optimal control models in which the one - step reward function is defined by kullback - leibler divergence . </S>",
    "<S> the motivation for this reward function in prior work is computation : the solution to the mdp can be expressed in terms of the perron - frobenius eigenvector for an associated positive matrix . </S>",
    "<S> the drawback with this approach is that no hard constraints on the control are permitted . </S>",
    "<S> it is shown here that it is possible to extend this framework to model randomness from nature that can not be modified by the controller . </S>",
    "<S> perron - frobenius theory is no longer applicable  the resulting dynamic programming equations appear as complex as a completely unstructured mdp model . despite this apparent complexity </S>",
    "<S> , it is shown that this class of mdps admits a solution via this ode technique . </S>",
    "<S> this approach is new and practical even for the simpler problem in which randomness from nature is absent .    </S>",
    "<S> [ [ keywords ] ] keywords : + + + + + + + + +    markov decision processes , computational methods , distributed control .    </S>",
    "<S> [ [ ams - subject - classifications ] ] ams subject classifications : + + + + + + + + + + + + + + + + + + + + + + + + + + + +    90c40 , 93e20 , 60j22 , 93e35 , 60j20 , 90c46 </S>"
  ]
}
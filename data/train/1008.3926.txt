{
  "article_text": [
    "a stochastic blockmodel is a generative model for blocks , groups , or communities in networks .",
    "stochastic blockmodels fall in the general class of random graph models and have a long tradition of study in the social sciences and computer science  @xcite . in the simplest stochastic blockmodel ( many more complicated variants are possible ) , each of @xmath0 vertices is assigned to one of @xmath1 blocks , groups , or communities , and undirected edges are placed independently between vertex pairs with probabilities that are a function only of the group memberships of the vertices . if we denote by @xmath2 the group to which vertex  @xmath3 belongs , then we can define a @xmath4 matrix  @xmath5 of probabilities such that the matrix element @xmath6 is the probability of an edge between vertices @xmath3 and  @xmath7 .    while simple to describe , this model can produce a wide variety of different network structures .",
    "for example , a diagonal probability matrix would produce networks with disconnected components , while the addition of small off - diagonal elements would generate conventional `` community structure''a set of communities with dense internal connections and sparse external ones .",
    "other choices of probability matrix can generate core - periphery , hierarchical , or multipartite structures , among others .",
    "this versatility , combined with analytic tractability , has made the blockmodel a popular tool in a number of contexts .",
    "for instance , the planted partition model  @xcite , which is equivalent to the model above with a specific parametrization of the matrix  @xmath5 , is widely used as a theoretical testbed for graph partitioning and community detection algorithms  @xcite .",
    "another important application , and the one that is the primary focus of this paper , is the fitting of blockmodels to empirical network data as a way of discovering block structure , an approach referred to in the social networks literature as _ a posteriori _ blockmodeling  @xcite .",
    "a number of ways of performing the fitting have been suggested , including some that make use of techniques from physics  @xcite . _ a posteriori _ blockmodeling can be thought of as a method for community structure detection in networks  @xcite , though blockmodeling is considerably more general than traditional community detection methods , since it can detect many forms of structure in addition to simple communities of dense links .",
    "moreover , it has the desirable property ( not shared by most other approaches ) of asymptotic consistency under certain conditions  @xcite , meaning that if applied to networks that were themselves generated from the same blockmodel , the method can correctly recover the block structure .",
    "unfortunately , however , the simple blockmodel described above does not work well in many applications to real - world networks .",
    "the model is not flexible enough to generate networks with structure even moderately similar to that found in most empirical network data , meaning that _ a posteriori _ fits to such data often give poor results  @xcite . just as the fitting of a straight line to intrinsically curved data is likely to miss important features of the data ,",
    "so a fit of the simple stochastic blockmodel to the structure of a complex network is likely to miss much and , as we will show , can in some cases give radically incorrect answers .",
    "attempts to overcome these problems by extending the blockmodel have focused particularly on the use of ( more complicated ) @xmath8 or exponential random graph models , but while these are conceptually appealing , they quickly lose the analytic tractability of the original blockmodel as their complexity increases .",
    "other recent attempts to extend blockmodels take the flavor of mixture models that allow vertices to participate in overlapping groups  @xcite or to have mixed membership  @xcite .    in this paper",
    "we adopt a different approach , considering a simple and apparently minor extension of the classic stochastic blockmodel to include heterogeneity in the degrees of vertices . despite its innocuous appearance ,",
    "this extension turns out to have substantial effects , as we will see .",
    "a number of previous authors have considered similar extensions of blockmodels .",
    "as early as 1987 , wang and wong  @xcite proposed a stochastic blockmodel for directed simple graphs incorporating arbitrary expected in- and out - degrees , along with a selection of other features . unfortunately",
    ", this model is not solvable for its parameter values in closed form which limits its usefulness for the types of calculations we consider .",
    "several more recent works have also explored blockmodels with various forms of degree heterogeneity  @xcite , motivated largely by the recent focus on degree distributions in the networks literature .",
    "we note particularly the currently unpublished work of patterson and bader  @xcite , who apply a variational bayes approach to a model close , though not identical , to the one considered here .    in this paper",
    "we build upon the ideas of these authors but take a somewhat different tack , focusing on the question of why degree heterogeneity in blockmodels is a good idea . to study this question ,",
    "we develop a degree - corrected blockmodel with closed - form parameter solutions , which allows us more directly to compare traditional and degree - corrected models . as we show , the incorporation of degree heterogeneity in the stochastic blockmodel results in a model that in practice performs much better , giving significantly improved fits to network data , while being only slightly more complex than the simple model described above .",
    "although we here examine only the simplest version of this idea , the approaches we explore could in principle be incorporated into other blockmodels , such as the overlapping or mixed membership models .    in outline , the paper is as follows .",
    "we first review the ideas behind the ordinary stochastic blockmodel to understand why degree heterogeneity causes problems .",
    "then we introduce a degree - corrected version of the model and demonstrate its use in _ a posteriori _ blockmodeling to infer group memberships in empirical network data , showing that the degree - corrected model outperforms the original model both on actual networks and on new synthetic benchmarks .",
    "the benchmarks introduced , which generalize previous benchmarks for community detection , may also be of independent interest .",
    "in this section we review briefly the use of the original , non - degree - corrected blockmodel , focusing on undirected networks since they are the most commonly studied .    for consistency with the degree - corrected case we will allow our networks to contain both multi - edges and self - edges , even though many real - world networks have no such edges .",
    "like most random graph models for sparse networks the incorporation of multi - edges and self - edges makes computations easier without affecting the fundamental outcome significantly  typically their inclusion gives rise to corrections to the results that are of order  @xmath9 and hence vanishing as the size @xmath0 of the network becomes large . for networks with multi - edges , the previously - defined probability  @xmath10 of an edge between vertices in groups  @xmath11 and  @xmath12",
    "is replaced by the expected number of such edges , and the actual number of edges between any pair of vertices will be drawn from a poisson distribution with this mean . in the limit of a large sparse graph , where the probability of an edge and the expected number of edges become equal",
    ", there is essentially no difference between the model described here and the standard blockmodel .    with this in mind",
    ", the model we study is now defined as follows .",
    "let @xmath13 be an undirected multigraph on @xmath0 vertices , possibly including self - edges , and let @xmath14 be an element of the adjacency matrix of the multigraph .",
    "recall that the adjacency matrix for a multigraph is conventionally defined such that @xmath14 is equal to the number of edges between vertices @xmath3 and  @xmath7 when @xmath15 , but the diagonal element  @xmath16 is equal to _ twice _ the number of self - edges from @xmath3 to itself ( and hence is always an even number ) .",
    "we let the number of edges between each pair of vertices ( or between a vertex and itself in the case of self - edges ) be independently poisson distributed and define @xmath17 to be the expected value of the adjacency matrix element  @xmath14 for vertices  @xmath3 and  @xmath7 lying in groups  @xmath11 and  @xmath12 respectively .",
    "note that this implies that the expected number of self - edges at a vertex in group @xmath11 is @xmath18 because of the factor of two in the definition of the diagonal elements of the adjacency matrix .",
    "now we can write the probability  @xmath19 of graph  @xmath13 given the parameters and group assignments as @xmath20    given that @xmath21 and @xmath22 , eq .",
    "can after a small amount of manipulation be rewritten in the more convenient form @xmath23 where @xmath24 is the number of vertices in group  @xmath11 and @xmath25 which is the total number of edges between groups @xmath11 and group  @xmath12 , or twice that number if @xmath26 .    our goal is to maximize this probability with respect to the unknown model parameters  @xmath17 and the group assignments of the vertices . in most cases , it will in fact be simpler to maximize the logarithm of the probability ( whose maximum is in the same place ) . neglecting constants and terms independent of the parameters and group assignments",
    "( i.e. ,  independent of @xmath17 , @xmath24 , and  @xmath27 ) , the logarithm is given by @xmath28    we will maximize this expression in two stages , first with respect to the model parameters  @xmath17 , then with respect to the group assignments  @xmath2 .",
    "the maximum - likelihood values @xmath29 of the model parameters ( where hatted variables indicate maximum - likelihood estimates ) are found by simple differentiation to be @xmath30 and the value of eq .   at this maximum is @xmath31 , where @xmath32 is the total number of edges in the network . dropping the final constant",
    ", we define the unnormalized log - likelihood for the group assignment  @xmath33 : @xmath34 the maximum of this quantity with respect to the group assignments now tells us the most likely set of assignments  @xcite . in effect , eq .",
    "gives us an objective or quality function which is large for `` good '' group assignments and small for `` poor '' ones .",
    "many such objective functions have been defined elsewhere in the literature on community detection and graph partitioning , but eq",
    ".   differs from most other choices in being derived from first principles , rather than heuristically motivated or simply proposed _",
    "ad hoc_.    equation   has an interesting information - theoretic interpretation . by adding and dividing by constant factors of the total number of vertices and",
    "edges the equation can be written in the alternative form @xmath35 where again we have neglected irrelevant constants .",
    "now imagine , for a given set of group assignments , that we choose an edge uniformly at random from our network , and let @xmath36 be the group assignment at one ( randomly selected ) end of the edge and @xmath37 be the group assignment at the other end of the edge .",
    "the probability distribution of the variables  @xmath36 and  @xmath37 is then @xmath38 , which appears twice in the above expression .",
    "the remaining terms in the denominator of the logarithm in   are equal to the expected value of the same probability in a network with the same group assignments but different edges , the edges now being placed completely at random without regard for the groups .",
    "call this second distribution  @xmath39 . equation   can then be written @xmath40 which is the well - known kullback ",
    "leibler divergence between the probability distributions @xmath41 and  @xmath42  @xcite .",
    "the kullback ",
    "leibler divergence is not precisely a distance measure since it s not symmetric in @xmath41 and  @xmath42 .",
    "however , if the logarithms are taken base  2 then it measures the expected number of extra bits required to encode @xmath36 and @xmath37 if @xmath42 is mistakenly used as the distribution for @xmath36 and @xmath37 instead of the assumed true distribution  @xmath41 .",
    "so intuitively it can be considered as measuring how far @xmath41 is from  @xmath42 .",
    "the most likely group assignments under the ordinary stochastic blockmodel are then those assignments that require the most information to describe starting from a model that does not have group structure .",
    "this type of approach , in which one constructs an objective function that measures the difference between an observed quantity and the expected value of the same quantity under an appropriate null model , is common in work on community detection in networks .",
    "one widely used objective function is the so - called modularity : @xmath43\\delta(g_i , g_j),\\ ] ] where @xmath14 is an element of the adjacency matrix and @xmath44 is the expected value of the same element under some null model .",
    "the null model assumed in our blockmodel calculation is one in which @xmath44 is constant . making the same choice for the modularity would lead to @xmath45.\\ ] ] the modularity",
    ", however , is not normally used this way and for good reason .",
    "this null model , corresponding to a multigraph version of the erds ",
    "rnyi random graph , produces highly unrealistic networks , even for networks with no community structure .",
    "specifically , it produces networks with poisson degree distributions , in stark contrast to most real networks , which tend to have broad distributions of vertex degree . to avoid this problem",
    ", modularity is usually defined using a different null model that fixes the expected degree sequence to be the same as that of the observed network . within this model @xmath46 where @xmath47 is the degree of vertex  @xmath3 .",
    "then the probability distribution over the group assignments at the end of a randomly chosen edge becomes @xmath48 where @xmath49 is the total number of ends of edges , commonly called stubs , that emerge from vertices in group  @xmath11 , or equivalently the sum of the degrees of the vertices in group  @xmath11 .",
    "( note that eq .",
    "correctly counts two stubs for edges that both start and end in group  @xmath11 . )",
    "then the desired group assignments are given by the maximum of @xmath50.\\end{aligned}\\ ] ] this choice of null model is found to give significantly better results than the original uniform model because it allows for the fact that vertices with high degree are , all other things being equal , more likely to be connected than those with low degree , simply because they have more edges . from an information - theoretic viewpoint , an edge between two high - degree vertices is less surprising than an edge between two low - degree vertices and we get better results if we incorporate this observation in our model .",
    "returning to the stochastic blockmodel , using @xmath42 instead of @xmath51 in the objective function causes problems similar to those that affect the modularity",
    ". fits to the model may incorrectly suggest that structure in the network due merely to the degree sequence is a result instead of group memberships .",
    "we will shortly see explicit real - world cases in which such incorrect conclusions arise .",
    "the solution to this problem , as with the modularity , is to define a stochastic blockmodel that directly incorporates arbitrary heterogeneous degree distributions .",
    "in the degree - corrected blockmodel , the probability distribution over undirected multigraphs with self - edges ( again denoted  @xmath13 ) depends not only on the parameters introduced previously but also on a new set of parameters  @xmath52 controlling the expected degrees of vertices  @xmath3 .    as before , we assume there are @xmath1 groups , @xmath17  is a @xmath4 symmetric matrix of parameters controlling edges between groups @xmath11 and  @xmath12 , and @xmath2 is the group assignment of vertex  @xmath3 . as in the uncorrected blockmodel ,",
    "let the numbers of edges each be drawn from a poisson distribution , but now , following  @xcite and  @xcite , let the expected value of the adjacency matrix element  @xmath14 be @xmath53 . then graph  @xmath13 has probability @xmath54 the @xmath55 parameters are arbitrary to within a multiplicative constant which is absorbed into the @xmath56 parameters .",
    "their normalization can be fixed by imposing the constraint @xmath57 for all groups  @xmath11 , which makes @xmath52 equal to the probability that an edge connected to the community to which @xmath3 belongs lands on  @xmath3 itself . with this constraint",
    ", the probability  @xmath58 can be simplified to the more convenient form @xmath59 with @xmath47 being the degree of vertex  @xmath3 as previously and @xmath27 defined as in eq .  .",
    "as before , rather than maximizing this probability , it is more convenient to maximize its logarithm , which , ignoring constants , is @xmath60 allowing for the constraint  , the maximum - likelihood values of the parameters @xmath52 and @xmath17 are then given by @xmath61 where @xmath62 is the sum of the degrees in group  @xmath11 as before ( see eq .  ) .",
    "this maximum - likelihood parameter estimate has the appealing property of preserving the expected numbers of edges between groups and the expected degree sequence of the network . to see this ,",
    "let @xmath63 be the average of @xmath64 in the ensemble of graphs with parameters  .",
    "then the expected number of edges between groups @xmath11 and  @xmath12 is @xmath65 where we have made use of eq .  .",
    "similarly , the average degree of vertex  @xmath3 in the ensemble is @xmath66 traditional blockmodels , by contrast , preserve only the expected value of the matrix  @xmath27 and not the expected degree  every vertex in group  @xmath11 in the traditional blockmodel has the same expected degree @xmath67 .    substituting eq .   into eq .",
    ", the maximum of @xmath68 for the degree - corrected blockmodel is @xmath69 where as before @xmath70 is the total number of edges in the network .",
    "the first term in this expression can be rewritten as @xmath71 where we have again made use of eq .  .",
    "substituting back into eq .   and",
    "dropping overall constants then gives us an unnormalized log - likelihood function of @xmath72 notice that the only difference between this degree - corrected log - likelihood and the uncorrected log - likelihood of eq .",
    "is the replacement of the number  @xmath24 of vertices in each group by the number  @xmath62 of stubs .",
    "minor though this replacement may seem , however , it has a big effect , as we will shortly see .",
    "as before , we can interpret the optimization of the objective function   through the lens of information theory .",
    "adding and multiplying by constant factors allows us to write the log - likelihood in the form @xmath73 which is the kullback ",
    "leibler divergence between @xmath41 and @xmath51 .",
    "alternatively , noting that @xmath51 is the product of the marginal distributions  @xmath74 and @xmath75 , this particular form of divergence can also be thought of as the mutual information of the random variables representing the group labels at either end of a randomly chosen edge .",
    "loosely speaking , the best fit to the degree - corrected stochastic blockmodel gives the group assignment that is most surprising compared to the null model with given expected degree sequence , whereas the ordinary stochastic blockmodel gives the group assignment that is most surprising compared to the erds ",
    "rnyi random graph .",
    "information - theoretic quantities have been proposed previously as possible objective functions for community detection or clustering .",
    "dhillon  _ et  al . _",
    "@xcite , for instance , used mutual information as an objective function for clustering bipartite graphs , as part of an approach they call `` information - theoretic co - clustering . ''",
    "equation   is also somewhat reminiscent of an objective function of reichardt  _ et  al . _",
    "@xcite which , if translated into our terminology and adapted to undirected networks , is equivalent to the total variation distance between @xmath41 and  @xmath51 , variation distance being an alternative measure of the distance between two probability distributions .",
    "while the variation distance and the kullback  leibler divergence are related , both falling in the class of so - called @xmath76-divergences , the optimization of variation distance does not , to our knowledge , correspond to maximizing the likelihood of any generative model , and there are significant benefits to the connection with generative models",
    ". in particular , one can easily create networks from the ensemble of our model and in addition the connection to generative processes means that _ a posteriori _ blockmodeling fits into standard frameworks for statistical inference , which are well studied and understood in other contexts .",
    "equation   could also be used as a measure of assortative mixing among discrete vertex characteristics in networks  @xcite . in a network such as a social network , where connections between individuals can depend on characteristics such as nationality , race , or gender , our objective function",
    "could be used , for instance , to quantify which of several such characteristics is more predictive of network structure .    a useful property of the objective function in eq .",
    "when used for _ a posteriori _ blockmodeling is that it is possible to quickly compute the change in the log - likelihood when a single vertex switches groups .",
    "when a vertex changes groups from @xmath11 to @xmath12 only @xmath62 , @xmath77 , @xmath78 , and @xmath79 ( for any  @xmath80 ) can change ( with @xmath27 symmetric ) .",
    "this means that many terms cancel out of the difference of log - likelihoods and can be ignored in the computations .",
    "consider moving vertex @xmath3 from community  @xmath11 to community  @xmath12 .",
    "let @xmath81 be the number of edges from vertex @xmath3 to vertices in group  @xmath80 excluding self - edges , and let @xmath82 be the number of self - edges for vertex  @xmath3 .",
    "these quantities are the same for all possible moves of vertex  @xmath3 .",
    "define @xmath83 and @xmath84 where @xmath85 and @xmath86 . then the change in the log - likelihood can be written : @xmath87 + a(m_{rs }    + k_{ir}-k_{is})-a(m_{rs } ) \\nonumber\\\\    & \\qquad { } + b(m_{rr } - 2(k_{ir } + u_i ) ) - b(m_{rr } ) + b(m_{ss } +    2(k_{is }     + u_i))-b(m_{ss } ) - a(\\kappa_r - k_i ) + a(\\kappa_r ) - a(\\kappa_s + k_i )     + a(\\kappa_s).\\end{aligned}\\ ] ]    this quantity can be evaluated in time @xmath88 on average and finding the @xmath12 that gives the maximum @xmath89 for given  @xmath3 and  @xmath11 can thus be done in time @xmath90 . because these computations can be done quickly for a reasonable number of communities , local vertex switching algorithms , such as single - vertex monte carlo ,",
    "can be implemented easily .",
    "monte carlo , however , is slow , and we have found competitive results using a local heuristic algorithm similar in spirit to the kernighan ",
    "lin algorithm used in minimum - cut graph partitioning  @xcite .",
    "briefly , in this algorithm we divide the network into some initial set of @xmath1 communities at random .",
    "then we repeatedly move a vertex from one group to another , selecting at each step the move that will most increase the objective function  or least decrease it if no increase is possible  subject to the restriction that each vertex may be moved only once .",
    "when all vertices have been moved , we inspect the states through which the system passed from start to end of the procedure , select the one with the highest objective score , and use this state as the starting point for a new iteration of the same procedure .",
    "when a complete such iteration passes without any increase in the objective function , the algorithm ends .",
    "as with many deterministic algorithms , we have found it helpful to run the calculation with several different random initial conditions and take the best result over all runs .",
    "we have tested the performance of the degree - corrected and uncorrected blockmodels in applications both to real - world networks with known community assignments and to a range of synthetic ( i.e. ,  computer - generated ) networks .",
    "we evaluate performance by quantitative comparison of the community assignments found by the algorithms and the known assignments . as a metric for comparison we use the normalized mutual information , which is defined as follows  @xcite .",
    "let @xmath91 be the number of vertices in community @xmath11 in the inferred group assignment and in community @xmath12 in the true assignment . then define @xmath92 to be the joint probability that a randomly selected vertex is in @xmath11 in the inferred assignment and @xmath12 in the true assignment . using this joint probability over the random variables @xmath36 and @xmath37 , the normalized mutual information is @xmath93 where @xmath94 is the mutual information and @xmath95 is the entropy of random variable  @xmath96 .",
    "the normalized mutual information measures the similarity of the two community assignments and takes a value of one if the assignments are identical and zero if they are uncorrelated .",
    "a  discussion of this and other measures can be found in ref .",
    "@xcite .",
    "we have tested our algorithms on real - world networks ranging in size from tens to tens of thousands of vertices . in networks with highly homogeneous degree distributions",
    "we find little difference in performance between the degree - corrected and uncorrected blockmodels , which is expected since for networks with uniform degrees the two models have the same likelihood up to an additive constant .",
    "our primary concern , therefore , is with networks that have heterogeneous degree distributions , and we here give two examples that show the effects of heterogeneity clearly .",
    "the first example , widely studied in the field , is the `` karate club '' network of zachary  @xcite .",
    "this is a social network representing friendship patterns between the 34 members of a karate club at a us university .",
    "the club in question is known to have split into two different factions as a result of an internal dispute , and the members of each faction are known .",
    "it has been demonstrated that the factions can be extracted from a knowledge of the complete network by many community detection methods .    applying our inference algorithms to this network , using corrected and uncorrected blockmodels with @xmath97",
    ", we find the results shown in fig .",
    "[ fig : karate ] . as pointed out also by other authors  @xcite",
    ", the non - degree - corrected blockmodel fails to split the network into the known factions ( indicated by the dashed line in the figure ) , instead splitting it into a group composed of high - degree vertices and another of low . the degree - corrected model , on the other hand , splits the vertices according to the known communities , except for the misidentification of one vertex on the boundary of the two groups . ( the same vertex is also misplaced by a number of other commonly used community detection algorithms . )",
    "the failure of the uncorrected model in this context is precisely because it does not take the degree sequence into account .",
    "the _ a priori _ probability of an edge between two vertices varies as the product of their degrees , a variation that can be fit by the uncorrected blockmodel if we divide the network into high- and low - degree groups .",
    "given that we have only one set of groups to assign , however , we are obliged to choose between this fit and the true community structure . in the present case",
    "it turns out that the division into high and low degrees gives the higher likelihood and so it is this division that the algorithm returns . in the degree - corrected blockmodel , by contrast , the variation of edge probability with degree is already included in the functional form of the likelihood , which frees up the block structure for fitting to the true communities .",
    "moreover it is apparent that this behavior is not limited to the case @xmath97 . for @xmath98 ,",
    "the ordinary stochastic blockmodel will , for sufficiently heterogeneous degrees , be biased towards splitting into three groups by degree  high , medium , and low  and similarly for higher values of  @xmath1 .",
    "it is of course possible that the true community structure itself corresponds entirely or mainly to groups of high and low degree , but we only want our model to find this structure if it is still statistically surprising once we know about the degree sequence , and this is precisely what the corrected model does .",
    "as a second real - world example we show in fig .",
    "[ fig : blogs ] an application to a network of political blogs assembled by adamic and glance  @xcite .",
    "this network is composed of blogs ( i.e. ,  personal or group web diaries ) about us politics and the web links between them , as captured on a single day in 2005 .",
    "the blogs have known political leanings and were labeled by adamic and glance as either liberal or conservative in the data set .",
    "we consider the network in undirected form and examine only the largest connected component , which has 1222 vertices .",
    "figure  [ fig : blogs ] shows that , as with the karate club , the uncorrected stochastic blockmodel splits the vertices into high- and low - degree groups , while the degree - corrected model finds a split more aligned with the political division of the network .",
    "while not matching the known labeling exactly , the split generated by the degree - corrected model has a normalized mutual information of @xmath99 with the labeling of adamic and glance , compared with @xmath100 for the uncorrected model .",
    "( to make sure that these results were not due to a failure of the heuristic optimization scheme , we also checked that the group assignments found by the heuristic have a higher objective score than the known group assignments , and that using the known assignments as the initial condition for the optimization recovers the same group assignments as found with random initial conditions . )",
    "we turn now to synthetic networks .",
    "the networks we use are themselves generated from the degree - corrected stochastic blockmodel , which is ideally designed to play exactly this role .",
    "( indeed , though it is not the primary focus of this article , we believe that the blockmodel may in general be of use as a source of flexible and challenging benchmark networks for testing the performance of community detection strategies . )    in order to generate networks we must first choose the values of @xmath33 , @xmath56 , and  @xmath55 .",
    "the group assignments @xmath33 can be chosen in any way we please , and we can also choose freely the values for the expected degrees of all vertices , which fixes the @xmath55 variables according to eq .  .",
    "choosing the values of @xmath17 involves a little more work . in principle , any set of nonnegative values is acceptable provided it is symmetric in @xmath11 and  @xmath12 and satisfies @xmath101 , with @xmath62 as in eq .  . however , because we wish to be able to vary the level of community structure in our networks we choose @xmath17 in the present case to have the particular form @xmath102 this form allows us to interpolate linearly between the values @xmath103 and @xmath104 using the parameter  @xmath105 .",
    "the @xmath104 represents a fully random network with no group structure ; it is defined to be the expected value of @xmath17 in a random graph with fixed expected degrees  @xcite , which is simply @xmath106 .",
    "the value of @xmath103 by contrast is chosen to create group structure .",
    "a simple example with four groups is : @xmath107 with this choice , all edges will be placed within communities when @xmath108 and none between communities .",
    "when @xmath109 , on the other hand , all edges will be placed randomly , conditioned on the degree sequence , and for intermediate values of @xmath105 we interpolate between these two extremes in a controlled fashion .",
    "( this model is similar to the benchmark network ensemble previously proposed by lancichinetti  @xcite  roughly speaking it is the `` canonical ensemble '' version of the `` microcanonical '' model in  @xcite .",
    ")    more complicated choices of @xmath103 are also possible .",
    "examples include the core - periphery structure @xmath110 where @xmath111 . in the case where @xmath112 this choice also generates approximately bipartite networks , where most edges run between the two groups and few lie inside .",
    "another possibility is a hierarchical structure of the form @xmath113 where @xmath114 .    in mixed models such as these",
    ", each edge in effect has a probability @xmath105 of being chosen from the planted structure and @xmath115 of being chosen from the null model . among the edges attached to a given vertex ,",
    "the expected fraction drawn from the planted structure is  @xmath105 and the remainder are drawn randomly .",
    "once we have chosen our values for @xmath33 , @xmath55 , and  @xmath56 , the network generation itself is a straightforward implementation of the blockmodel : we first draw a poisson - distributed number of edges for each pair of groups @xmath116 with mean  @xmath17 ( or @xmath117 when @xmath26 ) , then we assign each end of an edge to a vertex in the appropriate group with probability  @xmath52 .",
    "there are two primary considerations in comparing the degree - corrected and uncorrected blockmodels on our synthetic benchmark networks .",
    "the first is how close the group assignments found in our calculations are to the planted group assignments .",
    "the second is the performance of the heuristic optimization algorithm .",
    "it is possible that the maximum - likelihood group assignment may be close to the true group assignment but that our heuristic is unable to find it . and",
    "if the heuristic performs better in general for either the corrected or uncorrected blockmodel it may make comparisons between the models unreliable : we want to claim that the degree - corrected model gives better results than the uncorrected version because it has a better objective function for heterogeneous networks and not because we used a biased optimization algorithm .    to shed light on these questions we take the following approach .",
    "for both the degree - corrected model and the uncorrected model we perform tests with random initial conditions and with initial conditions equal to the known planted group structure .",
    "the latter ( planted ) initializations tell us whether the planted group assignment , or something close to it , is a local optimum of the respective objective function  if it is , our heuristic should find that optimum most of the time and return a final assignment similar to the planted one .",
    "this should be true for essentially any reasonable heuristic , even a biased one , since the heuristic will be making only minimal changes to the group assignments ( or none at all ) .    for small values of  @xmath105",
    "we expect that the planted assignment is not near a local maximum , but for large  @xmath105 we would hope that it is .",
    "thus , if we discover in the process of running our heuristic that it is not , it strongly suggests we have made a poor choice of objective function ( and this conclusion should hold even if the heuristic is biased ) .",
    "the results of such tests on our synthetic networks are shown in fig .",
    "[ fig : examples ] .",
    "we plot the normalized mutual information as a function of @xmath105 for various choices of planted structure .",
    "each data point represents an average over @xmath118 networks of size @xmath119 for both the degree - corrected and uncorrected objective functions . in the case of random initializations ,",
    "ten initializations were performed for each network and we take the best result among the ten .",
    "the left panel in the figure shows results for networks with two communities and just two possible values of the expected degree , 10 and  30 .",
    "each of the 1000 vertices was assigned to one of the four possible combinations of degree and community with equal probability , and the planted structure was chosen diagonal , as in eq .  .",
    "the green points in the figure indicate the performance of the degree - corrected blockmodel , while the black points are for the uncorrected model .",
    "solid squares and open circles show performance starting from the planted community structure and random assignments respectively .",
    "bearing in mind that @xmath109 corresponds to zero planted structure ( in which case neither algorithm should find any significant result ) and that a normalized mutual information approaching  1 indicates successful detection of the planted structure , we can see from the figure that the degree - corrected blockmodel significantly out - performs the uncorrected one in this simple test . as @xmath105 increases from zero , the mutual information for all algorithms rises , but the corrected model starts to detect some signatures of the planted structure almost immediately and for @xmath120 returns a normalized mutual information above 0.7 for both initial conditions .",
    "the uncorrected model , by contrast , finds no planted structure at @xmath120 for either initialization  including when the algorithm is initialized to the known correct answer .",
    "the reason for this poor performance is precisely because of the variation in degrees : for values of @xmath105 up to around 0.6 the uncorrected model fits these networks better if vertices are assigned to groups according to their degree than if they are assigned according to the planted structure , and hence the best - fit group structure has no correlation with the planted structure .",
    "we have also tested our blockmodels against synthetic networks with two other types of structure , one the core - periphery or approximately bipartite structure of eq .   and the other the hierarchical structure of eq .  .",
    "in these examples we use a more realistic degree distribution that approximately follows a power law with a minimum expected degree of  10 and an exponent of  @xmath121 . for the core - periphery networks we randomly assign vertices to one of the two groups , while for the hierarchical networks we fix 500 vertices to be in the first of the three groups , put the rest randomly in the other two , and set @xmath122 .",
    "( it has been suggested that choosing non - equal sizes for groups in this way presents a harder challenge for structure detection algorithms  @xcite . )",
    "the performance of our blockmodels on these two classes of networks is shown in the middle ( core - periphery ) and right ( hierarchical ) panels of fig .",
    "[ fig : examples ] .",
    "again we see that the normalized mutual information increases with increasing @xmath105 for all algorithms but that the degree - corrected blockmodel performs significantly better than the uncorrected model .",
    "the degree - corrected model with planted assignments consistently does the best among the four options as we would expect , and the degree - corrected model with random initializations performs respectably in all cases , although it s entirely possible that better performance could be obtained with a better optimization strategy .",
    "the performance of the uncorrected model with random initializations , on the other hand , is quite poor  @xcite .",
    "but perhaps the most telling comparison is the one between the degree - corrected model with random initial assignments and the uncorrected model with the planted assignment .",
    "this comparison tilts the playing field heavily in favor of the uncorrected model and yet , as fig .",
    "[ fig : examples ] shows , the degree - corrected model still performs about as well as , and in some cases better than , the uncorrected model .",
    "in this paper , we have studied how one can incorporate heterogeneous vertex degrees into stochastic blockmodels in a simple way , improving the performance of the models for statistical inference of group structure .",
    "the resulting degree - corrected blockmodels can also be used as generative models for creating benchmark networks , retaining the generality and tractability of other blockmodels while producing degree sequences closer to those of real networks .",
    "we have found the performance of the degree - corrected model for inference of group structure to be quantitatively better on both synthetic and real - world test networks than the uncorrected model . in networks with substantial degree heterogeneity",
    ", the uncorrected model prefers to split networks into groups of high and low degree , and this preference can prevent it from finding the true group memberships .",
    "the degree - corrected model correctly ignores divisions based solely on degree and hence is more sensitive to underlying structure .",
    "it seems likely that other more sophisticated blockmodels , such as the recently proposed overlapping and mixed membership models , would benefit from incorporating degree sequences also . in applications to on - line social network data , for example , where overlapping groups are common , there is frequently substantial degree heterogeneity and hence potentially significant benefits to using a degree - corrected model .",
    "the degree - corrected blockmodel is not without its faults .",
    "for instance , the model as described can produce an unrealistic number of zero - degree vertices , and is also unable to model some degree sequences , such as those in which certain values of the degree are entirely forbidden . as a model of real - world networks",
    ", it may also fail to accurately represent higher - order network structure such as overrepresented network motifs or degree correlations . from a statistical point of view , it is also somewhat unsatisfactory that the number of parameters in the model scales with the size of the network , which for example prevents fits to a network of one size being used to generate synthetic networks of another size .",
    "but perhaps the chief current drawback of the model is that the number  @xmath1 of blocks or groups in the network is assumed given .",
    "in most structure detection problems the number of groups is not known and a complete calculation will therefore require not only the algorithms described in this paper but also a method for estimating  @xmath1 .",
    "some previously suggested approaches to this problem include cross - validation  @xcite , minimum description length methods using two - part or universal codes  @xcite , maximization of a marginal likelihood  @xcite , and nonparametric bayesian methods .",
    "the marginal likelihood for our degree - corrected blockmodel can be computed explicitly if one assumes conjugate priors on the parameters ",
    "dirichlet for @xmath55 and gamma for  @xmath56but then one must also choose the parameters of those priors , called hyperparameters in the statistical literature",
    ". in principle one wants to choose values of the hyperparameters that provide asymptotic consistency ",
    "the blockmodel should return the correct number of groups when applied to a network generated from the same blockmodel , at least in certain limits . at present , however , it is not known how to make this choice .",
    "an alternative possibility is to note that the blockmodel used here is equivalent to a model that generates an ensemble of matrices with integer entries , implying potential connections to the large statistical literature on contingency table analysis that could be helpful in determining the number of groups in a principled fashion .",
    "we leave these questions for future work .",
    "the authors would like to thank joel bader and cris moore for useful conversations , and joel bader for sharing an early draft of ref .",
    "this work was funded in part by the national science foundation under grant dms0804778 and by the james s. mcdonnell foundation .",
    "technically this is only true if the number  @xmath1 of groups is moderate .",
    "if @xmath1 can become arbitrarily large then it is possible to represent any network trivially as a stochastic blockmodel by making each vertex its own group and setting the independent probability of each edge to one or zero depending on whether an edge exists between the corresponding vertices in the empirical data .",
    "this algorithm s performance may not be quite as bad as the figure seems to indicate because for high @xmath105 the mutual information values are roughly bimodal , with most values being close to either 0 or  1 .",
    "the mean shown is thus roughly the percentage of times that the uncorrected model successfully finds the planted structure .",
    "the same does not apply for the other curves , where the error represents relatively minor variation about the mean ."
  ],
  "abstract_text": [
    "<S> stochastic blockmodels have been proposed as a tool for detecting community structure in networks as well as for generating synthetic networks for use as benchmarks . </S>",
    "<S> most blockmodels , however , ignore variation in vertex degree , making them unsuitable for applications to real - world networks , which typically display broad degree distributions that can significantly distort the results . here </S>",
    "<S> we demonstrate how the generalization of blockmodels to incorporate this missing element leads to an improved objective function for community detection in complex networks . </S>",
    "<S> we also propose a heuristic algorithm for community detection using this objective function or its non - degree - corrected counterpart and show that the degree - corrected version dramatically outperforms the uncorrected one in both real - world and synthetic networks . </S>"
  ]
}
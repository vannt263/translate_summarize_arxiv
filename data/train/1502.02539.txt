{
  "article_text": [
    "=    knuth and yao @xcite showed that the expected number of independent bernoulli @xmath1 random bits needed to generate an integer - valued random variable @xmath2 whose distribution is given by , where @xmath3 , is at least equal to the binary entropy of @xmath2 : @xmath4 they also exhibited an algorithm  dubbed the ddg tree algorithm  for which the expected number of random bernoulli @xmath5 bits is not more than @xmath6 . by grouping",
    ", one can thus develop algorithms for generating batches of @xmath7 independent copies of @xmath2 such that the expected number of bernoulli @xmath1 random bits per random variable does not exceed @xmath8 .",
    "while these results settle the discrete random variate case quite satisfactorily , the generation of continuous or mixed random variables has not been treated satisfactorily in the literature .",
    "the objective of this note is to study the number of bernoulli @xmath1 random bits to generate a random variable @xmath9 with a given precision @xmath10 , provided that we can define `` precision '' in a satisfactory manner .",
    "note that any algorithm that takes as input the accuracy parameter @xmath10 , returns a random variable @xmath11 where @xmath12,@xmath13, ",
    ",@xmath14 are independent identically distributed ( or i.i.d . )",
    "bernoulli @xmath1 bits , @xmath15 is the number of bits needed , and @xmath16,@xmath17 ,  are given sequences of functions . for a vector @xmath18 ,",
    "let @xmath19 denote the @xmath20-norm of @xmath21 for @xmath22 : @xmath23 .",
    "for @xmath24 , the @xmath25-norm is @xmath26 . with @xmath27 ,",
    "all @xmath28-norms are the same for @xmath29 $ ] . + an algorithm with accuracy @xmath30 is such that for some coupling of @xmath2 ( the target random variable ) and @xmath31 , @xmath32 where @xmath28 is usually @xmath33 or @xmath25 .",
    "this natural notion of accuracy corresponds to the wasserstein @xmath0 metric between two probability measures . for a random variable @xmath2 ,",
    "we denote by @xmath34 the distribution of @xmath2 .",
    "let @xmath35 denote the space of all distributions of pairs of random variables with fixed marginal distributions @xmath36 and @xmath37 , respectively .",
    "then the wasserstein @xmath0 distance between @xmath2 and @xmath38 , or between @xmath36 and @xmath37 , is @xmath39 where @xmath40 denotes the essential supremum .",
    "this is a distance metric : @xmath41 if @xmath42 then there exists a random variable @xmath38 ( output ) coupled with @xmath2 ( target ) such that , i.e. ,  with probability one , @xmath43 .",
    "this definition of distance should satisfy simulation professionals in the sense that if their calculations require the evaluation of @xmath44 where @xmath45,  ,@xmath46",
    "are given independent random variables and @xmath47 is a real - valued functions , then , with probability one , @xmath48 which is usually a quantity that can easily be controlled .",
    "we believe that software packages should have the capability of accepting @xmath30 as input parameter in random variate generation .",
    "it is interesting that @xmath49 , the expected value of @xmath15 , can be related to the entropy almost in the way knuth and yao did for discrete random variables in @xcite .",
    "our note provides the foundational background for such a study in terms of universal lower bounds and various useful upper bounds for particular algorithms .",
    "we include examples for the main distributions .",
    "several authors have adressed the problem of arbitrary precision in sampling algorithms .",
    "these include flajolet and saheb @xcite , who explain how to generate the first @xmath50 bits of an exponential random variable for an integer @xmath51 .",
    "karney @xcite describes an algorithm for the standard normal distribution .",
    "thesis @xcite also discusses arbitrary precision sampling .",
    "the quantity that appears in our lower bound is the partition entropy .",
    "more precisely , let @xmath52 be a partition of @xmath53 and let @xmath10 be a fixed parameter for the precision .",
    "the partition entropy of @xmath2 with respect to @xmath52 is the quantity @xmath54    while our results apply to all distributions , we will mainly focus on absolutely continuous distributions , i.e. , random variables @xmath2 with density @xmath55 .",
    "we recall the definition of differential entropy : @xmath56 the differential entropy can be ill - defined , @xmath57 , finite or @xmath58 . for more information on differential entropy and entropy in general , one can read cover and thomas @xcite .",
    "when @xmath2 has compact support , then the case @xmath58 can not occur .",
    "when @xmath55 is bounded , then the case @xmath57 is excluded .",
    "when @xmath59 , it can be shown that @xmath60 is well - defined and either finite or @xmath57 ; see rnyi @xcite , csiszr @xcite for a proof .",
    "our main result is the following :    let @xmath61 be a target random vector with density @xmath55 , and assume that  . consider any algorithm that for given @xmath62 outputs @xmath63 using @xmath15 random fair coins , such that @xmath64 .",
    "then @xmath65 for @xmath66 and @xmath24 , the third term in the lower bound is @xmath67 and @xmath68 , respectively . for @xmath27 , it is @xmath69 .",
    "the second part of this note describes several algorithms that come within a constant term of this lower bound , and therefore , are basically optimal if grouping is used for generation . before tackling all",
    "that , we introduce a brief section in which we recall the main exact sampling algorithms for discrete random variables , and their properties , as these will be essential for the understanding of the main algorithms .",
    "in this section , we give simple proofs of two important results for generating discrete random variables  the optimal algorithm of knuth and yao @xcite and the more practical but slightly suboptimal algorithm of han and hoshi @xcite .",
    "we recall that we want to sample @xmath2 with probability vector @xmath70 .",
    "every @xmath71 is decomposed into its binary representation @xmath72 consider the new random variable @xmath73 with probability vector @xmath74 with @xmath75 .",
    "any algorithm for generating a discrete random variable using a source of i.i.d .",
    "fair coins @xmath76 , @xmath77 ,  and that is based on a stopping time @xmath15when it returns an output  can be viewed as a binary tree , where @xmath76 , @xmath77 ,  uniquely determines an infinite path in the tree by the rule `` @xmath78 '' is left and `` @xmath69 '' is right .",
    "we refer to this general class of algorithm as tree - based algorithms ",
    "they include all possible practical algorithms .",
    "leaves in this tree correspond to outputs .",
    "the algorithm of knuth and yao can be implemented by a binary tree , a ddg tree , in which each leaf at level @xmath79 corresponds to a `` @xmath69 '' bit @xmath80 in ( 2 ) .",
    "one randomly walks down this tree starting at the root and reaches the leaf for @xmath81 with probability . at that point ,",
    "the value `` @xmath82 '' is returned , and indeed , @xmath83 as required .",
    "a tree - based algorithm is optimal if it minimizes @xmath49 for a given probability vector .",
    "[ kythm ] the expected number of bits of an optimum tree - based algorithm for sampling @xmath84 is bounded from below by @xmath85 and from above by @xmath86 .    given a probability vector @xmath87 with @xmath88 possibly infinite , let the binary expansion of @xmath71 for @xmath89 be @xmath90 if @xmath15 denotes the number of bits required by an optimal algorithm for sampling @xmath87 , then for @xmath91 @xmath92 therefore , @xmath93 we now show that the quantity within parentheses of line ( [ crosseteton1 ] ) is lower bounded by @xmath94 and upper bounded by @xmath95 and then the result follows . for convenience ,",
    "let @xmath96 $ ] and its binary expansion be @xmath97 to complete the proof , it remains to prove that @xmath98 if @xmath7 is the first non - zero coefficient of the binary expansion of @xmath99 , then there are two cases : either ( 1 ) @xmath100 or ( 2 ) @xmath101 .",
    "the inequalities are strict for case 2 since @xmath102 .",
    "for the first case , @xmath103 , and line ( [ crosseteton2 ] ) is obviously true . for the second case , @xmath104 then for the upper bound , @xmath105 for the lower bound , @xmath106    we now recall the han - hoshi algorithm published in @xcite that implements the inversion method . given @xmath107 with @xmath88 countably finite or infinite , the algorithm partitions the interval @xmath108 $ ] into a countable collection of disjoint subintervals @xmath109 where @xmath110 the idea behind the algorithm is to iteratively refine a random interval @xmath111 and to stop when @xmath112 for a certain @xmath89 .",
    "the inversion principle says that if @xmath113 uniformly distributed on @xmath108 $ ] , then the unique @xmath89 such that @xmath114 is distributed according to @xmath115 . for a binary random source of unbiased i.i.d .",
    "bits , their algorithm is as follow :    @xmath116 @xmath117 @xmath118 @xmath119 @xmath120 @xmath121 @xmath122 @xmath123 return @xmath82 .",
    "the following two figures [ exec_fig_hanhoshi1 ] and [ exec_fig_hanhoshi2 ] are examples that show the underlying ddg tree during the execution of the han and hoshi algorithm .    . the cumulative values are @xmath124 , @xmath125 , @xmath126 , @xmath127 , @xmath128 , @xmath129 , and @xmath130 . ]    [ exec_fig_hanhoshi1 ]     such that @xmath131 , @xmath132 , and @xmath133 . ]",
    "let @xmath15 be the number of random coins needed and also the number of iteration of the `` repeat '' loop .",
    "for @xmath134 , @xmath135 . to every node ( internal or external ) corresponds an interval @xmath136 .",
    "the root corresponding to the interval @xmath137 . for each internal node corresponds an interval @xmath136 that is not contained in one of the interval @xmath138 , and , if the source produces @xmath139 , then the left child corresponds to the interval @xmath140 and , if @xmath141 , then the right child corresponds to @xmath142 .",
    "each leaf ( external node ) corresponds to an interval @xmath136 entirely contained in @xmath138 upon which the integer @xmath82 is returned with probability @xmath143 .",
    "the following theorem was proved by han and hoshi @xcite :    [ hhthm ] for the han - hoshi algorithm , @xmath144    our ( new ) proof partitions the leaves @xmath145 for symbol @xmath82 in the ddg tree arbitrarily into two sets , @xmath146 and @xmath147 , such that @xmath146 and @xmath147 each possess at least one leaf per level .",
    "let @xmath148 , @xmath149 , where @xmath150 is the probability attached to leaf @xmath151 , i.e.  .",
    "we have @xmath152 . by nesting and elementary calculations ,",
    "@xmath153 let @xmath154 be the @xmath79-th bit in the binary expansion of @xmath155 , and let @xmath156 be the @xmath79-th bit for @xmath157 .",
    "then @xmath158 as in the proof of theorem [ kythm ] , we have @xmath159 so that , using ( [ adenozine ] ) , @xmath160",
    "in this section , we give a lower bound for the complexity of sampling any continuous distribution to an arbitrary precision .",
    "let @xmath52 be a countable partition of @xmath53 , and let @xmath10 be a fixed precision parameter .",
    "consider the infinite graph @xmath37 with as vertices the sets @xmath161 , and as edges all pairs @xmath162 such that @xmath163 therefore , if @xmath164 is not an edge of @xmath37 , then @xmath165 for all @xmath166 , @xmath167 .",
    "let @xmath168 be the maximal degree of any vertex of @xmath37 .",
    "we now state a lemma that we shall use in conjunction with the knuth - yao result , mentioned and reproved in the previous section , in order to prove our main theorem mentioned in the introduction .",
    "[ lowerbndlem ] let @xmath2 be a target random vector of @xmath53 .",
    "let @xmath38 be an output with the property that , with probability one , .",
    "let @xmath15 be the number of bits used to generate @xmath38 by an algorithm .",
    "then @xmath169 where @xmath52 and @xmath168 are as above .",
    "we can maximize the bound from lemma [ lowerbndlem ] , of course , by selecting the most advantageous partition @xmath52 and @xmath168 combination .",
    "the bound from lemma [ lowerbndlem ] coincides with the bound in shannon @xcite when the distribution @xmath2 is discrete with a finite number of atoms since , in that case , @xmath170 by choosing @xmath30 sufficiently small .",
    "let @xmath2 and @xmath38 be two ( dependent ) random variables of @xmath53 , and denote by . note that @xmath171 if @xmath164 is not an edge of @xmath37 .",
    "thus @xmath172",
    "if @xmath15 is the random number of bits needed to generate a discrete random variable @xmath38 that outputs a vertex @xmath173 of @xmath37 with probability @xmath174 , then @xmath175 and therefore @xmath176    it is interesting to recall a general result from csiszr @xcite about the hypercube partition entropy of an absolutely continuous random vector @xmath2 that will become useful later .",
    "of particular interest to us is the cubic partition @xmath177 partitioned by @xmath178 .",
    "the cells of this partition are of the form @xmath179 we recall that if @xmath180 has finite entropy  a condition we refer to as rnyi s condition  then if @xmath2 has a density @xmath55 , @xmath181 is well - defined , i.e. , it is either finite or @xmath57 .",
    "we have    [ absctsrenyithm ] under rnyi s condition , for general partition @xmath52 , and random variable @xmath9 with density @xmath55 , @xmath182 where @xmath183 denotes the lebesgue measure .",
    "in particular , @xmath184    fix @xmath161 .",
    "if @xmath73 is uniform on @xmath173 and @xmath185 , then @xmath186 thus @xmath187 and , by jensen s inequality and the concavity of  , @xmath188 the inequality follows by summing over @xmath161 .",
    "[ csiszar_lemma ] let @xmath9 have density @xmath55 , and let rnyi s condition be satisfied .",
    "if @xmath189 , then as @xmath190 , @xmath191 if @xmath192 , then as @xmath190 , @xmath193    the fifth theorem of csiszr @xcite stipulates that if @xmath59 and @xmath55 is not absolutely continuous , then , as @xmath194 , @xmath193    for more information about the asymptotic theory for the entropy of partitioned distributions as the partitions become finer , one can consult rnyi @xcite , csiszr @xcite , csiszr @xcite , and linder and zeger @xcite .",
    "[ lowerbndthm ] let @xmath9 have density @xmath55 .",
    "let @xmath38 be an output with the property that with probability one , . then , under rnyi s condition , @xmath195 where @xmath196 is the volume of the unit ball in @xmath53 , and @xmath15 is the number of random bits needed to generate to @xmath38 .",
    "let @xmath177 be a cubic partition .",
    "then @xmath197 where @xmath198 is the maximal degree in the graph on defined by connecting @xmath199 with @xmath200 if .",
    "we set @xmath201 and use @xmath202 observe that if @xmath203 denotes the @xmath20-ball of radius @xmath204 centered at @xmath78 , then by elementary geometric considerations , @xmath205 so that as @xmath206 , @xmath207 also , @xmath208 so that @xmath209",
    "consider a random variable @xmath9 .",
    "we call a partition @xmath210 a @xmath30-partition if for every set @xmath211 , there exists @xmath212 ( called the center ) such that @xmath213 then any algorithm that selects @xmath211 with probability @xmath214 can be used to generate a random variable @xmath38 that approximate @xmath2 to within @xmath30 . after generating @xmath173 , set @xmath215 then , necessarily , there is a coupling @xmath216 with . if the selection of @xmath173 is done with the help of the method of knuth and yao , then , if @xmath15 still denotes the number of random bits required , @xmath217 for @xmath24 , we can take @xmath218 , the cubic partition with sides @xmath219 . for @xmath27 ,",
    "a simple partition into intervals of length @xmath219 can be used for all values of @xmath28 .",
    "if @xmath2 has a density @xmath55 and @xmath24 or @xmath27 , then the procedure suggested above has , as @xmath220 , @xmath221 where in the last step we assume rnyi s condition and .",
    "compare with the lower bound @xmath222 and note that the difference is @xmath223 .    for later reference ,",
    "we recall these values of @xmath60 for the main distributions : @xmath224\\hspace{-1mm}:\\phantom{12 } & \\mathcal{e}(f)=0,\\\\ \\text{exponential}(1)\\hspace{-1mm}:\\phantom{12 }   & \\mathcal{e}(f)=\\log_{2}(e),\\\\ \\text{normal}(0,1)\\hspace{-1mm}:\\phantom{12 }   & \\mathcal{e}(f)=\\log_{2}\\sqrt{2\\pi{}e}.\\end{aligned}\\ ] ] recall that for @xmath225 , @xmath226 , a scale factor @xmath227 shows up as @xmath228 in the upper and lower bounds because @xmath229    for general @xmath230 , we can take @xmath231 the cubic partition with sides @xmath232 . under rnyi s condition and @xmath189",
    ", we have @xmath233 the difference with the lower bound is @xmath234 using @xmath235 , @xmath236 , we obtain @xmath237 which unfortunately increases linearly with @xmath68 . to avoid this growing differential",
    " which we did not have for @xmath24it seems necessary to consider partitions that better approximate @xmath20-balls .",
    "the inversion method for generating a random variable @xmath2 with distribution function @xmath36 uses the property that @xmath238 has distribution function @xmath36 , where @xmath239 denotes the inverse , and @xmath113 is uniform @xmath108 $ ] .",
    "one can use this method as a basis for generating an approximation using only a few random bits .",
    "in particular , if @xmath240 and @xmath241 , @xmath242 ,  are independent bernoulli@xmath1 random variables , then setting @xmath243 then @xmath244 note that @xmath245 , @xmath246 .",
    "graphically , we have        the number of random coins is @xmath247 if we define @xmath248 then @xmath2 and @xmath38 are coupled in such a way that @xmath249 the @xmath15 defined above is also the number of bits needed to generate @xmath38 .",
    "observe that the inversion method requires @xmath239 in a `` black box '' , also called an oracle . on the other hand",
    ", it avoids the cumbersome calculation of the cell probabilities and the set - up of the knuth - yao ddg tree , and thus shines by its simplicity .    in spirit",
    ", the inversion method mimics the method of han and hoshi , and indeed , this observation leads to a simple bound .",
    "let @xmath250 be a cubic partition of @xmath251 into intervals of equal length @xmath219 .",
    "denote the probabilities of these intervals by @xmath252 assume that we select an interval from @xmath250 following this law by the method of han and hoshi using random bits @xmath241 , @xmath242 , @xmath253 ,  also used in the inversion method .",
    "it is easy to see that the number of bits needed before halting in the inversion method is smaller .",
    "therefore , for the inversion method , we have @xmath254    from this and lemma [ csiszar_lemma ] , we conclude    [ inversion_borne_sup_thm ] if @xmath2 has a density @xmath55 satisfying rnyi s condition and if @xmath255 , then as @xmath256 , @xmath257    comparing theorem [ inversion_borne_sup_thm ] with the universal lower bound @xmath258 we see that the difference is @xmath259 .",
    "the partition - based method has un upper for @xmath49 that is one less .",
    "moreover , the simplicity of the inversion method can not be underestimated .",
    "in addition , one can tighten the analysis under additional conditions on @xmath55 such unimodality , monotonicity , or for specific forms .",
    "[ thm_inv_mono_bornee ] assume that @xmath2 has a bounded nonincreasing density @xmath55 on @xmath260 .",
    "then for the inversion method , as @xmath256 , @xmath261    define @xmath262 , @xmath263 as in figure [ fig_inversion ] .",
    "then @xmath264 now , @xmath265 ( even if the latter integral is infinite ) .",
    "the theorem follows if we can show that @xmath266 . to this end , note that @xmath267 for a fixed value of @xmath268 , we see that @xmath269 only if @xmath2 falls in the interval that `` captures '' the value @xmath270 , if such an interval exists . but the probability of each interval is precisely @xmath271 .",
    "however , if @xmath272 , then no such interval exists .",
    "thus , @xmath273    for the uniform @xmath108 $ ] density , we have @xmath274 , and so the bound of theorem [ thm_inv_mono_bornee ] is @xmath275 however the `` o(1 ) '' can be omitted in this case as the following simple calculation shows : @xmath276 theorem [ thm_inv_mono_bornee ] improves over the bound for the partition method ( for @xmath27 ) by @xmath277 . under other regularity conditions",
    ", one can hope to obtain similar bounds that beat the partition bound .    for the exponential density , the inversion method yields @xmath278 where @xmath279 flajolet and saheb @xcite proposed a method for the exponential law that has @xmath280 where @xmath281 as @xmath256 .    for the normal law ,",
    "karney @xcite proposes a method that addresses the variable approximation issue but does not offer explicit bounds .",
    "inversion would yield @xmath282 but the drawback is that this requires the presence of ( an oracle for ) @xmath239 , the inverse gaussian distribution function .",
    "even the partition method requires a nontrivial oracle , namely @xmath36 . to sidestep this , one can use a slightly more expensive method based on the box - mller @xcite , which states that the pair of random variables @xmath283 with @xmath284 exponential and @xmath285 uniform on the unit circle , provides a standard gaussian in @xmath286 of zero mean and unit covariance matrix .",
    "the random variable @xmath287 is maxwell , i.e. , it has density @xmath288 , @xmath289 , and its differential entropy is @xmath290 where @xmath291 is the euler - mascheroni constant .",
    "we sketch the procedure , which also serves as an example for more complicated random variate generation problems .",
    "assume that the two normals are required with @xmath30-accuracy each ( this corresponds to the choice of @xmath292 and @xmath24 ) .",
    "then we first generate a maxwell random variable @xmath293 by inversion , noting that @xmath294 the maxwell random variable @xmath293 is needed with @xmath295-accuracy .",
    "the maxwell law is unimodal with mode at @xmath296 .",
    "its left piece has probability @xmath297 .",
    "so we first pick a piece randomly using on average no more than two bits .",
    "the we apply inversion on the appropriate piece . by theorem [ thm_inv_mono_bornee ] , we use @xmath298 random bits where @xmath299 the generated approximation is called @xmath300 .    next we generate a uniform random variable @xmath301 with accuracy @xmath302 the generated value @xmath303 has @xmath304 . since @xmath113 has differential entropy @xmath305 , we see that the expected number of bits , @xmath306 , needed is bounded by @xmath307 then we return @xmath308 and claim that jointly , @xmath309 and similarly for the cosine .",
    "next , @xmath310 putting everything together , we see that the total expected number of bits is not more than @xmath311 the lower bound for generating two independent gaussians is @xmath312 less , i.e. , @xmath313",
    "turning a sequence of i.i.d .",
    "random variables @xmath45 , @xmath314 ,  into a sequence of i.i.d .",
    "bernoulli @xmath1 bits has been the subject of many papers .",
    "the setting of interest to us is the following .",
    "let @xmath315 , @xmath316 ,  be a ( possibly infinite ) number of cumulative distributions supported on the positive integers .",
    "let @xmath317 be a fixed probability vector .",
    "let @xmath2 , @xmath45 , @xmath314 ,  be i.i.d .",
    "random integers drawn from @xmath317 . given @xmath318 for @xmath319 ,",
    "draw @xmath320 independently from the distributions @xmath321 , @xmath322 , ",
    ", @xmath323 .    as a special case",
    ", we have the classical setting when @xmath324 and then @xmath325 , @xmath326 ,  , @xmath327 are i.i.d .  according to @xmath315 .",
    "let @xmath315 , @xmath316 ,  have binary entropies given by @xmath328 , @xmath329 ,  , all assumed to be finite .",
    "in other words the entropy of @xmath330 is denoted by @xmath331 .",
    "assume also that @xmath332    [ quibivilortrinuloxifene ] there exits an algorithm ( described below ) that , upon input @xmath333 , @xmath334 , ",
    ", @xmath335 outputs a sequence of @xmath336 i.i.d .",
    "bernoulli @xmath1 bits where @xmath337 furthermore , these bits are independent of @xmath338 .",
    "theorem [ quibivilortrinuloxifene ] describes how many perfect random bits we can extract from @xmath325 , @xmath326 ,  , @xmath327 , i.e. , @xmath336 should be near the information content , the entropy of @xmath339 . not surprisingly then",
    ", the way to achieve this can be inspired by the optimal or near - optimal methods of compression , and , in particular , arithmetic coding .    note that one can assume @xmath340 for where @xmath341 are i.i.d .",
    "uniform random variables on @xmath108 $ ] . for all @xmath342 ,",
    "let the binary expansions of @xmath71 be @xmath343 for convenience , @xmath344 for all @xmath345 .",
    "also , for all @xmath342 , let @xmath346    following the methodology of arithmetic coding , associate a uniform@xmath108 $ ] random variable @xmath113 ( with binary expansion @xmath347 ) with the ( infinite ) data sequence @xmath348 .",
    "the bits @xmath349 , @xmath350 , are i.i.d .",
    "bernoulli@xmath1 and independent of @xmath45 , @xmath314 , @xmath351 ,  to be more precise , consider this algorithm .    a sequence of pairs @xmath333 ,  ,",
    "@xmath335 with @xmath352 and @xmath353 as described previously for @xmath354 .",
    "@xmath355 @xmath356 @xmath357 @xmath358 @xmath359 @xmath360    to verify the correctness of algorithm [ algo_extractx ] , the intervals @xmath361 $ ] are nested .",
    "more precisely , for all @xmath362 , @xmath363 \\supseteq [ u_{\\ell+1}^{-},u_{\\ell+1}^{+}].\\ ] ] define @xmath364 , and note @xmath365=\\bigcap_{\\ell=1}^{n}{[u_{\\ell}^{-},u_{\\ell}^{+}]}.\\ ] ] for every iteration , we have @xmath366.\\ ] ] since @xmath367 , @xmath368 the bits @xmath369 , @xmath242 ,  ,",
    "@xmath370 are clearly i.i.d .",
    "let @xmath371 and consider the two cases @xmath372 and @xmath373 .",
    "we show that @xmath268 is concentrated around @xmath374 . before considering the two cases , we compute the useful quantity @xmath375    note that @xmath376 the pairs @xmath377 are i.i.d .",
    "and therefore , by the previous calculation , @xmath378 by the law of large numbers , for all @xmath10 , .",
    "we have @xmath379 by the law of large numbers , for all @xmath10 , if @xmath380 , @xmath381 for an arbitrary fixed integer @xmath382 , @xmath383 which is as small as desired by the choice of @xmath50 .",
    "the @xmath384 term is due to the fact that the event + occurs only if and @xmath385 .",
    "assume given a random variable @xmath386 with fixed probability vector @xmath70 of finite entropy denoted by @xmath387 .",
    "assume that we employ a given ddg tree based algorithm for the generation of @xmath2 .",
    "in this tree , let @xmath388 be the set of leaves and let @xmath389 be the label of leaf @xmath390 .",
    "define @xmath391 let @xmath392 be the depth of @xmath390 .",
    "then we have @xmath393 if the algorithm returns a variable @xmath2 , then we know that we must have exited via a leaf in @xmath394 .",
    "given @xmath395 , each exit - leaf has a given probability : @xmath396 let us call the ( random ) exit - leaf @xmath38 .",
    "the ddg tree algorithm thus returns a pair @xmath216 .",
    "we have @xmath397 for example , for the knuth - yao ddg algorithm , we have @xmath398 , while for the han - hoshi algorithm , we have @xmath399 .",
    "our method of batch generation will be valid for any ddg tree with finite @xmath400 .",
    "the algorithm for batch generating i.i.d .",
    "random variables @xmath45 , @xmath314 ,  , @xmath401 uses an atomic operation ` fetchbit ` that first gets a bit from a queue @xmath402 if the this queue is not empty , and otherwise it gets a bit from a bernoulli @xmath1 generator .",
    "it is understood that that ` fetchbit ` drives the ddg tree algorithm .",
    "@xmath403 @xmath404 generate @xmath405 by a ddg tree algorithm . @xmath406 feed @xmath405 to the retrieval algorithm ( randomness extraction procedure ) , and recover @xmath407 bits which are added to @xmath402 .",
    "[ thm_batch_algo ] the batch generation algorithm uses @xmath408 random bits , where @xmath409 whenever @xmath410 .    by the knuth - yao lower bound , @xmath411 and therefore , the procedure is asymptotically optimal to within @xmath412 bits .",
    "the symbol @xmath412 means it is @xmath413 in probability as @xmath414 .",
    "we choose a large integer constant @xmath50 and look at @xmath415 .",
    "let @xmath416 be the size of the queue at time @xmath268 , and set @xmath417 .",
    "for @xmath418 , let @xmath419 be the number of bits needed for generating @xmath420 without extraction .",
    "the @xmath421 are i.i.d",
    ". random variables .",
    "then we have the following simple identity : @xmath422 by the law of large numbers , @xmath423 we note that @xmath424 because random variables @xmath421 are i.i.d .  by theorem [ quibivilortrinuloxifene ]",
    ", we also have that @xmath425 as @xmath426 .",
    "therefore , @xmath427 the result follows if @xmath428 as @xmath414 . for this , we need only consider an upper bound , since @xmath429 , and then @xmath430 since @xmath431 , we have @xmath432 and @xmath433 fix @xmath10 , and let @xmath173 be the event that both lefthand sides in ( [ grumblegrumble1 ] ) and ( [ grumblegrumble2 ] ) are less than @xmath30 , so that @xmath434 .",
    "the critical observation is that on @xmath173 , @xmath435 and therefore , @xmath436 and @xmath437 if we choose @xmath50 large enough such that , then @xmath438    if batch generation is applied to the partition method for continuous distributions , and the knuth - yao or han - hoshi method are used for the discrete part of that method , then the expected number of random bits needed per random variable , under rnyi s condition and , is bounded from above by @xmath439 thus matching the lower bound for the case @xmath24 , and all dimensions .",
    "using the notion of maximal coupling between a generated random variable and a theoretical target random variable , we were able to lay the groundwork for a theory of generating with universal lower bound in terms of the number of random bernoulli@xmath1 bits needed . in order to grace the world",
    "s software libraries with variable accuracy generators , much more work is needed , both algorithmic and theoretic .",
    "we have shown that the well - known inversion method is nearly optimal in an information - theoretic sense , and will submit further work and other paradigms in the near future .",
    "the method given in this appendix is based on taking the sum of independent random variables .",
    "using convolution does not require an oracle for @xmath36 or @xmath239 which were required by the algorithms given in this paper .",
    "its range of applicability seems however restricted to the uniform and the exponential as suggested by kakutani s result @xcite that can be stated as follows :    for all @xmath342 , let @xmath440 $ ] and let @xmath441 be independent bernoulli random variables such that @xmath442 . if @xmath443 , then @xmath444    first of all , as shown in @xcite , if @xmath2 is an exponential mean @xmath69 random variable , then @xmath445 is distributed as a geometric random variable with parameter @xmath446 , and @xmath447 , the fractional part of @xmath2 , is distributed as a truncated exponential random variable on the interval @xmath137 , and @xmath445 and @xmath447 are independent .",
    "we concentrate on the fractional part therefore .",
    "the following theorem tells us that the fractional part is the convolution of independent bernoulli random variables .",
    "[ gravelconvolbernoexpo ] let @xmath448 be a sequence of independent bernoulli distributed random variables with @xmath449\\text { , and } \\\\",
    "\\mathbf{p}\\{x_j=0\\}&=1-p_j\\text { for all $ j\\in\\mathbb{n}$.}\\end{aligned}\\ ] ] let @xmath450 . if @xmath451 then @xmath2 is a truncated exponential random variable , i.e. ,  the p.d.f",
    ".  of @xmath2 is @xmath452$.}\\ ] ]    since @xmath453 the fourier transform of @xmath454 is @xmath455 since @xmath2 is the sum of the independent @xmath454 s , we have @xmath456 which is the fourier transform of @xmath457",
    ".    we can thus generate @xmath447 with precision @xmath30 if we set , and let @xmath458 since a raw bernoulli random variable requires @xmath33 bits on average , this simple method , which has accuracy guarantee , uses an average not more than bits . on the other hand ,",
    "the lower bound for @xmath447 is @xmath459 where @xmath460 the factor `` 2 '' in @xmath461 can be avoided when batch generation is used .",
    "it can also be eliminated  at a tremendous storage cost  if the vector @xmath462 is generated using the algorithm of knuth - yao since we know the individual probabilities , i.e. , @xmath463 for all @xmath464 .",
    "one can show that @xmath465 thus , for the knuth - yao method for this vector , @xmath466 again using knuth - yao , a geometric@xmath467 random variable can be generated exactly using not more than @xmath468 random bits .",
    "an exponential random variable generated by this method has an overall expected complexity @xmath469 as @xmath256 .",
    "both authors thank tamas linder for his help . claude gravel wants to thank gilles brassard from universit de montral for his financial support .",
    "20 d.  e. knuth and a.  c .- c .",
    "yao , `` the complexity of nonuniform random number generation , '' in _ algorithms and complexity : new directions and recent results .",
    "_ , j.  f. traub , ed.1em plus 0.5em minus 0.4emnew york : carnegie - mellon university , computer science department , academic press , 1976 , pp .",
    "357428 , reprinted in knuth s _ selected papers on analysis of algorithms _",
    "( csli , 2000 ) ."
  ],
  "abstract_text": [
    "<S> we study the problem of the generation of a continuous random variable when a source of independent fair coins is available . </S>",
    "<S> we first motivate the choice of a natural criterion for measuring accuracy , the wasserstein @xmath0 metric , and then show a universal lower bound for the expected number of required fair coins as a function of the accuracy . in the case of an absolutely continuous random variable with finite differential entropy , several algorithms are presented that match the lower bound up to a constant , which can be eliminated by generating random variables in batches . + </S>",
    "<S> * keywords : * random number generation , random bit model , differential entropy , partition entropy , inversion , probability integral transform , tree - based algorithms , random sampling </S>"
  ]
}
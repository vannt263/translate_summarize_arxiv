{
  "article_text": [
    "a space - filling curve is a continuous , surjective mapping from @xmath0 to @xmath1 .",
    "it was not always clear that such a mapping would exist for @xmath2 , but in the late 19th century peano showed that it is possible for @xmath3 and @xmath4  @xcite .",
    "since then , quite a number of space - filling curves have appeared in the literature .",
    "sagan wrote an extensive treatise on space - filling curves  @xcite , which discusses most curves included in our study . during",
    "the early days space - filling curves were primarily seen as a mathematical curiosity .",
    "today however , space - filling curves are applied in areas as diverse as load balancing for grid computing , colour space dimension reduction , small antenna design , i / o - efficient computations on massive matrices , and the creation of spatial data indexes . in this paper , we focus on the application of space - filling curves to the creation of query - efficient spatial data indexes such as r - trees .    [ [ bounding - box - hierarchies ] ] bounding - box hierarchies + + + + + + + + + + + + + + + + + + + + + + + +    we consider the following type of spatial data indexes for points in the plane .",
    "the data points are organised in blocks of at most @xmath5 points , for some parameter @xmath5 , such that each point is stored in one block . with each block",
    "we associate a bounding box , which is the smallest axis - aligned rectangle that contains all points stored in the block . the block bounding boxes are then organised in an index structure .",
    "_ intersection queries _ are answered as follows : to find all points intersecting a query window @xmath6 , we query the index structure for all bounding boxes that intersect @xmath6 ; then we retrieve the corresponding blocks , and check the points stored in those blocks one by one . to find the _",
    "nearest neighbour _ to a query point  @xmath7 , one can use the index to search blocks in order of increasing distance from  @xmath7 .",
    "thus one retrieves exactly the blocks whose bounding boxes intersect the largest empty circle around  @xmath7 .",
    "an r - tree  @xcite is an example of the type of structure described above : the blocks constitute the leaves of the tree , and the higher levels of the tree act as an index structure for the block bounding boxes . in practice",
    "the query response time is mainly determined by the number of blocks that need to be retrieved : this is because the bounding box index structure can often be cached in main memory , while the blocks ( leaves ) with data points have to be stored on slow external memory ( for example a hard disk needing 10 ms for each seek ) .    .",
    "( b ) measuring locality for a particular curve section .",
    "@xmath8-locality ratio between @xmath9 and @xmath7 = squared euclidean distance between @xmath9 and @xmath7 , divided by the area covered by the curve section between @xmath9 and @xmath7 : @xmath10 .",
    "bounding - box area ratio between @xmath9 and @xmath7 = area of the bounding - box of the curve section @xmath11 between @xmath9 and @xmath7 , divided by the area covered by @xmath11 : @xmath12 .",
    "( @xmath13is the maximum over all pairs @xmath9 and  @xmath7 ) , title=\"fig:\",height=124 ] .",
    "( b ) measuring locality for a particular curve section .",
    "@xmath8-locality ratio between @xmath9 and @xmath7 = squared euclidean distance between @xmath9 and @xmath7 , divided by the area covered by the curve section between @xmath9 and @xmath7 : @xmath10 .",
    "bounding - box area ratio between @xmath9 and @xmath7 = area of the bounding - box of the curve section @xmath11 between @xmath9 and @xmath7 , divided by the area covered by @xmath11 : @xmath12 .",
    "( @xmath13is the maximum over all pairs @xmath9 and  @xmath7 ) , title=\"fig:\",height=124 ]    [ fig : measures ]    an r - tree is not uniquely defined by a set of data points .",
    "any distribution of the input points over the leaves ( blocks ) may be used as the basis of an r - tree , as long as each point is put in exactly one block , and each block contains at most @xmath5 points .",
    "one way of making the distribution is by ordering the input points along a space - filling curve  @xcite and then putting each next group of @xmath5 points together in a block ( see figure  [ fig : rtree_leaves](a ) ) .",
    "since the number of blocks retrieved to answer a query is simply the number of bounding boxes intersected , it is important that the ordering induced by the space - filling curve makes us fill each block with points that lie close to each other and thus have a small bounding box .",
    "in fact we can make some more precise observations for intersection queries with query windows that are points or lines .",
    "for point - intersection queries we observe that if the data and query points lie within a square of area  1 , the average number of blocks retrieved for uniformly distributed point queries is simply the total area of the bounding boxes . for line - intersection queries with uniformly distributed orientation ( between 0 and @xmath14 ) and signed distance from the centre of the square ( in an interval containing at least @xmath15 $ ] ) ,",
    "the chance of any particular block being retrieved is proportional to @xmath16 , where @xmath17 is the width of the bounding box in the orthogonal projection on a line with orientation @xmath18 . by the crofton formula @xmath16",
    "is simply the perimeter of the bounding box of the block , so for uniformly distributed line queries , the average number of blocks retrieved is proportional to the total perimeter of the bounding boxes . therefore our goal is to have bounding boxes with small ( total ) area and small ( total ) perimeter .",
    "[ [ our - results ] ] our results + + + + + + + + + + +    we investigate which space - filling curves best achieve the above - mentioned goal : sorting points into bounding boxes with small ( total ) area and small ( total ) perimeter . to this end we propose new quality measures of space - filling curves that express how effective different space - filling curves are in this context .",
    "we also provide an algorithm to compute approximations of these and similar quality measures for any given curve .",
    "we used this algorithm to compute approximations of known measures of so - called curve - to - plane locality and of our new _ bounding - box quality _",
    "measures for several well - known and new space - filling curves .",
    "the known locality measures considered are the maximum , over all contiguous sections  @xmath11 of a space - filling curve , of the squared @xmath19- , @xmath8- or @xmath20-distance between the endpoints of @xmath11 divided by the area covered by @xmath11 ( studied by gotsman and lindenbaum  @xcite and many other authors  @xcite ) , see figure  [ fig : measures](b ) for an example .",
    "our first new measure is the maximum , over all contiguous sections  @xmath11 of a space - filling curve , of the area of the bounding box of  @xmath11 divided by the area covered by  @xmath11 .",
    "we call this measure the _ worst - case bounding - box area ratio _ ( wba , figure  [ fig : measures](b ) ) .",
    "our second new measure considers 1/16th of the squared perimeter instead of the area , and we call it _ worst - case bounding - box squared perimeter ratio _ ( wbp ) .",
    "we prove that wba and wbp are at least  2 for a large class of space - filling curves .",
    "we also show that this class of curves has @xmath8-locality at least  4 , thus complementing earlier results by niedermeier et al .",
    "@xcite who proved this for another class of space - filling curves ( more restricted in one way , more general in another way ) .",
    "we found that peano s original curve achieves a wba - value of less than 2.0001 ; the exact value is probably exactly 2 , which is optimal for this class of curves .",
    "other well - known curves have wba - values ranging from 2.400 to 3.000 .",
    "however , on the wbp measure peano s curve is not that good , with @xmath21 .",
    "considering both wba and wbp , the best curve we found in the literature is the @xmath22-curve  @xcite , with @xmath23 and @xmath24 .",
    "however , in this paper we present a new variation on peano s curve with even better scores : a wba - value of 2.000 and a wbp - value of 2.155 .",
    "this variation also performs very well on @xmath19- , @xmath8- and @xmath20-locality .    both wba and wbp consider the worst case over all possible subsections of the curve .",
    "however , in the context of our application , it may be more relevant to study the total bounding box area and perimeter of a set of disjoint subsections of the curve that together cover the complete curve .",
    "we can argue that in the limit , we may have the worst case for all subsections in such a cover , but this seems to be unlikely to happen in practice .",
    "therefore we study the total bounding box area and perimeter of random subdivisions of the curve into subsections . here",
    "we find that many curves perform roughly equally well , but those with particularly bad wba- or wbp - values , such as the sierpiski - knopp curve  @xcite or h - order  @xcite , the -curve  @xcite , or peano s original ( unbalanced ) curve ( regarding bounding box perimeters ) , are clearly suboptimal in this sense .    we also estimate the total diameter of the subsections in random subdivisions of the curve and present results for octagonal bounding boxes rather than rectangular bounding boxes .    below",
    "we first explain how different space - filling curves can be described and how they can be used to order points .",
    "we also describe some new curves .",
    "next we define the locality and bounding - box quality measures , and prove lower bounds .",
    "after that we present our approximation algorithm , and present the results of our computations .",
    "there are many ways to define space - filling curves , for example algebraic , like in peano s paper  @xcite , or by describing an approximation of the curve by a polyline , with a rule on how to refine each segment of the approximation recursively  @xcite ; many authors do this by specifying the regions filled by sections of the curve together with the location of the endpoints of such sections on the region boundaries ( for example @xcite ) .",
    "since we are concerned with the use of space - filling curves as a way to order points in the plane , we choose a method to describe space - filling curves that is based on defining how to order the space inside a ( usually square ) unit region .",
    "we will see later how such a description is also a description of a curve .",
    "we define an order ( _ scanning order _ ) @xmath25 of points in the plane as follows .",
    "we give a set of rules , each of which specifies ( i ) how to subdivide a region in the plane into subregions ; ( ii ) what is the order of those subregions ; and ( iii ) for each subregion , which rule is to be applied to establish the order within that subregion .",
    "we also specify a unit region of area 1 for each order ( usually the unit square ) , and we indicate what rule is used to subdivide and order it",
    ". technically it would be possible to extend the orders to the full plane , but for simplicity we rather assume that all data that should be ordered is first scaled to lie within the unit region .",
    "the definitions of the scanning orders discussed in this paper are shown in figure  [ fig : thecurves ] .",
    "each rule is identified by a letter , and pictured by showing a region , its subdivision into subregions , the scanning order of the subregions ( by numbers \\{0,1,2 , ... } ) , and the rules applied to the subregions ( by letters ) .",
    "variations of rules that consist of simply rotating or mirroring the order of and within subregions , are indicated by rotating or mirroring the letter identifying that rule .",
    "variations that consist of reversing the order of and within the subregion are indicated by an overscore ( figure  [ fig : thecurves](k , l , m))making such reversals explicit is the main difference between our notation and the notation of , for example , asano et al .",
    "@xcite or wierum  @xcite .",
    "we can now see how we can implement a comparison operator that allows us to sort points according to a given scanning order . to decide whether @xmath9 precedes @xmath7 in the order",
    ", we determine in which subregions of the unit region @xmath9 and @xmath7 lie .",
    "if they are in different regions , @xmath9 precedes @xmath7 if and only if @xmath9 lies in the lowest - numbered region of the two . if @xmath9 and @xmath7 lie in the same region , we compare them according to the rule for that subregion recursively .",
    "ambiguity on the region boundaries can be resolved as follows : horizontal and diagonal region boundaries are always assumed to be included in the region above them ; vertical boundaries are assumed to be included in the region to the right .",
    "each drawing in figure  [ fig : thecurves ] includes a curve that roughly indicates the scanning order within the subdivisions . to obtain an arbitrarily fine approximation of a space - filling curve corresponding to a given scanning order",
    ", we may compute the subdivision of the unit region into subregions recursively to the desired depth of recursion , and connect the centre points of the resulting subregions by a polygonal curve in the order specified by the rules .",
    "figure  [ fig : thecurves ] includes a small example for each scanning order .    in the rest of this paper , whenever we write `` space - filling curve '' , what we really mean is the scanning order that defines it .",
    "the traditional scanning orders considered in this paper are the following .    * _ gp - order , _ producing the space - filling curve described in detail by giuseppe peano  @xcite ( figure  [ fig : thecurves](a ) ) .",
    "we call this order _ gp - order _ instead of _ peano order _ to avoid confusion with other curves that have also been referred to as the peano curve by other authors . *",
    "_ sierpiski - knopp - order , _ producing the sierpiski - knopp curve  @xcite ( figure  [ fig : thecurves](h ) ) .",
    "it orders triangular regions , and can be used to order points as described in section  [ howtouseit ] .",
    "niedermeier et al .",
    "@xcite describe how to use it to order squares in a @xmath26 grid for any @xmath27 , their variation is called h - order . for all purposes in our paper ,",
    "sierpiski - knopp order and h - order are equivalent . *",
    "_ hilbert order , _ producing hilbert s curve  @xcite ( figure  [ fig : thecurves](i ) ) .",
    "one could say that peano had already suggested that such a curve would exist  @xcite .",
    "* _ z - order , _ which follows a space - filling curve by lebesgue  @xcite ( figure  [ fig : thecurves](j ) ) ; morton is credited with introducing z - order to computer science  @xcite . * _ gosper flowsnake order _ , producing the gosper curve , also known as the flowsnake  @xcite ( figure  [ fig : thecurves](m ) ) .",
    "it involves scaling with a factor @xmath28 and rotations with angles of @xmath29 .",
    "in addition to the above we include a number of variations on these orders .",
    "wunderlich  @xcite defined a class of orders that satisfy certain restrictions , including :    * _ simplicity _ : the order is defined by only one rule , and transformed versions of it ; * _ order - preservation _ : transformations are rotations and/or reflections ( no reversals ) ; * _ edge - connectivity _ : considering the set of regions obtained by applying the rule to any depth of recursion , we find that any two consecutive regions in the order share an edge ; * _ uniformity _ : all subregions have the same size .",
    "wunderlich categorises all different simple , order - preserving , edge - connected , uniform orders based on subdividing the unit square in a grid of @xmath30 or @xmath31 squares ( modulo rotations , reflections and reversals ) .",
    "there is only one such order on a @xmath30 grid ( hilbert order ) , and there are only 273 on a @xmath31 grid : one which we call _ _ r - order _ _ ( figure  [ fig : thecurves](f ) ) , and 272 different orders that put the nine grid cells in the order of the ` serpentine ' pattern of the gp - order ( these differ in the rotations and reflections of the cells ) .",
    "we investigated all of these orders to some extent , and based on the results we studied some of them in more depth , particularly those depicted in figures  [ fig : thecurves](a)(e ) . by wunderlich s numbering scheme",
    "these orders are _ serpentine _ orders 000000000 , 011010110 , 101010101 , 110110110 , and 111111111 , respectively .",
    "the first of these is simply gp - order .",
    "luxburg  @xcite examined the third order calling it _",
    "variation  2 _ ; we call the next order _ meurthe order _ after the river in",
    "whose watershed we first presented it , and we call the last order _ coil order _ ( a variation also commonly found on the internet , and studied by luxburg as _ variation  1 _ ) .",
    "we explain in section  [ results ] why we chose exactly these orders .",
    "when some of the above - mentioned restrictions are dropped , more orders are possible .",
    "an example from the literature is wierum s _ _ @xmath22-order__-shaped section of the curve .",
    "wierum adds a special rule for the unit square so that he gets a closed ( cyclic ) curve , but for the purposes of our discussion this would be an unnecessary complication . ]",
    "@xcite , which is not simple , and unlike the other orders , it does not start and end in the corners of the unit square ( figure  [ fig : thecurves](k ) ) .",
    "another example is the -order which is not simple and not edge - connected , but still _ vertex - connected _ ( figure  [ fig : thecurves](l ) ) .",
    "it was designed to have the special property that any axis - parallel square query window can be covered by _",
    "three _ contiguous sections of the curve that together cover an area of at most a constant times that of the query window  @xcite  from most other curves in our study one would need at least _ four _ sections to get such a constant - ratio cover .",
    "most orders discussed so far can not be scaled in only one dimension , because their definitions involve rotations . for gp - order",
    "this is not the case .",
    "in fact , as we will see later , a scaling in the horizontal dimension by a factor @xmath32 results in an order with much better locality properties .",
    "we call the scaled order _ balanced gp - order _ ( figure  [ fig : thecurves](g ) ) .",
    "several locality measures , or more generally , quality measures of space - filling curves have been considered in the literature . these include :    * bounds on the ( average ) distance between two points along the curve as a function of their distance in the plane  @xcite ( non - trivial worst - case bounds are not possible  @xcite ) ; * bounds on the ( worst - case or average ) distance between two points in the plane as a function of their distance along the curve  @xcite ; * bounds on the ( worst - case or average ) number of contiguous sections of the curve that is needed to cover an axis - parallel query window , without covering too much space outside the query window  @xcite ; * bounds on the ( worst - case or average ) perimeter or diameter of sections of the curve as a function of their area  @xcite .    not all methods of analysis considered in the literature can easily be applied to compare all curves in our study . some calculations or experiments in the literature",
    "are based on how the scanning order sorts the points of a regular square grid whose size is a fixed integral power of the number of subregions in the rule(s ) that define(s ) the order .",
    "such measures may vary with the grid size , which prevents a fair comparison between , for example , gp - order ( for which we would have to use a grid size that is a power of nine ) and hilbert order ( for which we would have to use a grid size that is a power of four ) . to enable a comparison between a broad range of curves , we need measures that can be computed efficiently for large grids and converge when the grid size goes to infinity .",
    "before we can discuss and analyse quality measures for space - filling curves in detail , we need to introduce some notation .",
    "for ease of writing , we assume for now that if a scanning order is defined by more than one rule , then each rule contains the same number of subregions .",
    "a rule of a scanning order defines how to subdivide a unit region @xmath33 of size ( area ) 1 into @xmath34 subregions , numbered @xmath35 .",
    "the scanning order inside subregion @xmath36 is given by applying a transformation @xmath37 to the unit region @xmath33 and the way it is ordered by the ordering rule .",
    "for any base-@xmath34 number @xmath38 we use @xmath39 to denote its first digit , and @xmath40 to denote the remaining digits .",
    "we use @xmath41 as a shorthand for @xmath42 , where @xmath43 .",
    "for example , @xmath44 is subregion  8 of subregion  3 of subregion  5 , and it is found by applying transformation @xmath45 to @xmath46 .",
    "similarly , we use @xmath47 as a shorthand for @xmath48 , where @xmath49 is the identity transformation .    by @xmath50",
    "we denote the size of a region @xmath51 .",
    "we have @xmath52 for all @xmath53 ( there are no empty subregions in the rules ) , and @xmath54 .",
    "let @xmath55 denote the set of @xmath56-digit base-@xmath34 numbers .",
    "we write @xmath57 if , in base-@xmath34 notation , @xmath38 and @xmath58 have the same number of digits and @xmath59 . by @xmath60",
    "we denote the union of subregion @xmath58 and its predecessors , that is , @xmath61 , where @xmath62 .",
    "define @xmath63 , @xmath64 , @xmath65 , and @xmath66 .",
    "above we talked about the distance between two points along the curve , which may be a somewhat counter - intuitive concept for a curve that can be refined and therefore lengthened indefinitely .",
    "however , the distance between two points @xmath9 and @xmath7 along the curve is well - defined as the area filled by the section of the curve that runs from @xmath9 to @xmath7 , or more precisely , as : @xmath67      from the quality measures mentioned above , the most relevant and applicable to the construction of bounding - box hierarchies seem to be those that bound the ( worst - case or average ) distance between two points in the plane as a function of their distance along the curve .",
    "this is , intuitively , because points that lie close to each other along the curve are likely to be put together in a block .",
    "then , if the distance between those points in the plane is small too , the block may have a small bounding box .",
    "gotsman and lindenbaum  @xcite defined the following class of locality measures : @xmath68 where @xmath36 and @xmath69 are integers , @xmath70 is the @xmath36th square along the curve in a subdivision of the unit square into a regular grid of @xmath71 squares , and @xmath72 is the @xmath73-distance between the centre point @xmath74 of @xmath11 and the centre point @xmath75 of  @xmath76 . thus @xmath77 for @xmath78 , and @xmath79 .",
    "we note that the measure is easily generalised to scanning orders that are not based on regular grids , by defining it as : @xmath80 we call this measure @xmath81 for _ worst - case locality _ , as it indicates for points that lie close to each other on the curve how far from each other they might get in the plane .",
    "since we have @xmath82 for any pair of points @xmath9 and @xmath7 , we have @xmath83 for any space - filling curve .",
    "intuitively , one may expect a relation between locality and bounding box size , as explained above .",
    "however , we may also try to measure bounding box size directly .",
    "we define two measures to do so .",
    "the first is the _ worst - case bounding box area ratio _ ( wba ) : @xmath84 where @xmath85 is the smallest axis - aligned rectangle that contains @xmath11 .",
    "the second measure is the _ worst - case bounding box square perimeter ratio _ ( wbp ) : @xmath86 where @xmath87 is the perimeter of @xmath11 in the @xmath8 metric .",
    "taking the square of the perimeter is necessary , because otherwise the measure would be unbounded as @xmath56 ( the resolution of the `` grid '' ) goes to infinity . because the rectangle of smallest perimeter that has any given area is a square ,",
    "the `` ideal '' bounding box has squared perimeter 16 .",
    "the division by 16 gives an easy relation between @xmath88and @xmath13 : we have @xmath89 .",
    "furthermore , since the perimeter of the bounding box of two points @xmath9 and @xmath7 is simply twice their @xmath20-distance , we have @xmath90 .",
    "we can define measures similar to @xmath13and @xmath88when the bounding boxes used are not axis - parallel rectangles , but convex octagons whose sides have normals at angles of @xmath91 , @xmath92 , @xmath93 , @xmath94 , @xmath14 , @xmath95 , @xmath96 , and @xmath97 with the positive @xmath98-axis",
    ". we call these measures _ worst - case bounding octagon area ratio _ ( @xmath99 ) and _ worst - case bounding octagon square perimeter ratio _ ( @xmath100 ) . in the definition of @xmath100we",
    "still use the factor 16 to allow a direct comparison with @xmath88and @xmath13 . because the octagon of smallest perimeter that has area 1 has squared perimeter @xmath101 , we have @xmath102 .      [",
    "[ worst - case ] ] worst - case + + + + + + + + + +    for our application we argued that the average query response time is related to the total area and perimeter of the bounding boxes formed by grouping data points according to a given scanning order .",
    "when the points are sufficiently densely distributed in the unit region , the gap in the scanning order between the last point of a group and the first point in the next group will typically be small .",
    "thus the grouping practically corresponds to subdividing the complete unit region into curve sections , of which we store the bounding boxes . to assess the quality of the order",
    ", we can define the _ worst - case total bounding box area _ ( tba ) as follows : @xmath103 where @xmath104 is defined as  0 and @xmath105 is defined as  @xmath106 . since the bounding box area of each section",
    "@xmath107 is at most @xmath108 and the area of all sections together sum up to  1 , the total bounding box area is clearly at most  @xmath109 .",
    "but in fact we can prove the following .    for any uniform scanning order",
    ", we have @xmath110 .     of the gp curve with @xmath111 .",
    "middle and right : we can cover an arbitrarily large part of the unit region with such worst - case sections . ]    consider a section @xmath11 of the curve such that @xmath112 is equal to , or close to , @xmath113 .",
    "now consider a recursive subdivision , following the rules of the scanning order , of the unit region into a set @xmath114 of @xmath71 subregions ( cells ) .",
    "let @xmath115 be an approximation of @xmath11 that consists of all the cells of @xmath114 that are completely covered by @xmath11 , and let @xmath116 be the remaining cells of @xmath114 .",
    "note that we can repeat the construction within each of the cells of @xmath116 ( figure  [ fig : badtotal ] ) .",
    "@xmath117 by choosing @xmath71 big enough we can let @xmath118 be arbitrarily close to @xmath113 . thus we get : @xmath119 which solves to @xmath120 .",
    "[ [ average ] ] average + + + + + + +    as we showed above , the worst - case total bounding box area is not very informative . of greater practical relevance",
    "may be the _ average total bounding box area _",
    "( @xmath121 ) : @xmath122 where the average is taken over sets of @xmath123 cutting points @xmath124 uniformly chosen from the unit region .",
    "the above equation may serve as a complete definition of the @xmath121measure for _ fixed _",
    "@xmath71 , but this is not completely satisfactory .",
    "experimental results with the scanning orders described in this paper indicate that asymptotically , the measure does not grow or shrink with @xmath71 , but it exhibits a small fluctuation which repeats itself as @xmath71 increases by a factor 3 , 4 or 9 ( depending on the curve)in other words , the measure tends to be periodic in @xmath125 .",
    "therefore any fixed choice of @xmath71 is likely to give an advantage to some scanning orders and a disadvantage to others .",
    "therefore , we define the average total bounding box area more precisely as the above measure , averaged over a range of values of @xmath71 , such that @xmath71 is large enough and @xmath125 is uniformly distributed in a range that covers an integral number of periods of fluctuation of the curve under consideration .",
    "we define an _ average total bounding octagon area _ ( @xmath126 ) analogously .",
    "we could define an _ average total bounding box square perimeter _ in a similar way .",
    "however , we are ultimately interested in the average perimeter , not the square perimeter .",
    "we have to be more careful with the effect of @xmath71 now : we can not expect to keep roughly constant total bounding box perimeter as @xmath71 increases . to cut up a unit region into @xmath71 sections such that their total bounding box perimeter is minimum , we would have to cut it up into squares of area @xmath127 each , and their total bounding box perimeter would be @xmath128",
    ". therefore the total bounding box perimeter should be considered relative to @xmath128 , and we define the _ square average relative total bounding box perimeter _ ( @xmath129 ) as : @xmath130 in the above definition we still take the square in the end , to allow a direct comparison between @xmath129and @xmath88",
    ". the reader may verify that we must now have @xmath131 and @xmath132 .      because for some applications it may be interesting to keep the diameter of curve sections small  @xcite and because our software was easy to adapt to it , our results in section  [ results ] also include estimations of the _ square average relative total curve section diameter _",
    "( @xmath133 ) , defined as : @xmath134 where @xmath135 is the diameter of @xmath11 in the @xmath19-metric .",
    "we also compute @xmath136 : the same measure based on the @xmath20-metric .",
    "any scanning order with a rule that contains a triangle has @xmath137 .",
    "the area of a bounding rectangle of any triangle @xmath138 is at least twice the area of @xmath138 .",
    "any scanning order based on recursively subdividing an axis - aligned rectangle into a regular grid of rectangles has @xmath137 .",
    "[ lowerboundwbarectangles ]        consider a subdivision of the unit rectangle into a regular grid of @xmath71  rectangles , following the rules of the scanning order recursively to the depth where a grid of @xmath139 rectangles is obtained .",
    "we distinguish two cases : either there is a pair of rectangles that are consecutive in the scanning order and do not share an edge , or all pairs of consecutive rectangles share an edge .    in the first case ,",
    "the bounding box of such a pair contains at least four rectangles , and thus the curve section that covers that pair results in @xmath137 .    in the second case we argue as follows .",
    "let @xmath140 be these rectangles in order along the space - filling curve . for each rectangle @xmath141 ( @xmath142 )",
    ", let the edge of entry be the edge shared with @xmath143 , and for each rectangle @xmath141 ( @xmath144 ) , let the edge of departure be the edge shared with @xmath145 . among rectangles",
    "@xmath146 , we distinguish two types of rectangles : straight rectangles and corner rectangles .",
    "rectangle is a rectangle whose edges of entry and departure are not adjacent . a _ corner _ rectangle is a rectangle @xmath141 whose edges of entry and departure share a vertex  we call this vertex the inner corner of  @xmath141 , and the opposite vertex is the outer corner of @xmath141",
    "front part _ of @xmath141 is the part of @xmath141 that appears before the outer corner in the order .",
    "now we number the corner rectangles @xmath147 in the order in which they appear on the curve , let @xmath148 be their outer corners , and @xmath149 be the areas of their front parts ( figure  [ fig : rectanglegrid ] ) .",
    "note that any sequence of at least @xmath150 rectangles must include a corner rectangle , so @xmath151 .",
    "consider the curve section from @xmath152 to @xmath153 , for any @xmath154 .",
    "let the width of this section ( by number of rectangles ) be @xmath155 , let the height be @xmath156 , and let @xmath157 be the number of rectangles from @xmath158 to @xmath159 inclusive . observe that because there is exactly one corner rectangle between @xmath158 and @xmath159 , namely @xmath160 , we have @xmath161 , @xmath162 , and @xmath163 ( the @xmath164 is because @xmath160 counts towards both @xmath155 and @xmath156 ) . now",
    "the area of the curve section between @xmath152 and @xmath153 is @xmath165 , and the area of its bounding box is @xmath166 .",
    "hence we have @xmath167 , or equivalently , @xmath168 .",
    "for the sake of contradiction , suppose @xmath169 .",
    "from the above we get @xmath170 for all @xmath171 , where @xmath172 is @xmath173 .",
    "therefore @xmath174 .",
    "this must be true for any grid of rectangles that is obtained by refining the subdivision recursively , following the rules of the scanning order .",
    "so we must have @xmath175 and thus @xmath176 .",
    "niedermeier et al .",
    "@xcite prove @xmath177 for scanning orders that contain a section whose perimeter is an axis - aligned square . the proof is based on defining six points on the boundary of the square that need to be visited by the curve . for each possible order in which these points may be visited ,",
    "they add up the squares of the distances between each pair of consecutive points in the order .",
    "thus they derive a lower bound on this sum that holds for all orders in which the points can be visited . for the @xmath19- and @xmath8-metric this lower",
    "bound is at least @xmath178 times the area of the square , and the lower bounds on @xmath179 and @xmath180 follow .",
    "below we show how to apply this technique to triangular curve sections .",
    "unfortunately it does not work that well for rectangular curve sections .",
    "but there our new proof technique of theorem  [ lowerboundwbarectangles ] comes to rescue , leading to better bounds .",
    "any scanning order with a rule that contains a triangle has @xmath181 .",
    "consider a triangle that constitutes a contiguous section of the curve .",
    "let @xmath182 , @xmath183 and @xmath184 be its three vertices , in the order in which they appear on the curve .",
    "let @xmath185 be the point on the edge @xmath186 that appears before @xmath183 and is closest to @xmath184 among such points .",
    "let @xmath187 be a point on the segment @xmath188 , arbitrarily close to @xmath185 .",
    "let @xmath155 be the length of the edge @xmath186 , and let @xmath156 be the height of the triangle relative to this edge , that is , the distance between @xmath183 and the line containing @xmath186 , see figure  [ fig : triangle ] .",
    ", @xmath182 , @xmath183 , @xmath184 and @xmath187 on the boundary of a triangle , and a sketch of an order in which the space - filling curve may visit them . ]",
    "the curve may pass through the points just defined in four different orders , it must be @xmath189 , @xmath190 , @xmath191 , or @xmath192",
    ".    we will now analyse the last possibility in detail ( the others can be checked in a similar way ) .",
    "consider the first leg of this path .",
    "when going from @xmath182 to @xmath185 , the area @xmath193 filled by the curve must satisfy @xmath194 , that is : @xmath195 note that @xmath196 is at most the complete triangle , with @xmath197 .",
    "thus we get @xmath198 , which solves to @xmath199 .",
    "the other possible orders of @xmath200 and @xmath187 can be analysed in a similar way , leading to the same result .",
    "note that in fact we get @xmath201 , where @xmath202 is the height / width ratio that minimises the right - hand side .",
    "somewhat surprisingly , this implies that optimal locality can not be achieved with equilateral triangles : with @xmath203 they are subject to a lower bound of @xmath204 , while the triangles of the sierpiski - knopp order , with @xmath205 , give @xmath206  @xcite .",
    "the proof technique of niedermeier et al .  could also be modified for scanning orders that contain rectangular ( but not necessarily square ) sections .",
    "however , in that case the lower bound will drop below 3 ( consider rectangles of aspect ratio @xmath207 ) .",
    "below we show how to use the proof technique of theorem  [ lowerboundwbarectangles ] to get a lower bound of  4 , not only for @xmath208but also for @xmath209 .",
    "any scanning order based on recursively subdividing an axis - aligned rectangle into a regular grid of rectangles has @xmath210 .",
    "we follow the same approach as with theorem  [ lowerboundwbarectangles ] , but to get a good bound on @xmath209(not only @xmath208 ) , we need to be a bit more careful in the definition of the corners .",
    "consider a subdivision of the unit rectangle into a regular grid of rectangles , following the rules of the scanning order recursively to the depth where a grid of @xmath139 rectangles is obtained .",
    "let @xmath140 be these rectangles in the order in which the space - filling curve visits them .",
    "note that each rectangle touches the next one , at least in a vertex , otherwise @xmath208and @xmath209would be unbounded .",
    "assume that the height / width ratio of each rectangle is @xmath211 ( otherwise we swap the coordinate axes ) .",
    "within this proof , we define the width of a single rectangle to be @xmath212 , and so its height is @xmath213 and its area is  1 .    among rectangles",
    "@xmath214 , we distinguish three types of rectangles .",
    "a rectangle @xmath141 is _ straight _ when @xmath143 , @xmath215 and @xmath145 lie either in the same row , or in three different rows .",
    "a rectangle @xmath141 is a _ corner _",
    "rectangle when exactly one rectangle out of @xmath143 and @xmath145 lies in the same row as  @xmath141 .",
    "the _ outer corner _ of  @xmath141 is the vertex that lies farthest from @xmath143 and @xmath145 ; more precisely , if @xmath143 is in the same row as  @xmath141 , the outer corner is the vertex of  @xmath141 that touches neither the column of  @xmath143 nor the row of  @xmath145 ; otherwise , that is , if @xmath145 is in the same row as  @xmath141 , the outer corner is the vertex of  @xmath141 that touches neither the row of  @xmath143 nor the column of  @xmath145 .",
    "a rectangle @xmath141 is a _",
    "double corner _",
    "rectangle when @xmath143 and @xmath145 lie in the same row , but not in the same row as @xmath141implying that the curve makes something of a u - turn in @xmath141 .",
    "such a rectangle @xmath141 has two outer corners , namely the vertices of @xmath141 that do not touch @xmath143 or @xmath145 .",
    "we distinguish a first corner and a second corner , by the order in which they appear in the scanning order between @xmath143 and @xmath145 ( figure  [ fig : doublecorner ] ) .",
    "lie to the left , it is _ not _ a double corner rectangle , since the path to the predecessor is horizontal and a path to a rectangle in another row ( such as the successor @xmath51 ) is always considered to be vertical .",
    "rectangles @xmath5 and @xmath33 are double corner rectangles . ]",
    "now number the corner rectangles @xmath147 in the order in which they appear on the curve , with each double corner rectangle listed twice .",
    "let @xmath148 be the outer corners of these rectangles . where @xmath158 and @xmath160 are the two copies of a double corner rectangle",
    ", @xmath152 is the first corner and @xmath216 is the second corner .",
    "front part _ of @xmath217 is the part of @xmath217 that appears before @xmath218 in the order .",
    "as before , we have @xmath151 .    as before",
    ", we will argue about curve sections between two corners @xmath152 to @xmath153 , for even @xmath36 .",
    "in addition we assume that for even @xmath36 , the rectangles @xmath158 and @xmath160 lie in the same row ( if this is not the case , we could simply do the calculations given below for odd @xmath36 instead of even @xmath36 ) .    for the sake of contradiction ,",
    "assume that @xmath219 .",
    "let @xmath220 be the number of rectangles in the order from @xmath158 to @xmath160 inclusive ( @xmath155 could be  1 if @xmath221 is a double corner rectangle ) , and @xmath162 the number of rectangles in the order from @xmath160 to @xmath159 inclusive ) .",
    "the @xmath19-distance between @xmath152 and @xmath216 is at least @xmath222 , hence we get + @xmath223 , which we rewrite as : @xmath224    the @xmath19-distance between @xmath216 and @xmath153 is at least @xmath225 .",
    "hence we get : @xmath226 which we rewrite as : @xmath227    adding up equations [ barconstraint ] and  [ legconstraint ] we get : @xmath228 furthermore equation [ rawlegconstraint ] gives us @xmath229 . from this",
    "we get that @xmath156 must be either 2 or 3",
    ". in the case of @xmath230 equation [ lconstraint ] becomes : @xmath231 in the case of @xmath232 and @xmath233 equation [ lconstraint ] becomes : @xmath234 in the case of @xmath232 and @xmath161 equation [ lconstraint ] becomes : @xmath235    thus we get @xmath236 in all cases .",
    "the proof now concludes as for theorem  [ lowerboundwbarectangles ] , leading to the conclusion @xmath237 , which also implies @xmath181 .",
    "niedermeier et al .",
    "@xcite also proved @xmath210 , but for another class of scanning orders , namely those that ( i ) contain a section whose perimeter is an axis - aligned square and ( ii ) are cyclic , that is , the end of that section touches its beginning .",
    "our proof does not need those conditions , but needs others .",
    "to prove @xmath181 we require that the curve has a triangular section , or that it has a rectangular section subdivided recursively into a regular grid of rectangles .",
    "regarding @xmath20-locality , niedermeier et al .  proved @xmath238 if both conditions ( i ) and ( ii ) hold , and @xmath239 if only condition ( i ) holds .",
    "we have no results to complement this : it seems hard to use our technique to prove any lower bound on @xmath240 which is significantly better than 4 .",
    "in this section we describe how we can obtain upper and lower bounds on the quality measures such as the worst - case locality and the worst - case bounding box quality measures defined in section  [ measures ] . for ease of description ,",
    "we assume that the scanning order is defined by a single recursive rule without reversals . the techniques described below",
    "can easily be extended to multiple - rule scanning orders or scanning orders with reversals ( in fact that is what we implemented ) .",
    "let @xmath241 be a mapping from regions to real numbers in a way that is invariant under all transformations @xmath37 involved in the recursive definition of the scanning order .",
    "for example , @xmath242 could be @xmath243 , or the square of the diameter of @xmath244 divided by  @xmath245 .",
    "our goal is to approximate @xmath246 .",
    "( we may also let @xmath241 depend on @xmath247 and/or @xmath248 . )",
    "the mapping @xmath241 must be well - defined when @xmath249 is not empty ; when @xmath250 we may assume @xmath251 .",
    "we will compute the approximation of @xmath252 by exploring _ probes_. a probe @xmath253",
    "is specified by three consecutive subsections of the order : a front section , a midsection , and a tail section .",
    "the probe @xmath253 thus describes a set of contiguous subsections of the scanning order , namely all those subsections @xmath11 that start somewhere in the front section of @xmath253 and end somewhere in the tail section of @xmath253 . for any probe @xmath253 ,",
    "let @xmath254 be the transformation that transforms @xmath33 into the front section of  @xmath253 ; let @xmath255 be the midsection of  @xmath253 ; and let @xmath256 be the transformation that transforms @xmath33 into the tail section of  @xmath253 .",
    "a section @xmath257 of a probe @xmath253 is the region @xmath258 .",
    "let @xmath259 be the maximum value of @xmath260 over all subsections @xmath11 covered by the probe , that is , @xmath261 .",
    "a probe @xmath253 may be rotated , mirrored , scaled and/or reversed : this does not affect the value of  @xmath259 .     of the hilbert order . the front transformation @xmath262 consists of scaling with factor @xmath263 and a reflection in the line @xmath264 .",
    "the midsection @xmath265 is the square @xmath266 \\times [ \\frac12,1]$ ] ( the dark area in the figure ) .",
    "the tail transformation @xmath267 consists of scaling with factor @xmath263 and a translation over @xmath268 .",
    "( c )  canonical form  @xmath269 of  @xmath270",
    ". the canonical form is obtained from @xmath270 by applying the transformation @xmath271 , that is , reflection in the line @xmath264 and scaling with factor  2 .",
    "( d )  refinement @xmath272 of  @xmath269 .",
    "( e )  the same refinement in canonical form : child  @xmath273 of  @xmath269 . ]    all subsections of the scanning order can be captured by a set of probes as follows . for @xmath274 ,",
    "let _ base probe _ @xmath275 be the probe with front transformation @xmath37 , midsection @xmath276 , and tail transformation @xmath277 . for an example , see figure  [ fig : probes](a , b ) .",
    "@xmath278 .    for any @xmath279 , let @xmath280 be any pair such that @xmath57 and @xmath281 .",
    "now let @xmath282 be the longest common prefix of @xmath38 and @xmath58 .",
    "note that @xmath38 and @xmath58 have the same number of digits , so @xmath282 must be a proper prefix of both @xmath38 and @xmath58 .",
    "let @xmath283 be the digit of @xmath38 following the prefix @xmath282 , and let @xmath284 be the digit of @xmath58 following the prefix @xmath282 .",
    "thus @xmath41 lies in subregion @xmath283 of @xmath285 , and @xmath286 lies in subregion @xmath284 of @xmath285 . since @xmath241 is invariant under @xmath287 , it follows that @xmath288 .",
    "thus , for any @xmath279 , there are @xmath274 such that @xmath289 .",
    "this implies there are @xmath274 such that @xmath290 , which proves the lemma .",
    "let _ refinement _ @xmath291 of probe @xmath253 , with @xmath292 , be the probe with front transformation @xmath293 , tail transformation @xmath294 , and midsection @xmath295 ; see figure  [ fig : probes](c , d ) . since @xmath296 , we have @xmath297 .",
    "we say a probe @xmath253 is in canonical form if @xmath254 is the identity transformation .",
    "we can construct a canonical form @xmath269 of any probe @xmath253 by setting @xmath298 to the identity transformation , @xmath299 , and @xmath300 ; see figure  [ fig : probes](c , e ) . since @xmath241 is invariant under all transformations involved , we have @xmath301 . therefore it suffices to work only with probes in canonical form , where the _ children _ of a canonical probe @xmath269 are the canonical forms of its refinements .",
    "so child @xmath302 is the canonical probe with midsection @xmath303 and tail transformation @xmath304 ( figure  [ fig : probes](e ) ) .",
    "observe that @xmath305 always includes scaling with a factor greater than 1 , so for any canonical probe @xmath269 and any canonical child @xmath302 we have @xmath306 , unless @xmath307 , @xmath308 and @xmath309 .",
    "note that while computing @xmath310 may be difficult , it may be easy to get a lower bound @xmath311 and an upper bound @xmath312 on @xmath310 .",
    "for example , if @xmath313 is defined as @xmath314 , then @xmath315 would be a lower bound on @xmath310 , and @xmath316 would be an upper bound on @xmath310 ( provided @xmath317 , otherwise we define @xmath318 ) .",
    "our general algorithm to approximate @xmath252 is shown in figure  [ fig : algorithm ] .",
    "the main idea of the algorithm is that it keeps replacing probes by their refinements to get tighter lower and upper bounds on  @xmath252 .",
    "it is easy to see that the algorithm produces a correct lower bound .",
    "we will prove that the algorithm also produces a correct upper bound by proving that the following invariant holds after every iteration of the while loop : for every probe @xmath269 that was ever added to the queue and has @xmath319 , there is a descendant @xmath320 of @xmath269 in @xmath6 such that @xmath321 .",
    "in fact the algorithm would be trivial to prove correct if we would omit the check if @xmath302 is contained in @xmath244 on line  [ checkr ] .",
    "however , the algorithm would be useless , because the queue would continue to contain _ degenerate probes _ , that is , probes @xmath269 with @xmath308 . this is because some degenerate",
    "probes are inserted on line  [ initq ] ( namely all base probes @xmath275 with @xmath322 ) , and whenever a degenerate probe @xmath269 is extracted from the queue , its degenerate child @xmath323 would be added to the queue . since @xmath324 for degenerate probes , the algorithm would never find an actual upper bound on @xmath252 .",
    "fortunately , it is easy to see that for most space - filling curves the algorithm can only generate a small number of _ different _ degenerate probes : typically for any degenerate canonical probe the transformation @xmath325 has scale factor one , rotations and reflections form a small closed set , and the translation is fixed because the tail section has to connect to the front section .",
    "moreover , non - degenerate probes have only non - degenerate children .",
    "therefore , making sure that no probe is inserted in @xmath6 more than once , guarantees that @xmath6 soon becomes and remains free of degenerate probes , and the algorithm soon finds an upper bound on @xmath252 .",
    "we have to prove , however , that this upper bound is indeed correct .",
    "algorithm @xmath326 returns correct lower and upper bounds on  @xmath252 .",
    "we need to prove that , despite the fact that the algorithm refuses to insert probes in @xmath6 that were inserted before , the invariant still holds after every iteration : for every probe @xmath269 that was ever added to the queue and has @xmath319 , there is a descendant @xmath320 of @xmath269 in @xmath6 such that @xmath321 .",
    "for the sake of contradiction , let @xmath269 be the probe that is removed from @xmath6 in the first iteration that violates the invariant and does not restore it by inserting children of @xmath269 .",
    "since @xmath319 , the probe @xmath269 must have a child @xmath302 with @xmath327 .",
    "if this child is not inserted in @xmath6 ( restoring the invariant ) , it must be because @xmath244 contains @xmath302 already , which implies that at the beginning of the iteration @xmath6 contained a descendant @xmath328 of @xmath302 with @xmath329 .",
    "since @xmath328 is also a descendant of @xmath269 , the invariant that @xmath6 holds a descendant @xmath320 of @xmath269 with @xmath321 can only be violated by also removing ( at least ) @xmath328 .",
    "but we remove only one probe from the queue , so this implies @xmath330 , and we have that @xmath302 is a descendant of @xmath269 and vice versa .",
    "now as observed above , from canonical parent to canonical child the size of the midsection is either zero or strictly increasing .",
    "so if @xmath269 is a descendant of @xmath302 , we must have @xmath331 , @xmath307 , and @xmath309 .",
    "consider a full line of ancestry of @xmath302 down from itself , that is , a sequence of canonical probes @xmath332 , where @xmath333 , @xmath334 , and each probe @xmath335 is a child of @xmath336 , for @xmath337 .",
    "we have @xmath338 for all @xmath339 .",
    "we prove by induction on @xmath71 that at the end of the current iteration , we have for all @xmath337 that @xmath336 is in @xmath244 but not in @xmath6 . for @xmath340 this is true because the violation of the invariant is caused by not inserting @xmath302 in @xmath6 , which must be because it is in @xmath244 already . now , given that @xmath341 are in @xmath244 but not in @xmath6 , consider @xmath335 .",
    "the probe @xmath335 is in @xmath244 , because @xmath342 is in @xmath244 and not in @xmath6 ; when @xmath336 was removed from @xmath6 , its child @xmath335 , with @xmath343 , must have been added to @xmath244 if it was not in @xmath244 already .",
    "but again @xmath335 is not in @xmath6 , otherwise @xmath6 would contain a descendant of @xmath269 and the invariant would not be violated .",
    "therefore @xmath332 are all in @xmath244 but not in @xmath6 , that is , they were all once added to the queue and have been extracted since .",
    "it follows that any non - degenerate children @xmath344 of @xmath332 with @xmath345 were once inserted in @xmath244 and @xmath6 , so @xmath6 must still contain descendants of any such non - degenerate children @xmath344 .",
    "the removal of @xmath269 , a degenerate probe , did not change that , so if there was ever such a non - degenerate child @xmath344 with @xmath345 , then a descendant @xmath320 of @xmath344 , and thus , of @xmath269 , with @xmath321 , would still exist in @xmath6 and the invariant would not be violated .",
    "so we must conclude that for @xmath337 , the degenerate probe @xmath335 is the _ only _",
    "child @xmath344 of @xmath336 with @xmath345 .",
    "it follows that @xmath269 in particular does not have any non - degenerate descendant probes @xmath344 with @xmath345 .",
    "now , for any value @xmath279 , let @xmath280 be any pair such that @xmath346 .",
    "let @xmath283 be @xmath38 followed by a zero , and let @xmath284 be @xmath58 followed by a zero .",
    "now we have @xmath347 , and @xmath348 .",
    "the probe @xmath344 with midsection @xmath349 , and tail transformation @xmath350 , is a non - degenerate descendant probe of @xmath269 with @xmath351 .",
    "since we can find such a non - degenerate descendant probe of @xmath269 for every @xmath279 , this contradicts the conclusion of the previous paragraph that @xmath269 does not have any non - degenerate descendant probes @xmath344 with @xmath345 .",
    "hence there can not be such a probe @xmath269 whose removal from @xmath6 leads to the invariant being violated at the end of an iteration . therefore the invariant is maintained , and the algorithm is correct .      to implement algorithm @xmath326 for a particular measure , one needs to come up with a representation of midsections of canonical probes @xmath269 that enables a quick , correct , and reasonably tight approximation of @xmath310 from above and below . if the approximations are tight , the algorithm may zoom in on the worst - case sections of the curve quickly , keeping a small probe queue  @xmath6 and refining only where necessary .",
    "if the approximations are not tight enough , the algorithm may degenerate into a search of a complete grid , taking long to converge or not converging at all .",
    "for an efficient operation of the algorithm the representation of the midsections should also be easy to maintain under the transformations in the rules that describe the scanning order .    for some curves and measures",
    "a good implementation is easier to accomplish than for others .",
    "to compute @xmath209 , @xmath208 , and @xmath352we only need to know the size ( area ) of the midsection ; for @xmath13and @xmath88we also need to know the minimum rectangular bounding box of the midsection ; for @xmath99and @xmath100we need to know the minimum octagonal bounding box . for curves that only use axis - parallel reflections and rotations with angles of @xmath93 , @xmath14 and @xmath96 ,",
    "these midsection properties can be maintained easily .",
    "fortunately , most curves presented in section  [ thecurves ] fulfill these requirements .",
    "however , the sierpiski - knopp order and the gosper flowsnake use rotations that are not multiples of @xmath353 , and as a result the @xmath209 , @xmath352 , @xmath13 , @xmath88 , @xmath99and @xmath100measures are not invariant under rotation as required by the algorithm .    . ]    for the sierpiski - knopp order this is easily solved by expanding the definition by one level of recursion , see figure  [ fig : sierpinski - expansion ] .",
    "for the gosper flowsnake we observe that @xmath208is invariant under rotation and can still be computed by our algorithm . because the rotations of the curve are not a rational fraction of @xmath14 , any pair of points that defines the worst - case @xmath8-locality will appear scaled down and turned arbitrarily close to horizontal somewhere in the curve , so that we have @xmath354 .",
    "since the @xmath8-distance between any pair of points is at least their @xmath19-distance , it follows that @xmath355 .",
    "likewise , any pair of points that defines the worst - case @xmath8-locality will appear scaled down and turned arbitrarily close to making a 45 degree angle with the horizontal , so that we have @xmath356 and @xmath357 .",
    "since the squared @xmath20-distance between any pair of points is at most twice their squared @xmath8-distance , it follows that @xmath358 . for the computation of @xmath109 , @xmath359 , @xmath360 and @xmath361 similar arguments",
    "could be used , provided the boundaries of unit regions and midsections are represented in such a way that one can determine good lower and upper bounds on the maximum , over all possible rotations , of the size of the minimum bounding box .",
    "this seems hard to accomplish due to the fractalic nature of the region boundaries .",
    "[ [ computing - pairwise - worst - case - measures ] ] computing pairwise worst - case measures + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we implemented the approximation algorithm described above , specifically to compute the worst - case locality measures @xmath179 , @xmath180 , and @xmath240 , the worst - case bounding box quality measures @xmath109 and @xmath359 , and the corresponding measures for bounding octagons @xmath360 and @xmath361 .",
    "we ran our algorithm on the curves mentioned in section  [ thecurves ] , except that we did not try to compute @xmath109 , @xmath359 , @xmath360 and @xmath361 for the gosper flowsnake , because of the reasons explained in section  [ sec : implementation ] .",
    "the running times of the computations varied with the curves .",
    "when the algorithm succeeded in having a probe queue of constant size , we would have an approximation with precision 0.0001 within a fraction of a second ( higher precision being prevented by the number of bits used to represent numbers ) ; when the probe queue kept growing , the computation could take a few minutes and the precision would be limited by memory requirements .",
    "@xmath13 , @xmath88 , @xmath99and @xmath100were always computed fast and precise ; @xmath352was fast and precise for all orders except sierpiski - knopp order ; @xmath208and @xmath209were generally computed only to a precision of 0.0005 .",
    "we tested the 278 different orders that fit wunderlich s scheme and are defined on a @xmath30-grid ( that is , hilbert order ) , a @xmath31-grid ( r - order and the 272 serpentine orders ) , or a @xmath362-grid ( 4  different orders , not counting hilbert order ) . from these orders five curves @xmath363 turned out to be `` dominant '' in the sense that there was no curve that was better than @xmath363 on at least one measure and at least as good as @xmath363 on the other measures .",
    "these five curves are the hilbert order ( best on @xmath352 , @xmath88and @xmath100 ) , serpentine 000000000 ( that is , gp - order , best on @xmath13and @xmath99 ) , serpentine 011010110 and 101010101 ( with equal scores , not best on anything but not dominated either ) , and serpentine 110110110 ( meurthe , best on @xmath208and @xmath209 ) .",
    "[ [ computing - average - total - measures ] ] computing average total measures + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we examined the five dominant curves further , together with coil order , balanced gp - order , @xmath22-order , -order , z - order and sierpiski - knopp order . for these curves we estimated the average total bounding box area and the square average relative total bounding box perimeter ( also for bounding octagons ) by random sampling as follows : we generated 100 sets of numbers chosen uniformly between 0 and 1 that subdivide the curve , where the logarithm of the size of each set was chosen uniformly between @xmath364 and @xmath365 .",
    "thus we cover an integral number of periods of fluctuation for each scanning order .",
    "we estimated the average total area ( or relative perimeter ) by taking the average over these 100 sample subdivisions .",
    "because in some applications it is useful to keep the @xmath20-diameter of curve sections small and our software was easy to adapt to it , we used the same method to also estimate the square average relative total curve section diameter in the @xmath19 metric ( @xmath133 ) and in the @xmath20 metric ( @xmath136 ) .",
    "[ [ results ] ] results + + + + + + +    the results of our computations are shown in table  [ tbl : bounds ] .",
    "note that for some scanning orders the exact worst - case locality measures were already known : tight lower and upper bounds for the hilbert order were proven one by one in several papers : lower bounds on @xmath209 , @xmath208 , and @xmath352by alber and niedermeier  @xcite , gotsman and lindenbaum  @xcite , and niedermeier and sanders  @xcite , respectively ; upper bounds by bauman  @xcite , bauman  @xcite , and chochia et al .",
    "@xcite , respectively .",
    "tight bounds for gp - order , coil order ( luxburg 1 ) , and luxburg 2 were proven by luxburg  @xcite , and tight bounds for sierpiski - knopp order were proven by niedermeier et al .",
    "@xcite , confirming earlier observations on @xmath208  @xcite ( with respect to these measures , the h - order described by niedermeier et al .  is equivalent to sierpiski - knopp order and to cesro s variant of the von koch curve as mentioned by mandelbrot  @xcite ) .",
    "our computations confirmed all of these results .",
    "the other bounds have been computed by us .",
    "the bounds on the w - measures are the average of lower and upper bounds which have a gap of at most 0.0005 ; all printed numbers are less than 0.001 off from the real values . only the bounds for the gosper flowsnake are less precise ( this order involves rotations by angles of @xmath366 , which makes it more challenging to get bounds with high precision ) .",
    "the bounds on the a - measures result from our experiments with random subdivisions of curves .",
    "we omit the results for @xmath136 , because for all curves we found that @xmath367 .",
    "this means that the best total @xmath20-diameter is obtained by rotating the curve by 45 degrees , so that the square total @xmath20-diameter becomes twice the original square total @xmath19-diameter .",
    "the sierpiski - knopp order was the only one not affected by the rotation .",
    "order & & & & & & & & & & & + sierpiski - knopp order & 4 & & 4 & & 8 & & 3&.000 & 1&.78 & 3&.000 & 1&.42 & 1&.789 & 1&.25 & 1&.629 & 1&.77@xmath368 + * balanced gp * & 4&.619 & 4&.619 & 8&.619 & 2&.000 & 1&.44 & 2&.155 & 1&.19 & 1&.769 & 1&.31 & 1&.807 & 1&.72@xmath368 + gp ( serp.000000000 ) & 8 & & 8 & & 10&2/3 & 2&.000 & 1&.44 & 2&.722 & 1&.28 & 1&.835 & 1&.32 & 2&.395 & 2&.13@xmath368 + * serpentine011010110 * & 5&.625 & 6&.250 & 10&.000 & 2&.500 & 1&.44@xmath369 & 2&.500 & 1&.20 & 2&.222 & 1&.32@xmath368 & 2&.036 & 1&.71@xmath368 + luxburg 2 ( 101010101 ) & 5&5/8 & 6&1/4&10 & & 2&.500 & 1&.49@xmath368 & 2&.500 & 1&.24 & 2&.222 & 1&.35@xmath368 & 2&.036 & 1&.81@xmath368 + * meurthe ( 110110110 ) * & 5&.333 & 5&.667 & 10&.667 & 2&.500 & 1&.41@xmath369 & 2&.667 & 1&.17 & 2&.000 & 1&.30@xmath368 & 2&.018 & 1&.64@xmath368 + coil ( serp.111111111 ) & 6&2/3 & 6&2/3&10&2/3 & 2&.500 & 1&.41@xmath368 & 2&.667 & 1&.17 & 2&.222 & 1&.29@xmath368 & 2&.424 & 1&.63@xmath368 + hilbert & 6 & & 6 & & 9 & & 2&.400 & 1&.44 & 2&.400 & 1&.19 & 1&.929 & 1&.30 & 1&.955 & 1&.67@xmath368 + @xmath22 & 5&.000 & 5&.000 & 9&.000 & 2&.222 & 1&.42 & 2&.250 & 1&.17 & 1&.800 & 1&.29 & 1&.933 & 1&.64@xmath368 + & 5&.400 & 6&.046 & 12&.000 & 3&.055 & 1&.49@xmath368 & 3&.125 & 1&.22 & 2&.344 & 1&.33 & 2&.255 & 1&.70@xmath368 + z - order & & @xmath370&&@xmath370&&@xmath370&&@xmath370 & 2&.92 & & @xmath370 & 2&.40@xmath368&&@xmath370 & 2&.46 & & @xmath370 & 3&.80@xmath369 + gosper flowsnake & 6&.35 & 6&.35 & 12&.70 & & & & & & & & & & & & & & +    regarding worst - case locality in the @xmath19- and @xmath8-metrics , we see that the best order in wunderlich s scheme had not yet been found : meurthe ( serpentine 110110110 ) turns out to have even better locality in these measures than luxburg s second variant ( serpentine 101010101 ) .",
    "even better locality is achieved by wierum s @xmath22-curve ( matching or improving on hilbert s curve in all measures ) and still better by our new peano variant : balanced gp . the latter approaches the locality of the sierpiski - knopp order , which is still conjectured to be optimal .",
    "however , it appears that the optimal locality of the sierpiski - knopp order comes at a price : it results in high worst - case bounding box measures , and in our experiments on random subdivisions the resulting bounding boxes are about 25% worse than with most other orders .",
    "only z - order , which tends to result in bounding boxes twice as big as with the other orders , performs worse .",
    "the best performer on the worst - case bounding box measures is our balanced gp - order , which also performs well in the experiments on random subdivisions ( similar to hilbert ) , but coil order , meurthe order and @xmath22-order perform even better in the experiments .",
    "we also computed worst - case and average total bounding box measures for rectangular bounding boxes with edges at 45 degrees angles with the coordinate axes .",
    "this was ( very ) harmful with all scanning orders except sierpiski - knopp order , where it had no effect ( this was to be expected , because the definition of sierpiski - knopp order involves rotations by all multiples of 45 degrees ) .",
    "the sierpiski - knopp order benefits more than any other from using octagonal bounding boxes instead of rectangular bounding boxes , as we can see in the right columns : here sierpiski - knopp order is the best performer .",
    "however , all things considered the advantages of bounding octagons may not be worth the effort .",
    "such octagonal bounding boxes need twice the description size of rectangular bounding boxes , but the savings are small : in total bounding octagons constructed by sierpiski - knopp order are only 13% smaller than bounding rectangles constructed by hilbert or gp - order .",
    "[ [ pairwise - worst - case - measures ] ] pairwise worst - case measures + + + + + + + + + + + + + + + + + + + + + + + + + + + +    known locality measures of space - filling curves do not predict well how effective they are when used to group points into bounding boxes .",
    "therefore we proposed new measures of bounding - box quality of space - filling curves .",
    "we presented new scanning orders that perform well on these measures , most notably the _ balanced gp - order _ , which has worst - case bounding box area ratio ( @xmath13 ) 2.000 , and worst - case bounding box square perimeter ratio ( @xmath88 ) 2.155 . on worst - case locality measures",
    "this curve also scores very well , much better than peano s original curve , and beaten only by sierpiski - knopp order .",
    "we conjecture that a worst - case bounding box area ratio ( @xmath13 ) of 2 is in fact optimal and can not be improved by any ( recursively defined ) space - filling curve .",
    "more provocatively we conjecture that the optimal worst - case bounding box square perimeter ratio ( @xmath88 ) is also  2 ( note that we have not actually found a curve with @xmath88less than 2.155 ) .",
    "we add these conjectures to those by niedermeier et al .",
    ", who conjectured that the optimal @xmath209 , @xmath208 , and @xmath352locality values are 4 , 4 , and 8 , respectively ( niedermeier et al .  posed this conjecture for curves filling a square , but we would like to drop this restriction ) .    for proving the lower bounds in these conjectures we have come a long way .",
    "niedermeier et al .",
    "proved tight lower bounds on the worst - case locality for a certain class of space - filling curves .",
    "unfortunately , strictly speaking almost none of the space - filling curves in our study belongs to that class . for @xmath8-locality and for worst - case bounding - box area and",
    "squared perimeter , we managed to prove the conjectured lower bounds for another class of space - filling curves , partly overlapping with the class covered by niedermeier et al . , and now including almost all space - filling curves mentioned in this paper .",
    "still we have not been able to prove these lower bounds for _ all _ space - filling curves .",
    "our proof is restricted to scanning orders based on axis - aligned rectangles in a regular grid pattern and to scanning orders based on triangles . in this paper",
    "we mentioned the gosper flowsnake curve , which is based on a subdivision of a unit region into subregions that all have fractalic boundaries , and is therefore not included in the class of scanning orders to which our lower bounds apply .",
    "of course one may argue that from a practical point of view it is questionable if one would like to use such a curve anyway , but we can also come up with scanning orders based on tiling the plane with rectangles  but not in a standard grid pattern  or l - shapes , for example ( see figure  [ fig : bricks ] ) .",
    "our bounds do not apply to such curves , and the bounds by niedermeier et al .",
    "do not necessarily apply either .",
    "our experiments on random points may give an impression of how effective the different curves would be in the application considered in this paper : a data structure for points in the plane , based on sorting the points into blocks of points that are consecutive along the curve .",
    "we see that it would be clearly suboptimal to use the order with the best @xmath375 and @xmath376 locality ( sierpiski - knopp order ) for this application .",
    "it seems to be better indeed to choose a curve based on @xmath13and @xmath88(balanced gp - order ) .",
    "still the @xmath13and @xmath88measures do not predict performance on random points perfectly either : there are several curves with only moderate @xmath13and @xmath88values that seem to be as effective as the balanced gp - order ( for example hilbert order ) or even slightly better ( for example coil order or @xmath22-order ) on random point data .",
    "it should also be noted that total bounding - box area and perimeter may not be the only factors that determine the performance of a curve in a data structure setting .",
    "asano et al .",
    "@xcite argued that in certain settings it would be good if any axis - parallel square query window can be covered by a small number of contiguous sections of the curve that together cover an area of at most a constant times that of the query window .",
    "it would be interesting to have an algorithm that can analyse a given curve automatically to compute the constants involved , in the worst case and on average .      for what the @xmath13and @xmath88measures are worth",
    ", the conjectured near - optimality of the balanced gp - order suggests that there is little room for hope to find significantly more effective scanning orders in two dimensions .",
    "a first topic for further research is to determine the gap between our lower bound constructions and the performance of known space - filling curves when we consider generalisations to three dimensions .",
    "chochia and cole  @xcite and niedermeier et al .",
    "@xcite have some results on locality , but the gap is large and the field is still wide open , especially with respect to bounding box quality .",
    "still higher dimensions can be interesting ; four - dimensional space - filling curves can be particularly interesting to order rectangles in the plane ( which are specified by four coordinates each )  @xcite .",
    "a first challenge in that context is to define appropriate quality measures that say something sensible about the quality of bounding boxes in two dimensions that are formed by grouping points in four dimensions .",
    "j.  akiyama , h.  fukuda , h.  ito , and g.  nakamura .",
    "infinite series of generalized gosper space filling curves . in _ china - japan conf . on discrete geometry , combinatorics and graph theory 2005 _ , lncs 4381 , pp 19 , 2007 ."
  ],
  "abstract_text": [
    "<S> space - filling curves can be used to organise points in the plane into bounding - box hierarchies ( such as r - trees ) . </S>",
    "<S> we develop measures of the _ bounding - box quality _ of space - filling curves that express how effective different space - filling curves are for this purpose . </S>",
    "<S> we give general lower bounds on the bounding - box quality measures and on locality according to gotsman and lindenbaum for a large class of space - filling curves . </S>",
    "<S> we describe a generic algorithm to approximate these and similar quality measures for any given curve . using our algorithm we find good approximations of the locality and the bounding - box quality of several known and new space - filling curves . </S>",
    "<S> surprisingly , some curves with relatively bad locality by gotsman and lindenbaum s measure , have good bounding - box quality , while the curve with the best - known locality has relatively bad bounding - box quality . </S>"
  ]
}
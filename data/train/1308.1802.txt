{
  "article_text": [
    "the aim of graph editing or modification problems is to change a given graph as little as possible by applying specified operations in order to satisfy a certain property .",
    "standard operations are vertex deletion , edge deletion , edge addition and edge contraction , but other operations are considered as well .",
    "various problems of this type are well - known and widely investigated . for example , such problems as clique , independent set , feedback ( edge or vertex ) set , cluster editing and many others can be seen as graph editing problems .",
    "probably the most extensively studied variants are the problems for hereditary properties .",
    "in particular , lewis and yannakakis  @xcite proved that for any non - trivial ( in a certain sense ) hereditary property , the corresponding vertex - deletion problem is np - hard .",
    "the edge - deletion problems were considered by yannakakis  @xcite and alon , shapira and sudakov  @xcite .",
    "the case where edge additions and deletions are allowed and the property is the inclusion in some hereditary graph class was considered by natanzon , shamir and sharan  @xcite and burzyn , bonomo and durn  @xcite .",
    "the results by cai  @xcite and khot and raman  @xcite give a characterization of the parameterized complexity . for non - hereditary properties ,",
    "a great deal less is known .",
    "moser and thilikos in  @xcite and mathieson and szeider  @xcite initiated a study of the parameterized complexity of graph editing problems where the aim is to obtain a graph that satisfies degree constraints .",
    "mathieson and szeider  @xcite considered different variants of the following problem :    .99 editing to a graph of given degrees +    [ cols= \" > , < \" , ]     they proved the following theorem .",
    "[ thm : edit - cost ] edge editing to a graph of given degrees with costs can be solved in polynomial time .",
    "we also need some results about graphic sequences for bipartite graphs .",
    "let @xmath11 and @xmath12 be non - increasing sequences of positive integers .",
    "we say that the pair @xmath13 is a _",
    "bipartite graphic pair _ if there is a bipartite graph @xmath0 with the bipartition of the vertex set @xmath14 , @xmath15 such that @xmath16 for @xmath17 and @xmath18 for @xmath19 .",
    "it is said that @xmath0 _ realizes _ @xmath13 .",
    "gale and ryser  @xcite gave necessary and sufficient conditions for @xmath13 to be a bipartite graphic pair .",
    "it is more convenient to give them in the terms of partitions of integers .",
    "recall that a non - increasing sequence of positive integers @xmath11 is a _ partition _ of @xmath20 if @xmath21 .",
    "a sequence @xmath11 _ dominates _",
    "@xmath12 if @xmath22 for all @xmath23 ; to simplify notations , we assume that @xmath24 ( @xmath25 respectively ) if @xmath26 ( @xmath27 respectively ) .",
    "we write @xmath28 to denote that @xmath29 dominates @xmath30 . clearly , if @xmath28 and @xmath31 , then @xmath32 . for a partition @xmath11 of @xmath20 , the partition @xmath33 of @xmath20 , where @xmath34 for @xmath35 , is called the _ conjugate _ partition for @xmath29 .",
    "notice that @xmath36 .",
    "[ thm : gr ] a pair of non - increasing sequences of positive integers @xmath13 is a bipartite graphic pair if and only if @xmath29 and @xmath30 are partitions of some positive integer @xmath20 and @xmath37 .    by the straightforward reduction to the maximum flow problem and the well - known fact that it can be solved in polynomial time ( see , e.g , @xcite ) , we have the following lemma .",
    "[ lem : graphic - poly ] let @xmath13 be a bipartite graphic pair .",
    "then a bipartite graph @xmath0 that realizes @xmath13 can be constructed in polynomial time .",
    "we also need the following property .",
    "[ lem : graphic ] let @xmath38 be partitions of a positive integer @xmath20 .",
    "if @xmath13 , @xmath39 and @xmath40 are bipartite graphic pairs , then @xmath41 is a bipartite graphic par .    because @xmath39 is a bipartite graphic pair , by theorem  [ thm : gr ] , @xmath42 . by the same arguments , @xmath37 and @xmath43 .",
    "we have that @xmath44 , and by theorem  [ thm : gr ] , @xmath41 is a bipartite graphic pair .",
    "let @xmath45 be an instance of edge editing to a connected regular graph .",
    "we assume that @xmath46 , as otherwise the problem is trivial .",
    "if @xmath47 , then we solve the problem in time @xmath48 by theorem  [ thm : kernel ] .",
    "from now it is assumed that @xmath49 .",
    "let @xmath50 .",
    "first , we check whether @xmath51 and stop and return a no - answer otherwise using the observation that each edge deletion ( addition respectively ) decreases ( increases respectively ) the degrees of two its end - vertices by one . from now",
    "we assume that @xmath51 .",
    "denote by @xmath52 the components of @xmath53 .",
    "we say that two components @xmath54 have the _ same type _ , if for any @xmath55 , either @xmath56 or @xmath57 and @xmath58 .",
    "denote by @xmath59 the partition of @xmath60 into classes according to this equivalence relation .",
    "observe that the number of distinct types is at most @xmath61 .",
    "notice also that for any solution @xmath62 , the graph @xmath63 contains vertices of at most @xmath64 components @xmath52 .",
    "the general idea of the algorithm is to guess the structure of a possible solution @xmath62 ( if it exists ) .",
    "we guess the edges of @xmath65 and @xmath66 that join the vertices of @xmath67 .",
    "then we guess the number and the types of components of @xmath53 that contain vertices of @xmath63 . for them",
    ", we guess the number of edges that join these components with each other and with each vertex of @xmath67 .",
    "notice that the edges of @xmath66 between distinct components of @xmath53 should form a bipartite graph .",
    "hence , we guess some additional conditions that ensure that such a graph can be constructed . then for each guess",
    ", we check in polynomial time whether we have a solution that corresponds to it .",
    "the main ingredient here is the fact that we can modify the components of @xmath53 without destroying their connectivity .",
    "we construct partial solutions for some components of @xmath53 and then  glue them together .",
    "let @xmath68 .",
    "we define records @xmath69 , where    * @xmath70 is an integer , * @xmath71 is an @xmath72-tuple @xmath73 of integers and @xmath74 ; * @xmath75 is a @xmath76 table of bipartite graphic pairs @xmath77 with the sum of elements of @xmath78 denoted @xmath79 such that @xmath80 , @xmath81 and @xmath82 for @xmath83 , notice that it can happen that @xmath84 and it is assumed that @xmath85 in this case ; * @xmath86 is @xmath87 integer matrix with the elements @xmath88 such that @xmath89 for @xmath90 and @xmath91 ; * @xmath92)$ ] ; and * @xmath93)$ ] .",
    "let @xmath62 be a solution for @xmath45 .",
    "we say that @xmath62 _ corresponds _ to @xmath94 if    * the graph @xmath63 contains vertices from exactly @xmath72 components @xmath95 of @xmath53 ; * @xmath96 for @xmath97 ; * for @xmath83 , @xmath66 has exactly @xmath79 edges between @xmath98 and @xmath99 if @xmath100 ; * for any @xmath90 and @xmath91 , @xmath101 ; * @xmath102)=d_z$ ] ; * @xmath103 .",
    "it is straightforward to verify that the number of all possible records @xmath94 is at most @xmath104 .",
    "we consider all such records , and for each @xmath94 , we check whether @xmath45 has a solution that corresponds to @xmath94 .",
    "if we find a solution for some @xmath94 , then we stop and return it . otherwise , if we fail to find any solution , we return a no - answer . from now",
    "we assume that @xmath94 is given .    for @xmath105 , a given @xmath106-tuple @xmath107 and @xmath108-tuple @xmath109 , where @xmath110 , @xmath111 and @xmath112 , we consider an auxiliary instance @xmath113 of edge editing to a graph of given degrees with costs defined as follows .",
    "we consider the graph @xmath114 $ ] , delete the edges between the vertices of @xmath67 , and add a set of @xmath108 isolated vertices @xmath115 .",
    "each vertex @xmath116 , we say that it _ corresponds to @xmath117 _ for @xmath118 .",
    "denote the obtained graph by @xmath119 .",
    "we set @xmath9 if @xmath120 , @xmath121 for @xmath90 , and @xmath122 for @xmath118 .",
    "we set @xmath123 if @xmath124 , and @xmath125 for all other pairs of vertices of @xmath126 .",
    "observe that it can happen that @xmath127 for some @xmath90 .",
    "in this case we assume that @xmath113 has no - answer . in all other cases",
    "we solve @xmath113 and find a solution of minimum editing cost @xmath128 using theorem  [ thm : edit - cost ] .",
    "if we have a no - instance or @xmath129 , then we set @xmath130 .",
    "we need the following property of the solutions .",
    "the proof is based on lemma  [ lem : alt ] and uses the fact that for a solution @xmath62 , @xmath63 can be covered by edge - disjoint @xmath62-alternating trails .",
    "[ lem : connect ] if @xmath131 , then any solution for @xmath113 of cost at most @xmath6 has no edges between vertices of @xmath132 and there is a solution @xmath133 for @xmath113 of cost @xmath131 such that if @xmath134 , then any @xmath135 are in the same component of @xmath136 .",
    "moreover , such a solution can be found in polynomial time .",
    "let @xmath133 be a solution of minimum cost . because @xmath137 for any @xmath124 , @xmath138 , @xmath66 can not have edges between vertices of @xmath132 .",
    "let @xmath134 .",
    "consider the graph @xmath63 defined by @xmath62 . by lemma  [ lem : alt ] , @xmath63 can be covered by a family of edge - disjoint @xmath62-alternating trails @xmath139 , and each non - closed trail in @xmath139 has its end - vertices in @xmath132 . recall that @xmath63 has no edges @xmath140 for @xmath124 .",
    "hence , trails have no such edges as well . because @xmath62 is a solution of minimum cost",
    ", @xmath139 has no @xmath62-alternating closed trails , as otherwise the edges of such a trail could be excluded from @xmath65 and @xmath66 respectively without changing the degrees .",
    "we say that a trail @xmath141 is _ simple _ if it begins and ends by edges from @xmath66 and has the unique edge from @xmath65 , and this edge is in @xmath142 .",
    "let @xmath143 be an edge of a non - simple trail @xmath144 such that @xmath145 .",
    "since @xmath144 is not a simple trail , @xmath146 is in a subtrail @xmath147 , where @xmath148 and @xmath149 or @xmath120 . by symmetry ,",
    "assume that @xmath120 .",
    "we have that @xmath150 , because otherwise @xmath147 could be replaced by @xmath151 in @xmath144 , and it would give a better solution , as @xmath125 .",
    "moreover , observe that if we modify the solution by replacing some simple trail by another simple trail with the same end - vertices , this modification can not remove @xmath140 , as it would again imply that we can improve the solution .",
    "then we have that the end - vertices of the deleted edge @xmath146 are connected by a path in @xmath136 .",
    "let @xmath152 be the graph obtained from @xmath142 by the deletion of the edges of @xmath65 .",
    "denote by @xmath153 the components of @xmath154 .",
    "if for any simple trail @xmath155 , @xmath156 and @xmath157 are in the same component , then the claim is proved , because @xmath156 and @xmath157 are joined by a path in @xmath154 and , therefore , in @xmath158 .",
    "assume that for some simple trail @xmath155 , @xmath156 and @xmath157 are in different components .",
    "without loss of generality we assume that @xmath159 and @xmath160 .",
    "we have the following case .",
    "* case 1 . * the vertex @xmath161 is joined by an edge with a vertex in @xmath162 or @xmath4 is joined by an edge with a vertex in @xmath163 in the graph @xmath158 . then @xmath156 and @xmath157 are joined by a path in @xmath158 .",
    "* case 2 . *",
    "the vertex @xmath161 is not adjacent to the vertices of @xmath162 and @xmath4 is not adjacent to the vertices of @xmath163 , but there is @xmath164 such that @xmath165 and @xmath166 or there is @xmath167 such that @xmath168 and @xmath169 . we replace @xmath144 by @xmath170 and modify @xmath66 by replacing @xmath171 by @xmath172 .",
    "clearly , this modification gives us another solution with the same cost , and now @xmath156 and @xmath157 are joined by a path in @xmath158 that is modified respectively .",
    "* the vertex @xmath161 is not adjacent to the vertices of @xmath162 , @xmath4 is not adjacent to the vertices of @xmath163 , and @xmath171 are the unique edges that join @xmath173 with @xmath174 respectively in @xmath158 .",
    "since @xmath62 is a solution , there are at most @xmath175 edges of @xmath65 in @xmath142 . also",
    "all vertices of @xmath142 have the same degree @xmath10 in @xmath0 .",
    "therefore , @xmath176 , and @xmath163 has a cycle .",
    "hence , @xmath163 has an edge @xmath177 such that @xmath178 is connected .",
    "we replace @xmath144 by @xmath179 and modify @xmath65 by replacing @xmath146 by @xmath177 and @xmath66 by replacing @xmath171 by @xmath180 .",
    "clearly , this modification gives us another solution with the same cost , and now @xmath181 and @xmath182 are joined by a path in @xmath158 that is modified respectively .    by applying the same modification for all simple trails ,",
    "we obtain the solution with the property that for any @xmath183 , @xmath156 and @xmath157 are joined by a path in @xmath158 .",
    "to complete the proof , it remains to observe that by theorem  [ thm : edit - cost ] , an initial solution of minimum cost can be found in polynomial time . then @xmath139 can be constructed in polynomial time by lemma  [ lem : alt ] .",
    "finally , it is straightforward to see that simple paths can be modified in polynomial time .",
    "now we are ready to describe the algorithm that for a record @xmath69 , checks whether @xmath45 has a solution that corresponds to @xmath94 .",
    "first , we check whether the modification of @xmath0 with respect to @xmath94 would satisfy the degree restrictions for @xmath67 , as otherwise we have no solution .",
    "also the number of edges between @xmath52 should be at most @xmath6 .    * step 1 .",
    "* let @xmath184 be the graph obtained from @xmath0 by the deletion of the edges of @xmath185 and the addition the edges of @xmath186 .",
    "if for any @xmath90 , @xmath187 , then stop and return a no - answer .    * step 2 . *",
    "if @xmath188 , then stop and return a no - answer .",
    "from now we assume that the degree restrictions for @xmath67 are fulfilled and the number of added edges between the components of @xmath53 should be at most @xmath6 .",
    "* step 3 . *",
    "construct an auxiliary weighted bipartite graph @xmath189 , where @xmath190 and @xmath191 is the bipartition of the vertex set . for @xmath192 and @xmath193",
    ", we construct an edge @xmath194 if @xmath195 . to define the weight @xmath196 , we consider @xmath197 where @xmath198 and @xmath199 is the sequence obtained by the concatenation of non - empty sequences @xmath200 .",
    "denote by @xmath201 the set of vertices of the graph in @xmath197 corresponding to the elements of @xmath202 .",
    "notice that by step 2 , @xmath199 has at most @xmath6 elements .",
    "we set @xmath203 .",
    "observe that some edges can have infinite weights .",
    "* step 4 . *",
    "find a perfect matching @xmath204 in @xmath189 with respect to @xmath205 of minimum weight .",
    "if @xmath189 has no perfect matching of finite weight , then the algorithm stops and returns a no - answer .",
    "assume that @xmath206 is a perfect matching of minimum weight @xmath207 .",
    "if @xmath208 , then we stop and return a no - answer .",
    "now we assume that @xmath204 has weight at most @xmath6 .",
    "* consider the solutions @xmath209 of cost @xmath210 for @xmath211 for @xmath212 .",
    "set @xmath213 .",
    "construct a set @xmath66 as follows .",
    "for @xmath192 , denote by @xmath214 the set of edges of @xmath215 with the both end - vertices in @xmath216 , and let @xmath217 be the subset of edges that join @xmath218 with @xmath219 for @xmath91 , @xmath220 .",
    "initially we include in @xmath66 the set @xmath221 . for each pair of indices @xmath222 , such that @xmath223 and @xmath224 , consider graphs induced by @xmath217 and @xmath225 respectively , and denote by @xmath226 and @xmath227 respectively the degree sequences of these graphs for the vertices in @xmath218 and @xmath228 respectively .",
    "by the construction of the problems @xmath197 , @xmath229 and @xmath230 are bipartite graphic pairs .",
    "recall that @xmath231 and @xmath232 is a bipartite graphic pair . by lemma  [ lem : graphic ]",
    ", @xmath233 is a bipartite graphic pair . construct a bipartite graph that realizes @xmath233 using lemma  [ lem : graphic - poly ] and denote its set of edges by @xmath234 .",
    "we use the vertices of @xmath218 and @xmath228 incident with the vertices of @xmath217 and @xmath225 as the sets of bipartition and construct our bipartite graph in such a way that for each vertex , the number of edges of @xmath234 incident to it is the same as the number of edges of @xmath217 or @xmath225 respectively incident to this vertex . then we include the edges of @xmath234 in @xmath66 .",
    "* for each @xmath212 , do the following . consider the set of vertices @xmath235 of @xmath236 incident to the edges of @xmath66 that join @xmath218 with these vertices and let @xmath237 be the number of edges of @xmath66 that join @xmath218 with @xmath238 for @xmath239 .",
    "consider @xmath240 where @xmath241 and @xmath242 .",
    "using lemma  [ lem : connect ] , find a solution @xmath243 for @xmath244 of minimum cost .",
    "modify @xmath62 by replacing the edges of @xmath65 and @xmath66 incident to the vertices of @xmath218 by the edges of @xmath245 and @xmath215 respectively identifying the set @xmath246 and the set of vertices @xmath247 in @xmath240",
    ".    * step 7 .",
    "* let @xmath248 .",
    "if @xmath0 is connected , then return @xmath62 .",
    "otherwise return a no - answer .",
    "suppose that the algorithm produces the sets @xmath62 in step 7 . by the description of the algorithm , for any vertex @xmath249 , @xmath250 .",
    "notice that for the sets @xmath65 and @xmath66 obtained in step 5 , @xmath251 , and in step 6 @xmath252 could be only decreased .",
    "since @xmath253 is connected , we conclude that @xmath62 is a solution for @xmath45 .",
    "it is straightforward to see that @xmath62 corresponds to @xmath94 .",
    "assume now that @xmath45 has some solution @xmath62 .",
    "the graph @xmath63 contains vertices of some components @xmath95 of @xmath53 for @xmath254 .",
    "assume that @xmath255 for @xmath91 , and let @xmath256 .",
    "let @xmath257)=d_z$ ] and @xmath258 . for @xmath97",
    ", let @xmath259 be the subset of edges of @xmath260 with the both end - vertices in @xmath261 and @xmath262 ) \\setminus d_z$ ] . consider each pair of indices @xmath83 , @xmath100",
    ". denote by @xmath263 the set of edges of @xmath66 that join @xmath98 and @xmath99 .",
    "the set @xmath263 induces a bipartite graph .",
    "let @xmath78 and @xmath264 be the graphic sequences of the vertices of this graph in @xmath98 and @xmath99 respectively ( if @xmath265 , then @xmath266 ) .",
    "also let @xmath267 .",
    "denote by @xmath75 the table of pairs @xmath77 . for any @xmath90 and @xmath91 , let @xmath268 .",
    "denote by @xmath86 the matrix with these elements .",
    "we consider the record @xmath69 and analyze our algorithm for it .",
    "it is straightforward to see that the algorithm does not stop in steps 1 and 2 .",
    "consider now the auxiliary graph @xmath189 constructed in step 3 .",
    "clearly , @xmath269 .",
    "we claim that for each @xmath270 , @xmath271 . to see this , notice that for any non - increasing sequence of positive integers @xmath29 , @xmath272 is a bipartite graphic pair by theorem  [ thm : gr ] .",
    "it implies that a feasible solution @xmath273 for @xmath274 can be constructed as follows .",
    "let @xmath275 . to construct @xmath276",
    ", we include first in this set the edges of @xmath277 . for each @xmath91",
    "such that @xmath220 and @xmath278 , the vertices in @xmath201 are joined with the vertices of @xmath98 incident to the edges of @xmath263 by a set of edges @xmath279 in such a way that the graph induced by @xmath279 realizes the pair @xmath280 and the number of edges of @xmath279 incident to each vertex of @xmath98 is the same as the number of edges of @xmath263 incident to it . by the definition of @xmath274 , we have a feasible solution .",
    "it follows that @xmath281 is a perfect matching in @xmath189 of weight at most @xmath282 .",
    "therefore , @xmath189 has a perfect matching @xmath206 of minimum weight @xmath283 such that @xmath284 .",
    "in particular , it means that we do not stop in step 4 .",
    "denote by @xmath285 the sets constructed in step 5 ( and denoted @xmath65 and @xmath66 respectively in the description ) . by the construction , for the graph @xmath286 , @xmath250 for any @xmath249 .",
    "moreover , by the construction of step 6 , the modifications of @xmath273 maintain this property .",
    "hence , to show that we obtain a solution in step 7 , it remains to show that step 6 ensures that we get a connected graph @xmath253 if we delete the edges of the modified set @xmath287 and add the edges of the modified set @xmath276 .    for each @xmath212 , we inductively prove the following .",
    "let @xmath288 be the sets of edges constructed in step 6 after executing the first @xmath289 modification of the sets obtained in step 5 .",
    "let also @xmath290 .",
    "then for any @xmath291 and any @xmath292 , @xmath293 has a @xmath294-path @xmath144 such that @xmath144 has no edges in @xmath295 ( but @xmath144 can have vertices in this set ) . for @xmath296 ,",
    "the claim immediately follows from lemma  [ lem : connect ] .",
    "assume now that @xmath297 .",
    "if @xmath292 , then we again apply lemma  [ lem : connect ] .",
    "let @xmath298 for @xmath299 . by the inductive hypothesis , @xmath161 and @xmath4 could be connected by some path @xmath144 without edges in @xmath300 .",
    "suppose that this path is destroyed by the further modifications .",
    "it can happen only if @xmath144 has subpaths @xmath301 where @xmath302 and @xmath303 and @xmath146 or @xmath304 is not in @xmath293 .",
    "but then there are @xmath305 such that @xmath306 and we have the required connectivity between @xmath307 and @xmath308",
    ". then the claim follows .    by this claim , for any @xmath298 , @xmath161 and @xmath4 can be connected by a path in @xmath253 for @xmath91 .",
    "recall that @xmath62 is a solution for @xmath45 , and @xmath63 has vertices from @xmath95 . for each @xmath309 , @xmath99 and @xmath228 have the same type .",
    "also for each @xmath310 , the number of edges that join @xmath311 and @xmath99 with respect to the solution @xmath62 and the number of edges that join @xmath311 and @xmath228 with respect to @xmath273 is increased ( or decreased if the number is negative ) by @xmath312 . because @xmath99 and @xmath228 have the same type , there are no edges that join @xmath311 and @xmath99 with respect to @xmath62 if and only if are no edges that join @xmath311 and @xmath228 with respect to @xmath273 in the graphs obtained by editing .",
    "furthermore , for any @xmath313 , @xmath314 and @xmath315 in @xmath62 and @xmath316 and @xmath317 in @xmath273 are connected by the same number of edges @xmath318 .",
    "it implies that if the graph obtained from @xmath0 by editing with respect to @xmath62 is connected , then @xmath253 obtained by editing with respect to @xmath273 is also connected , and we have that @xmath273 produced by the algorithm is a solution for @xmath45 . also we can observe that this solution corresponds to @xmath94",
    "now we argue that this algorithm is polynomial .",
    "clearly , steps 1 and 2 can be performed in polynomial time .",
    "the construction of the graph @xmath189 in step 3 can be done polynomially , and the weight assignment demands polynomial time , because the construction of the auxiliary problem can be done in polynomial time , and we can solve this problem in polynomial time by lemma  [ lem : connect ] .",
    "we can find a perfect matching of minimum weight in @xmath189 by standard algorithms ( see , e.g , @xcite ) .",
    "the construction of @xmath62 in step 5 can be done in polynomial time by lemma  [ lem : graphic - poly ] .",
    "step 6 is polynomial by lemma  [ lem : connect ] .",
    "as connectedness in step 7 can be easily checked , this step is also polynomial .    to complete the proof of theorem  [ thm : regular ] , it remains to observe that to solve an instance of edge editing to a graph of given degrees with costs , we generate at most @xmath104 records , and run a polynomial algorithm for these records .",
    "it follows that edge editing to a graph of given degrees with costs can be solved in time @xmath319 .",
    "we proved that editing to a graph of given degrees has a polynomial kernel of size @xmath320 .",
    "it is natural to ask whether the size can be improved . also , is the problem @xmath321  when parameterized by @xmath6 only ?",
    "we proved that it holds for the special case @xmath9 , i.e. , for edge editing to a connected regular graph .",
    "another open question is whether editing to a graph of given degrees ( or edge editing to a connected regular graph ) has a polynomial kernel with the size that depends on @xmath6 only ."
  ],
  "abstract_text": [
    "<S> the aim of edge editing or modification problems is to change a given graph by adding and deleting of a small number of edges in order to satisfy a certain property . </S>",
    "<S> we consider the edge editing to a connected graph of given degrees problem that for a given graph @xmath0 , non - negative integers @xmath1 and a function @xmath2 , asks whether it is possible to obtain a connected graph @xmath3 from @xmath0 such that the degree of @xmath4 is @xmath5 for any vertex @xmath4 by at most @xmath6 edge editing operations . as </S>",
    "<S> the problem is np - complete even if @xmath7 , we are interested in the parameterized complexity and show that edge editing to a connected graph of given degrees admits a polynomial kernel when parameterized by @xmath8 . </S>",
    "<S> for the special case @xmath9 , i.e. , when the aim is to obtain a connected @xmath10-regular graph , the problem is shown to be fixed parameter tractable when parameterized by @xmath6 only . </S>"
  ]
}
{
  "article_text": [
    "awpp is a complexity class introduced by fenner , fortnow , kurtz , and li  @xcite to understand the structure of counting complexity classes ( see also refs .",
    "it is defined as follows :    [ def : awpp ] a language @xmath2 is in @xmath3 iff for any polynomial @xmath4 , there exist @xmath5 and @xmath6 such that for all @xmath7 , @xmath8 and    * if @xmath9 then @xmath10 . * if @xmath11 then @xmath12 .    here",
    ", @xmath13 is the class of functions from bit strings to integers that are computable in polynomial time by a turing machine .",
    "a @xmath14 function  @xcite is a function from bit strings to integers that is equal to the number of accepting paths minus that of rejecting paths of a nondeterministic turing machine which takes the bit strings as input .",
    "the fp function @xmath15 can be replaced with @xmath16 for a polynomial @xmath17  @xcite , and the error bound @xmath18 can be replaced with , for example , @xmath19  @xcite .",
    "interestingly , awpp was shown to contain bqp , by fortnow and rogers  @xcite in 1997 , and since then it has been the best upperbound of bqp ( in classical complexity classes ) . here",
    ", bqp is a class of problems efficiently solved by a quantum computer :    [ def : bqp ] a language @xmath2 is in @xmath20 iff there exists a uniform family @xmath21 of polynomial - size quantum circuits such that    * if @xmath9 then @xmath22 . *",
    "if @xmath11 then @xmath23 .    here , we say that a family @xmath21 of quantum circuits is uniform if there is a classical polynomial - time algorithm that outputs a description of @xmath24 on input @xmath25 , where @xmath26 is the input size of @xmath24 .",
    "we denote the output bit by @xmath27 , and @xmath28 is the probability of obtaining @xmath29 ( i.e. , output 1 ) if we measure the single output qubit of the circuit @xmath30 on input @xmath7 .",
    "the pair of the thresholds @xmath31 is rather arbitrary .",
    "for example , we can take @xmath18 for any polynomial @xmath4 .",
    "( we note that , for simplicity , we choose hadamard and toffoli gates as a universal gate set of quantum circuits .",
    "this choice is crucial to obtain some of our results , while this choice is also taken in ref .",
    "@xcite , and we believe that this choice is enough to study the essential parts of what we are interested in",
    ". it may be possible to extend our results to other gate sets , but it would be a future research subject . )",
    "the name of awpp is thus known by many researchers including physicists .",
    "however , the definition of awpp seems to be somehow artificial and difficult to understand for ones who are not familiar with gapp functions .",
    "the purpose of the present contribution is to provide a quantum physical interpretation of awpp . for the goal",
    ", we consider quantum computing with a postselection . here",
    ", a postselection is a ( fictious ) ability that we can choose an event with probability 1 even if its probability is exponentially small .",
    "quantum computing with postselection was first considered by aaronson  @xcite .",
    "he defined the following class postbqp , and showed that it is equal to pp ( see also ref .",
    "@xcite and appendix  [ app4 ] for another proof of @xmath32 ) :    [ def : postbqp ] a language @xmath2 is in @xmath33 iff there exist a uniform family @xmath21 of polynomial - size quantum circuits with the ability of a postselection and a polynomial @xmath34 such that for any input @xmath7 ,    * @xmath35 . * if @xmath9 then @xmath36 . * if @xmath11 then @xmath37 .    here , @xmath38 is the measurement result of the postselected qubit of the circuit @xmath30 , and @xmath39 is the conditional probability that @xmath30 on input @xmath7 obtains @xmath29 under @xmath40 . like @xmath20",
    ", the pair of the thresholds @xmath31 is arbitrary . in particular",
    ", it can be @xmath18 for any polynomial @xmath4 .",
    "furthermore , without loss of generality , we can assume that only a single qubit is postselected , since postselections on more than two qubits can be transformed to that on a single qubit by using the generalized toffoli gate , which can be implemented in a polynomial - size quantum circuit .",
    "we introduce a restricted version of postbqp , which we call @xmath41 :    [ def : postbqp_afp ] a language @xmath2 is in @xmath41 iff for any polynomials @xmath42 and @xmath43 there exist a uniform family @xmath21 of polynomial - size quantum circuits with the ability of a postselection , an @xmath13 function @xmath15 , and a polynomial @xmath17 such that for any input @xmath7 , @xmath44 and    * if @xmath9 then @xmath45 . * if @xmath11 then @xmath46 . * @xmath47 .",
    "the third condition intuitively means that the postselection probability @xmath48 can be approximated to @xmath49 within the multiplicative error @xmath50 .",
    "( hence the subscript ",
    "afp \" means  approximately fp \" . ) we show that @xmath51 , which provides a quantum physical interpretation of awpp : awpp can be considered as an example of postselected quantum complexity classes .",
    "we note that while one might consider that @xmath41 is also artificial due to the fiction of postselection , we consider that this class is easier to understand for physicists since it is defined by using the terminology of quantum physics , or at least it gives another interpretation of awpp , which might be useful for future studies on awpp .",
    "we also introduce another restricted version of postbqp , which we call @xmath52 :    [ def : postbqp_asize ] the definition of @xmath52 is the same as that of @xmath41 except that the @xmath13 function @xmath53 is replaced with @xmath54 , where @xmath55 is a @xmath14 function .",
    "we show that @xmath52 is equal to the classical complexity class app defined by li  @xcite .",
    "therefore , not only awpp but also app have quantum physical interpretations .",
    "there are some researches on quantum physical interpretations of classical complexity classes .",
    "for example , the above mentioned aaronson s result @xmath32  @xcite is considered as a quantum physical interpretation of pp .",
    "furthermore , kuperberg  @xcite showed that @xmath56 is equal to @xmath57 , which is a quantum version of sbp  @xcite , and fenner et al .",
    "@xcite ( see also ref .",
    "@xcite ) showed that @xmath58 is equal to nqp , which is a quantum analogue of np .",
    "our contributions are in the same line of these researches , while we take a different way for the proofs .",
    "we not only use the relations between quantum computation and gapp functions as used in refs .",
    "@xcite , but combine them with the notion of restricted postselection probability introduced in this paper .",
    "moreover , we also use tactically the property that awpp and app are closed under complement in order to satisfy such a restriction of postselection probability .",
    "in addition to @xmath41 and @xmath52 , we introduce several restricted versions of postbqp , and study relations among them and other complexity classes .",
    "for example , we define a simpler version ( the exact version ) of @xmath41 , which we call @xmath59 :    [ def : postbqp_fp ] a language @xmath2 is in @xmath59 iff it is in @xmath33 and there exist a polynomial @xmath17 and @xmath60 @xmath61 such that for any input @xmath7 , @xmath62 where @xmath63 is the uniform family of quantum circuits that assures @xmath64",
    ".    since it is simpler than @xmath41 , it would be better if we could show the equivalence of it to awpp .",
    "currently , we do not know whether the equivalence holds .",
    "however , we show that @xmath59 sits between wpp and awpp .",
    "( the definition of wpp is given in sec .",
    "[ pre ] . )",
    "it is nearly tight except showing the equivalence since wpp is one of the best lower bounds of awpp  @xcite ( in fact , awpp was named as  approximate wpp \" ) .",
    "all our results are summarized in fig .",
    "[ suppfig ] .",
    "definitions of new classes in the figure are given in sec .",
    "[ pre ] .",
    "a classical analogue of postbqp is @xmath65 , which is known to be equal to @xmath0  @xcite .",
    "we also consider a classical version , @xmath66 , of @xmath59 , and show that @xmath67 .",
    "( the definitions of @xmath66 and wapp are given in sec .",
    "[ pre ] . )    ) are new results of this paper.,scaledwidth=65.0% ]",
    "in this section , we provide several definitions and facts used in this paper .",
    "@xcite [ def : counting_machine ] a counting machine is a nondeterministic turing machine running in polynomial time with two halting states , accepting and rejecting , and every computation path must end in one of these states . without loss of generality",
    ", we may assume each node of the computation tree has outdegree at most two .",
    "a counting machine is called normal if for any input each computational path has the same number of nodes with outdegree two .",
    "[ def : sharpp ] a function @xmath68 is a @xmath69 function if there exists a counting machine @xmath70 such that @xmath53 is the number of accepting paths of @xmath71 , where @xmath71 denotes the nondeterministic computation of @xmath70 on input @xmath7 .",
    "@xcite [ def : gapp ] a function @xmath72 is a @xmath14 function if there exists a counting machine @xmath70 such that @xmath53 is the number of accepting paths of @xmath71 minus the number of rejecting paths of @xmath71 .",
    "@xcite [ def : app ] a language @xmath2 is in @xmath73 iff for any polynomial @xmath4 , there exist @xmath74 such that for all @xmath7 , @xmath75 and    * if @xmath9 then @xmath76 . * if @xmath11 then @xmath77 .",
    "@xcite [ def : wapp ] a language @xmath2 is in @xmath78 iff there exist @xmath79 , a polynomial @xmath80 , and a constant @xmath81 such that    * if @xmath9 then @xmath82 * if @xmath11 then @xmath83    note that @xmath84 can be replaced with an @xmath13 function @xmath8 .",
    "@xcite [ def : wpp ] a language @xmath2 is in @xmath85 iff there exist a @xmath14 function @xmath55 and an @xmath13 function @xmath15 with @xmath86 such that    * if @xmath9 then @xmath87 . *",
    "if @xmath11 then @xmath88 .    there are relations between an output probability distribution of a quantum circuit and a @xmath14 function .",
    "( fortnow and rogers  @xcite ) for any uniform family @xmath21 of polynomial - size quantum circuits , there exist @xmath89 and a polynomial @xmath17 such that for any @xmath7 , @xmath90 where @xmath28 is the probability that the output of the circuit @xmath30 is @xmath29 on input @xmath7 .",
    "( note that this theorem depends on the gate set .",
    "as we have noted , in this paper , we consider the hadamard and toffoli gates as a universal gate set . )",
    "[ pgapp ]    ( fenner , green , homer , and pruim  @xcite ) for any @xmath89 , there exist a polynomial @xmath91 and a uniform family @xmath92 of polynomial - size quantum circuits such that @xmath93 [ gappp ]    now we introduce the restricted postbqp classes other than those introduced in the previous section .",
    "( here , @xmath63 is the uniform family of polynomial - size quantum circuits that assures @xmath64 as in definition  [ def : postbqp_fp ] . )",
    "[ def : postbqp_size ] a language @xmath2 is in @xmath94 iff it is in @xmath33 and @xmath48 depends only on @xmath95 .    from theorem  [ pgapp ]",
    ", it is an exact version of @xmath52 .",
    "[ def : postbqp_leexp ] a language @xmath2 is in @xmath96 iff it is in @xmath33 and there exists a polynomial @xmath97 such that for any input @xmath7 , @xmath98    [ def : postbqp_exp ] a language @xmath2 is in @xmath99 iff it is in @xmath33 and there exists a polynomial @xmath17 such that for any input @xmath7 , @xmath100    [ def : postbqp_fqp ] a language @xmath2 is in @xmath101 iff it is in @xmath33 and there exist a polynomial @xmath17 and a function @xmath102 , which can be calculated   can be calculated without any error .",
    "] by a uniform family of polynomial - size quantum circuits , such that for any input @xmath7 , @xmath103    we also consider the classical analogue of @xmath59 .",
    "[ postbpp_fp ] we consider the following polynomial - time probabilistic turing machine .",
    "* at every nondeterministic step , it makes a random decision between two possibilities , and each possibility is chosen with probability 1/2 .",
    "* the number of random decisions is the same for all computation paths .",
    "therefore , if the machine halts after @xmath104 nondeterministic steps , the probability of obtaining a specific computation path is @xmath105 .",
    "a language @xmath2 is in @xmath66 iff there exist a polynomial - time probabilistic turing machine @xmath63 that satisfies the above properties and outputs two bits @xmath80 and @xmath106 , an @xmath13 function @xmath107 , a polynomial @xmath17 , and a constant @xmath81 such that    * @xmath103 * if @xmath9 then @xmath108 * if @xmath11 then @xmath109    here , @xmath48 and @xmath39 are defined similarly to the case where @xmath63 is a uniform family of circuits .",
    "the main result of the present contribution is the following quantum interpretation of awpp :    @xmath110 .",
    "[ main ]    the proof is given in sec .",
    "[ proof1 ] .    by replacing some fp functions in the proof with gapp functions",
    ", we can also show the following quantum interpretation of app :    [ main2 ] @xmath111 .    the proof is given in appendix  [ app1 ] .",
    "if we consider not the approximate version , @xmath41 , but the exact version , @xmath59 , we do not know whether it is equal to awpp . since @xmath112 , we know @xmath113 .",
    "furthermore , we can show the following nearly tight lowerbound :    @xmath114 .",
    "[ wppinpostbqp_fp ]    the proof is given in appendix  [ app2 ] .",
    "we can also show several relations among restricted postbqp classes :    [ postbqpequalpostbqp_leexp ] @xmath115 .",
    "the proof is given in appendix  [ app3 ] .    @xmath116 . [ equivalences ]    its proof is given in sec .",
    "[ proof2 ] .",
    "finally , we consider the classical analogue , @xmath66 , of @xmath59 , and show the following result :    @xmath117 .",
    "[ classical ]    its proof is given in sec .",
    "[ proof3 ] .",
    "note that the inclusion @xmath118 is a  classical analogue \" of @xmath113 , since wapp is a  # p analogue \" of awpp . since @xmath119  @xcite and @xmath120 is unlikely , it is also unlikely that @xmath121 . furthermore , since it is unlikely that bqp contains @xmath1 , the inclusion @xmath122 suggests that @xmath123 and @xmath124 are unlikely .",
    "we first show @xmath125 . since @xmath126  @xcite , this means @xmath127 .",
    "let us assume that a language @xmath2 is in @xmath128 . then , for any polynomial @xmath4 , there exist @xmath129 and @xmath130 ( @xmath131 , @xmath132 ) such that    * if @xmath9 then @xmath133 * if @xmath11 then @xmath134    in the following , for simplicity , we omit the @xmath95 dependency of @xmath4 , and just write @xmath135 as @xmath4 .    then , there exist two gapp functions @xmath136 and @xmath137 , such that    * if @xmath9 then @xmath138 * if @xmath11 then @xmath139    then there exist two counting machines @xmath140 and @xmath141 such that @xmath142 and @xmath143 , where @xmath144 and @xmath145 @xmath146 are the numbers of accepting and rejecting paths of @xmath147 on input @xmath7 , respectively .",
    "there exist two normal counting machines @xmath148 and @xmath149 such that @xmath150 and @xmath151  @xcite . without loss of generality , we can assume that computation paths of @xmath148 and @xmath149 on input @xmath7 can be represented by strings in @xmath152 , where @xmath17 is a polynomial .",
    "( in the following , for simplicity , we write @xmath153 as @xmath17 . )",
    "then we consider a uniform family @xmath21 of quantum circuits defined by the following procedure on input @xmath7 .",
    "first , the state @xmath154 can be generated by a polynomial - size quantum circuit .",
    "here , @xmath155 is a polynomial chosen later ( @xmath155 precisely means @xmath156 ) , and @xmath157 ( = 1 , resp . ) if the path @xmath158 of @xmath159 on input @xmath7 is an accepting ( rejecting , resp . )",
    "let us postselect the first , second , and third registers to @xmath160 .",
    "the ( unnormalized ) state on the last register , which is the output qubit , after the postselection is @xmath161 and therefore @xmath162 therefore , irrespective of @xmath9 or @xmath11 , we obtain @xmath163 let us define @xmath164 .",
    "then the above inequality means @xmath165 since @xmath166 and @xmath167 we obtain @xmath168 which means , if we take @xmath169 , @xmath170 note that @xmath171 and @xmath172 therefore , from eqs .",
    "( [ equation2 ] ) and ( [ equation3 ] ) , eq .",
    "( [ equation1 ] ) becomes @xmath173 which means @xmath174 remember that @xmath175 and it is in fp .",
    "we denote @xmath176 and take @xmath155 such that @xmath177 . for any polynomial @xmath178 ,",
    "let us take @xmath179 .",
    "then , @xmath180    furthermore , from the state after the postselection , we have @xmath181 for any polynomial @xmath182 , let us take @xmath183 .",
    "then , if @xmath9 we obtain @xmath184 and if @xmath11 we obtain @xmath185 therefore , by taking @xmath186 , @xmath2 is in @xmath41 .",
    "next we show @xmath187 .",
    "let us assume that a language @xmath2 is in @xmath41 .",
    "then for any polynomials @xmath182 and @xmath178 there exist a uniform family @xmath21 of polynomial - size quantum circuits , an fp function @xmath15 , and a polynomial @xmath17 satisfying the condition in definition  [ def : postbqp_afp ] . from theorem  [ pgapp ] ,",
    "there exist a gapp function @xmath55 and a polynomial @xmath91 such that @xmath188 where @xmath189 is the joint probability distribution for @xmath106 and @xmath80 . therefore ,",
    "if we take @xmath190 , we obtain    * if @xmath9 then @xmath191 which means @xmath192 and therefore @xmath193 * if @xmath11 then @xmath194 which means @xmath195 and therefore @xmath196    note that @xmath197 and we can see @xmath198 , @xmath199 , and @xmath200 .    if we take @xmath201 , @xmath202 , and @xmath203 .",
    "therefore @xmath2 is in awpp due to the definition of awpp in ref .",
    "@xcite .",
    "the inclusions @xmath204 and @xmath205 are obvious .",
    "let us show @xmath206 .",
    "its proof uses the idea of an additive adjustment of the acceptance probability from ref .",
    "@xcite with a standard multiplicative adjustment .",
    "let us assume that a language @xmath2 is in @xmath101 .",
    "then , there exist a uniform family @xmath21 of polynomial - size quantum circuits , a function @xmath207 whose @xmath53 can be calculated by another uniform family of polynomial - size quantum circuits for any input @xmath7 , and a polynomial @xmath208 such that @xmath209 ( @xmath210 precisely means @xmath211 ) and    * if @xmath9 , then @xmath212 . * if @xmath11 , then @xmath213 .",
    "we can take a function @xmath214 such that @xmath215 for any input @xmath7 .",
    "note that @xmath216 can be calculated by a uniform family of polynomial - size quantum circuits .    from @xmath63",
    ", we construct the uniform family @xmath217 of polynomial - size quantum circuits implemented on input @xmath7 as follows :    * @xmath218 flips a coin .",
    "if heads , it simulates @xmath30 . * if tails , @xmath218 outputs @xmath29 with probability 1/2 , and @xmath40 with probability @xmath219 independently .",
    "since @xmath220 we obtain @xmath221    then , @xmath222 and @xmath223    if @xmath9 , @xmath224 if @xmath11 , @xmath225 here , we have used the fact that @xmath226 and @xmath227 for @xmath228 . note that @xmath229 , since @xmath230 .    from @xmath231",
    ", we construct the uniform family @xmath232 of polynomial - size quantum circuits implemented on input @xmath7 in the following way :    * @xmath233 simulates @xmath218 . * @xmath233 outputs @xmath29 if and only if @xmath218 outputs @xmath29 . * @xmath233 generates a random bit @xmath234 which takes @xmath235 with probability @xmath236 .",
    "( note that @xmath237 . ) * @xmath233 outputs @xmath40 if and only if @xmath235 and @xmath218 outputs @xmath40 .",
    "then , @xmath238 and @xmath239 therefore , @xmath2 is in @xmath99 .",
    "let us first show @xmath118 .",
    "we assume that a language @xmath2 is in @xmath66 .",
    "then , there exist a probabilistic turing machine @xmath63 , an fp function @xmath107 , and a polynomial @xmath91 such that @xmath240 there exist a # p function @xmath55 and a polynomial @xmath17 such that @xmath241 therefore , by the conditions on @xmath39 , we obtain if @xmath9 , @xmath242 and if @xmath11 , @xmath243 since @xmath244 is a # p function and @xmath245 is an fp function , @xmath2 is in wapp .",
    "now let us show @xmath122 .",
    "let us assume that a language @xmath2 is in @xmath1 .",
    "then , there exist two polynomial - time nondeterministic turing machines @xmath246 and @xmath247 such that    * if @xmath9 then @xmath246 has exactly one accepting path , and all paths of @xmath247 reject . * if @xmath11 then all paths of @xmath246 reject , and @xmath247 has exactly one accepting path .    without loss of generality , we can assume that both @xmath246 and @xmath247 have @xmath248 computation paths .",
    "let us consider the following algorithm @xmath63 :    * randomly choose @xmath249 , and simulate the computation paths represented by @xmath158 of @xmath246 and @xmath247 on input @xmath7 .",
    "* if both @xmath246 and @xmath247 reject , output @xmath250 and @xmath251 . if @xmath246 accepts and @xmath247 rejects , output @xmath40 and @xmath29 .",
    "if @xmath247 accepts and @xmath246 rejects , output @xmath40 and @xmath251 .",
    "* postselect on @xmath40 .",
    "the probability of postselecting @xmath40 is @xmath252 .",
    "furthermore , @xmath253 if @xmath9 , and it is 0 if @xmath11 .",
    "therefore , @xmath2 is in @xmath66 .",
    "* acknowledgements*. tm is supported by the tenure track system by mext japan , the jsps grant - in - aid for young scientists ( b ) no.26730003 , and the mext jsps grant - in - aid for scientific research on innovative areas no.15h00850 .",
    "hn is supported by the jsps grant - in - aid for scientific research ( a ) nos.23246071 , 24240001 , 26247016 , and ( c ) no.25330012 , and the mext jsps grant - in - aid for scientific research on innovative areas no.24106009 .",
    "we acknowledge an anonymous reviewer for pointing out a possibility of improving the lowerbound of @xmath59 in an early draft of this paper .",
    "00    s. aaronson , quantum computing , postselection , and probabilistic polynomial - time .",
    "a * 461 * , 3473 - 3482 ( 2005 ) .",
    "e. bhler , c. glaer , and d. meister , error - bounded probabilistic computations between ma and am .",
    "j. comput .",
    "sci . * 72 * , 1043 - 1076 ( 2006 ) .",
    "s. fenner , l. fortnow , and s. kurtz , gap - definable counting classes .",
    "j. comput .",
    "sci . * 48 * , 116 - 148 ( 1994 ) .",
    "s. a. fenner , pp - lowness and a simple definition of awpp .",
    ". syst . * 36 * , 199 - 212 ( 2003 ) ; eccc report tr02 - 036 .",
    "s. fenner , l. fortnow , s. kurtz , and l. li , an oracle builder s toolkit .",
    "comput . * 182 * , 95 - 136 ( 2003 ) ; earlier version in proc .",
    "8th ieee conference on structure in complexity theory , pp.120 - 131 ( 1993 ) .",
    "s. fenner , f. green , s. homer , and r. pruim , determining acceptance probability for a quantum computation is hard for ph .",
    "r. soc . a * 455 * , 3953 - 3966 ( 1999 ) ; arxiv : quant - ph/9812056    l. fortnow and j. rogers , complexity limitations on quantum computation",
    ". j. comput .",
    "sci . * 59 * , 240 - 252 ( 1999 ) .",
    "y. han , l. hemaspaandra , and t. thierauf , threshold computation and cryptographic security .",
    "siam j. comput .",
    "* 26 * , 59 - 78 ( 1997 ) .",
    "s. jordan , h. kobayashi , d. nagaj , and h. nishimura , achieving perfect completeness in classical - witness quantum merlin - arthur proof systems .",
    "* 12 * , 461 - 471 ( 2012 ) .",
    "g. kuperberg , how hard is it to approximate the jones polynomial ?",
    "arxiv:0908.0512    l. li , on the counting functions .",
    "ph.d . thesis , university of chicago ( 1993 ) .",
    "t. yamakami and a. c. yao , @xmath254 .",
    "lett . * 71 * , 63 - 69 ( 1999 ) .",
    "the proof is the same as that of @xmath51 ( theorem  [ main ] ) given in sec .",
    "[ proof1 ] .",
    "first , we show @xmath255 .",
    "since @xmath256  @xcite , we show @xmath257 .",
    "the rest of the proof is the same as that of @xmath125 except that two fp functions @xmath258 and @xmath259 are replaced with two gapp functions @xmath260 and @xmath261 .",
    "furthermore , the proof of @xmath262 is also the same as that of @xmath187 .",
    "we have only to replace the fp function @xmath53 with a gapp function @xmath263 .",
    "since @xmath264 , we show @xmath265 . let us assume that a language @xmath2 is in @xmath266 .",
    "then , there exist gapp functions @xmath267 and @xmath268 , and fp functions @xmath269 and @xmath270 with @xmath271 and @xmath272 such that    * if @xmath9 @xmath273 * if @xmath11 @xmath274    then , there exist gapp functions @xmath275 and @xmath276 such that    * if @xmath9 @xmath277 * if @xmath11 @xmath278    in other words , there exist counting machines @xmath140 and @xmath141 such that    * if @xmath9 @xmath279 * if @xmath11 @xmath280    here , @xmath144 and @xmath145 are numbers of accepting and rejecting paths of @xmath147 on input @xmath7 , respectively .",
    "there exist normal counting machines @xmath148 and @xmath149 such that  @xcite    * if @xmath9 @xmath281 * if @xmath11 @xmath282    without loss of generality , we can assume that both @xmath148 and @xmath149 have computation trees on input @xmath7 whose paths are represented by @xmath152 .    for a given input @xmath7 , @xmath21",
    "is defined as the following procedure .",
    "first , we generate @xmath283 by a polynomial - size quantum circuit .",
    "let us postselect the first and second registers on @xmath284 .",
    "then , the ( unnormalized ) state after the postselection is @xmath285 therefore , the postselection probability is @xmath286 furthermore , @xmath287 therefore , @xmath2 is in @xmath59 .",
    "@xmath288 is obvious .",
    "let us show @xmath289 .",
    "we assume that a language @xmath2 is in @xmath33 .",
    "then , from the uniform family @xmath21 of polynomial - size quantum circuits that assures @xmath64 , we construct the uniform family @xmath217 of polynomial - size quantum circuits which run as follows on input @xmath7 : @xmath218 generates a random bit @xmath234 which is @xmath235 with probability @xmath290 , where @xmath97 is any polynomial",
    ". then , @xmath218 simulates @xmath30 and outputs @xmath40 if @xmath235 and @xmath30 outputs @xmath40 .",
    "@xmath218 outputs @xmath29 if @xmath30 outputs @xmath29 .",
    "then , @xmath291 and @xmath292 therefore , @xmath2 is in @xmath293 .",
    "here we give another proof of @xmath32 . before showing the proof , we will give two definitions of pp .",
    "first we show @xmath297 .",
    "we assume that a language @xmath2 is in postbqp .",
    "then , for any polynomial @xmath4 , there exists a uniform family @xmath92 of polynomial - size quantum circuits . as in the proof of @xmath113 ,",
    "if @xmath9 , @xmath298 for @xmath299 and polynomials @xmath17 and @xmath300 . here , we have used the fact from theorem  [ pgapp ] that @xmath301 for some @xmath302 and polynomials @xmath17 and @xmath300 . note that for simplicity , we omit the @xmath95 dependencies of some polynomials .",
    "second , let us show @xmath305 .",
    "we assume that a language @xmath2 is in pp .",
    "if @xmath9 , for any polynomial @xmath4 , there exist @xmath302 such that @xmath306 then , from theorem  [ gappp ] , we have @xmath307 which means @xmath308 for some polynomials @xmath17 and @xmath300 , and uniform families @xmath309 and @xmath310 of polynomial - size quantum circuits . let us define @xmath30 and @xmath218 such that @xmath311 the circuit @xmath30 ( @xmath218 ) can be constructed by simulating @xmath312 ( @xmath313 ) and outputting @xmath29 with probability @xmath314 ( @xmath252 ) if and only if @xmath312 ( @xmath313 ) outputs @xmath29 .",
    "then , we obtain @xmath315"
  ],
  "abstract_text": [
    "<S> awpp is a complexity class introduced by fenner , fortnow , kurtz , and li , which is defined using gapp functions . </S>",
    "<S> although it is an important class as the best upperbound of bqp , its definition seems to be somehow artificial , and therefore it would be better if we have some  physical interpretation \" of awpp . here </S>",
    "<S> we provide a quantum physical interpretation of awpp : we show that awpp is equal to the class of problems efficiently solved by a quantum computer with the ability of postselecting an event whose probability is close to an fp function . </S>",
    "<S> this result is applied to also obtain a quantum physical interpretation of app . </S>",
    "<S> in addition , we consider a  classical physical analogue \" of these results , and show that a restricted version of @xmath0 contains @xmath1 and is contained in wapp . </S>"
  ]
}
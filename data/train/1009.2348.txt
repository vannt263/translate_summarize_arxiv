{
  "article_text": [
    "_ next - to - leading order _",
    "( nlo ) perturbative qcd computations as well as",
    "_ shower monte carlo _ ( smc )",
    "programs are fundamental tools for the present - days particle physics phenomenology .",
    "in particular , smc programs incorporate the description of a generic high - energy hadronic collision process , starting from the collision between constituents and developing the parton shower , that increases the number of final - state particles by means of strongly ordered subsequent emissions . eventually , the interface with a phenomenological hadronization model , enables the comparison with experimental data . for these reasons ,",
    "they are routinely used by experimentalists to simulate signal and backgrounds processes in physics searches .",
    "nevertheless , the demand for better and better predictions from high energy experiments calls for improving the precision of existing smc s , including nlo corrections .",
    "the mc@nlo  @xcite method has shown first how to reach nlo accuracy for inclusive quantities , implementing the hard subprocess at nlo and developing showers within the _ leading logarithmic approximation _ , avoiding double counting of radiation . in this way one achieves benefits of both approaches : exclusive final states generation of smc s and accuracy of nlo calculations .",
    "the powheg method is a different prescription for interfacing nlo calculations with parton shower generators .",
    "it was first suggested in ref .",
    "@xcite , and was described in great detail in ref .",
    "this method is independent from the monte carlo program used for subsequent showering and generates positive weighted events only . in these respects it improves the mc@nlo approach . until now",
    ", the powheg method has been successfully applied to several processes , both at lepton  @xcite and hadron colliders  @xcite . in these implementations , it has been interfaced to the herwig  @xcite , pythia  @xcite and herwig++  @xcite smc programs .    in the powheg method the hardest radiation is generated first , independently from the following ones .",
    "schematically , the hardest radiation is distributed according to @xmath0\\,,\\ ] ] where @xmath1 is the born contribution and @xmath2\\ ] ] is the nlo differential cross section at fixed underlying born kinematics and integrated over the radiation variables .",
    "the transverse momentum of the emitted parton , with respect to the beam or to another particle , depending on the region of singularity , is denoted by @xmath3 .",
    "the lower cutoff @xmath4 is necessary in order to avoid the coupling constant to reach unphysical values . @xmath5 and @xmath6 are the virtual and the real corrections and in the expression within the square bracket in eq .",
    "( [ eq : bbar ] ) a procedure that takes care of the cancellation of soft and collinear singularities is understood , _",
    "e.g. _ frixione - kunszt - signer ( fks )  @xcite or catani - seymour ( cs ) dipole subtraction .",
    "then , @xmath7\\,\\ ] ] is the powheg sudakov , that is the probability of not having an emission harder that @xmath8 .",
    "equation  ( [ eq : master ] ) can be seen as an improvement on the original smc hardest - emission formula , since the born cross section is replaced with @xmath9 which is normalized to nlo by construction . at small transverse momenta",
    "the powheg sudakov becomes equal to a standard smc one .",
    "however , the nlo accuracy of eq .",
    "( [ eq : master ] ) is maintained for inclusive quantities .",
    "moreover , the high@xmath10 radiation region is correctly described by the real contributions @xmath11 since @xmath12 and @xmath13 .",
    "after having generated the hardest radiation , one can interface with any available shower generator , in order to develop the rest of the shower . to avoid the double - counting",
    ", the smc is required to be either @xmath14ordered or to have the ability to veto emissions with a @xmath15 harder than the first one .",
    "in a real collision process several colored massless partons are present , either in the initial or the final state .",
    "one thus should repeat the procedure outlined in sec .",
    "[ seq : master ] for every possible singular region , associated with any massless colored leg becoming collinear to another one , or soft . in order to do this , the full real emission cross section is decomposed into a sum of terms , each of which has at most one collinear and one soft singularities .",
    "the radiation is then generated independently in each of this regions , but only the hardest radiation is retained and the event is generated according to the flavour and kinematics associated to it . because of this complexity , an automatic tool , the powheg - box , has been built  @xcite , in order to help the inclusion of new processes .",
    "on the other hand , the powheg - box may also be seen as a library , where previously implemented processes are available in a common framework .",
    "the user wishing to include a new nlo calculation must only know how to communicate the needed information to the powheg - box .",
    "this happens either defining the appropriate variables , either providing the necessary ` fortran ` routines .",
    "the required inputs are :    1 .   the number of legs in born process , _ e.g. _ `",
    "nlegborn`@xmath16 for @xmath17 .",
    "[ enum1 ] 2 .",
    "the list of born and real processes flavours ` flst_born(k=1 .. nlegborn , j=1 ..",
    "flst_nborn ) ` , ` flst_real(k=1 .. nlegreal , j=1 ..",
    "flst_nreal ) ` , according to pdg  @xcite conventions instead of the pdg value of @xmath18 . at the moment of writing the event on the les houches common block",
    ", the pdg value is restored . ] .",
    "flavor is defined incoming ( outgoing ) for incoming ( outgoing ) fermion lines , _",
    "e.g. _ ` [ 5,2,23,6,3,0 ] ` for @xmath19 .",
    "[ enum2 ] 3 .   the born phase space ` born_phsp(xborn ) ` , given ` xborn(1 ... ndims ) ` random numbers in the unit ` ndims`-dimensional hypercube .",
    "this routine should also set the born phase space jacobian ` kn_jacborn ` , the born momenta ` kn_pborn ` , ` kn_cmpborn ` in lab . and cm frames and the bjorken @xmath20 s , _",
    "i.e. _ ` kn_xb1,kn_xb2 ` .",
    "[ enum3 ] 4 .",
    "the routines that performs the initialization of the couplings , ` init_couplings ` , and the setting of the factorization and renormalization scales , ` set_fac_ren_scales(muf , mur ) ` .",
    "[ enum4 ] 5 .",
    "the born squared amplitudes @xmath21 , summed and averaged over color and helicities as well as the color - ordered born squared amplitudes @xmath22 and the helicity correlated born squared amplitudes @xmath23 , where @xmath24 runs over all external gluons .",
    "the corresponding user routine is defined by ` setborn(p , bflav , born , bornjk , bornmunu ) ` , for momenta ` p(0:3,1:nlegborn ) ` and flavour string ` bflav(1:nlegborn ) ` .",
    "[ enum5 ] 6 .",
    "the real emission squared amplitudes @xmath25 user routine ` setreal(p , rflav , amp2 ) ` , for momenta ` p(0:3,1:nlegreal ) ` and flavour string ` rflav(1:nlegreal ) ` .",
    "[ enum6 ] 7 .   the finite part of the interference of born and virtual amplitude contributions @xmath26 , after factorizing out the common factor @xmath27 .",
    "the user routine is called ` setvirtual(p(0:3,1:nlegborn),vflav(1:legborn),virtual ) ` . [ enum7 ]",
    "8 .   the born color structures in the large @xmath28 limit , set by the routine ` borncolour_lh ` and passed through the les houches interface  @xcite .",
    "[ enum8 ]    we remark that items ( [ enum1]-[enum7 ] ) are the usual ingredients needed to perform a nlo calculation in any subtraction method . item ( [ enum8 ] ) is instead needed to provide a defined color structure to the smc generator .",
    "internally , the powheg - box implements the fks subtraction procedure in a general way . at the beginning",
    ", it automatically evaluates the combinatorics , identifying all the singular regions and the corresponding underlying born contributions .",
    "it also performs the projection of real contributions over the singular region and computes the subtraction counterterms , from soft and collinear approximations of real emissions .",
    "then , it builds the isr and fsr phase space , according to the fks parametrization of the singular region and performs the integration .",
    "eventually , one gets the nlo differential cross section . at this stage",
    ", one can also interface to some analysis routine to obtain nlo differential distributions as a byproduct .",
    "after the integration stage , it performs the calculation of upper bounds for an efficient generation of sudakov - suppressed events and then the generation of hardest radiation , according to the powheg sudakov . at this point ,",
    "the generated event , which contains at most only one extra radiation , has to be passed to a standard smc program , for developing the rest of the shower .",
    "this can be done either on - the - fly or storing the events on a les houches events file  @xcite .",
    "standard analysis routines , at partonic and hadronic level , are provided for included processes , as well as drivers for common smc generators .",
    "users can modify them or implement new ones .",
    "recently , thanks to this framework , the relatively complex process of @xmath29 production has been implemented  @xcite .",
    "this is a promising processes for jet calibration with the early lhc data .",
    "it is also an important source of missing energy signal as well as a background to many new physics searches . in experimental studies carried up until now",
    ", the nlo theoretical calculations were supplemented by correction factors for shower , hadronization and underlying event effects .",
    "however , these factors were evaluated by means of standard lo smc programs .",
    "it is clear the advantage to have a smc program which is nlo accurate , in order to ease and improve the comparisons with experimental results .",
    "we have tried a simple approach  @xcite to merge consistently @xmath30 and @xmath31 samples , in order to obtain a description as smooth and accurate as possible both in the low and high - transverse momentum regions .",
    "the results are showed in figs .",
    "[ fig:1 ] and  [ fig:2 ] .",
    "distribution of the _ next - to - hardest _ jet in single @xmath30 production ( blue dashed curve ) , in @xmath32 jet ( black solid ) and in the merged sample ( red solid).,scaledwidth=90.0% ]     distribution of the _ next - to - hardest _ jet in single @xmath30 production ( blue dashed curve ) , in @xmath32 jet ( black solid ) and in the merged sample ( red solid).,scaledwidth=90.0% ]    from the two figures , one can see how the merged sample models both the single @xmath30 sudakov form factor , that plays an important role in resumming collinear / soft logarithms in the low-@xmath15 region and the high-@xmath15 behaviour of the next - to - hardest jet , which follows the @xmath32 jet distribution . in this last figure ,",
    "jest are reconstructed according to the @xmath33 algorithm , imposing also an angular separation @xmath34 .",
    "all results presented in this talk have been obtained in collaboration with p. nason , c. oleari and e. re .",
    "this work has been supported in part by the deutsche forschungsgemeinschaft in sfb / tr 9 .",
    "s.  frixione , p.  nason and c.  oleari , jhep * 0711 * ( 2007 ) 070 [ arxiv:0709.2092 [ hep - ph ] ] . o.  latunde - dada , s.  gieseke and b.  webber , jhep * 0702 * ( 2007 ) 051 [ arxiv : hep - ph/0612281 ] . o.  latunde - dada , eur .",
    "j.   c * 58 * ( 2008 ) 543 [ arxiv:0806.4560 [ hep - ph ] ] .",
    "g.  corcella _ et al .",
    "_ , arxiv : hep - ph/0210213 . t.  sjostrand , s.  mrenna and p.  z.  skands , jhep * 0605 * ( 2006 ) 026 [ arxiv : hep - ph/0603175 ] . m.  bahr _ et al .",
    "_ , eur .",
    "j.   c * 58 * , 639 ( 2008 ) [ arxiv:0803.0883 [ hep - ph ] ] ."
  ],
  "abstract_text": [
    "<S> we describe the powheg - box package , a general computer code framework for implementing nlo calculations in shower monte carlo programs according to the powheg method . </S>"
  ]
}
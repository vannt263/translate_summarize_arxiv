{
  "article_text": [
    "one major obstacle to the fulfillment of the promise of quantum computing is the current scarcity of quantum algorithms .",
    "quantum computing researchers simply have not yet found enough quantum algorithms to determine whether or not future quantum computers will be general purpose or special purpose computing devices .  as a result , much more research",
    "is crucially needed to determine the algorithmic limits of quantum computing .",
    "one of the most promising and versatile approaches to creating new quantum algorithms is based on the quantum hidden subgroup ( qhs ) paradigm , originally suggested by alexei kitaev @xcite .",
    "this class of quantum algorithms encompasses the deutsch - jozsa , simon , shor algorithms , and many more .     in this paper ,",
    "our strategy for finding new quantum algorithms is to decompose shor s quantum factoring algorithm into its basic primitives , then to generalize these primitives , and finally to show how to reassemble them into new qhs algorithms .",
    "taking an `` alphabetic building blocks approach , '' we will use these primitives to form an `` algorithmic toolkit '' for the creation of new quantum algorithms , such as wandering shor algorithms , continuous shor algorithms , the quantum circle algorithm , the dual shor algorithm , a qhs algorithm for feynman integrals , free qhs algorithms , and more .    toward the end of this paper ,",
    "we show how grover s algorithm is most surprisingly almost  a qhs algorithm , and how this suggests the possibility of an even more complete `` algorithmic tookit '' beyond the qhs algorithms .",
    "before discussing how shor s algorithm can be decomposed into its primitive components , let s take a quick look at an example of the execution of shor s factoring algorithm .  as we discuss this example , we suggest that the reader , as an exercise , try to find the basic qhs primitives that make up this algorithm .",
    "can you see them ?",
    "shor s quantum factoring algorithm reduces the task of factoring a positive integer @xmath0 to first finding a random integer @xmath1 relatively prime to @xmath0 , and then next to determining the period @xmath2 of the following function @xmath3{ccl}\\mathbb{z } & \\overset{\\varphi}{\\longrightarrow } & \\mathbb{z}\\operatorname{mod}n\\\\ x & \\longmapsto & a^{x}\\operatorname{mod}n\\text { , } \\end{array}\\ ] ] where @xmath4 denotes the additive group of integers , and where @xmath5 denotes the integers @xmath6 under multiplication with @xmath7 is found by selecting a random integer , and then applying the euclidean algorithm to determine whether or not it is relatively prime to @xmath0 .",
    "if not , then the @xmath8 is a non - trivial factor of @xmath0 , and there is no need to proceed futher .",
    "however , this possibility is highly unlikely if @xmath0 is large . ] .",
    "since @xmath4 is an infinite group , shor chooses to work instead with the finite additive cyclic group @xmath9 of order @xmath10 , where @xmath11 and with the `` approximating '' map @xmath3{ccll}\\mathbb{z}_{q } & \\overset{\\widetilde{\\varphi}}{\\longrightarrow } & \\mathbb{z}\\operatorname{mod}n & \\\\ x & \\longmapsto & a^{x}\\operatorname{mod}n\\text { , } & 0\\leq x < q \\end{array}\\ ] ]    shor begins by constructing a quantum system with two quantum registers @xmath12 the left intended for holding the arguments @xmath13 of @xmath14 , the right for holding the corresponding values of @xmath14 .",
    "this quantum system has been constructed with a unitary transformation @xmath15 implementing the approximating  map @xmath14 .    as an example , let us use shor s algorithm to factor the  integer @xmath16 , assuming that @xmath17 has been randomly chosen .",
    "thus , @xmath18 .",
    "unknown to us , the period is @xmath19 , and hence , @xmath20 .",
    "we proceed by executing the following steps :    * initialize@xmath21 * apply the inverse fourier transform @xmath22 to the left register , where @xmath23 is a primitive @xmath24-th root of unity , to obtain @xmath25 * apply the unitary transformation @xmath26 to obtain @xmath27 * apply the fourier transform @xmath28 to the left register to obtain @xmath29 where @xmath30 * measure the left register .",
    "then with probability @xmath31 the state will `` collapse '' to @xmath32 with the value measured being the integer @xmath33 , where @xmath34 .    a plot of @xmath35 is shown in figure 1 .",
    "( see @xcite and @xcite for details .",
    ")    fig1.ps + * figure 1 .  a plot of * @xmath36**. *",
    "*    the peaks in the above plot of @xmath35 occur at the integers @xmath37 the probability that at least one of these six integers will occur is quite high .",
    "it is actually @xmath38 .",
    "indeed , the probability distribution has been intentionally engineered to make the probability of these particular integers as high as possible .",
    "and there is a good reason for doing so .",
    "the above six integers are those for which the corresponding rational @xmath39 is closest  to a rational of the form @xmath40 .  by closest  we mean that @xmath41 in particular , @xmath42 are rationals respectively closest  to the rationals @xmath43 the six rational numbers @xmath44 are `` closest '' in the sense that they are convergents of the continued fraction expansions of @xmath45 , respectively .  hence , each of the six rationals @xmath44 can be found using the standard continued fraction recursion formulas .",
    "but ... , we are not searching for rationals of the form @xmath40 .  instead",
    ", we seek only the denominator @xmath19 .",
    "unfortunately , the denominator @xmath19 can only be obtained from the continued fraction recursion when the numerator and denominator of @xmath40 are relatively prime .",
    "given that the algorithm has selected one of the random integers @xmath46 , the probability that the corresponding rational @xmath40 has relatively prime numerator and denominator is @xmath47 , where @xmath48 denotes the euler phi ( totient ) function .",
    "so the probability of finding @xmath19 is actually not @xmath38 , but is instead @xmath49 .",
    "as it turns out , if he repeats the algorithm @xmath50 times , we will obtain the desired period @xmath2 with probability bounded below by approximately @xmath51 .  however , this is not the end of the story .",
    "once we have in our possession a candidate @xmath52 for the actual period @xmath19 , the only way we can be sure we have the correct period @xmath2 is to test @xmath52 by computing @xmath53 .",
    "if the result is @xmath54 , we are certain we have found the correct period @xmath2 .",
    "this last part of the computation is done by the repeated squaring algorithm via the expression @xmath55 where @xmath56 is the radix 2 expansion of @xmath52 . ] .",
    "now that we have taken a quick look at shor s algorithm , let s see how it can be decomposed into its primitive algorithmic components .",
    "we will first need to answer the following question :    _ what is a quantum hidden subgroup algorithm ? _    but before we can answer the this question , we need to provide an answer to an even more fundamental question :    _ what is a hidden subgroup problem ?",
    "_    a map @xmath57 from a group @xmath58 into a set @xmath59 is said to have * hidden subgroup structure * if there exists a subgroup @xmath60 of @xmath58 , called a * hidden subgroup * , and an injection @xmath61 , called a * hidden injection * , such that the diagram@xmath3{ccc}g & \\overset{\\varphi}{\\longrightarrow } & s\\\\ \\nu\\searrow &   & \\nearrow\\iota_{\\mathbf{\\varphi}}\\\\ & g / k_{\\mathbf{\\varphi } } & \\end{array}\\ ] ] is commutative .",
    "the notion generalizes in an obvious way to more complicated diagrams . ] , where @xmath62 denotes the collection of right cosets of @xmath63 in @xmath58 , and where @xmath64 is the natural surjection of @xmath58 onto @xmath65 .",
    "we refer to the group @xmath58 as the * ambient group * and to the set @xmath59 as the * target set*.  if @xmath60 is a normal subgroup of @xmath58 , then @xmath66 is a group , called the * hidden quotient group * , and @xmath67 is an epimorphism , called the * hidden epimorphism*. we will call the above diagram the * hidden subgroup structure * of the map @xmath68 .",
    "( see @xcite,@xcite . )",
    "the underlying intuition motivating this formal definition is as follows : given a natural surjection ( or epimorphism ) @xmath64 , an `` archvillain with malice of forethought '' hides the algebraic structure of @xmath69 by intentionally renaming all the elements of @xmath65 , and `` maliciously tossing in for good measure '' some extra elements to form a set @xmath59 and a map @xmath57 .",
    "the hidden subgroup problem can be stated as follows :    * hidden subgroup problem ( hsp ) . *",
    "@xmath68 _ be a map with hidden subgroup structure .",
    "the problem of determining a hidden subgroup _",
    "@xmath63 _ of _ @xmath58 _ is called a * hidden subgroup problem ( hsp)*.  an algorithm solving this problem is called a * hidden subgroup algorithm*. _    the corresponding quantum form of this hsp is stated as follows :    * hidden subgroup problem ( quantum version ) . *",
    "@xmath57 _ be a map with hidden subgroup structure .  construct a quantum implementation of the map _",
    "@xmath70 _ as follows : let _ @xmath71 _ and _ @xmath72 _ be hilbert spaces defined respectively by the orthonormal bases _",
    "@xmath73__and _ _ @xmath74 _ and let _",
    "@xmath75 _ _ , where _ _ @xmath54 _ denotes the identity .",
    "] of the ambient group _",
    "@xmath76__.  finally , let _ _",
    "@xmath77 _ _ be a unitary transformation such that__@xmath3{ccc}\\mathcal{h}_{g}\\otimes\\mathcal{h}_{s } & \\longrightarrow & \\mathcal{h}_{g}\\otimes\\mathcal{h}_{s}\\\\ \\left\\vert g\\right\\rangle \\left\\vert s_{0}\\right\\rangle   & \\mapsto & \\left\\vert g\\right\\rangle \\left\\vert \\varphi(g)\\right\\rangle \\end{array}\\ ] ] _ determine the hidden subgroup _ @xmath63 _ with bounded probability of error by making as few queries as possible to the blackbox _",
    "@xmath78__.  a quantum algorithm solving this problem is called a * quantum hidden subgroup ( qhs ) algorithm*. _ _",
    "we are now in a position to construct one of the fundamental algorithmic primitives found in shor s algorithm .",
    "let @xmath57 be a map from a group @xmath58 to a set @xmath59 with hidden subgroup structure .",
    "we assume that all representations of @xmath58 are equivalent to unitary representations .",
    "let @xmath79 denote a * complete set of distinct irreducible unitary representations * of @xmath58 .",
    "using multiplicative notation for @xmath58 ,",
    "we let @xmath54 denote the * identity * of @xmath58 , and let @xmath80 denote its image in @xmath59 .",
    "finally , let @xmath81 denote the * trivial representation * of @xmath58 .",
    "if @xmath58 is abelian , then @xmath82 becomes the * dual group * of characters .",
    "the generic qhs algorithm is given below :    quantum subroutine qrand@xmath83    * initialization@xmath84 * application of the inverse fourier transform @xmath85of @xmath58 to the left register@xmath86 where @xmath87 denotes the cardinality of the group @xmath58 .",
    "* application of the unitary transformation @xmath88@xmath89 * application of the fourier transform @xmath90 of @xmath58 to the left register@xmath91 where @xmath92 denotes the degree of the representation @xmath93 , where @xmath94 denotes the contragradient representation ( i.e. , @xmath95 ) , where @xmath96 , and where @xmath97 . * measurement of the left quantum register with respect to the orthonormal basis@xmath98 thus , with probability@xmath99 the resulting measured value is the entry @xmath100 , and the quantum system `` collapses '' to the state@xmath101 * step 5 .",
    "output @xmath102 , and stop .",
    "but shor s algorithm consists of more than the primitive qrand .    for many ( but not all ) hidden subgroup problems ( hsps ) @xmath68 , the corresponding generic qhs algorithm qrand either is not physically implementable or is too expensive to implement physically .",
    "for example , the hsp @xmath70 is usually not physically implementable if the ambient group is infinite ( e.g. , @xmath58 is the infinite cyclic group @xmath4 ) , and is too expensive to implement if the ambient group is too large ( e.g. , @xmath58 is the symmetric group @xmath103 ) .  in this case , there is a standard generic way of `` tweaking '' the hsp to get around this problem , which we will call * pushing*.    let @xmath57 be a map from a group @xmath58 to a set @xmath59 .",
    "a map @xmath104 from a group @xmath105 to the set @xmath59 is said to be a * push * of @xmath70 , written @xmath106 provided there exists an epimorphism @xmath107 from @xmath58 onto @xmath105 , and a transversal be an epimorphism from a group @xmath76 to a group @xmath108 .",
    "then a transversal @xmath109 of @xmath69 is is a map @xmath110 such that @xmath111 is the identity map @xmath112 .",
    "( it immediately follows that @xmath109 is an injection . )  in othere words , a transversal @xmath109 of an epimorphism @xmath69 is a map which maps eacl element @xmath113 of @xmath108 to an element of @xmath76 contained in the coset @xmath113 , i.e. , to a coset representative of @xmath113 . ]",
    "@xmath114 of @xmath69 such that @xmath115 , i.e. , such that the following diagram is commutative@xmath3{ccc}g & \\overset{\\varphi}{\\longrightarrow}\\quad & s\\\\ \\quad\\uparrow\\tau & \\quad\\nearrow\\widetilde{\\varphi}\\quad & \\\\ \\widetilde{g } &   & \\end{array}\\ ] ]    if the epimorphism @xmath116 and the transversal @xmath109 are chosen in an appropriate way , then execution of the generic qhs subroutine with input @xmath117 , i.e. , execution of @xmath118 will with high probability produce an irreducible representation @xmath119 of the group @xmath105 which is sufficiently close to an irreducible representation @xmath93 of the group @xmath58 .",
    "if this is the case , then there is a polynomial time classical algorithm which upon input @xmath119 produces the representation @xmath93 .",
    "obviously , much more can be said about pushing .",
    "but unfortunately that would take us far afield from the objectives of this paper .",
    "for more information on pushing , we refer the reader to @xcite",
    ".    it would be amiss not to mention that the above algorithmic primitive of pushing suggests the definition of a second primitive which we will call * lifting*.    let @xmath57 be a map from a group @xmath58 to a set @xmath59 .",
    "a map @xmath120 from a group @xmath121 to the set @xmath59 is said to be a * lift * of @xmath70 , written @xmath122 provided there exists an morphism @xmath123 from to @xmath58 such that @xmath124 , i.e. , such that the following diagram is commutative@xmath3{cl}\\underline{g } & \\\\ \\ \\",
    "\\eta\\downarrow\\quad & \\quad\\searrow\\underline{\\varphi}\\quad\\\\ g & \\quad\\overset{\\varphi}{\\longrightarrow}\\quad s \\end{array}\\ ] ]    fig2.eps + * figure 2 .  pushing and lifting hsps . *",
    "we are now in position to describe shor s algorithm in terms of its primitive components .  in particular , we are now in a position to see that shor s factoring algorithm is a classic example of a qhs algorithm created from the push of an hsp .",
    "let @xmath0 be the integer to be factored .",
    "let @xmath4 denote the additive group of integers , and @xmath125 denote the integers @xmath6 under multiplication .",
    "shor s algorithm is a qhs algorithm that solves the following hsp @xmath3{rrc}\\varphi:\\mathbb{z } & \\longrightarrow & \\mathbb{z}_{n}^{\\times}\\\\ m & \\longmapsto & a^{m}\\operatorname{mod}n \\end{array}\\ ] ] with unknown hidden subgroup structure given by the following commutative diagram @xmath3{ccc}\\mathbb{z } & \\overset{\\varphi}{\\longrightarrow } & \\mathbb{z}_{n}^{\\times}\\\\ \\nu\\searrow &   & \\nearrow\\iota\\\\ & \\mathbb{z}/p\\mathbb{z } & \\end{array } \\text { \\ , } \\ ] ] where @xmath1 is an integer relatively prime to @xmath0 , where @xmath2 is the hidden integer period of the map @xmath126 , where @xmath127 is the additive subgroup of all integer multiples of @xmath2 ( i.e. , the hidden subgroup ) , where @xmath128  is the natural epimorpism of the integers onto the quotient group @xmath129 ( i.e. , the hidden epimorphism ) , and where @xmath130 is the hidden monomorphism .",
    "an obstacle to creating a physically implementable algorithm for this hsp is that the domain @xmath4 of @xmath70 is infinite .",
    "as observed by shor , a way to work around this difficulty is to push the hsp .",
    "in particular , as illustrated by the following commutative diagram@xmath3{ccl}\\mathbb{z\\qquad } & \\overset{\\varphi}{\\longrightarrow } & \\qquad\\mathbb{z}_{n}^{\\times}\\\\ \\mu\\searrow\\nwarrow\\tau &   & \\nearrow\\varphi = push\\left (   \\varphi\\right ) = \\varphi\\circ\\tau\\\\ & \\mathbb{z}_{q } & \\end{array } \\text { \\ \\ , } \\ ] ] a push @xmath117 is constructed by selecting the epimorphism @xmath131 of @xmath4 onto the finite cyclic group @xmath9 of order @xmath132 , where the integer @xmath132 is the unique power of @xmath133 such that @xmath134 , and then choosing the transversal is an injection @xmath135 such that @xmath136 is the identity map on @xmath9 , i.e. , a map that takes each element of @xmath9 onto a coset representative of the element in @xmath4 . ]",
    "@xmath3{rrc}\\tau:\\mathbb{z}_{q } & \\longrightarrow & \\mathbb{z}\\\\ m\\operatorname{mod}q & \\longmapsto & m \\end{array } \\text { \\ , } \\ ] ] where @xmath137 .",
    "_ this push _",
    "@xmath138 _ is called _ * shor s oracle*.    shor s algorithm consists in first executing the quantum subroutine qrand@xmath139 , thereby producing a random character @xmath140 of the finite cyclic group @xmath9 .",
    "the transversal @xmath109 used in pushing has been engineered in such a way as to assure that the character @xmath141 is sufficiently close to a character @xmath142 of the hidden quotient group @xmath143 .  in this case `` sufficiently close '' means that @xmath144 which means that @xmath40 is a continued fraction convergent of @xmath39 , and thus can be found found by the classical polynomial time continued fraction algorithm and @xmath145 can in the obvious way be identified with points of in the unit circle in the complex plane .  with this identification",
    ", we can see that this inequalty is equivalent to saying the the chordal distance bewteen these two rational points on the unit circle is less than or equan to @xmath146 .",
    "hence , shor s algorithm is using the topology of the unit circle . ] .",
    "now let s use the primitives described in sections 3 , 4 , and 5 to create other new qhs algorithms , called wandering shor algorithms .",
    "wandering shor algorithms are essentially qhs algorithms on free abelian finite rank @xmath147 groups @xmath76 which , with each iteration , first select a random cyclic direct summand @xmath4 of the group @xmath76 , and then apply one iteration of the standard shor algorithm to produce a random character of the approximating  finite group @xmath148 , called a * * group probe * * , we mean an epimorphic image of the ambient group @xmath76 . ] .",
    "three different wandering shor algorithms are created in @xcite .",
    "the first two wandering shor algorithms given in @xcite are quantum algorithms which find the order @xmath2 of a maximal cyclic subgroup of the hidden quotient group @xmath149 .",
    "the third computes the entire hidden quotient group @xmath149 .",
    "the first step in creating a wandering shor algorithm is to find the right generalization one of the primitives found in shor s algorithm , namely , the transversal @xmath150 of shor s factoring algorithm .  in other words ,",
    "we need to construct the `` correct '' generalization of the transversal from @xmath9 to a free abelian group @xmath76 of rank @xmath147 .  for this reason ,",
    "we have created the following definition :    let @xmath76 be the free abelian group of rank @xmath147 , let @xmath151 onto the cyclic group @xmath9 of order @xmath132 with selected generator @xmath152 .",
    "a transversal be an epimorphism from a group @xmath76 to a group @xmath108 .",
    "then a transversal @xmath109 of @xmath69 is is a map @xmath110 such that @xmath153 is the identity map @xmath154 .",
    "( it immediately follows that @xmath109 is an injection . )  in othere words , a transversal @xmath109 of an epimorphism @xmath69 is a map which maps eacl element @xmath113 of @xmath108 to an element of @xmath76 contained in the coset @xmath113 , i.e. , to a coset representative of @xmath113 . ]",
    "@xmath155 of @xmath69 is said to be a * shor transversal * provided that :    * @xmath156 for all @xmath157 * for each ( free abelian ) basis @xmath158 of @xmath76 , the coefficients @xmath159 of @xmath160 satisfy @xmath161 .",
    "later , when we construct a generalization of shor transversals to free groups of finite rank @xmath147 , we will see that the first condition simply states that a shor transversal is nothing more than a 2-sided schreier transversal .",
    "the second condition of the above definition simply says that @xmath162 maps the generator @xmath152 of @xmath9 onto a generator of a free direct summand @xmath4 of @xmath76 .",
    "( for more details , please refer to section 12 of this paper . )    in @xcite , we show how to use the extended euclidean algorithm to construct the epimorphism @xmath163 and the transversal @xmath155",
    ".    fig3.eps + * figure 3 .",
    "flowchart for the first wandering shor algorithm ( a.k.a . , a vintage shor algorithm ) .",
    "this algorithm finds the order * @xmath2 * *  of a maximal cyclic subgroup of the hidden quotient group * * @xmath149**. * *    flow charts for the three wandering shor algorithms created in @xcite are given in figures 3 through 5 . in @xcite ,",
    "these were also called * vintage shor algorithms*.    fig4.eps + * figure 4 .",
    "flowchart for the second wandering shor algorithm ( a.k.a . , a vintage shor algorithm ) .",
    "this algorithm finds the order * @xmath2 * *  of a maximal cyclic subgroup of the hidden quotient group * * @xmath149**. * *    fig5.eps + * * figure 5 .",
    "flowchart for the third wandering shor algorithm , a.k.a . , a vintage shor algorithm .",
    "this algorithm finds the entire hidden quotient group  * * @xmath149*. *    the algorithmic complexities of the above wandering shor algorithms is given in @xcite .",
    "for example , the first wandering shor algorithm is of time complexity@xmath164 where @xmath147 is the rank of the free abelian group @xmath76 .",
    "this can be readily deduced from the abbreviated flowchart given in figure 6 .",
    "fig6.ps + * figure 6 .",
    "abbreviated flowchart for the first wandering shor algorithm . *",
    "in in @xcite and in @xcite , the algorithmic primitives found in above sections of this paper were used to create a class of algorithms called continuous shor algorithms .  by a * continuous variable shor algorithm * ,",
    "we mean a quantum hidden subgroup algorithm that finds the hidden period @xmath2 of an admissible function @xmath165 from the reals @xmath166 to itself .    by an admissible function , we mean a function belonging to any sufficiently well behaved class of functions .",
    "for example , the class of functions which are lebesgue integrable on every closed interval of @xmath166 .  there , are many other classes of functions that work equally as well .",
    "actually , the papers @xcite , @xcite give in succession three such continuous shor algorithms , each successively more general than the previous .",
    "for the first algorithm , we assume that the unknown hidden period @xmath2 is an integer .",
    "the algorithm is then constructed by using rigged hilbert spaces@xcite , @xcite , linear combinations of dirac delta functions , and a subtle extension of the fourier transform found in the generic qhs subroutine qrand@xmath167 , which has been described previously in section 4 of this paper .  in step 5 of qrand@xmath167 ,",
    "the observable@xmath168 is measured , where @xmath132 is an integer chosen so that @xmath169 .",
    "it then follows that the output of this algorithm is a rational @xmath170 which is a convergent of the continued fraction expansion of a rational of the form @xmath171 .",
    "the above quantum algorithm is then extended to a second quantum algorithm that finds the hidden period @xmath2 of functions @xmath165 , where the unknown period @xmath2 is a rational .",
    "finally , the second algorithm is extended to a third algorithm which finds the hidden period @xmath2 of functions @xmath165 , when @xmath2 is an _ arbitrary real number_. we point out that for the third and last algorithm to work , we must impose a very restrictive condition on the map @xmath165 , i.e. , the condition that the map @xmath70 is continuous .",
    "we have shown in previous sections how the mathematical primitives of pushing and lifting can be used to create new quantum algorithms .  in particular , we have described how pushing and lifting can be used to derive new hsps from an hsp @xmath57 on an arbitrary group @xmath58 .  we now see how group duality can be exploited by these two primitives to create even more quantum algorithms",
    ".    fig7.eps + * figure 7 . using duality to create new qhs algorithms . *    to this end",
    ", we assume that @xmath58 is an _ abelian _ group .",
    "hence , its dual group of characters @xmath79 exists is non - abelian , then its dual is not a group , but instead the representation algebra @xmath172 over the group ring @xmath173 .  the methods described in this section can also be used to create new quantum algorithms for hsps @xmath174 on on the representation algebra @xmath172 . ] .",
    "it now follows that pushing and lifting can also be used to derive new hsps from an arbitrary hsp @xmath175 on the dual group @xmath79 .  in @xcite",
    ", this method is used to create a number of new quantum algorithms derived from shor - like hsps @xmath176 .",
    "a roadmap is shown in figure 8 of the developmental steps taken to find and to create a new qhs algorithm on @xmath9 , which is ( in the sense described below ) dual to shor s original algorithm .",
    "we call the algorithm developed in the final step of figure 8 the * dual shor algorithm*.    fig8.eps + * figure 8",
    ". roadmap for creating the dual shor algorithm . *    as indicated in figure 5 , our first step is to create an intermediate qhs algorithm based on a shor - like hsp @xmath176 from the additive group of integers @xmath4 to a target set @xmath59 .",
    "the resulting algorithm `` lives '' in the infinite dimensional space @xmath177 defined by the orthonormal basis @xmath178 .",
    "this is a physically unemplementable quantum algorithm created as a first steping stone in our algorithmic development sequence .",
    "intuitively , this algorithm can be viewed as a `` distillation '' or a `` purification '' of shor s original algorithm .    as a next step ,",
    "* duality * is used to create the * quantum circle algorithm*.  this is accomplished by devising a qhs algorithm for an hsp @xmath179 on the dual group @xmath180 of the additive group of integers @xmath4 .",
    "( by @xmath180 , we mean the * additive group of reals * @xmath181 , which is isomorphic to the multiplicative group @xmath182 , i.e. , the * unit circle * in the complex plane . )  once again , this is probably a physcally unemplementable quantum algorithm .",
    "but its utility lies in the fact that it leads to the physically implementable quantum algorithm created in the last and final developmental step , as indicated in figure 8 .  for in the final step ,",
    "a physically implementable qhs algorithm is created by * lifting * the hsp @xmath179 to an hsp @xmath183 .  for the obvious reason , we call the resulting algorithm a * dual shor algorithm*.    for detailed descriptions of each of these quantum algorithms , i.e. ,",
    "the `` distilled '' shor , the quantum circle , and the dual shor algorithms , the reader is referred to @xcite and @xcite .",
    "we give below brief descriptions of the quantum circle and the dual shor algorithms .",
    "for the * quantum circle algorithm * , we make use of the following spaces ( each of which is used in quantum optics ) :    * the rigged hilbert space @xmath184 with orthonormal basis @xmath185 .  by orthonormal  we mean that @xmath186 , where  @xmath187  denotes the dirac delta function .",
    "the elements of @xmath184 are * formal integrals * of the form @xmath188 .",
    "( the physicist dirac in his classic book@xcite on quantum mechanics refers to these integrals as infinite sums .",
    "see also @xcite and @xcite . ) * the complex vector space @xmath189 of formal sums@xmath190 with orthonormal basis @xmath191 .  by orthonormal  we mean that @xmath192 , where @xmath193 denotes the kronecker delta .",
    "we can now design an algorithm which solves the following hidden subgroup problem :    * hidden subgroup problem for the circle . *  _ let _ @xmath194 _ be an admissible function from the circle group _ @xmath180 _ to the complex numbers _ @xmath195 _ with hidden rational period _ @xmath196 _ _ , where _ _ @xmath197 _ denotes the rational circle , i.e. , the rationals _",
    "@xmath198__. _ _    by an admissible function , we mean a function belonging to any sufficiently well behaved class of functions .",
    "for example , the class of functions which are lebesgue integrable on @xmath180 .",
    "there , are many other classes of functions that work equally as well .    if @xmath199 ( with @xmath200 ) is a rational period of a function @xmath201 , then @xmath202is also a period of @xmath203 .",
    "hence , the minimal rational period of @xmath203 is always a reciprocal integer @xmath198 .",
    "the following quantum algorithm finds the reciprocal integer period of the function @xmath203 .",
    "circle - algorithm@xmath204    * initialization@xmath205 * application of the inverse fourier transform @xmath206@xmath207 * step 2 .",
    "application of the unitary transformation @xmath208@xmath209 * application of the fourier transform @xmath210    remark . letting @xmath211 , we have@xmath212 where @xmath213 is the unknown reciprocal period .",
    "but@xmath214{ll}a & \\text{if \\ }",
    "n=0\\operatorname*{mod}a\\\\ 0 & \\text{otherwise}\\end{array } \\right.\\ ] ] hence,@xmath215    * measurement of@xmath216 with respect to the observable@xmath217 to produce a random eigenvalue @xmath218 .",
    "the above quantum circle algorithm can be extended to a quantum algorithm which finds the hidden period @xmath219 of a function @xmath194 , when @xmath219 is an arbitrary real number @xmath198 .",
    "but in creating this extended quantum algorithm , a very restrictive condition must be imposed on the map @xmath194 , namely , the condition that @xmath203 be continuous .",
    "we now give a brief description of the * dual shor algorithm*.    the dual shor algorithm is a qhs algorithm created by making a discrete approximation of the quantum circle algorithm .",
    "more specifically , it is created by lifting the qhs circle algorithm for @xmath220 to the finite cyclic group @xmath9 , as illustrated in the commutative diagram given below:@xmath3{ll}\\;\\,\\mathbb{z}_{q } & \\\\ \\mu\\downarrow\\;\\ ; & \\;\\;\\searrow\\widetilde{\\varphi}=push\\left (   \\varphi \\right )   = \\varphi\\circ\\mu\\\\ \\mathbb{r}\\mathbf{/}\\mathbb{z } & \\longrightarrow\\;\\;s \\end{array}\\ ] ] intuitively , just as in shor s algorithm ,  the circle group @xmath180 is `` approximated '' with the finite cyclic group @xmath9 , where the group @xmath9 is identified with the additive group@xmath221 and where the hidden subgroup @xmath222 is identified with the additive group@xmath223 with @xmath224 .",
    "this is a physically implementable quantum algorithm .  in a certain sense",
    ", it is actually faster than shor s algorithm .  for the last step of shor s algorithm",
    "uses the standard continued fraction algorithm to determine the unknown period .  on the other hand ,",
    "the last step of the dual shor algorithm uses the much faster euclidean algorithm to compute the greatest common divisor of the integers @xmath225 , thereby determining the desired reciprocal integer period @xmath213 .  for more details",
    ", please refer to @xcite and @xcite .",
    "we now discuss a qhs algorithm based on feynman path integrals .",
    "this quantum algorithm was developed at the mathematical sciences research institute ( msri ) in berkeley , california when one of the authors of this paper was challenged with an invitation to give a talk on the relation between feynmann path integrals and quantum computing at an msri conference on feynman path integrals .    until recently , both authors of this paper thought that the quantum algorithm to be described below was a highly speculative quantum algorithm .",
    "for the existence of feynman path integrals is very difficult ( if not impossible ) to determine in a mathematically rigorous fashion .",
    "but surprisingly , jeremy becnel in his doctoral dissertation @xcite actually succeeded in creating a firm mathematical foundation for this algorithm .",
    "we should mention , however , that the physical implementability of this algorithm is still yet to be determined .    definition .",
    "let paths be the real vector space of all continuous paths @xmath226   \\longrightarrow\\mathbb{r}^{n}$ ] which are @xmath227 with respect to the inner product@xmath228 with scalar multiplication and vector sum defined as    * @xmath229 * @xmath230    we wish to create a qhs algorithm for the following hidden subgroup problem :    * hidden subgroup problem for * paths .",
    "@xmath231paths@xmath232 _ be a functional with a hidden subspace _",
    "@xmath233 _ of _ paths _ _ such that__@xmath234    our objective is to create a qhs algorithm which solves the above problem , i.e. , which finds the hidden subspace @xmath233 .",
    "let @xmath235 be the rigged hilbert space with orthonormal basis @xmath236 , and with bracket product @xmath237",
    ".    we will use the following observation to create the qhs algorithm :    * observation .",
    "* paths@xmath238 _ , where _ @xmath239 _ denotes the orthogonal complement of the hidden vector subspace _",
    "@xmath233__. _ _    the qhs algorithm for feynman path integral is given below :",
    "feynman@xmath83    * initialize@xmath240 * apply @xmath206@xmath241 * apply @xmath242@xmath243 * apply @xmath210@xmath3{lll}\\left\\vert \\psi_{3}\\right\\rangle   & = & { \\displaystyle\\int\\limits_{\\text{\\textsc{paths } } } } \\mathcal{d}y{\\displaystyle\\int\\limits_{\\text{\\textsc{paths } } } } \\mathcal{d}x\\ e^{-2\\pi ix\\cdot y}\\left\\vert y\\right\\rangle \\left\\vert \\varphi\\left (   x\\right )   \\right\\rangle \\\\ & = & { \\displaystyle\\int\\limits_{\\text{\\textsc{paths } } } } \\mathcal{d}y\\ \\left\\vert y\\right\\rangle { \\displaystyle\\int\\limits_{\\text{\\textsc{paths } } } } \\mathcal{d}x\\ e^{-2\\pi ix\\cdot y}\\left\\vert \\varphi\\left (   x\\right ) \\right\\rangle \\end{array}\\ ] ] but @xmath244 however,@xmath245 so , @xmath246 * measure@xmath247 with respect to the observable@xmath248 to produce a random element of @xmath239    the above algorithm suggests an intriguing question .",
    "can the above qhs feynman integral algorithm be modified in such a way as to create a quantum algorithm for the jones polynomial ?",
    "in other words , can it be modified by replacing paths with the space of gauge connections , and making suitable modifications ?",
    "this question is motivated by the fact that the integral over gauge transformations@xmath249 looks very much like a fourier transform , where@xmath250 denotes the * wilson loop * over the knot @xmath251 .",
    "in this and the following section of this paper , our objective is to show that a free group is the the most natural domain for qhs algorithms .",
    "in retrospect , this is not so surprising if one takes a discerning look at shor s factoring algorithm .  for in section 6",
    ", we have seen that shor s algorithm is essentially a qhs algorithm on the free group @xmath4 which has been pushed onto the finite group @xmath9 .    in particular ,",
    "let @xmath57 be a map with hidden subgroup structure from a finitely generated ( f.g . )",
    "group @xmath58 to a set @xmath59 .",
    "we assume that the hidden subgroup @xmath251 is a normal subgroup of @xmath58 of finite index",
    ".  then the objectives of this section are to demonstrate the following :    * every hidden subgroup problem ( hsp ) @xmath57 on an arbitray f.g .",
    "group @xmath58 can be lifted to an hsp @xmath252 on a free group @xmath253 of finite rank .",
    "* moreover , a solution for the lifted hsp @xmath252 is for all practical purposes the same as the solution for the original hsp @xmath57 .    _ thus , one need only investigate qhs algorithms for free groups of finite rank ! _    before we can describe the above results , we need to review a number of definitions .",
    "we begin with the definition of a free group :    [ universal definition]a group @xmath253 is said to be * free * of finite rank @xmath147 if there exists a finite set of @xmath147 generators @xmath254 such that , for every group @xmath58 and for every map @xmath255 of the set @xmath256 into the group @xmath58 , the map @xmath257 extends to a morphism @xmath258 .",
    "we call the set @xmath256 a * free basis * of the group @xmath253 , and frequently denote the group @xmath253 by @xmath259 , .",
    "it follows from this definition that the morphism @xmath260 is unique .",
    "the intuitive idea encapsulated by this definition is that a free group is an unconstrained group ( very much analogous to a physical system without boundary conditions . )  in other words , a group is free provided it has a set of generators such that the only relations among those generators are those required for @xmath253 to be a group .  for example ,    * @xmath261 is an allowed relation * @xmath262 is not an allowed relation for @xmath263 * @xmath264 is not an allowed relation    as an immediate consequence of the above definition , we have the following proposition :    let @xmath58 be an arbitrary f.g .",
    "group with finite set of @xmath147 generators @xmath265 , and let @xmath266 be the free group of rank @xmath147 with free basis @xmath267 .     then by the above definition , the map @xmath268  @xmath269 induces a uniques epimorphism @xmath270 from @xmath253 onto @xmath58 .  with this epimorphism ,",
    "every hsp @xmath68 on the group @xmath58 uniquely lifts to the hsp @xmath271 on the free group @xmath253 .",
    "moreover , if @xmath251 and @xmath272 are the hidden subgroups of the hsps @xmath70 and @xmath273 , respectively , the corresponding hidden quotient groups @xmath274 and @xmath275 of these two hsps are isomorphic .  hence , every solution of the hsp @xmath252 immediately produces a solution of the original hsp @xmath57 .",
    "we close this section with the defintion of a group resentation , a concept that will be needed in the next section for generalizing shor s algorithm to free groups .",
    "let @xmath58 be a group .",
    "a * * group presentation**@xmath276 for @xmath58 is a set of free generators @xmath277 of a free group @xmath253 and a set of words @xmath278 in @xmath259 , called * relators * , such that the group @xmath58 is isomorphic to the quotient group @xmath279 , where @xmath280 , called the * consequence * of @xmath278 , is the smallest normal subgroup of @xmath259 containing the relators @xmath278 .",
    "the intuition captured by the above definition is that @xmath277 are the generators of @xmath58 , and @xmath281 is a complete set of relations among these generators , i.e. , every relation among the generators of @xmath58 is a * consequence * of ( derivable from ) the relations @xmath281 .  for example ,    * @xmath282 and @xmath283 are both presentations of the free group @xmath259 * @xmath284 and @xmath285 are both presentations of the cyclic group @xmath9of order @xmath132 , where @xmath1 and @xmath113 are integers such that @xmath286 . *",
    "@xmath287 is a presentation of the symmetric group @xmath288 on three symbols .",
    "the objective of this section is to generalize shor s algorithm to free groups of finite rank of rank 1 constructed by a push onto the cyclic group @xmath9 .  in light of this and of the results outlined in the previous section ,",
    "it is a natural objective to generalize shor s algorithm to free groups of finite rank . ] .",
    "the chief obstacle to accomplishing this goal is finding a correct generalization of the shor transversal @xmath3{cccc}\\mathbb{z}_{q } & \\overset{\\tau}{\\longrightarrow } & \\mathbb{z } & \\\\ n\\operatorname{mod}q & \\longmapsto & n & \\left (   \\text{\\ } 0\\leq n < q\\right ) \\end{array}\\ ] ] unfortunately , there appear to be few mathematical clues indicating how to go about making such a generalization .",
    "however , as we shall see , the generalization of the shor transversal to the transversal found in the wandering shor algorithm does provide a crucial clue , suggesting that a generalized shor transversal must be a 2-sided schreier transversal .",
    "( see section 7 . )",
    "we begin by formulating a constructive approach to free groups :    let @xmath259 be a free group with free basis @xmath277 .",
    "then a * word * is a finite string of the symbols @xmath289 .  a * reduced word * is a word in which there is no substring of the form @xmath290 or @xmath291 .",
    "two words are said to be * equivalent * if one can be transformed into the other by applying a finite number of substring insertions or deletions of the form @xmath290 or @xmath291 .",
    "we denote an * arbitrary word * @xmath292 by @xmath293 , where each @xmath294 .",
    "the * length * @xmath295 of a word @xmath296 is number of symbols @xmath297 that appear in @xmath292 , i.e. , @xmath298 .    for example",
    ", @xmath299 is a word of length @xmath300 which is equivalent to the reduced word @xmath301 of length @xmath302 .",
    "it easily follows that :    a free group @xmath259 is simply the set of reduced words together with the obvious definition of product , i.e. , concatenation followed by full reduction .",
    "we can now use this constructive approach to create a special kind of transversal @xmath303 of an epimorphism @xmath270 , called a 2-sided scheier transversal@xcite :    a set @xmath304 of reduced words in a free group @xmath266 is said to be a * 2-sided schreier system * provided    * the empty word @xmath54 lies in @xmath304 .",
    "* @xmath305 , and * @xmath306    given an epimorphism @xmath307 of the free group @xmath253 onto a group @xmath58 , a * 2-sided schreier transversal * @xmath308 for @xmath69 is a transversal of @xmath69 for which there exists a 2-sided schreier system such that @xmath309 .",
    "a 2-sided schreier transversal is said to be * minimal * provided the length of each word @xmath292 is less than or equal to the length of each reduced word in the coset @xmath310 , where @xmath311 denotes the kernel of the epimorpism @xmath69 .",
    "the wandering shor algorithm found in section 7 suggests that a correct generalization of the shor transversal @xmath312 @xmath313 must at least have the property that it is a minimal 2-sided schreier transversal .",
    "whatetever other additional properties this generalization must have is simply not clear .     in @xcite , we construct and investigate a number of different qhs algorithms on free groups that arise from the application of various additional conditions imposed upon the minimal 2-sided schreier transversal requirement .  in this section ,",
    "we only give a descriptive sketch of the simplest of these algorithms , i.e. , a qhs algorithm on free groups with only the minimal 2-sided schreier transversal requirement imposed .",
    "let @xmath266 be the free group of finite rank @xmath147 with free basis @xmath254 , and let @xmath314 be an hsp on the free group @xmath253 .",
    "we assume that the hidden subgroup @xmath251 is normal and of finite index in @xmath253 .",
    "( please note that @xmath315 . )",
    "* choose a finite group probe @xmath58 with presentation @xmath316 , where the subscript @xmath69 denotes the epimorphism @xmath307 induced by the map @xmath317 .",
    "* choose a minimal 2-sided schreier transversal @xmath303 of the epimorphism @xmath307 .",
    "* finally , construct the push @xmath318    our generalized shor algorithm for the free group @xmath253 consists of the following steps :    * call qrand@xmath319 to produce a word @xmath320 in @xmath253 close to a word @xmath321 lying in @xmath322 . * with input @xmath320 , use a polytime classical algorithm to determine @xmath321 .",
    "( see @xcite . ) * repeat steps 1 and 2 until enough relators @xmath321 s are found to produce a presentation @xmath323 of the hidden subgroup @xmath324 , then output the presentation @xmath325 , and stop .",
    "obviously , much more needs to be said . for , example",
    ", we have not explained how one chooses the relators @xmath326 so that @xmath327 is a good group probe .",
    "moreover , we have not explained what classical algorithm is used to transform the words @xmath320 into the relators @xmath321 .  for more details , we refer the reader to @xcite .",
    "in this section , our objective is to factor grover s algorithm into the qhs primitives developed in the previous sections of this paper .  as a result",
    ", we will show that grover s algorithm is more closely related to shor s algorithm than one might at first expect .",
    "in particular , we will show that grover s algorithm is a qhs algorithm in the sense that it solves an hsp @xmath328 , which we will refer to as the * grover hsp . *  however",
    ", we will then show that the standard qhs algorithm for this hsp can not possibly find a solution .",
    "we begin with a question :    _ does grover s algorithm have symmetries that we can exploit ? _    the problem solved by grover s algorithm @xcite , @xcite , @xcite",
    ", @xcite is that of finding an unknown integer label @xmath329 in an unstructured database with items labeled by the integers : @xmath330 given the oracle@xmath331{ll}1 & \\text{if \\ } j = j_{0}\\\\ 0 & \\text{otherwise}\\end{array } \\right.\\ ] ]    let @xmath332 be the hilbert space with orthonormal basis @xmath333 .",
    "grover s oracle is essentially given by the unitary transformation@xmath334 where @xmath335 is inversion in the hyperplane orthogonal to @xmath336 .",
    "let @xmath337 denote the hadamard transformation on the hilbert space @xmath338 .",
    "then grover s algorithm is as follows :    * ( initialization)@xmath339 * loop until @xmath340@xmath341 * measure @xmath342 with respect to the standard basis@xmath343 to obtain the unknown state @xmath344 with@xmath345    but where is the hidden symmetry in grover s algorithm ?",
    "let @xmath346 be the symmetric group on the symbols @xmath347 .",
    "then grover s algorithm is invariant under the * hidden subgroup * @xmath348,called the * stabilizer subgroup * for @xmath329 , i.e. , grover s algorithm is invariant under the group action@xmath349    moreover , if we know the hidden subgroup @xmath350 , then we know @xmath329 , and vice versa . in other words ,",
    "the problem of finding the unknown label @xmath329 is informationally the same as the problem of finding the hidden subgroup @xmath350 .",
    "let @xmath351 denote the permutation that interchanges integers @xmath352 and @xmath353 , and leaves all other integers fixed .",
    "thus , @xmath354is a transposition if @xmath263 , and the identity permutation @xmath54 if @xmath355 .",
    "the set @xmath356 is a complete set of distinct coset representatives for the hidden subgroup @xmath350 of @xmath346 , i.e. , the coset space @xmath357is given by the following complete set of distinct cosets:@xmath358    we can now see that grover s algorithm is a hidden subgroup algorithm in the sense that it is a quantum algorithm which solves the following hidden subgroup problem :    * grover s hidden subgroup problem .",
    "@xmath359 _ be a map from the symmetric group _",
    "@xmath346 _ to a set _ @xmath360 _ _ with hidden subgroup structure given by the commutative diagram__@xmath3{ccc}s_{n } & \\longrightarrow & \\quad\\;\\;s\\\\ \\nu_{j_{0}}\\searrow &   & \\nearrow\\iota\\\\ & s_{n}/stab_{j_{0 } } & \\end{array } \\text { \\ , } \\ ] ] _ where _ @xmath361 _ is the natural surjection of _",
    "_ on to the coset space _ @xmath357 _ _ , and where _ _ @xmath3{ccc}\\iota:\\;s_{n}/stab_{j_{0 } } & \\longrightarrow & s\\\\ \\quad\\left (   jj_{0}\\right )   stab_{j_{0 } } & \\longmapsto & j \\end{array}\\ ] ] _ is the unknown relabeling ( bijection ) of the coset space _",
    "@xmath357__onto the set _ _ @xmath59__. find the hidden subgroup _ _",
    "@xmath350__with bounded probability of error . _ _",
    "now let us compare shor s algorithm with grover s .    from section 6 ,",
    "we know that shor s algorithm @xcite , @xcite , @xcite , @xcite solves the hidden subgroup problem @xmath362 with hidden subgroup structure@xmath3{ccc}\\mathbb{z } & \\longrightarrow & \\quad\\;\\;\\mathbb{z}_{n}\\\\ \\;\\;\\nu\\searrow &   & \\nearrow\\iota\\\\ & \\mathbb{z}/p\\mathbb{z } & \\end{array}\\ ] ] moreover , as stated in section 6 , shor has created his algorithm by pushing the above hidden subgroup problem @xmath362 to the hidden subgroup problem @xmath363 ( called shor s oracle ) , where the hidden subgroup structure of @xmath14 is given by the commutative diagram@xmath3{ccc}z & \\longrightarrow & \\quad\\;\\;z_{n}\\\\ \\qquad\\;\\;\\alpha\\searrow\\nwarrow\\tau &   & \\nearrow\\widetilde{\\varphi}=\\varphi\\circ\\tau\\\\ & z_{q } & \\end{array } \\text { \\ , } \\ ] ] where @xmath219 is the natural epimorphism of @xmath4 onto @xmath9 , and where @xmath109 is shor s chosen transversal for the epimorphism @xmath219 .",
    "surprisingly , grover s algorithm , viewed as an algorithm that solves the grover hidden subgroup problem , is very similar to shor s algorithm .    like shor",
    "s algorithm , grover s algorithm solves a hidden subgroup problem , i.e. , the grover hidden subgroup problem @xmath359 with hidden subgroup structure@xmath3{ccc}s_{n } & \\longrightarrow & \\quad\\;\\;s\\\\ \\;\\;\\nu\\searrow &   & \\nearrow\\iota\\\\ & s_{n}/stab_{j_{0 } } & \\end{array } \\text { \\ , } \\ ] ] where @xmath360 denotes the set resulting from an unknown relabeling ( bijection ) @xmath364 of the coset space@xmath365    also , like shor s algorithm , we can think of grover s algorithm as one created by pushing the grover hidden subgroup problem @xmath359 to the hidden subgroup problem @xmath366 , where the pushing is defined by the following commutative diagram@xmath3{ccc}s_{n } & \\longrightarrow & \\qquad\\qquad\\;\\;s = s_{n}/stab_{j_{0}}\\\\ \\qquad\\;\\;\\alpha\\searrow\\nwarrow\\tau &   & \\nearrow\\widetilde{\\varphi}=\\varphi\\circ\\tau\\\\ & s_{n}/stab_{0 } & \\end{array } \\text { \\ \\ , } \\ ] ] where @xmath367 denotes the natural surjection of @xmath346 onto the coset space @xmath368 , and where @xmath369denotes the transversal of @xmath219 given by@xmath3{ccc}s_{n}/stab_{0 } & \\longrightarrow & s_{n}\\\\ \\left (   j0\\right )   stab_{0 } & \\longmapsto & \\left (   j0\\right ) \\end{array } \\text { \\ \\ .}\\ ] ]    again also like shor s algorithm , the map @xmath14 given by @xmath370 is ( if @xmath371 ) actually a disguised grover s oracle .",
    "for the map @xmath14 can easily be shown to simply to@xmath372{ll}(j0)stab_{j_{0 } } & \\text{if \\ } j = j_{0}\\\\ stab_{j_{0 } } & \\text{otherwise\\ \\ , } \\end{array } \\right.\\ ] ] which is informationally the same as grover s oracle@xmath331{ll}j & \\text{if \\ } j = j_{0}\\\\ 1 & \\text{otherwise}\\end{array } \\right.\\ ] ]    hence , we can conclude that grover s algorithm is a quantum algorithm very much like shor s algorithm , in that it is a quantum algorithm that solves the grover hidden subgroup problem .",
    "however ,  , this appears to be where the similarity between grover s and shor s algorithms ends . for the standard non - abelian qhs algorithm for",
    "@xmath346 can not find the hidden subgroup @xmath350 for each of following two reasons :    * since the subgroups @xmath373 are not normal subgroups of @xmath346 , it follows from the work of hallgren et al @xcite , @xcite that the standard non - abelian hidden subgroup algorithm will find the largest normal subgroup of @xmath346 lying in @xmath350 .",
    "but unfortunately , the largest normal subgroup of @xmath346 lying in @xmath373 is the trivial subgroup of @xmath346 . *",
    "the subgroups @xmath374 are mutually conjugate subgroups of @xmath346 .",
    "moreover , one can not hope to use this qhs approach to grover s algorithm to find a faster quantum algorithm . for zalka @xcite",
    "has shown that grover s algorithm is optimal .",
    "the arguments given above suggest that grover s and shor s algorithms are more closely related that one might at first expect .",
    "although the standard non - abelian qhs algorithm on @xmath346 can not solve the grover hidden subgroup problem , there does remain an intriguing question :    * question .",
    "* _ is there some modification of ( or extension of ) the standard qhs algorithm on the symmetric group _",
    "@xmath346 _ that actually solves grover s hidden subgroup problem ? _    for a more in - depth discussion of the results found in this section ,",
    "we refer the reader to @xcite .",
    "in this paper , we have decomposed shor s quantum factoring algorithm into primitives , generalized these primitives , and then reassembled them into a wealth of new qhs algorithms .  but as the results found in the previous section suggest , this list of quantum algorithmic primitives is far from complete .",
    "this is expressed by the following question :    _ where can we find more algorithmic primitives to create a more well rounded toolkit for quantum algorithmic development ? _",
    "the previous section suggests that indeed all quantum algorithms may well be hidden subgroup algorithms in the sense that they all find hidden symmetries , i.e. , hidden subgroups .",
    "this is suggestive of the following meta - procedure for quantum algorithm development :    * explicitly state the problem to be solved . *",
    "rephrase the problem as a hidden symmetry problem . *",
    "create a quantum algorithm to find the hidden symmetry .",
    "_ can this meta - procedure be made more explicit ? _    perhaps some reader to this paper will be able to answer this question .",
    "this work is partially supported by the defense advanced research projects agency ( darpa ) and air forche research laboratory , air force materiel command , usaf , under agreement number f30602 - 01 - 2 - 0522 .",
    "government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation thereon .  this work also partially supported by the institute for scientific interchange ( isi ) , torino , the national institute of standards and technology ( nist ) , the mathematical sciences research institute ( msri ) , the isaac newton institute for mathematical sciences , and the l - o - o - p fund .",
    "hallgren , sean , alexander russell , amnon ta - shma , * the hidden subgroup problem and quantum computation using group representations , * proceedings of the thirty - second annual acm symposium on theory of computing , portland , oregon , may 2000 , 627 - 635 .",
    "lomonaco , samuel j. , jr . , ( ed . ) ,",
    "* `` quantum computation : a grand mathematical challenge for thetwenty - first century and the millennium , '' * proceedings of the symposia of applied mathematics , vol .",
    "58 , american mathematical society , providence , rhode island , ( 2002 ) .",
    "( 358 pages)(http://www.ams.org / bookstore?fn=20&arg1=whatsnew&item = psapm-58)(http://www.csee.umbc.edu / lomonaco / ams / lecture_notes.html )    lomonaco , samuel j. , jr . , and howard e. brandt , ( eds . ) , * `` quantum computation and information , '' * ams contemporary mathematics , vol . 305 , american mathematical society , providence , ri , ( 2002 ) .",
    "( 310 pages)(http://www.csee.umbc.edu/@xmath375lomonaco / ams / special.html )          lomonaco , samuel j. , jr . , and louis h. kauffman , * continuous quantum hidden subgroup algroithms * , spie proceedings on quantum information and computation , vol .",
    "5105 , 11 , ( 2003 ) , 80 - 89 .",
    "( http://arxiv.org/abs/quant-ph/0304084 )    lomonaco , samuel j. , jr . , and , louis h. kauffman , * quantum hidden subgroup algorithms : the devil is in the details , * 2004 proceedings of spie proceedings on quantum information and computation , ( 2004 ) , 137 - 141 .",
    "http://arxiv.org/abs/quant-ph/0403229            mosca , michelle , and artur ekert , * the hidden subgroup problem and eigenvalue estimation on a quantum computer , * proceedings of the 1st nasa international conference on quantum computing and quantum communication , springer - verlag , ( 2001 ) .",
    "( http://xxx.lanl.gov/abs/quant-ph/9903071 )      shor ,",
    "peter w. , * polynomial time algorithms for prime factorization and discrete logarithms on a quantum computer , * siam j. on computing , 26(5 ) ( 1997 ) , pp 1484 - 1509 .",
    "( http://xxx.lanl.gov/abs/quant-ph/9508027 )"
  ],
  "abstract_text": [
    "<S> one of the most promising and versatile approaches to creating new quantum algorithms is based on the quantum hidden subgroup ( qhs ) paradigm , originally suggested by alexei kitaev .  </S>",
    "<S> this class of quantum algorithms encompasses the deutsch - jozsa , simon , shor algorithms , and many more .    in this paper , </S>",
    "<S> our strategy for finding new quantum algorithms is to decompose shor s quantum factoring algorithm into its basic primitives , then to generalize these primitives , and finally to show how to reassemble them into new qhs algorithms .  </S>",
    "<S> taking an `` alphabetic building blocks approach , '' we use these primitives to form an `` algorithmic toolkit '' for the creation of new quantum algorithms , such as wandering shor algorithms , continuous shor algorithms , the quantum circle algorithm , the dual shor algorithm , a qhs algorithm for feynman integrals , free qhs algorithms , and more .     toward the end of this paper , </S>",
    "<S> we show how grover s algorithm is most surprisingly almost  a qhs algorithm , and how this result suggests the possibility of an even more complete `` algorithmic tookit '' beyond the qhs algorithms . </S>"
  ]
}
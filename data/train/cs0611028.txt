{
  "article_text": [
    "historically , the theory of error - correcting codes has benefited greatly from the use of techniques from algebra and algebraic geometry .",
    "combinatorial and graph - theoretic methods have also proven to be useful in the construction and analysis of codes , especially within the last ten years since the re - discovery of low - density parity - check codes .",
    "however , one area of mathematics that has , surprisingly , only played a relatively minor role in the development of coding theory is the field of matroid theory .",
    "the reason this is surprising is that , as anyone with even a basic understanding of the two fields would realize , coding theory and matroid theory are very closely related .",
    "the former deals with matrices over a finite field @xmath2 , and these objects are also of fundamental importance in the latter , where they go under the name of @xmath2-representable matroids .    the connection with matroid theory has not gone unnoticed among coding theorists .",
    "indeed , as far back as 1976 , greene @xcite noticed that the tutte polynomial of a matroid , when specialized to a linear code @xmath0 , was equivalent ( in a certain sense ) to the homogeneous weight - enumerator polynomial @xmath3 , where @xmath4 is the number of words of weight @xmath5 in @xmath0 , and @xmath6 is the length of @xmath0 .",
    "the macwilliams identities are then a special case of a known identity for the tutte polynomial ( * ? ? ?",
    "* chapter  4 ) .",
    "the connection with matroids was also exploited by barg @xcite to derive macwilliams - type identities for generalized - hamming - weight enumerators of a code .",
    "however , aside from such use of tools from matroid theory to re - derive results in coding theory that had already been proved by other means , each field seems to have had little impact on the other .",
    "matroid theory has derived its inspiration largely from graph theory , and its most successful applications have traditionally been in the areas of combinatorial optimization and network flows . very recently , matroid theory has found new applications in the rapidly evolving field of network coding @xcite .    on the other hand ,",
    "coding theory ( by which we mean the theory of error - correcting codes , in contrast to the theory of network coding ) has been largely unconcerned with developments in combinatorial optimization , as the fundamental problems in the former seemed to be of a different nature from those in the latter . however , the recent re - formulation of the maximum - likelihood ( ml ) decoding problem , for a binary linear code over a discrete memoryless channel , as a linear programming problem @xcite has opened a channel through which matroid - theoretic results in combinatorial optimization can be applied to coding theory .",
    "the key tool in these results is the use of the decomposition theory of matroids initiated by seymour @xcite , @xcite .",
    "based on seymour s seminal work , grtschel and truemper @xcite showed that the minimization of a linear functional over the cycle polytope of a binary matroid could be solved in polynomial time for certain classes of matroids .",
    "this immediately implies that for the corresponding families of codes , the ml decoding problem can be solved in time polynomial in the length of the code .",
    "given the fact that the ml decoding problem is known to be np - hard in general @xcite , the existence of `` non - trivial '' classes of codes for which ml decoding can be implemented in polynomial time , is obviously a significant result .",
    "however , as we will show in this paper , for a code family to which the grtschel - truemper result applies , either the dimension or minimum distance of the codes in the family grows sub - linearly with codelength .",
    "thus , such code families are not good from a coding - theoretic perspective .",
    "however , they do illustrate the important point that polynomial - time ml decoding is possible .",
    "moreover , the matroid - theoretic arguments used by grtschel and truemper do not rule out the possibility that there may exist other code families for which polynomial - time ml decoding algorithms exist , which are also good in terms of rate and minimum distance .",
    "the primary goal of this paper is to provide an exposition of the ideas needed to understand and apply the work of grtschel and truemper .",
    "as mentioned earlier , their work relies upon the machinery provided by seymour s matroid decomposition theory , and so we will first present that theory in a coding - theoretic setting .",
    "our presentation of this decomposition theory will be of a tutorial nature .",
    "we have attempted to keep the presentation self - contained to the extent possible ; we do not provide complete proofs of some of the difficult theorems that form the basis of the theory .",
    "we provide the relevant definitions and background from matroid theory in section  [ matroid_section ] of this paper . as explained in that section , binary matroids and binary linear codes",
    "are essentially the same objects .",
    "so , techniques applicable to binary matroids are directly applicable to binary linear codes as well .",
    "in particular , matroid decomposition techniques can be specialized to codes .",
    "of central importance in matroid theory is the notion of matroid minors . in the context of codes ,",
    "a minor of a code @xmath0 is any code that can be obtained from @xmath0 by a sequence of shortening and puncturing operations .",
    "minors have received little ( if any ) attention in coding theory , and this seems to be a remarkable oversight given the fact that they sometimes capture important structural properties of a code .",
    "for example , the presence or absence of certain minors ( as stated precisely in theorem  [ graphic_code_thm ] ) decides whether or not a code is graphic , _",
    "i.e. _ , has a parity - check matrix that is the vertex - edge incidence matrix of some graph .",
    "graphic codes have been studied previously in the information theory literature @xcite,@xcite , but the excluded - minor characterization of these codes appears to have been overlooked in these studies .    in section  [ conn_section ] , we introduce a notion of @xmath7-connectedness for codes , which is again a specialization of the corresponding notion for matroids .",
    "this is closely related to @xmath7-connectedness in graphs , and interestingly enough , is also related to the trellis complexity of a code @xcite .",
    "we do not explore the latter relationship in any detail in this paper , instead referring the reader to @xcite , @xcite , where matroid methods are used to study the structure of codes with low trellis complexity .    the notion of @xmath7-connectedness plays an important role in seymour s decomposition theory .",
    "an idea of why this is so can be obtained from the simple case of 2-connectedness : it follows from the relevant definitions that a code is not 2-connected if and only if it is the direct sum of smaller codes .",
    "similar statements can be made for codes that are not 3- or 4-connected ( or more precisely , not internally 4-connected  see definition  [ int_4conn_def ] ) via the code - composition operations of 2-sum and 3-sum introduced by seymour @xcite .",
    "these operations , as well as the @xmath8-sum which is in a sense the dual operation to the 3-sum , are explained in detail in section  [ decomp_section ] .",
    "the operations of 2- , 3- and @xmath8-sum have the non - trivial property that when two codes @xmath9 and @xmath10 are composed using one of these sums to form a code @xmath0 , then @xmath9 and @xmath10 are ( up to code equivalence ) minors of @xmath0 .",
    "the relationship between @xmath7-connectedness and these sums can then be summarized as follows : a binary linear code is 2-connected but not 3-connected ( resp .",
    "3-connected , but not internally 4-connected ) iff it can be expressed as the 2-sum ( resp .",
    "3- or @xmath8-sum ) of codes @xmath9 and @xmath10 , both of which are equivalent to minors of @xmath0 .",
    "it follows immediately from the above facts that any binary linear code is either 3-connected and internally 4-connected , or can be constructed from 3-connected , internally 4-connected minors of it by a sequence of operations of coordinate permutation , direct sum , 2-sum , 3-sum and @xmath8-sum .",
    "in fact , given any code , such a decomposition of the code can be obtained in time polynomial in the length of the code .",
    "this code decomposition theory has immediate applications to families of codes that are minor - closed in the sense that for each code @xmath0 in such a family @xmath11 , any code equivalent to a minor of @xmath0 is also in @xmath11 .",
    "indeed , a code @xmath0 is in a minor - closed family @xmath11 only if the indecomposable ( _ i.e. _ , 3-connected , internally 4-connected ) pieces obtained in the aforementioned decomposition of @xmath0 are in @xmath11 .",
    "the above necessary condition is also sufficient if the code family @xmath11 is additionally closed under the operations of direct sum , 2-sum , 3-sum and @xmath8-sum .",
    "thus , membership of an arbitrary code in such a family @xmath11 can be decided in polynomial time iff the membership in @xmath11 of 3-connected , internally 4-connected codes can be decided in polynomial time . a formal statement of these and other related facts can be found in section  [ minor_closed_section ] of our paper .",
    "as an illustrative example , we also outline in section  [ minor_closed_section ] one of the major applications of seymour s decomposition theory .",
    "this concerns the family of regular codes which are codes that do not contain as a minor any code equivalent to the @xmath12 $ ] hamming code or its dual .",
    "regular codes are also characterized by the property that given any parity - check matrix @xmath13 of such a code , the 1 s in @xmath13 can be replaced by @xmath14 s in such a way that the resulting @xmath15 matrix is totally unimodular .",
    "a totally unimodular matrix is a real matrix all of whose square submatrices have determinants in @xmath16 .",
    "these matrices are of fundamental importance in integer linear programming problems @xcite .",
    "seymour @xcite proved that a binary linear code is regular iff it can be decomposed into codes that are either graphic , or duals of graphic codes , or equivalent to a special @xmath17 $ ] code he called @xmath18 .    the application of the decomposition theory to linear programming , and in particular to ml decoding , is the subject of section  [ lp_section ] .",
    "_  showed that the ml decoding problem for a length-@xmath6 binary linear code @xmath0 over a discrete memoryless channel can be formulated as a minimization problem @xmath19 , where @xmath20 is a certain cost vector derived from the received word and the channel transition probabilites , and the minimum is taken over all codewords @xmath21 in @xmath0 .",
    "now , if @xmath0 is a graphic code , then standard graph - theoretic techniques from combinatorial optimization can be used to find the minimizing codeword in time polynomial in @xmath6 ; a sketch of such an algorithm can be found in appendix  [ opt_app ] .",
    "grtschel and truemper @xcite additionally showed that this minimization could also be performed in polynomial time for certain minor - closed code families that are `` almost - graphic '' in a certain sense .",
    "such a code family @xmath11 is characterized by the property that there exists a _",
    "finite _ list of codes @xmath22 such that each @xmath23 can be decomposed in polynomial time in such a way that at each step of the decomposition , one of the pieces is either graphic or in @xmath22 .",
    "grtschel and truemper gave a polynomial - time algorithm that takes as input a length-@xmath6 code @xmath0 from an almost - graphic family @xmath11 and a cost vector @xmath24 , and constructs a codeword @xmath25 achieving @xmath19 by solving related minimization problems over the pieces of the decomposition that are graphic or in @xmath22 .",
    "this algorithm is also outlined in appendix  [ opt_app ] .",
    "thus , the ml decoding problem can be solved in polynomial time for almost - graphic codes .",
    "grtschel and truemper also gave several examples of almost - graphic families .",
    "interestingly enough , one of these families is that consisting of codes @xmath0 for which the codeword polytope ( _ i.e. _ , the convex hull in @xmath26 of the codewords in the length-@xmath6 code @xmath0 ) is identical to the koetter - vontobel fundamental polytope @xcite derived from the entire dual code @xmath1 .",
    "unfortunately , the one truly original result in this paper is a negative result .",
    "we show that for codes in an almost - graphic family , either their dimension or their minimum distance grows sub - linearly with codelength",
    ". one important implication of this is that decoding by linear programming , when applied to any good error - correcting code , must inevitably hit upon the occasional pseudocodeword , thus resulting in decoding failure .",
    "we make some concluding remarks in section  [ conclusion ] .",
    "some of the lengthier or more technical proofs of results from sections  [ decomp_section ] and [ lp_section ] are given in appendices to preserve the flow of the presentation .",
    "we shall assume familiarity with coding theory ; for relevant definitions , see @xcite .",
    "we will mainly concern ourselves with binary linear codes , and use standard coding - theoretic notation throughout this paper .",
    "thus , an @xmath27 $ ] code is a code of length @xmath6 and dimension @xmath7 , and an @xmath28 $ ] code is an @xmath27 $ ] code that has minimum distance @xmath29 . given a code @xmath0 , @xmath30 denotes the dimension of @xmath0 , and @xmath1 denotes the dual code of @xmath0 .",
    "the main purpose of this section is to introduce concepts from matroid theory that are applicable to coding theory .",
    "we will largely follow the definitions and notation of oxley @xcite .",
    "we begin with a definition of matroids .    a _ matroid _",
    "@xmath31 is an ordered pair @xmath32 consisting of a finite set @xmath33 and a collection @xmath34 of subsets of @xmath33 satisfying the following three conditions :    * @xmath35 ; * if @xmath36 and @xmath37 , then @xmath38 ; and * if @xmath39 are in @xmath34 and @xmath40 , then there exists to denote the set difference @xmath41 .",
    "the more usual notation @xmath42 has been reserved for the matroid operation of `` deletion '' . ]",
    "@xmath43 such that @xmath44 .",
    "[ matroid_def ]    the set @xmath33 above is called the _ ground set _ of the matroid @xmath31 , and the members of @xmath34 are the _ independent sets _ of @xmath31 . a maximal independent set , _",
    "i.e. _ , a set @xmath45 such that @xmath46 for any @xmath47 , is called a _ basis _ of @xmath31 .",
    "it is a simple consequence of ( iii ) in definition  [ matroid_def ] that all bases of @xmath31 have the same cardinality .",
    "the cardinality of any basis of @xmath31 is defined to be the _ rank _ of @xmath31 , denoted by @xmath48 .",
    "a subset of @xmath33 that is not in @xmath34 is called a _",
    "dependent set_. minimal dependent sets , _",
    "i.e. , _ dependent sets all of whose proper subsets are in @xmath34 , are called _",
    "circuits_. it easily follows from the definitions that a subset of @xmath33 is a dependent set if and only if it contains a circuit . a dependent set that can be expressed as a disjoint union of circuits",
    "is called a _",
    "cycle_.    the above definitions of independent and dependent sets , bases and rank simply try to abstract the notion of independence and dependence , bases and dimension , respectively , in a vector space over a field .",
    "indeed , the most important class of matroids for our purposes is the class of binary matroids , which are simply vector spaces over the binary field , or to put it another way , binary linear codes .",
    "let @xmath13 be a binary @xmath49 matrix , and let @xmath50 denote the column vectors of @xmath13 .",
    "set @xmath51 and take @xmath34 to be the collection of subsets @xmath52 such that the sequence of vectors @xmath53 is linearly independent over the binary field @xmath54 .",
    "it follows from elementary linear algebra that @xmath32 satisfies the definition of a matroid given above , and thus defines a matroid which we shall denote by @xmath55 $ ] .",
    "note that @xmath56)$ ] equals the rank ( over @xmath54 ) of the matrix @xmath13 .",
    "a matroid @xmath57 is called _ binary _ if it is isomorphic to @xmath55 $ ] for some binary matrix @xmath13 . here",
    ", we say that two matroids @xmath57 and @xmath58 are _ isomorphic _ , denoted by @xmath59 , if there is a bijection @xmath60 such that for all @xmath61 , it is the case that @xmath38 if and only if @xmath62 .",
    "a binary matrix @xmath13 is also the parity - check matrix of some binary linear code @xmath0 .",
    "note that @xmath56 ) = n - \\dim(\\cc)$ ] .",
    "the code @xmath0 and the binary matroid @xmath55 $ ] are very closely related .",
    "recall from coding theory that a codeword @xmath63 , @xmath64 , is called _ minimal _ if its support @xmath65 does not contain as a subset the support of any other nonzero codeword in @xmath0 .",
    "it is easily seen that @xmath66 is a minimal codeword of @xmath0 iff its support is a circuit of @xmath55 $ ] .",
    "it follows from this that for any @xmath67 , @xmath64 , we have @xmath25 iff @xmath68 is a cycle of @xmath55 $ ] .",
    "furthermore , a routine verification shows that for binary matrices @xmath13 and @xmath69 , @xmath55 = m[h']$ ] iff @xmath13 and @xmath69 are parity - check matrices of the same code @xmath0 .",
    "this allows us to associate a unique binary matroid with each binary linear code @xmath0 , and vice versa .",
    "thus , binary matroids and binary linear codes are essentially the same objects .",
    "in particular , two codes are equivalent to denote the code obtained by applying the coordinate permutation @xmath70 to the code @xmath0 . ] if and only if their associated binary matroids are isomorphic .",
    "this association between codes and binary matroids allows us to use tools from matroid theory to study binary linear codes .    while many of the tools used to study matroids",
    "have their roots in linear algebra , there is another source that matroid theory draws from , namely , graph theory .",
    "whitney s founding paper on matroid theory @xcite was an attempt to capture the fundamental properties of independence that are common to graphs and matrices .",
    "let @xmath71 be a finite undirected graph ( henceforth simply `` graph '' ) with edge set @xmath33 .",
    "define to be the collection of edge sets of cycles ( _ i.e. _ , closed walks ) in @xmath71 .",
    "define @xmath72 to be independent if @xmath73 does not contain any member of as a subset .",
    "equivalently , @xmath73 is independent if the subgraph of @xmath71 induced by @xmath73 is a forest . setting @xmath34 to be the collection of independent subsets of @xmath33 , it turns out that @xmath32 is a matroid ( * ? ? ?",
    "* proposition  1.1.7 ) .",
    "this matroid is called the _ cycle matroid _ of @xmath71 , and is denoted by @xmath74 . a matroid that is isomorphic to the cycle matroid of some graph",
    "is called _",
    "graphic_.    clearly , the circuits of @xmath74 are the edge sets of simple cycles ( _ i.e. _ , closed walks in which no intermediate vertex is visited twice ) in @xmath71 .",
    "the nomenclature `` cycle '' for the disjoint union of circuits in a matroid actually stems from its use in the context of graphs .",
    "the bases of @xmath74 are the unions of edge sets of spanning trees of the connected components of @xmath71 .",
    "hence , @xmath75 , where @xmath76 is the set of vertices of @xmath71 , and @xmath77 is the number of connected components of @xmath71 .",
    "it is not hard to show that a graphic matroid is binary .",
    "indeed , let @xmath78 be the vertex - edge incidence matrix of @xmath71 .",
    "this is the matrix @xmath79 $ ] whose rows and columns are indexed by the vertices and edges , respectively , of @xmath71 , where @xmath80 if the @xmath81th edge is incident with the @xmath5th vertex , and @xmath82 otherwise .",
    "it may be verified that @xmath83 $ ] ( see , _",
    "e.g. _ , ( * ? ? ?",
    "* proposition  5.1.2 ) ) .    given a graph @xmath71 ,",
    "we will denote by @xmath84 the code associated ( or identified ) with the binary matroid @xmath74 .",
    "in other words , @xmath84 is the binary linear code that has the vertex - edge incidence matrix of @xmath71 as a parity - check matrix .",
    "we will refer to such codes as _ graphic codes _ , and denote by @xmath85 the set of all graphic codes .",
    "graphic codes have made their appearance previously in the information theory literature @xcite ( also see @xcite and the references therein ) .",
    "the repetition code of length @xmath6 is a graphic code ; it is the code obtained from the @xmath6-cycle @xmath86 , the graph consisting of a single cycle on @xmath6 vertices .",
    "however , not all binary codes are graphic . for example",
    ", it can be shown that the [ 7,4 ] hamming code is not graphic .",
    "it is possible to give a precise characterization of the codes that are graphic in terms of excluded minors , a notion we need to first define .",
    "there are two well - known ways of obtaining codes of shorter length from a given parent code .",
    "one is via the operation of _ puncturing _ , in which one or more columns are deleted from a generator matrix of the parent code @xcite .",
    "the second method is called _ shortening _ , and involves one or more columns being deleted from a parity - check matrix of the parent code @xcite .",
    "given a code @xmath0 of length @xmath6 with generator matrix @xmath87 , and a subset @xmath88 , we will denote by @xmath89 the code obtained by puncturing the columns of @xmath87 with indices in @xmath90 , and by @xmath91 the code obtained by shortening at the columns of @xmath87 with indices in @xmath90 . note that @xmath89 is simply the restriction of the code @xmath0 onto the coordinates not in @xmath90 , and @xmath92 .",
    "the notation , though potentially confusing , has been retained from matroid theory , where the analogues of puncturing and shortening are called _ contraction _ and _ deletion _ , respectively .",
    "a _ minor _ of a code @xmath0 is any code obtained from @xmath0 via a ( possibly empty ) sequence of shortening and puncturing operations .",
    "[ minor_def ]    it may easily be verified that the precise order in which the deletion and puncturing operations are performed is irrelevant .",
    "hence , any minor of @xmath0 may be unambiguously specified using notation of the form @xmath93 ( or equivalently , @xmath94 ) for disjoint subsets @xmath95 ; this notation indicates that @xmath0 has been punctured at the coordinates indexed by @xmath96 and shortened at the coordinates indexed by @xmath97 .",
    "the above definition allows a code to be a minor of itself .",
    "a minor of @xmath0 that is not @xmath0 itself is called a _ proper minor _ of @xmath0 .",
    "minors have not received much attention in classical coding theory , but they play a central role in matroid theory",
    ". we will not touch upon the subject of minors of general matroids , leaving the reader to refer to ( * ? ? ?",
    "* chapter  3 ) instead .",
    "however , we will briefly mention how the matroid operations of deletion and contraction specialize to the cycle matroids of graphs .",
    "let @xmath71 be some graph , with edge set @xmath33 .",
    "given @xmath98 , define the graph @xmath99 to be the graph obtained by deleting the edge @xmath100 along with any vertices that get isolated as a result of deleting @xmath100 . also , define @xmath101 to be the graph obtained by contracting @xmath100 , _ i.e. _ , deleting @xmath100 and identifying the two vertices incident with @xmath100 .",
    "the process of obtaining @xmath101 from @xmath71 is called _ edge contraction _ , and that of obtaining @xmath102 from @xmath71 is of course called _",
    "edge deletion_. these operations are inductively extended to define @xmath103 and @xmath104 for any @xmath61 .",
    "a minor of a graph @xmath71 is any graph obtained from @xmath71 via a ( possibly empty ) sequence of edge deletions and contractions .",
    "the operations of edge deletion and contraction are the graphic analogues of code shortening and puncturing , respectively .",
    "a mathematically precise statement of this is as follows : given a graph @xmath71 with edge set @xmath33 , and any @xmath61 , we have ( * ? ? ?",
    "* equation 3.1.2 and proposition  3.2.1 ) @xmath105 it follows that any minor of a graphic code is graphic .",
    "returning to the question of determining which codes are graphic , the answer can be succinctly given in terms of a list of forbidden minors by the following result of tutte @xcite .",
    "a code is graphic if and only if it does not contain as a minor any code equivalent to the [ 7,4 ] hamming code or its dual , or one of the codes @xmath106 and @xmath107 .",
    "[ graphic_code_thm ]    in the statement of the above theorem , @xmath108 is the complete graph on five vertices , while @xmath109 is the complete bipartite graph with three vertices on each side . @xmath106",
    "is the @xmath110 $ ] code with generator matrix @xmath111,\\ ] ] while @xmath107 is the @xmath112 $ ] code with generator matrix @xmath113.\\ ] ] a proof of the theorem can be found in ( * ? ? ?",
    "* section  13.3 ) . on a related note ,",
    "several authors have given algorithms for deciding whether or not a given code is graphic @xcite , ( * ? ? ?",
    "* section  10.6 ) .",
    "these algorithms run in time polynomial in the size of the input , which can be a parity - check matrix for the code .",
    "we will use this fact later in the paper .",
    "as mentioned previously , matroid theory draws upon ideas from graph theory . a key concept in graph theory is the notion of @xmath7-connectedness for graphs ( * ? ? ?",
    "* section  iii.2 ) . given a graph @xmath71 , we will let @xmath76 denote the set of its vertices .",
    "a graph is _ connected _ if any pair of its vertices can be joined by a path ; otherwise , it is _",
    "disconnected_. a maximal connected subgraph of @xmath71 is a _ connected component _ , or simply _ component _ , of @xmath71 .",
    "let @xmath114 denote the graph obtained from @xmath71 by deleting the vertices in @xmath115 and all incident edges .",
    "if @xmath71 is connected and , for some subset @xmath116 , @xmath117 is disconnected , then we say that @xmath115 is a _",
    "vertex cut _ of @xmath71 , or that @xmath115 _ separates _ @xmath71 .",
    "if @xmath71 is a connected graph that has at least one pair of distinct non - adjacent vertices , the _ connectivity _ @xmath118 of @xmath71 is defined to be the smallest integer @xmath81 for which @xmath71 has a vertex cut @xmath115 with @xmath119 . if @xmath71 is connected , but has no pair of distinct non - adjacent vertices , @xmath118 is defined to be @xmath120 .",
    "finally , if @xmath71 is disconnected , then we set @xmath121 . for an integer @xmath122",
    ", @xmath71 is said to be _",
    "@xmath7-connected _ if @xmath123 .",
    "thus , a graph @xmath71 with @xmath124 is connected if and only if it is 1-connected .    the notion of @xmath7-connectedness of graphs",
    "can be extended to matroids , but it has to be done carefully .",
    "one of the problems encountered when attempting to do so is that 1-connectedness of graphs does not extend directly to matroids .",
    "the reason for this is that for any disconnected graph @xmath125 , there is a connected graph @xmath126 such that @xmath127 ( * ? ? ? * proposition  1.2.8 ) .",
    "so , the link between @xmath7-connectedness in graphs and that defined below for matroids begins with the case @xmath128 .    the definition we present of @xmath7-connectedness for matroids was formulated by tutte @xcite .",
    "we will once again restrict our attention to the case of binary matroids ( _ i.e. _ , codes ) only",
    ". let @xmath0 be a binary linear code of length @xmath6 .",
    "we will hereafter use @xmath129 $ ] to denote the set of integers @xmath130 , and for @xmath131 $ ] , we set @xmath132 : i \\notin j\\}$ ] . to further alleviate notational confusion , for @xmath131 $ ]",
    ", we will define @xmath133 to be the restriction of @xmath0 onto its coordinates indexed by @xmath90 .",
    "equivalently , @xmath134 , the latter being the code obtained from @xmath0 by puncturing the coordinates not in @xmath90 .    for a positive integer @xmath7 , a partition @xmath135 of @xmath129 $ ]",
    "is called a _",
    "@xmath7-separation of @xmath0 _ if @xmath136 and @xmath137 if @xmath0 has a @xmath7-separation , then @xmath0 is said to be _",
    "@xmath7-separated_. [ ksep_def ]    when equality occurs in ( [ ksep_eq1 ] ) , @xmath135 is called a _",
    "minimal @xmath7-separation_. when equality occurs in ( [ ksep_eq2 ] ) , @xmath135 is called an _ exact @xmath7-separation_. note that the expression on the left - hand side of ( [ ksep_eq2 ] ) is always non - negative , since @xmath138 for any @xmath131 $ ] .",
    "this fact easily yields the following result .",
    "@xmath0 is 1-separated iff it is the direct sum of non - empty codes .",
    "[ 1sep_lemma ]    since @xmath138 for any @xmath131 $ ] , we see from definition  [ ksep_def ] that @xmath135 is a 1-separation of @xmath0 iff @xmath139 are non - empty , and @xmath140 . hence , @xmath135 is a 1-separation of @xmath0 iff @xmath139 are non - empty , and @xmath0 is the direct sum of @xmath141 and @xmath142 .",
    "we now give the definition of @xmath7-connectedness of codes .",
    "note that this definition starts with @xmath128 .    for @xmath143",
    ", a code @xmath0 is defined to be _ @xmath7-connected _ if it has no @xmath144-separation for any @xmath145 .",
    "[ conn_def ]    let @xmath0 be the [ 7,3,4 ] simplex code with generator matrix @xmath146.\\ ] ] setting @xmath147 , we see that @xmath135 forms a 3-separation of @xmath0 .",
    "indeed , the rank of the submatrix of @xmath87 formed by the columns indexed by @xmath90 is 3 , while the rank of the submatrix formed by the columns indexed by @xmath148 is 2 . in other words , @xmath149 and @xmath150 .",
    "thus , both ( [ ksep_eq1 ] ) and ( [ ksep_eq2 ] ) are satisfied with equality , which makes @xmath135 a minimal as well as an exact separation",
    ".    it may be verified ( for example , by exhaustive search ) that there are no 1- or 2- separations for @xmath0 , and all 3-separations are minimal and exact . in particular , @xmath0 is 2- and 3-connected , but not 4-connected .",
    "[ simplex_example ]    the quantity , @xmath151 , appearing on the left - hand side of ( [ ksep_eq2 ] ) in definition  [ ksep_def ] also arises as part of the definition of the state - complexity profile of a minimal trellis representation of a code @xcite@xcite,@xcite,@xcite . to be precise ,",
    "given a length-@xmath6 code @xmath0 , the _ state - complexity profile _ of a code ( * ? ? ?",
    "* equation ( 1 ) ) is defined to be the vector @xmath152 , where @xmath153 for @xmath154 \\subset [ n]$ ] . here , @xmath155 $ ] is defined to be the null set @xmath156 .",
    "it is known @xcite that @xmath157 , or equivalently , for any @xmath131 $ ] , @xmath158 as a result , we obtain the interesting and useful fact , stated in the proposition below , that @xmath7-connectedness is a property that is invariant under the operation of taking code duals .",
    "let @xmath0 be a binary linear code of length @xmath6 .",
    "for any @xmath159 , a partition @xmath135 of @xmath129 $ ] is a @xmath7-separation of @xmath0 iff it is a @xmath7-separation of @xmath1 .",
    "therefore , for any @xmath143 , @xmath0 is @xmath7-connected iff @xmath1 is @xmath7-connected .",
    "[ conn_prop ]    consider again the simplex code of length 7 from example  [ simplex_example ] . by proposition  [ conn_prop ] above , its dual",
    " the @xmath12 $ ] hamming code  is also 2- and 3-connected , but not 4-connected .",
    "the link between graph and code @xmath7-connectedness is strong , but they are not equivalent notions .",
    "the closest relation between the two occurs when @xmath160 .",
    "if @xmath71 is a loopless graph without isolated vertices and @xmath161 , then @xmath84 is 2-connected iff @xmath71 is a 2-connected graph ( * ? ? ?",
    "* proposition  4.1.8 ) . to describe the relation between graph and code connectedness in general",
    ", we define the _ connectivity _ , @xmath162 , of a code @xmath0 to be the least positive integer @xmath7 for which there is a @xmath7-separation of @xmath0 , if some @xmath7-separation exists for @xmath0 ; @xmath163 is defined to be @xmath164 otherwise .",
    "note that @xmath0 is @xmath7-connected iff @xmath165 , and by proposition  [ conn_prop ] , @xmath166",
    ". it can be shown ( * ? ? ?",
    "* corollary  8.2.7 ) that for a connected graph @xmath167 having at least three vertices , @xmath168 where @xmath169 denotes the girth ( length of shortest cycle ) of @xmath71 .",
    "now , our reason for presenting a notion of connectedness for codes is not just that it extends an idea from graph theory .",
    "certain methods of code composition have been developed in matroid theory that relate to 2- and 3-separations .",
    "these code composition methods can be considered to be generalizations of direct sums , and they allow the result of lemma  [ 1sep_lemma ] to be extended in a non - trivial manner , paving the way for the powerful decomposition theory of binary matroids initiated by paul seymour @xcite .",
    "this decomposition theory allows one to decompose a binary linear code into smaller codes in a reversible manner , in such a way that the smaller codes are equivalent to minors of the original code .",
    "as we shall describe in detail in the next section , to find such a decomposition of a code , we need to find 1- , 2- or 3-separations in the code , if such separations exist .    for any fixed positive integer @xmath7",
    ", there are polynomial - time algorithms known ( see ( * ? ? ?",
    "* section 8.4 ) ) that , given a binary linear code @xmath0 , either find a @xmath7-separation of @xmath0 , or conclude that no such separation exists . here , by `` polynomial - time algorithm ,",
    "'' we mean an algorithm that runs in time polynomial in the length of @xmath0 .",
    "for instance , the problem of deciding the existence of 1-separations in a code @xmath0 is almost trivial . to do so , one takes a matrix @xmath78 that is either a generator matrix or a parity - check matrix of @xmath0 , brings @xmath78 to reduced row - echelon form ( rref ) , removes all - zero rows if they exist , and finally constructs a certain bipartite graph @xmath170 . for an @xmath49 matrix @xmath78 ,",
    "the graph @xmath170 is defined as follows is a parity - check matrix of the code , then @xmath170 is simply the corresponding tanner graph . ] : the vertex set of @xmath170 consists of a set of @xmath6 left vertices @xmath171 and a set of @xmath172 right vertices @xmath173 ; an edge connects the vertices @xmath174 and @xmath175 iff the @xmath176th entry of @xmath78 is 1 .",
    "the code @xmath0 is 2-connected ( _ i.e. _ , has no 1-separation ) iff @xmath170 is connected ( * ? ? ?",
    "* lemma  3.3.19 ) .",
    "if @xmath0 is not 2-connected , the connected components of @xmath170 induce the required 1-separation .    in general , for fixed integers @xmath177 with @xmath178 , the problem of finding a @xmath7-separation @xmath135 of a code , with @xmath179 ,",
    "if it exists , can be solved in time polynomial in the length of the code , by an algorithm due to cunningham and edmonds ( in @xcite ) .",
    "we sketch the idea here .",
    "the algorithm is based on the fact that the following problem can be solved in time polynomial in @xmath6 : for codes @xmath9 and @xmath10 each of length @xmath6 , find a partition of @xmath129 $ ] that achieves @xmath180 \\}. \\label{mat_int_problem}\\ ] ] the above problem is solved using the _ matroid intersection algorithm _ @xcite , ( * ? ? ?",
    "* section  5.3 ) , which we do not describe here .",
    "the @xmath7-separation problem of interest to us is equivalent to the following problem for a fixed integer @xmath178 : given a code @xmath0 of length @xmath6 , find a partition of @xmath129 $ ] that achieves @xmath181,\\ \\min\\{|j_1|,|j_2|\\ } \\geq l \\}.",
    "\\label{ksep_min1}\\ ] ] indeed , a @xmath7-separation @xmath182 of @xmath0 , with @xmath179 , exists iff the minimum in ( [ ksep_min1 ] ) is at most @xmath183 .",
    "now , the minimization in ( [ ksep_min1 ] ) can be solved by finding , for each pair of disjoint @xmath184-element subsets @xmath185 $ ] , the partition @xmath186 of @xmath129 $ ] that achieves @xmath181,\\ j_1 \\supset e_1,\\ j_2 \\supset e_2 \\}. \\label{ksep_min2}\\ ] ] if ( [ ksep_min2 ] ) can be solved in time polynomial in @xmath6 for each pair of disjoint @xmath184-element subsets @xmath185 $ ] , then ( [ ksep_min1 ] ) can also be solved in time polynomial in @xmath6 , since there are @xmath187 pairs @xmath188 .",
    "it turns out that ( [ ksep_min2 ] ) can be solved in time polynomial in @xmath6 by converting it to a minimization of the form in ( [ mat_int_problem ] ) , which , as mentioned above , can be solved in polynomial time .",
    "the trick is to set @xmath189 and @xmath190 , which are both codes of length @xmath191 . for notational convenience",
    ", we will let the coordinates of @xmath9 and @xmath10 retain their indices from @xmath0 , _",
    "i.e. _ , the set of coordinate indices for @xmath9 , as well as for @xmath10 , is @xmath129 - ( e_1 \\cup e_2)$ ] .",
    "it may easily be verified that for @xmath131-(e_1 \\cup e_2)$ ] , @xmath192 , @xmath193 .",
    "therefore , for any partition @xmath186 of @xmath129 - ( e_1 \\cup e_2)$ ] , setting @xmath194 , @xmath195 , we have @xmath196 and @xmath197 is a partition of @xmath129 $ ] .",
    "conversely , for any partition @xmath197 of @xmath129 $ ] , setting @xmath198 , @xmath195 , we see that @xmath186 forms a partition of @xmath129 - ( e_1 \\cup e_2)$ ] , and ( [ convert_eq ] ) is once again satisfied .",
    "thus , we see that for a fixed pair of disjoint @xmath184-element subsets @xmath199 $ ] , given a code @xmath0 of length @xmath6 , if we set @xmath189 and @xmath190 , then the minimum in ( [ ksep_min2 ] ) is equal to @xmath180 \\ } + \\dim(\\cc |_{e_1 } ) + \\dim(\\cc |_{e_2}).\\ ] ] since the minima in ( [ mat_int_problem ] ) and ( [ ksep_min2 ] ) just differ by a constant , the minimization problem ( [ ksep_min2 ] ) for given @xmath0 and @xmath188 is equivalent to the minimization problem ( [ mat_int_problem ] ) with @xmath189 and @xmath190 .",
    "therefore , since ( [ mat_int_problem ] ) can be solved in time polynomial in @xmath6 , so can ( [ ksep_min2 ] )",
    ".    the above sketch does indeed give a polynomial - time algorithm for determining @xmath7-separations @xmath135 with @xmath179 , but the complexity of the algorithm is @xmath200 for some constant @xmath201 that arises from the matroid intersection algorithm .",
    "clearly , this is not very practical even for @xmath202 or 4 , and as we shall see in the next section , these values of @xmath184 come up in the implementation of seymour s decomposition theory .",
    "a more efficient , albeit more involved , algorithm for finding 2- and 3-separations is described in ( * ? ? ?",
    "* section  8.4 ) .",
    "as a final remark in this section , we mention that the fact that there exist algorithms for solving the minimization problems ( [ mat_int_problem])([ksep_min2 ] ) that run in time polynomial in @xmath6 neither contradicts nor sheds any further light on the np - completeness results for the closely related problems considered in @xcite .",
    "the code composition / decomposition methods described in this section were developed by seymour in close analogy with a method of composing / decomposing graphs called _ clique - sum_. in a clique - sum , two graphs , each containing a @xmath203 subgraph ( @xmath7-clique ) , are glued together by first picking a @xmath7-clique from each graph , sticking the two cliques together so as to form a single @xmath7-clique in the composite graph , and then deleting some or all of the edges from this clique .",
    "a formal description of clique - sum can be found in @xcite or in @xcite .",
    "our exposition of these code composition / decomposition techniques is based on seymour s paper @xcite .",
    "let @xmath0 and @xmath204 be binary linear codes of length @xmath6 and @xmath205 , respectively , and let @xmath172 be an integer satisfying @xmath206 .",
    "we first define a code @xmath207 as follows : if @xmath208 $ ] and @xmath209 $ ] are generator matrices of @xmath0 and @xmath204 , respectively , then @xmath207 is the code with generator matrix @xmath210.\\ ] ] thus , @xmath207 is a binary linear code of length @xmath211 .",
    "this code is almost like a direct sum of @xmath0 and @xmath204 except that the two component codes overlap in @xmath172 positions . indeed ,",
    "when @xmath212 , @xmath207 is the direct sum of @xmath0 and @xmath204 .",
    "codewords of @xmath207 are of the form @xmath213 , for @xmath214 and @xmath215 , where @xmath216 is defined to be @xmath217 in other words , @xmath213 is the binary word of length @xmath218 composed as follows : the first @xmath219 symbols of @xmath213 are equal to the first @xmath219 symbols of @xmath66 , the next @xmath172 symbols of @xmath213 are equal to the coordinatewise modulo-2 sum of the last @xmath172 symbols of @xmath66 and the first @xmath172 symbols of @xmath220 , and the last @xmath221 symbols of @xmath213 are equal to the last @xmath222 symbols of @xmath220 .    from @xmath207 , we derive a new code , which we temporarily denote by @xmath223 , by shortening at the @xmath172 positions where @xmath0 and @xmath204 are made to overlap . to be precise ,",
    "let @xmath224 , and set @xmath225 .",
    "thus , @xmath223 is a code of length @xmath226 which , by choice of @xmath172 , is greater than @xmath6 and @xmath205 . once again , note that @xmath227 , where @xmath228 denotes direct sum",
    ".    we will actually only be interested in two instances of the above construction ( other than the direct - sum case of @xmath229 ) , one of which is presented next , and the other is introduced later in section  [ 3sum_section ] .",
    "the @xmath223 construction with @xmath230 is called a 2-sum in certain special cases .",
    "let @xmath0 , @xmath204 be codes of length at least three , such that    * @xmath231 is not a codeword of @xmath0 or @xmath1 ; * @xmath232 is not a codeword of @xmath204 or @xmath233 .",
    "then , @xmath234 is called the _ 2-sum _ of @xmath0 and @xmath204 , and is denoted by @xmath235 .",
    "[ 2sum_def ]    note that 2-sums are only defined for codes having the properties ( p1 ) and ( p2 ) listed in definition  [ 2sum_def ] .",
    "these properties can be equivalently stated as follows :    * @xmath236 is not a codeword of @xmath0 , and the last coordinate of @xmath0 is not identically zero ; * @xmath237 is not a codeword of @xmath204 , and the first coordinate of @xmath204 is not identically zero .    as we shall see below , ( p1@xmath238 ) and ( p2@xmath238 ) are more directly relevant to an analysis of the 2-sum construction .",
    "let @xmath0 be the @xmath239 $ ] simplex code with the generator matrix given in example  [ simplex_example ] .",
    "as this code satisfies both ( p1 ) and ( p2 ) in definition  [ 2sum_def ] , we can define @xmath240 .",
    "carrying out the 2-sum construction yields the @xmath241 $ ] code @xmath240 with generator matrix @xmath242.\\ ] ] the minimal trellis for this code is shown in figure  [ 1254_trellis ] .",
    "it is easily ( from the state - complexity profile of the minimal trellis , for example ) that , with @xmath243 , @xmath135 is a 2-separation of @xmath240 .",
    "it may further be verified that @xmath240 has no 1-separation , meaning that it is 2-connected .",
    "finally , we note that by shortening @xmath240 at the 7th and 8th coordinates , and puncturing the 9th , 11th and 12th coordinates , we obtain the simplex code @xmath0 again . in other words",
    ", @xmath0 is a minor of @xmath240 .",
    "these observations are not mere coincidences , as we shall see below .",
    "[ 2sum_example ]    the dimension and minimum distance of a 2-sum @xmath235 can be related to the corresponding parameters of the component codes @xmath0 and @xmath204 .",
    "given a binary word @xmath244 , we will use @xmath245 to denote its hamming weight , and for a code @xmath0 , we will let @xmath246 denote the minimum distance of @xmath0 .",
    "let @xmath0 and @xmath204 be codes for which @xmath235 can be defined .",
    "+ _ ( a ) _ @xmath247 .",
    "+ _ ( b ) _",
    "@xmath248 , where @xmath6 is the length of @xmath0 .",
    "+ [ 2sum_prop1 ]    throughout this proof , @xmath6 and @xmath205 denote the lengths of @xmath0 and @xmath204 , respectively .",
    "also , we shall let @xmath249 denote the concatenation of binary words @xmath244 and @xmath250 .",
    "\\(a ) by definition , @xmath251 , and so , the 2-sum is isomorphic to the subcode , @xmath252 , of @xmath253 consisting of those codewords @xmath254 such that @xmath255 . since the last coordinate of @xmath0 is not identically zero , @xmath252 is a proper subcode of @xmath253 , and hence , @xmath256 .",
    "we claim that the direct sum @xmath257 is in fact isomorphic ( as a vector space over @xmath54 ) to @xmath253 .",
    "indeed , consider the map @xmath258 defined via @xmath259 , for @xmath25 and @xmath260 .",
    "this is a homomorphism onto @xmath253 , but since @xmath261 and @xmath262 , we have @xmath263 , which shows that @xmath264 is in fact an isomorphism .    therefore , @xmath265 , which proves the result .",
    "\\(b ) let @xmath266 be a minimum - weight codeword in @xmath267 .",
    "since @xmath268 , we have , by construction of @xmath235 , @xmath269 .",
    "thus , @xmath270 .",
    "a similar argument shows that @xmath271 .",
    "an interesting property of 2-sums is that they behave just like direct sums under the operation of taking code duals .",
    "note that by virtue of ( p1 ) and ( p2 ) in definition  [ 2sum_def ] , the 2-sum of @xmath0 and @xmath204 can be defined if and only if the 2-sum of their duals , @xmath1 and @xmath233 , can be defined .",
    "let @xmath0 and @xmath204 be codes for which @xmath235 can be defined .",
    "then , @xmath272 [ 2sum_prop2 ]    this result can be trivially derived from theorem  7.3 in @xcite , but for completeness , we give a simple algebraic proof in appendix  [ dual_props_app ] . as an example , the above result implies that the matrix @xmath273 given in example  [ 2sum_example ] is the parity - check matrix of the 2-sum of two copies of a [ 7,4 ] hamming code .",
    "while the properties of 2-sums presented above are interesting , the usefulness of 2-sums actually stems from the following theorem of seymour @xcite , which is a result analogous to lemma  [ 1sep_lemma ] .",
    "if @xmath9 and @xmath10 are codes of length @xmath274 and @xmath275 , respectively , such that @xmath276 , then @xmath135 is an exact 2-separation of @xmath0 , for @xmath277 .",
    "furthermore , @xmath9 and @xmath10 are equivalent to minors of @xmath0 .",
    "conversely , if @xmath135 is an exact 2-separation of a code @xmath0 , then there are codes @xmath9 and @xmath10 of length @xmath278 and @xmath279 , respectively , such that @xmath0 is equivalent to @xmath280 . [ 2sum_thm ]",
    "the following corollary is a more concise statement of the above theorem , and is more in the spirit of lemma  [ 1sep_lemma ] .",
    "a code @xmath0 has an exact 2-separation iff there exist codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , such that @xmath0 is equivalent to @xmath280 .",
    "[ 2sum_cor1 ]    another corollary ( * ? ? ?",
    "* theorem  8.3.1 ) , stated next , is a consequence of the fact that if @xmath0 is a 2-connected code , then any 2-separation of @xmath0 must be exact ; if not , the 2-separation would be a 1-separation as well , which is impossible as @xmath0 is 2-connected .",
    "a 2-connected code @xmath0 is not 3-connected iff there exist codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , such that @xmath0 is equivalent to @xmath280 .",
    "[ 2sum_cor2 ]    we will not prove theorem  [ 2sum_thm ] in its entirety , referring the reader instead to seymour s original proof , or the proof given in oxley ( * ? ? ? * section  8.3 ) .",
    "however , we will describe an efficient construction of the components of the 2-sum when an exact 2-separation @xmath135 of @xmath0 is given , as it is a useful tool in code decomposition .",
    "this construction effectively proves the converse part of the theorem .",
    "our description is based on the construction given in ( * ? ? ?",
    "* section  8.2 ) .",
    "let @xmath0 be a code of length @xmath6 and dimension @xmath7 , specified by a @xmath281 generator matrix @xmath87 , and let @xmath135 be an exact 2-separation of @xmath0 . by permuting coordinates if necessary",
    ", we may assume that @xmath282 for some @xmath283 .",
    "let @xmath284 and @xmath285 denote the restrictions of @xmath87 to the columns indexed by @xmath90 and @xmath148 , respectively ; thus , @xmath286 $ ] .",
    "let @xmath287 and @xmath288 ; since @xmath135 is an exact 2-separation of @xmath0 , we have @xmath289 .",
    "bring @xmath87 into reduced row - echelon form ( rref ) over @xmath54 .",
    "permuting coordinates within @xmath90 and within @xmath148 if necessary , @xmath290 may be assumed to be of the form @xmath291 , \\label{rref_eq1}\\ ] ] where @xmath292 , for @xmath293 , denotes the @xmath294 identity matrix , @xmath78 is a @xmath295 matrix , @xmath296 is a @xmath297 matrix , @xmath298 is a @xmath299 matrix , and the @xmath300 s denote all - zeros matrices of appropriate sizes . as a concrete example , consider the matrix @xmath273 given in example  [ 2sum_example ] , which is indeed of the above form , with @xmath301 , @xmath302 , @xmath303,\\ \\",
    "b = \\left [ \\begin{array}{cccc } 0 & 1 & 1 & 1 \\\\ 0 & 1 & 1 & 1 \\\\ 0 & 1 & 1 & 1   \\end{array } \\right ] \\ \\ \\text{and } \\ \\",
    "c = \\left [ \\begin{array}{cccc } 1 & 0 & 1 & 1 \\\\ 1 & 1 & 0 & 1   \\end{array } \\right].\\ ] ]    the fact that the submatrix @xmath304 $ ] must have rank equal to @xmath305 implies that @xmath296 must have rank 1 .",
    "hence , @xmath296 is actually a matrix with at least one non - zero row , call it @xmath306 , and at least one non - zero column , call it @xmath307 .",
    "also , each row of @xmath296 is either @xmath308 or identical to @xmath306 , and @xmath307 is the length-@xmath309 column vector whose @xmath5th component is a 1 if the @xmath5th row of @xmath296 is equal to @xmath306 , and is 0 otherwise .",
    "now , define @xmath310\\ ] ] and @xmath311 = [ i_{k_2 } \\",
    "c'],\\ ] ] where @xmath308 denotes an all - zeros column - vector , and @xmath312 $ ] .",
    "it is not hard to show that if @xmath9 and @xmath10 are the codes generated by @xmath313 and @xmath314 , respectively , then @xmath280 is the code generated by the matrix @xmath273 in ( [ rref_eq1 ] ) .",
    "indeed , carefully going through the construction , it may be verified that all the rows of @xmath273 are in @xmath280 .",
    "hence , @xmath315 .",
    "however , by proposition  [ 2sum_prop1](a ) , we have that @xmath316 . hence , @xmath317 , implying that @xmath273 must be a generator matrix for @xmath280 .    for the matrix @xmath273 in example  [ 2sum_example ]",
    ", we find the matrices @xmath313 and @xmath314 to be @xmath318,\\ \\",
    "\\ \\text{and } \\ \\ \\",
    "g_2 = \\left [ \\begin{array}{ccccccc } 1 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 0 & 1 & 0 & 1 & 0 & 1 & 1 \\\\ 0 & 0 & 1 & 1 & 1 & 0 & 1 \\end{array } \\right],\\ ] ] which are indeed the generator matrices of the two simplex codes whose 2-sum is represented by @xmath273 .",
    "it can also be observed that @xmath9 and @xmath10 are minors of @xmath280 .",
    "indeed , to obtain @xmath9 as a minor of @xmath280 , we proceed as follows .",
    "let @xmath81 be the index of a column of @xmath273 in which the submatrix @xmath296 has a nonzero column .",
    "for the matrix of example  [ 2sum_example ] , @xmath81 could be either 10 , 11 or 12 .",
    "define @xmath319 , and @xmath320 .",
    "then , @xmath321 . to obtain @xmath10 as a minor , let @xmath322 be the index of a row of @xmath273 in which the submatrix @xmath296 has a nonzero row . for",
    "the matrix of example  [ 2sum_example ] , @xmath322 could be either 1 , 2 or 3 .",
    "the @xmath322th column of @xmath273 is of the form @xmath323^t$ ] , the single 1 being the @xmath322th entry .",
    "define @xmath324 and @xmath325",
    ". then , @xmath326 .",
    "proofs of these statements just involve consistency checking , so are left as an easy exercise .    in summary ,",
    "the procedure described above takes as input a @xmath281 generator matrix @xmath87 for @xmath0 , and an exact 2-separation @xmath135 of it , and produces as output a permutation @xmath70 of the coordinates of @xmath0 , and the generator matrices of two codes @xmath9 and @xmath10 , such that @xmath327 .",
    "the codes @xmath9 and @xmath10 are both equivalent to proper minors of @xmath0 .",
    "the entire procedure can be carried out in @xmath328 time , which is the run - time complexity of bringing a @xmath281 matrix to reduced row - echelon form via elementary row operations .",
    "all other parts of the procedure can be performed in @xmath329 time ; for example , since @xmath135 is given , it only takes @xmath329 time to find the permutation , @xmath330 , that takes @xmath290 to the matrix @xmath331 in ( [ rref_eq1 ] ) .",
    "a straightforward combination of lemma  [ 1sep_lemma ] and corollary  [ 2sum_cor2 ] yields the following theorem , which illustrates the utility of the matroid - theoretic tools presented so far .",
    "every code that is not 3-connected can be constructed from 3-connected proper minors of it by a sequence of operations of coordinate permutation , direct sum and 2-sum .",
    "[ decomp_thm1 ]    the decomposition of a code via direct sums and 2-sums implicit in the above theorem can be carried out in time polynomial in the length of the code .",
    "this is due to the following two facts :    * as described in section  [ conn_section ] , there are polynomial - time algorithms for finding 1- and 2- separations in a code , if they exist ; and * given an exact 2-separation of a code @xmath0 , there is a polynomial - time procedure that produces codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , and a permutation @xmath70 of the coordinate set of @xmath0 , such that @xmath327 .    however , direct sums and 2-sums are not enough for our purposes , nor were they enough for seymour s theory of matroid decomposition .",
    "seymour also had to extend the graph - theoretic technique of 3-clique - sum to matroids ( in fact , to binary matroids only ) .",
    "the corresponding operation on binary matroids is called 3-sum .",
    "the special case of the @xmath332 construction called 3-sum is somewhat more complex in definition than the 2-sum .",
    "recall that for a binary word @xmath244 , @xmath245 denotes its hamming weight .",
    "let @xmath0 , @xmath204 be codes of length at least seven , such that    * no codeword of @xmath0 or @xmath333 is of the form @xmath334 , where @xmath244 is a length-3 word with @xmath335 ; * no codeword of @xmath204 or @xmath233 is of the form @xmath336 , where @xmath244 is a length-3 word with @xmath335 ; and * @xmath337 and @xmath338 .",
    "then , @xmath332 is called the _ 3-sum _ of @xmath0 and @xmath204 , and is denoted by @xmath339 .",
    "[ 3sum_def ]    it is perhaps worth commenting upon the use of the terms `` 2-sum '' and `` 3-sum '' to denote codes of the form @xmath223 for @xmath340 and @xmath341 , respectively .",
    "the nomenclature stems from the analogy with the @xmath7-clique - sum of graphs , wherein two graphs are glued along a @xmath7-clique .",
    "note that a 2-clique is a single edge ( hence @xmath230 ) and 3-clique is a triangle of three edges ( hence @xmath341 ) .",
    "this also explains why we do not consider an operation of the form @xmath342 .",
    "3-sums are only defined for codes having the properties ( a1)(a3 ) listed in the above definition .",
    "it is obvious that an equivalent statement of ( a1)(a3 ) is the following :    * @xmath343 is a minimal codeword of @xmath0 , and @xmath1 has no nonzero codeword supported entirely within the last three coordinates of @xmath1 ; and * @xmath344 is a minimal codeword of @xmath204 , and @xmath233 has no nonzero codeword supported entirely within the first three coordinates of @xmath233 .",
    "in fact , ( b1 ) and ( b2 ) above are exact translations of the matroid - theoretic language used by seymour in his definition of 3-sum @xcite .",
    "another equivalent way of expressing these conditions is the following :    * @xmath343 is a minimal codeword of @xmath0 , and the restriction of @xmath0 onto its last three coordinates is @xmath345 ; and * @xmath344 is a minimal codeword of @xmath204 , and the restriction of @xmath204 onto its first three coordinates is @xmath345 .",
    "the equivalence of ( b1 ) and ( b1@xmath238 ) is a consequence of the easily verifiable fact that if @xmath346 , then @xmath1 has no nonzero codeword supported entirely within the last three coordinates of @xmath1 if and only if all possible 3-bit words appear in the last three coordinates of @xmath0 .",
    "the equivalence of ( b2 ) and ( b2@xmath238 ) is analogous .",
    "it follows immediately from ( b1@xmath238 ) and ( b2@xmath238 ) that @xmath347 can be defined only if @xmath348 and @xmath349 .",
    "let @xmath0 and @xmath204 be the [ 7,4 ] hamming codes given by the generator matrices @xmath87 and @xmath350 , respectively , below .",
    "@xmath351 , \\ \\ \\ \\   g ' = \\left [ \\begin{array}{ccccccc } 1 & 0 & 0 & 0 & 0 & 1 & 1 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 1 \\\\ 0 & 0 & 1 & 0 & 1 & 1 & 0 \\\\ 0 & 0 & 0 & 1 & 1 & 1 & 1   \\end{array } \\right].\\ ] ] @xmath0 and @xmath204 satisfy the conditions in definition  [ 3sum_def ] , so their 3-sum can be defined . the code @xmath339 works out to be the @xmath352 $ ] extended hamming code with generator matrix @xmath353.\\ ] ] the minimal trellis of this code is shown in figure  [ 844_trellis ] .    with @xmath354 , @xmath135 is an exact 3-separation of @xmath339 .",
    "it may be verified that , in fact , @xmath355 .",
    "furthermore , puncturing any coordinate of @xmath339 yields a @xmath12 $ ] hamming code .",
    "thus , @xmath0 and @xmath204 are ( up to code equivalence ) minors of @xmath339 .",
    "[ 3sum_example ]    the dimension and minimum distance of @xmath339 can be related to @xmath0 and @xmath204 in a manner analogous to proposition  [ 2sum_prop1 ] for 2-sums .    for codes",
    "@xmath0 and @xmath204 of length @xmath6 and @xmath205 for which @xmath356 can be defined , we have    * @xmath357 . * @xmath358 .    [ 3sum_prop1 ]    we will only prove ( a ) as the proof of ( b ) is analogous to the proof of proposition  [ 2sum_prop1](b ) .",
    "let @xmath249 denote the concatenation of binary sequences @xmath244 and @xmath250 .",
    "we prove the proposition by first showing that @xmath359 , and then showing that @xmath360 .",
    "the first of these equalities follows directly from the observation that the mapping @xmath361 defines a homomorphism from the direct sum @xmath257 onto @xmath362 , with @xmath363 ; indeed , @xmath364 consists of the two words @xmath308 and @xmath365 .    to prove that",
    "@xmath360 , we observe that @xmath339 is isomorphic to the subcode , @xmath252 , of @xmath362 consisting of those codewords @xmath366 such that @xmath367 .",
    "therefore , @xmath368 .",
    "since the restriction of @xmath0 onto its last three coordinates is @xmath345 ( property ( b1@xmath238 ) ) , and the restriction of @xmath204 onto its first three coordinates is @xmath345 ( property ( b2@xmath238 ) ) , the restriction of @xmath362 onto its @xmath369th , @xmath370th and @xmath6th coordinates is also @xmath345 .",
    "therefore , @xmath371 , and hence , @xmath360 , which completes the proof of the proposition .",
    "an important difference between 2-sums and 3-sums is that the result of proposition  [ 2sum_prop2 ] does not directly extend to 3-sums .",
    "the reason for this is that for codes @xmath0 and @xmath204 satisfying ( a1)(a3 ) in definition  [ 3sum_def ] , the 3-sum @xmath372 can not even be defined . indeed , while ( a1 ) and ( a2 ) are invariant under the operation of taking duals , ( a3 ) is not  if @xmath337 , then @xmath373 . to determine the dual of a 3-sum",
    ", we need to define a `` dual '' operation , namely the @xmath374-sum .",
    "let @xmath0 , @xmath204 be codes of length at least seven , such that    * no codeword of @xmath0 or @xmath333 is of the form @xmath334 , where @xmath244 is a length-3 word with @xmath335 ; * no codeword of @xmath204 or @xmath233 is of the form @xmath336 , where @xmath244 is a length-3 word with @xmath335 ; and * @xmath375 and @xmath376 .",
    "the _ @xmath8-sum _ of @xmath0 and @xmath204 , denoted by @xmath377 , is defined as @xmath378 where @xmath379 and @xmath380 .",
    "[ 3barsum_def ]    note that ( a1@xmath238 ) and ( a2@xmath238 ) are identical to ( a1 ) and ( a2 ) , respectively . to ensure that the above definition can in fact be made",
    ", it must be verified that the 3-sum @xmath381 can actually be defined for codes @xmath0 and @xmath204 satisfying ( a1@xmath238)(a3@xmath238 ) .",
    "so , let @xmath0 and @xmath204 be codes satisfying ( a1@xmath238)(a3@xmath238 ) . we need to verify that @xmath382 and @xmath383 satisfy ( a1)(a3 ) in definition  [ 3sum_def ]",
    ".    by their very definition , @xmath382 and @xmath383 satisfy ( a3 ) . furthermore , since @xmath384 and @xmath385",
    ", we see that no codeword of @xmath386 is of the form @xmath334 as in ( a1 ) , and no codeword of @xmath387 is of the form @xmath336 as in ( a2 ) . finally ,",
    "if @xmath388 for some length-3 word @xmath244 with @xmath335 , then since @xmath389 by ( a1@xmath238 ) , it must be that @xmath334 is in @xmath390 .",
    "but in this case , @xmath391 , where @xmath392 .",
    "so , @xmath393 as well , which is impossible by ( a1@xmath238 ) .",
    "therefore , @xmath382 can not contain any word of the form @xmath334 as in ( a1 ) . by analogous reasoning",
    ", @xmath383 can not contain any word of the form @xmath394 as in ( a2 ) .",
    "we have thus verified that @xmath382 and @xmath383 satisfy ( a1)(a3 ) , and so @xmath381 can be defined .",
    "note that ( a3@xmath238 ) implies that @xmath395 and @xmath396 , and hence , @xmath397 and @xmath398 .",
    "therefore , by virtue of proposition  [ 3sum_prop1 ] , we have the following result",
    ".    @xmath399 .",
    "[ 3barsum_lemma ]    the @xmath8-sum is the dual operation to 3-sum , in a sense made precise by the proposition below , the proof of which we defer to appendix  [ dual_props_app ] .",
    "this result is stated , without explicit proof , in @xcite and @xcite ; truemper @xcite refers to 3-sum and @xmath8-sum as @xmath400-sum and @xmath97-sum , respectively .",
    "the result can also be derived from theorem  7.3 in @xcite .",
    "let @xmath0 and @xmath204 be codes for which @xmath339 can be defined .",
    "then , @xmath401 [ 3sum_prop2 ]    it follows from the last result that a code that is expressible as a 3-sum can also be expressed as a @xmath8-sum . indeed ,",
    "if @xmath402 , then by the above proposition , @xmath403 .",
    "the latter , by definition , is @xmath404 , and so again taking duals and using the above proposition , we obtain @xmath405 we record this as a corollary to proposition  [ 3sum_prop2 ] .",
    "if @xmath406 can be defined , then @xmath407 [ 3sum_cor ]    having presented some of the simpler properties of 3-sums , we next state a highly non - trivial result of seymour that illustrates how 3-sums are to be used .",
    "the statement of this result is the 3-sum analogue of theorem  [ 2sum_thm ] , but there are some important differences between the two that we will point out after stating the result .",
    "if @xmath9 and @xmath10 are codes of length @xmath274 and @xmath275 , respectively , such that @xmath402 , then @xmath135 is an exact 3-separation of @xmath0 for @xmath408 .",
    "furthermore , if @xmath0 is 3-connected , then @xmath9 and @xmath10 are equivalent to proper minors of @xmath0 .",
    "conversely , if @xmath135 is an exact 3-separation of a code @xmath0 , with @xmath409 , then there are codes @xmath9 and @xmath10 of length @xmath410 and @xmath411 , respectively , such that @xmath0 is equivalent to @xmath412 . [ 3sum_thm ]    a couple of key differences between the statements of theorems  [ 2sum_thm ] and [ 3sum_thm ]",
    "must be stressed . for a code to be expressible as a 2-sum ,",
    "it is sufficient that there exist an exact 2-separation .",
    "however , to make the analogous conclusion about 3-sums , theorem  [ 3sum_thm ] not only asks for the existence of an exact 3-separation @xmath135 , but also adds the additional hypothesis that @xmath409 .",
    "we will have more to say about this a little later .",
    "there is a second major difference between the statements of the two theorems .",
    "theorem  [ 2sum_thm ] states that if @xmath276 , then @xmath9 and @xmath10 are always minors of @xmath0 , up to coordinate permutation .",
    "however , when @xmath402 , theorem  [ 3sum_thm ] imposes the condition that @xmath0 be 3-connected in order to conclude that @xmath9 and @xmath10 are equivalent to minors of @xmath0 .",
    "if the 3-connectedness requirement for @xmath0 is dropped , the conclusion does not hold in general , as the following example shows .",
    "take @xmath9 to be the @xmath413 $ ] code with generator matrix @xmath414,\\ ] ] and let @xmath10 be the @xmath415 $ ] hamming code with generator matrix @xmath416.\\ ] ] these codes satisfy ( a1)(a3 ) of definition  [ 3sum_def ] , and their 3-sum , @xmath412 , is the @xmath417 $ ] code @xmath0 generated by @xmath418.\\ ] ]    the minimal trellis of this code is shown in figure  [ 841_trellis ] .",
    "note that @xmath0 is not 3-connected .",
    "in fact , it is not even 2-connected  it has a 1-separation @xmath135 with @xmath419 .",
    "now , @xmath9 can be obtained as a minor of @xmath0 by puncturing @xmath0 at the last coordinate .",
    "however , @xmath10 is not a minor of @xmath0 , since puncturing @xmath0 at any coordinate does not yield a @xmath415 $ ] code , and shortening always yields a code of dimension less than 4 .",
    "[ not_3conn_example ]    we mention in passing that if @xmath402 , then the fact that @xmath9 and @xmath10 are equivalent to minors of @xmath0 whenever @xmath0 is 3-connected is far more difficult to prove ( see ( * ? ? ?",
    "* section 4 ) ) than the corresponding part of theorem  [ 2sum_thm ] .",
    "we observed above that the mere existence of an exact 3-separation is not enough for theorem  [ 3sum_thm ] to conclude that a code @xmath0 is expressible as a 3-sum ; the 3-separation @xmath135 must also satisfy @xmath409 , _",
    "i.e. _ , must not be minimal - separation is given immediately after definition  [ ksep_def ] . ] .",
    "it is also implicit in the statement of theorem  [ 3sum_thm ] that the existence of a non - minimal 3-separation is a necessary condition for a code to be a 3-sum . indeed ,",
    "if @xmath402 , then @xmath9 and @xmath10 must each have length at least 7 , as per definition  [ 3sum_def ] .",
    "so , with @xmath408 as in the statement of theorem  [ 3sum_thm ] , it must be true that @xmath420 , and similarly , @xmath421 .",
    "the following definition allows for a compact statement of a corollary to theorem  [ 3sum_thm ] along the lines of corollary  [ 2sum_cor2 ] .",
    "a 3-connected code is _",
    "internally 4-connected _ if all its 3-separations are minimal .",
    "[ int_4conn_def ]    internal 4-connectedness is a notion that lies properly between 3-connectedness and 4-connectedness  a 3-connected code that is not 4-connected can be internally 4-connected .",
    "note that any 3-separation in a 3-connected code must be exact , and so we can state the following corollary to theorem  [ 3sum_thm ] .",
    "a 3-connected code @xmath0 is not internally 4-connected iff there exist codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , such that @xmath0 is equivalent to @xmath412 .",
    "[ 3sum_cor1 ]    as in the case of 2-sums , we provide an efficient construction of the components of the 3-sum when an exact , non - minimal 3-separation @xmath135 of @xmath0 is given .",
    "this construction furnishes a proof of the converse part of theorem  [ 3sum_thm ] .",
    "our description is based loosely on the constructions given in ( * ? ? ?",
    "* section  8.3 ) and @xcite .",
    "let @xmath0 be a code of length @xmath6 and dimension @xmath7 , specified by a @xmath281 generator matrix @xmath87 , and let @xmath135 be an exact 3-separation of @xmath0 , with @xmath420 and @xmath421 . by permuting coordinates if necessary",
    ", we may assume that @xmath282 for some @xmath172 such that @xmath422 .",
    "let @xmath284 and @xmath285 denote the restrictions of @xmath87 to the columns indexed by @xmath90 and @xmath148 , respectively ; thus , @xmath286 $ ] .",
    "let @xmath287 and @xmath288 ; since @xmath135 is an exact 3-separation of @xmath0 , we have @xmath423 . note",
    "that @xmath424 implies that @xmath425 , so that @xmath426 ; similarly , @xmath427 .",
    "bring @xmath87 into reduced row - echelon form ( rref ) over @xmath54 .",
    "permuting coordinates within @xmath90 and within @xmath148 if necessary , @xmath290 may be assumed to be of the form @xmath428 , \\label{rref_eq2}\\ ] ] where @xmath292 , for @xmath429 , denotes the @xmath294 identity matrix , @xmath78 is a @xmath295 matrix , @xmath296 is a @xmath430 matrix , @xmath298 is a @xmath431 matrix , and the @xmath300 s denote all - zeros matrices of appropriate sizes . as a concrete example , consider the matrix @xmath273 given in example  [ 3sum_example ] , which is indeed of the above form , with @xmath432 , @xmath302 , @xmath433,\\ \\",
    "b = \\left [ \\begin{array}{ccc } 0 & 1 & 1 \\\\ 1 & 0 & 1 \\\\ 1 & 1 & 0 \\end{array } \\right ] \\ \\ \\text{and } \\ \\   c = \\left [ \\begin{array}{ccc } 1 & 1 & 1   \\end{array } \\right].\\ ] ]",
    "the fact that the submatrix @xmath434 $ ] must have rank equal to @xmath305 implies that @xmath296 must have rank 2 .",
    "hence , @xmath296 has two linearly independent rows , call them @xmath244 and @xmath435 , which form a basis of the row - space of @xmath296 . in particular ,",
    "each row of @xmath296 is either @xmath308 , @xmath244 , @xmath435 or @xmath436 .",
    "now , define the @xmath437 matrix @xmath438,\\ ] ] where @xmath439 is a @xmath440 matrix whose @xmath5th row is defined as @xmath441 and the bottom row of @xmath313 , represented by @xmath442 $ ] , is simply @xmath443 .",
    "next , define the @xmath444 matrix @xmath445 = [ i_{k_2 + 1 } \\",
    "c''],\\ ] ] where @xmath446   \\ \\ \\ \\text{and } \\ \\ \\   c '' = \\left[\\begin{array}{c } x \\\\ c \\end{array}\\right].\\ ] ]    a straightforward verification yields that if @xmath9 and @xmath10 are the codes generated by @xmath313 and @xmath314 , respectively , then @xmath447 , @xmath448 , and @xmath449 satisfy properties ( a1)(a3 ) in definition  [ 3sum_def ] , so @xmath412 can be defined .",
    "the construction of @xmath313 and @xmath314 above is carefully crafted to ensure that all the rows of @xmath273 are in @xmath412 .",
    "hence , @xmath450 .",
    "however , by proposition  [ 3sum_prop1 ] , we have that @xmath451 .",
    "hence , @xmath452 , implying that @xmath273 must be a generator matrix for @xmath412 .",
    "note that according to theorem  [ 3sum_thm ] , if @xmath0 is 3-connected , then @xmath9 and @xmath10 are equivalent to proper minors of @xmath0 .",
    "the procedure described above can be formalized into an algorithm that takes as input a @xmath281 generator matrix @xmath87 for @xmath0 , and an exact , non - minimal 3-separation @xmath135 of it , and produces as output a permutation @xmath70 of the coordinates of @xmath0 , and the generator matrices of two codes @xmath9 and @xmath10 , such that @xmath453 .",
    "the codes @xmath9 and @xmath10 are both equivalent to proper minors of @xmath0 .",
    "this procedure can be carried out in @xmath328 time for the same reasons as in the 2-sum case .    for the matrix @xmath273 in example  [ 3sum_example ] , we find the matrices @xmath313 and @xmath314 to be @xmath454,\\ \\",
    "\\ \\text{and } \\ \\ \\",
    "g_2 = \\left [ \\begin{array}{ccccccc } 1 & 0 & 0 & 0 & 0 & 1 & 1 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 1 \\\\ 0 & 0 & 1 & 0 & 1 & 1 & 0 \\\\ 0 & 0 & 0 & 1 & 1 & 1 & 1 \\end{array } \\right],\\ ] ] which are indeed generator matrices of the two hamming codes whose 3-sum is represented by @xmath273 .",
    "it must be pointed out that theorem  [ 3sum_thm ] also holds when the 3-sums in its statement are replaced by @xmath8-sums .",
    "this is a consequence of proposition  [ conn_prop ] , which shows that @xmath135 is a 3-separation of a code @xmath0 iff it is a 3-separation of the dual code @xmath1 .",
    "hence , applying theorem  [ 3sum_thm ] to @xmath1 , and dualizing via proposition  [ 3sum_prop2 ] , we see that the 3-sums in the statement of theorem  [ 3sum_thm ] can be replaced by @xmath8-sums .",
    "in particular , we also have the following corollary to theorem  [ 3sum_thm ] .",
    "a 3-connected code @xmath0 is not internally 4-connected iff there exist codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , such that @xmath0 is equivalent to @xmath455 .",
    "[ 3sum_cor2 ]    putting together theorem  [ decomp_thm1 ] with [ 3sum_cor1 ] and [ 3sum_cor2 ] , we obtain the following theorem , which summarizes the code decomposition theory presented up to this point .    a binary linear code either is 3-connected and internally 4-connected , or can be constructed from 3-connected , internally 4-connected proper minors of it by a sequence of operations of coordinate permutation , direct sum , 2-sum and 3-sum ( or @xmath8-sum ) .",
    "[ decomp_thm2 ]    the decomposition of theorem  [ decomp_thm2 ] can be carried out in time polynomial in the length of the code , since    * the decomposition of theorem  [ decomp_thm1 ] can be carried out in polynomial time ; * as mentioned in section  [ conn_section ] , there are polynomial - time algorithms for finding non - minimal 3-separations ( _ i.e. _ , 3-separations @xmath135 with @xmath409 ) in a code , if they exist ; and * there is a polynomial - time procedure that , given an exact , non - minimal 3-separation of a 3-connected code @xmath0 , produces codes @xmath9 and @xmath10 , both equivalent to proper minors of @xmath0 , and a permutation @xmath70 of the coordinate set of @xmath0 , such that @xmath453 or , via corollary  [ 3sum_cor ] , @xmath456 .",
    "note that the theorem does not guarantee uniqueness of the code decomposition .",
    "a binary tree is a convenient data structure for storing a decomposition of a code via direct sums , 2-sums , and 3-sums .",
    "recall that a proper ( or full ) binary tree is a rooted tree such that every node of the tree has either zero or two children .",
    "we will drop the adjective `` proper '' as proper binary trees are the only kind of binary trees we are interested in . a node without any children",
    "is called a",
    "_ leaf_. each non - leaf node has two children , and we will distinguish between the two , calling one the _ left _ child and the other the _ right _ child .",
    "let @xmath0 be a binary linear code .",
    "a _ code - decomposition tree _ for @xmath0 is a binary tree @xmath457 defined as follows .",
    "each node of @xmath457 stores a triple ( , , ) , where is a binary linear code , is either null or a permutation of the coordinate set of , and @xmath458 . for each node of @xmath457 , the triple ( , ,",
    ") must adhere to the following rules :    * if is the root node , then is the code @xmath0 itself ; * @xmath459 null iff is a leaf ; * @xmath460 iff is a leaf ; * if is a non - leaf node , then * * and are proper minors of ; and * * the permutation applied to the sum @xmath461 yields , + where and above respectively refer to the left and right children of .    in particular , ( r4 )",
    "ensures that for any node other than the root node in the tree , is a proper minor of @xmath0 .",
    "we will identify the leaves of any code - decomposition tree with the codes that they store .",
    "theorem  [ decomp_thm2 ] guarantees that each code @xmath0 has a code - decomposition tree in which each leaf is 3-connected and internally 4-connected .",
    "such a code - decomposition tree will be called _",
    "complete_. a complete code - decomposition tree for @xmath0 can be constructed in time polynomial in the length of the code @xmath0 , since the decomposition of theorem  [ decomp_thm2 ] can be carried out in polynomial time .",
    "note that if @xmath0 itself is 3-connected and internally 4-connected , then there is exactly one code - decomposition tree for it , which is the tree consisting of the single node @xmath0  or more precisely , the single node that stores @xmath462 .",
    "finally , a code - decomposition tree is called _ 3-homogeneous _ ( resp .  _",
    "@xmath8-homogeneous _ ) if for each non - leaf node in the tree , if @xmath463 ( resp .",
    "@xmath464 ) .",
    "thus , in a 3-homogeneous ( resp .",
    "@xmath8-homogeneous ) tree , no @xmath8-sums ( resp .",
    "3-sums ) are used .",
    "it follows from corollaries  [ 3sum_cor1 ] and [ 3sum_cor2 ] that if a code - decomposition tree has a node of the form @xmath465 , with @xmath0 being 3-connected , then the subtree with as a root can be replaced with a different subtree in which the root node is @xmath466 .",
    "therefore , every code has a complete , 3-homogeneous ( or @xmath8-homogeneous ) code - decomposition tree , which again can be constructed in time polynomial in the length of the code .",
    "having described in detail seymour s decomposition theory in the context of binary linear codes , we now turn to some of its applications .",
    "this theory mainly derives its applications from families of codes that are minor - closed , and such families form the subject of the next section .",
    "a family @xmath11 of binary linear codes is defined to be _ minor - closed _ if for each @xmath23 , every code equivalent to a minor of @xmath0 is also in @xmath11 .",
    "note that this definition automatically implies that a minor - closed family , @xmath11 , of codes is closed under code equivalence , _",
    "i.e. _ , if @xmath23 , then all codes equivalent to @xmath0 are also in @xmath11",
    ".    a non - trivial example of a minor - closed family is the set of all graphic codes , since any minor of a graphic code is graphic .",
    "we will encounter other examples of minor - closed families ( regular codes and geometrically perfect codes ) further on in this paper .",
    "we mention in passing another interesting example of such a family  codes of bounded trellis state - complexity .",
    "recall from section  [ conn_section ] that the state - complexity profile of a length-@xmath6 code @xmath0 is defined to be the vector @xmath152 , where @xmath467 for @xmath154 \\subset [ n]$ ] .",
    "define @xmath468 } s_i(\\cc)$ ] . for a fixed integer @xmath469 ,",
    "let @xmath470 denote the family of codes @xmath0 such that there exists a code @xmath204 equivalent to @xmath0 with @xmath471 .",
    "then , @xmath470 is minor - closed @xcite , @xcite .",
    "a similar statement holds for the family of codes that have a cycle - free normal realization ( cf .",
    "@xcite ) whose state - complexity is bounded by @xmath472 .",
    "a general construction of minor - closed families is obtained by fixing a collection @xmath473 of codes , and defining @xmath474 to be the set of all codes @xmath0 such that no minor of @xmath0 is equivalent to any @xmath475 . as an example , let @xmath476 , where @xmath477 is the @xmath12 $ ] hamming code will always denote the @xmath12 $ ] hamming code . ] . by theorem",
    "[ graphic_code_thm ] , @xmath474 in this case is precisely the family of graphic codes .",
    "it is clear that @xmath474 is a minor - closed family for any fixed @xmath473 .",
    "in fact , every minor - closed family can be obtained in this manner .",
    "indeed , let @xmath11 be a minor - closed family of codes .",
    "a code @xmath22 is said to be an _ excluded minor _ of @xmath11 if @xmath478 , but every proper minor of @xmath479 is in @xmath11 .",
    "it is not hard to verify that a code @xmath0 is in @xmath11 iff no minor of @xmath0 is an excluded minor of @xmath11 .",
    "theorem  [ graphic_code_thm ] is an example of such an _ excluded - minor characterization _ , and we will see more such examples ( theorems  [ regular_thm1 ] and [ p_q_thm ] ) further below .",
    "thus , taking @xmath473 to be the collection of all excluded minors of @xmath11 , we have that @xmath480 .",
    "a tantalizing conjecture of robertson and seymour asserts that any minor - closed family @xmath11 of binary linear codes has only _ finitely many _ excluded minors ( * ? ? ?",
    "* conjecture  1.2 ) .",
    "let @xmath11 be a minor - closed family of codes . by theorem  [ decomp_thm2 ] ,",
    "every @xmath23 can be constructed from 3-connected , internally 4-connected codes in @xmath11 using direct sums , 2-sums , and 3- or @xmath8-sums .",
    "the converse need not always be true , _ i.e. _ , it is not necessarily true that if a code @xmath0 has a decomposition via direct sums , 2-sums , and 3- or @xmath8-sums into codes in @xmath11 , then @xmath23 . of course ,",
    "the converse does hold if @xmath11 is also closed under the operations of direct sum , 2-sum , 3-sum and @xmath8-sum . as usual , @xmath11 is defined to be closed under direct sum ( resp .  2-sum , 3-sum , @xmath8-sum ) if for any pair of codes in @xmath0 , their direct sum ( resp .  2-sum , 3-sum ,",
    "@xmath8-sum , if it can be defined ) is also in @xmath11 .",
    "we summarize this in the following proposition .",
    "let @xmath11 be a minor - closed family of codes that is also closed under the operations of direct sum , 2-sum , 3-sum and @xmath8-sum .",
    "then , the following are equivalent for a code @xmath0 .",
    "* @xmath0 is in @xmath11 . *",
    "the leaves of some code - decomposition tree for @xmath0 are in @xmath11 . *",
    "the leaves of some complete , 3-homogeneous or @xmath8-homogeneous code - decomposition tree for @xmath0 are in @xmath11 . *",
    "the leaves of every code - decomposition tree for @xmath0 are in @xmath11 .",
    "[ minor_closed_prop ]    \\(i ) implies ( iv ) since the leaves of any code - decomposition tree of @xmath0 are minors of @xmath0 , and @xmath11 is minor - closed .",
    "the implications ( iv ) @xmath481 ( iii ) and ( iii ) @xmath481 ( ii ) are trivial .",
    "( ii ) implies ( i ) since @xmath11 is closed under direct - sums , 2-sums , 3-sums and @xmath8-sums .",
    "since a complete code - decomposition tree of any code @xmath0 can be constructed in time polynomial in the length of @xmath0 , we have the following corollary to the above result .",
    "let @xmath11 be a minor - closed family of codes that is also closed under the operations of direct sum , 2-sum , 3-sum and @xmath8-sum .",
    "then the following are equivalent statements .",
    "* it can be decided in polynomial time whether or not a given code @xmath0 is in @xmath11 . *",
    "it can be decided in polynomial time whether or not a given 3-connected , internally 4-connected code @xmath0 is in @xmath11 .",
    "[ minor_closed_cor ]    the first major application of results such as the above  the application which was in fact the motivation for seymour s matroid decomposition theory  relates to totally unimodular matrices .",
    "a real matrix @xmath78 is said to be _ totally unimodular _ if the determinant of every square submatrix of @xmath78 is in @xmath16 .",
    "in particular , each entry of a totally unimodular matrix is in @xmath16 .",
    "such matrices are of fundamental importance in combinatorial optimization and network flow problems , because total unimodularity is closely related to integer linear programming @xcite .",
    "a binary matrix is defined to be _ regular _ if its 1 s can be replaced by @xmath14 s in such a way that the resulting matrix is totally unimodular .",
    "consequently , a binary linear code is defined to be _ regular _ if it has a regular parity - check matrix .",
    "it turns out that for a regular code , _ every _ parity - check matrix is regular ( * ? ? ?",
    "* corollary  9.2.11 ) .",
    "furthermore , given a regular binary matrix @xmath296 , there is a polynomial - time algorithm that converts @xmath296 to a totally unimodular matrix by assigning signs to the 1 s in @xmath296 ( * ? ? ?",
    "* corollary  9.2.7 ) .",
    "thus , regular codes form the key to understanding total unimodularity . the following theorem , due to tutte @xcite ,",
    "provides an elegant excluded - minor characterization of regular codes .",
    "a binary linear code is regular iff it does not contain as a minor any code equivalent to the [ 7,4 ] hamming code or its dual .",
    "[ regular_thm1 ]    it follows from the theorem that the family of regular codes , which we will denote by @xmath482 , is minor - closed , since it is of the form @xmath474 for @xmath483 .",
    "furthermore , @xmath482 is closed under the taking of code duals , _",
    "i.e. _ , the dual of a regular code is also regular .",
    "this is because a code @xmath0 contains @xmath477 as a minor iff its dual @xmath1 contains @xmath484 as a minor .",
    "it can further be shown @xcite that @xmath482 is closed under the operations of direct sum , 2-sum , 3-sum and @xmath8-sum",
    ".    note that by theorem  [ graphic_code_thm ] , @xmath482 contains the family of graphic codes , and hence , the family of _ co - graphic _ codes as well , which are codes whose duals are graphic . using a long and difficult argument ,",
    "seymour @xcite proved that the 3-connected , internally 4-connected codes in @xmath482 are either graphic , co - graphic , or equivalent to a particular isodual code that he called @xmath18 , which is neither graphic nor co - graphic .",
    "if @xmath0 is a 3-connected , internally 4-connected regular code , then @xmath0 is either graphic , co - graphic , or equivalent to @xmath18 , which is the @xmath17 $ ] code with parity - check matrix @xmath485.\\ ] ] [ regular_thm2 ]    thus , seymour s decomposition theory shows that any regular code ( and so by assignment of signs , any totally unimodular matrix ) can be constructed by piecing together  via direct sums , 2-sums , and 3-sums or @xmath8-sums  graphic codes , co - graphic codes , and codes equivalent to @xmath18 .",
    "also , membership in the family of regular codes can be decided in polynomial time .",
    "indeed , as mentioned at the end of section  [ matroid_section ] , there are polynomial - time algorithms for deciding whether or not a given code is graphic . given an @xmath49 parity - check matrix @xmath13 for a code",
    ", a generator matrix for the code can be computed using elementary row operations on @xmath13 in @xmath486 time .",
    "thus , the dual of a code can be determined in polynomial time , and hence it can be decided in polynomial time whether or not a given code is co - graphic .",
    "hence , from corollary  [ minor_closed_cor ] and theorem  [ regular_thm2 ] , it follows that there is a polynomial - time algorithm for determining whether or not a given code is regular . the best such algorithm known is due to truemper @xcite , which runs in @xmath487 time .",
    "truemper s algorithm is also based on seymour s decomposition theory , but it implements a highly efficient procedure for carrying out the decomposition .    while the application of seymour s decomposition theory to regular codes is interesting , it is not very useful , perhaps , from a coding - theoretic perspective .",
    "however , in the next section , we give an application that should be of some interest to a coding theorist .",
    "the recent work of feldman , wainwright and karger @xcite shows that ml decoding of a binary linear code @xmath0 over a discrete memoryless channel can be formulated as a linear program ( lp ) .",
    "recall that the ml decoding problem is : given a received word @xmath435 at the channel output , find a codeword @xmath488 that maximizes the probability , @xmath489 $ ] , of receiving @xmath435 conditioned on the event that @xmath244 was transmitted .",
    "as observed by feldman _ et al .",
    "_ , under the assumption of a discrete memoryless channel , given a received word @xmath490 , the problem of determining @xmath491 $ ] is equivalent to the problem of finding @xmath492 , where @xmath493 is given by @xmath494}{\\pr[y_i|x_i=1]}\\right ) \\label{gamma_def}\\ ] ] and @xmath495 is the standard inner product on @xmath26 . here ,",
    "for the inner product @xmath496 to make sense , a binary codeword @xmath497 is identified with the real vector @xmath498 .",
    "the above formulation shows ml decoding to be equivalent to the minimization of a linear function over a finite set @xmath499 .",
    "let @xmath500 be the _",
    "codeword polytope _ of @xmath0 , _",
    "i.e. _ , the convex hull in @xmath26 of the finite set @xmath0",
    ". it can be shown that the set of vertices of @xmath500 coincides with @xmath0 .",
    "the key point now is that over a polytope @xmath501 , a linear function @xmath264 attains its minimum value @xmath502 at a vertex of @xmath501 . in particular , @xmath503 thus , ml decoding is equivalent to finding a vertex of the polytope @xmath500 that achieves @xmath504 , which is a classic lp .",
    "however , ml decoding of an arbitrary code is known to be np - hard @xcite .",
    "so , in general , solving the above lp over the codeword polytope is also np - hard .",
    "a strategy often followed in such a situation is to `` relax '' the problem .",
    "the idea is to look for a polytope that contains the code as a subset of its vertex set , but which has some property that allows an lp defined over it to be solved more easily .",
    "such a polytope is called a _ relaxation _ of the codeword polytope @xmath500 .",
    "a certain relaxation of the codeword polytope has received much recent attention @xcite,@xcite,@xcite .",
    "this is the polytope which , given a code @xmath0 of length @xmath6 , and a subset @xmath505 , is defined as @xmath506 where @xmath507 is the codeword polytope of the code @xmath508 .",
    "note that since @xmath509 for any @xmath510 , we have that @xmath511 for any @xmath505 .",
    "in particular , @xmath512 for any code @xmath0 .    for any @xmath505 ,",
    "the polytope @xmath513 contains @xmath0 as a subset of its vertex set , @xmath514 .",
    "this is because @xmath515 , and since @xmath513 is contained within the @xmath6-cube @xmath516^n$ ] , we also have @xmath517 .",
    "thus , @xmath513 is indeed a relaxation of @xmath500 .",
    "consequently the lp @xmath518 , where @xmath519 is the vector defined via ( [ gamma_def ] ) , constitutes a relaxation of the lp that represents ml decoding .",
    "now , any standard lp - solving algorithm requires that the lp to be solved have its constraints be represented via linear inequalities .",
    "the advantage of using the relaxation @xmath513 is that there is a convenient such representation of the constraint @xmath520 .",
    "the polytope @xmath513 can also be expressed as ( see _ e.g. _  ( * ? ? ?",
    "* theorem  4 ) or ( * ? ? ?",
    "* lemma  26 ) ) , @xmath521 where for @xmath522 $ ] , @xmath523 denotes the polyhedron @xmath524^n:\\ \\sum_{j \\in j } x_j -   \\sum_{i \\in s \\setminus j } x_i \\leq |j| - 1\\right\\}. \\label{q_eq2}\\ ] ] the efficiency of a practical lp solver ( like , say , the simplex or ellipsoid algorithm ) depends on the size of the lp representation , which is proportional to the number of variables and linear inequalities forming the constraints",
    ". if @xmath13 above consists of the rows of a parity - check matrix of a low - density parity - check ( ldpc ) code , then the representation of @xmath513 given by ( [ q_eq1])([q_eq2 ] ) has size linear in the codelength @xmath6 .",
    "so , the ellipsoid algorithm , for example , would be guaranteed to solve the lp @xmath518 in time polynomial in @xmath6 .",
    "however , as we explain next , this lp is no longer equivalent to ml decoding in general .",
    "let @xmath525 denote the set of _ integral vertices _",
    "( _ i.e. _ , vertices all of whose coordinates are integers ) of @xmath513 .",
    "we noted above that @xmath526 .",
    "if @xmath13 is a spanning subset ( over @xmath54 ) of @xmath1 , so that the vectors in @xmath13 form ( the rows of ) a parity - check matrix of @xmath0 , then we in fact have @xmath527 .",
    "this is because if @xmath528 is not in @xmath0 , then @xmath529 for some @xmath530 , and hence , @xmath531 .",
    "the polytope @xmath513 in this case is the `` fundamental polytope '' of vontobel and koetter @xcite ( or equivalently , the `` projected polytope '' @xmath532 of feldman _",
    "et al_.  @xcite ) .",
    "the fact that @xmath527 for such a polytope @xmath513 implies that the polytope has the following `` ml certificate '' property ( * ? ? ?",
    "* proposition  2 ) : if the lp @xmath518 , where @xmath519 is the vector defined via ( [ gamma_def ] ) , attains its minimum at some @xmath533 , then @xmath244 is guaranteed to be the ml codeword . however , it is possible that the above lp attains its minimum at some non - integral vertex @xmath534 , in which case decoding via linear programming over @xmath513 fails .",
    "the non - integral vertices of @xmath513 are called `` pseudocodewords '' .",
    "it is naturally of interest to know when a code @xmath0 has a fundamental polytope @xmath513 ( for some spanning subset @xmath13 of @xmath1 ) without pseudocodewords . for such codes ,",
    "ml decoding can be exactly implemented as an lp over @xmath513 .",
    "clearly , @xmath513 has no pseudocodewords iff @xmath535 , or equivalently , @xmath536 .",
    "but since @xmath537 , this obviously implies that we must have @xmath538 .",
    "conversely , if @xmath538 , then we may simply take @xmath539 to obtain a fundamental polytope @xmath513 without pseudocodewords .",
    "we record this observation as a lemma .",
    "let @xmath0 be a binary linear code .",
    "there exists a spanning subset , @xmath13 , of @xmath1 such that the polytope @xmath513 has no pseudocodewords iff @xmath538 .",
    "[ pseudocodeword_lemma ]    a code @xmath0 for which @xmath538 holds will be called _ geometrically perfect _ , and we will denote by @xmath540 the family of all such codes .",
    "so the question then is : which codes are geometrically perfect ?",
    "an answer to this was provided by barahona and grtschel @xcite , who showed that the relationship @xmath538 is equivalent to seymour s `` sums - of - circuits '' property for binary matroids @xcite .",
    "the following theorem is thus equivalent to seymour s characterization of binary matroids with the sums - of - circuits property .",
    "a binary linear code @xmath0 is geometrically perfect iff @xmath0 does not contain as a minor any code equivalent to @xmath484 , @xmath18 or @xmath106 .",
    "[ p_q_thm ]    by the above theorem , @xmath540 is minor - closed .",
    "moreover , since none of @xmath484 , @xmath18 or @xmath106 is graphic , no graphic code can contain any of them as a minor , and so graphic codes are geometrically perfect .",
    "grtschel and truemper ( * ? ? ?",
    "* section  4 ) showed that @xmath540 is closed under the operations of direct sum , 2-sum and @xmath8-sum , but is not closed under 3-sum .",
    "they also observed @xcite that any code in @xmath540 can be constructed via direct sums , 2-sums and @xmath8-sums from graphic codes and copies of the codes @xmath477 , @xmath107 and @xmath541 , where @xmath542 is the graph in figure  [ v8_fig ] .",
    "indeed , this result is implied by theorems  6.4 , 6.9 and 6.10 in @xcite .",
    "it is not hard to verify that the codes @xmath477 , @xmath107 and @xmath541 are in fact in @xmath540 . putting these facts together , we obtain the following theorem .    for a binary linear code @xmath0 ,",
    "the following are equivalent statements .",
    "* @xmath0 is geometrically perfect , _",
    "i.e. _ , @xmath538 . * each leaf in some complete ,",
    "@xmath8-homogeneous code - decomposition tree for @xmath0 is either graphic , or equivalent to one of the codes @xmath477 , @xmath107 and @xmath541 . * each leaf in every complete ,",
    "@xmath8-homogeneous code - decomposition tree for @xmath0 is either graphic , or equivalent to one of the codes @xmath477 , @xmath107 and @xmath541 .",
    "[ mfg_decomp_thm ]    \\(i ) implies ( iii ) follows directly from the fact that any code in @xmath540 can be constructed via direct sums , 2-sums and @xmath8-sums from graphic codes and copies ( up to equivalence ) of the codes @xmath477 , @xmath107 and @xmath541 .",
    "the implication ( iii ) @xmath481 ( ii ) is trivial .",
    "finally , ( ii ) @xmath481 ( i ) holds since graphic codes and the codes @xmath477 , @xmath107 and @xmath541 are all in @xmath540 , and @xmath540 is closed under direct sum , 2-sum and @xmath8-sum .",
    "since a complete , @xmath8-homogeneous code - decomposition tree for a code can be constructed in polynomial time , and testing for graphicness or equivalence to @xmath477 , @xmath107 and @xmath541 can also be carried out in polynomial time , we have the following corollary to the above theorem .",
    "it can be decided in polynomial time whether or not a given code @xmath0 is geometrically perfect , _",
    "i.e. _ , has the property @xmath538 .",
    "[ mfg_cor ]    however , this is only half the story .",
    "if @xmath0 is a geometrically perfect code , the algorithm guaranteed by the above result will determine this to be the case , but will not produce a `` small '' subset @xmath505 such that @xmath536 .",
    "the only information we would have is that @xmath13 can be taken to be the _ entire _ dual code @xmath1 . while it would then be true that the lp @xmath543 is equivalent to ml decoding , no known lp - solving algorithm could be guaranteed to efficiently solve this lp",
    "this is because the representation of @xmath544 given by ( [ q_eq1])([q_eq2 ] ) has size exponential in the codelength @xmath6 .",
    "fortunately , as we shall describe next , for the family , @xmath540 , of geometrically perfect codes , ml decoding can always be implemented in time polynomial in codelength , _ not _ using an lp - solving algorithm , but by means of a combinatorial optimization algorithm that uses code decompositions .",
    "+ in a series of papers @xcite@xcite ( see also @xcite ) , truemper carried out a careful examination of matroid decompositions , from which a particularly interesting observation concerning geometrically perfect codes could be inferred .",
    "let @xmath545 be the sub - family of @xmath540 that consists of all graphic codes and codes equivalent to one of @xmath477 , @xmath107 and @xmath541 .",
    "as observed in the proof of corollary  6.6 in @xcite , truemper s analysis of matroid decompositions could be used to show that a 2-connected code @xmath546 is equivalent to either @xmath280 or @xmath455 , for some @xmath547 and some 2-connected code @xmath548 , both of which are equivalent to minors of @xmath0 .",
    "the decomposition of @xmath0 into @xmath9 and @xmath10 , along with the coordinate permutation that takes @xmath280 or @xmath455 ( as the case may be ) to @xmath0 , can be determined in polynomial time .",
    "these facts have some significant consequences , one of which is that any code in @xmath540 is ml - decodable in polynomial time .",
    "however , rather than state these results just for the class of geometrically perfect codes , we will state and prove them more generally for codes that are `` almost graphic '' in the sense that they can be composed from graphic codes and finitely many other codes .",
    "recall that @xmath85 denotes the family of graphic codes .",
    "a minor - closed family of codes @xmath11 is defined to be _ almost - graphic _ if there exists a finite sub - family @xmath549 such that any 2-connected code @xmath23 is either in @xmath550 , or is of the form @xmath551 or @xmath552 , for some permutation @xmath70 of the coordinate set of @xmath0 , and some codes @xmath9 and @xmath10 such that    * @xmath9 and @xmath10 are equivalent to minors of @xmath0 , and * @xmath553 and @xmath10 is 2-connected .    if there exists a constant @xmath554 such that for any length-@xmath6 code @xmath555 , the components @xmath9 , @xmath10 and @xmath70 of the above decomposition can be determined in time @xmath556 , then the family of codes @xmath11 is said to be _ polynomially almost - graphic ( pag)_. [ almost_graphic_def ]    note that the 3-sum is conspicuous by its absence from the above definition",
    ". we will give an explanation of this at the end of this section .",
    "definition  [ almost_graphic_def ] clearly implies that any code in an almost - graphic family @xmath11 has a @xmath8-homogeneous code - decomposition tree .",
    "the definition in fact implies that a 2-connected code in @xmath11 has a decomposition tree with the property that each leaf is in @xmath550 , and for each non - leaf node in the tree , is a leaf ( and hence , is in @xmath550 ) , where is the left child of .",
    "such a code - decomposition tree will be called _",
    "@xmath557-unary_. if @xmath11 is pag , a @xmath8-homogeneous , @xmath557-unary decomposition tree can be constructed for any 2-connected code @xmath23 in time polynomial in the length of @xmath0 .",
    "the family , @xmath85 , of graphic codes is trivially pag . from the discussion",
    "prior to the above definition , the family , @xmath540 , of geometrically perfect codes is also pag .",
    "other examples of pag families are the code families @xmath474 ( cf .",
    "section  [ minor_closed_section ] ) for @xmath558 and @xmath559 , and the family of co - graphic codes without a @xmath106 minor ( * ? ? ?",
    "* corollary  6.6 ) .",
    "pag codes inherit some of the properties of graphic codes .",
    "for example , it is known @xcite,@xcite that the ml decoding problem over a memoryless binary symmetric channel can be solved in polynomial time for the family of graphic codes using edmonds matching algorithm @xcite,@xcite . a much stronger decoding result",
    "can in fact be proved for graphic codes , and more generally for pag codes .",
    "this is based on the following optimization result proved in @xcite , an argument for which is sketched in appendix  [ opt_app ] .",
    "let @xmath11 be a pag family of codes .",
    "there exists a constant @xmath554 such that given any length-@xmath6 code @xmath0 in @xmath11 and any @xmath560 , a codeword @xmath561 achieving @xmath562 ( or equivalently , @xmath563 ) can be determined in @xmath556 time .",
    "[ pag_opt_thm ]    it should be noted that an actual implementation of the polynomial - time algorithm implicit in theorem  [ pag_opt_thm ] ( and outlined in appendix  [ opt_app ] ) requires arithmetic over the real numbers , unless the vector @xmath519 has only rational coordinates .",
    "so , in practice , finite - precision arithmetic used in any computer implementation of the algorithm could only approximate the linear cost function @xmath564 for an arbitrary @xmath24 .    as mentioned earlier ,",
    "ml decoding over a discrete memoryless channel can be formulated as a linear program @xcite .",
    "therefore , we have the following corollary to the above theorem , again with the caveat that a true implementation of a polynomial - time algorithm for ml decoding would require real - number arithmetic .    the maximum - likelihood decoding problem over a discrete memoryless channel can be solved in polynomial time for a pag family of codes .",
    "in particular , geometrically perfect codes are ml - decodable in polynomial time .",
    "[ pag_cor1 ]    another problem that is known to be np - hard in general is the problem of determining the minimum distance of a code @xcite . for graphic codes",
    ", this is equivalent to the problem of finding the girth of a graph , which can be solved in time polynomial in the number of edges of the graph  one of the earliest such algorithms published @xcite runs in @xmath565 time in the worst case , where @xmath6 is the number of edges . as a consequence of theorem  [ pag_opt_thm ]",
    ", we also have that the minimum distance problem for a pag family of codes can be solved in polynomial time .",
    "the minimum distance of any code in a pag family can be determined in polynomial time .",
    "[ pag_cor2 ]    let @xmath0 be a code of length @xmath6 containing at least one nonzero codeword . for @xmath566 , define @xmath567 , with the @xmath568 appearing in the @xmath5th coordinate of @xmath569 .",
    "note that @xmath570 is always achieved by a codeword in @xmath0 with @xmath5th coordinate equal to 1 , if such a codeword exists .",
    "indeed , the minimum - achieving codeword @xmath571 is the codeword of least hamming weight among codewords in @xmath0 that have a 1 in the @xmath5th coordinate ; if there is no codeword in @xmath0 with a 1 in the @xmath5th coordinate , then @xmath572 .",
    "note that if @xmath573 , then @xmath574 .",
    "therefore , the minimum distance of @xmath0 is given by @xmath575 } \\min_{\\c \\in \\cc } \\la\\mathbf{\\gm}^{(i)},\\c\\ra.\\ ] ]    for a pag family of codes @xmath11 , given any code @xmath23 , each of the minimization problems @xmath570 can be solved in polynomial time , and hence the minimum distance of @xmath0 can be determined in polynomial time .",
    "we point out that in all the minimization problems that must be solved ( recursively going down the code - decomposition tree , as explained in appendix  [ opt_app ] ) to determine the minimum distance of a length-@xmath6 code , the cost vectors have integer coefficients of magnitude at most @xmath576 .",
    "so , the minimum distance of a code from a pag family can be determined in polynomial time using finite - precision arithmetic .",
    "the downside of pag ( and more generally , almost - graphic ) code families is that they are not very good from a coding - theoretic perspective .",
    "recall from coding theory that a code family @xmath11 is called _ asymptotically good _ if there exists a sequence of @xmath577 $ ] codes @xmath578 , with @xmath579 , such that @xmath580 and @xmath581 are both strictly positive",
    ".    an almost - graphic family of codes can not be asymptotically good .",
    "[ ag_bad_thm ]    in particular , the family of geometrically perfect codes is not asymptotically good . the theorem is proved in appendix  [ ag_bad_app ] . in view of lemma  [ pseudocodeword_lemma ] , the above result has the following very interesting corollary .",
    "let @xmath11 be a family of binary linear codes with the following property : for each @xmath23 , there exists a parity - check matrix @xmath13 for @xmath0 , such that the corresponding fundamental polytope @xmath513 has no non - integral vertices ( pseudocodewords ) .",
    "then , @xmath11 is not an asymptotically good code family .",
    "loosely speaking , this means that linear - programming decoding , when applied to a `` good '' code , must suffer on occasion from decoding failure due to the presence of pseudocodewords , even if _ all _ possible parity checks ( dual codewords ) are used in the constraints ( [ q_eq1])([q_eq2 ] ) of the lp .",
    "given the close relationship between linear - programming decoding and iterative decoding using the min - sum algorithm @xcite , a similar result is likely to hold for iterative decoding as well .",
    "we end this section with an explanation of why 3-sums were left out of definition  [ almost_graphic_def ] .",
    "the proof of theorem  [ pag_opt_thm ] given in appendix  [ opt_app ] relies crucially on the fact that a @xmath8-homogeneous , @xmath557-unary code - decomposition tree can be constructed in polynomial time for a code from a pag family .",
    "so , the result is actually true for any code family for which such trees can be constructed in polynomial time .",
    "now , if 3-sums were allowed in definition  [ almost_graphic_def ] , it is no longer obvious that codes from the resulting code family would still have @xmath8-homogeneous , @xmath557-unary code - decomposition trees .",
    "there is good reason to think that this could still be true , especially in light of corollary  [ 3sum_cor ] , which states that a code has a 3-sum decomposition only if it has a @xmath8-sum decomposition .",
    "indeed , that result may lead us to believe that if a code @xmath0 has a @xmath557-unary code - decomposition tree which contains 3-sums , then replacing the 3-sums in the tree with @xmath8-sums in the manner prescribed by corollary  [ 3sum_cor ] should result in a @xmath8-homogeneous , @xmath557-unary code - decomposition tree .",
    "however , to show that this is the case , it would have to be verified that if @xmath402 , with @xmath9 , @xmath10 satisfying ( a ) and ( b ) of definition  [ almost_graphic_def ] , then ( in the notation of corollary  [ 3sum_cor ] ) @xmath582 and @xmath583 also satisfy ( a ) and ( b ) . now , it is not hard to check that if @xmath9 is graphic , then so is @xmath582 . however ,",
    "unless @xmath0 is 3-connected , there is no guarantee that @xmath582 and @xmath583 are equivalent to minors of @xmath0 , even though @xmath9 and @xmath10 are given to be equivalent to minors of @xmath0 .",
    "it is in fact quite likely to be true that if @xmath402 , with @xmath9 and @xmath10 equivalent to minors of @xmath0 , then @xmath582 and @xmath583 are also equivalent to minors of @xmath0 .",
    "so , it is quite possible that if definition  [ almost_graphic_def ] were to include 3-sums as well , then the resulting code families would still have @xmath8-homogeneous , @xmath557-unary code - decomposition trees , and hence theorem  [ pag_opt_thm ] would continue to hold .",
    "however , a rigorous proof of this would take us far outside the main theme of our paper , and definition  [ almost_graphic_def ] as it stands is good enough for our purposes .",
    "a natural question to ask upon studying the decomposition theory presented in this paper is whether one can define @xmath7-sums for @xmath584 that have the same attractive properties as 2- , 3- and @xmath8-sums .",
    "ideally , such a @xmath7-sum , denoted by @xmath585 , would have the following property for some fixed integer @xmatha @xmath7-connected code @xmath0 has a @xmath7-separation @xmath135 with @xmath179 iff @xmath586 for some permutation @xmath70 of the coordinates of @xmath0 , and codes @xmath9 and @xmath10 equivalent to minors of @xmath0 . _",
it is indeed possible to define @xmath7-sums in such a way that we have @xmath586 iff @xmath0 has a @xmath7-separation @xmath135 with @xmath179 .",
    "the tricky part is ensuring that the component codes @xmath9 and @xmath10 are retained as minors of @xmath0 , and this appears to be difficult in general .",
    "however , we have some preliminary results that indicate that even without the last property , such @xmath7-sums can be used as the building blocks of a decomposition theory that ties in beautifully with forney s theory of cycle - free realizations of linear codes @xcite",
    ". this theory would make further deep connections with matroid theory , particularly with the notions of matroid branchwidth and treewidth @xcite , @xcite .",
    "an exposition of this theory will be given in a future paper .    while the decomposition theory in this paper has been presented mainly in the context of binary linear codes ,",
    "it is possible to extend some of it to linear codes over arbitrary finite fields as well .",
    "the definitions of minors and @xmath7-connectedness can be obviously extended to nonbinary codes . also , a 2-sum operation can be defined for codes over an arbitrary finite field @xmath2 , and the entire theory outlined in section  [ 2sum_section ] does carry over . however , there is no known 3-sum operation defined for nonbinary codes that has a property analogous to that stated in theorem  [ 3sum_thm ] .",
    "again , it seems that if we are prepared to give up the requirement that the components of a @xmath7-sum be retained as minors of the composite code , then it is possible to develop a powerful decomposition theory for nonbinary codes just like that for binary codes .",
    "we end with a pointer to a very interesting direction of current research in matroid theory .",
    "this involves the resolution of two conjectures whose statements ( in the context of codes ) we give below .",
    "recall from section  [ minor_closed_section ] that the notation @xmath474 , for some fixed collection @xmath473 of codes , refers to the set of all binary linear codes @xmath0 such that no minor of @xmath0 is equivalent to any @xmath475 .",
    "we extend that notation to codes over an arbitrary finite field @xmath2 as well .    if @xmath11 is a minor - closed class of codes over a finite field @xmath2 , then @xmath587 for some finite collection of codes @xmath473 .    informally , the above conjecture states that any minor - closed class of codes is characterized by a finite list of excluded minors .",
    "let @xmath588 be a fixed code . given a length-@xmath6 code @xmath0 , it is decidable in time polynomial in @xmath6 whether or not @xmath0 contains @xmath588 as a minor .",
    "the two conjectures together imply that the membership of a code in a minor - closed class can always be decided in polynomial time . to put it another way ,",
    "if a property of codes is preserved under the action of taking minors , then it should be decidable in polynomial time whether or not a given code has that property .",
    "it should be pointed out that both conjectures have been shown to be true in the context of graphic codes , as part of the celebrated graph minor project of robertson and seymour @xcite,@xcite .",
    "the graph minor project has had a profound impact on modern graph theory @xcite , and its extension to @xmath2-representable matroids ( equivalently , codes over @xmath2 ) is bound to have a similar influence on matroid theory and , as a consequence , on coding theory .",
    "_ proof of proposition  [ 2sum_prop2 ] _ : let @xmath0 and @xmath204 be @xmath27 $ ] and @xmath589 $ ] codes , respectively , for which @xmath235 can be defined .",
    "we want to show that @xmath590 .",
    "first , observe that , by proposition  [ 2sum_prop1](a ) , @xmath591 therefore , it is enough to show that @xmath592 .    given a binary word @xmath593 and a positive integer @xmath594 , let @xmath595 denote the length-@xmath172 prefix of @xmath244 , and let @xmath596 denote the length-@xmath172 suffix of @xmath244 .",
    "also , we denote the concatenation of two binary words @xmath244 and @xmath250 by @xmath249 .",
    "consider an arbitrary codeword , @xmath597 , of @xmath598 .",
    "such a word is of the form @xmath599 } \\pl \\x'_{[n'-1:]}$ ] for some @xmath600 and @xmath601 such that @xmath602 .",
    "we will show that @xmath599 } \\pl \\x'_{[n-1:]}$ ] as above must also be in @xmath603 .",
    "let @xmath604 be an arbitrary codeword of @xmath605 .",
    "such a codeword is of the form @xmath606 } \\pl \\c'_{[n'-1:]}$ ] for some @xmath607 and @xmath608 such that @xmath609 .",
    "the dot product @xmath610 evaluates to @xmath611 , all addition operations being performed modulo 2 .",
    "but since @xmath25 and @xmath612 , we have @xmath613 , from which we obtain @xmath614 . similarly , @xmath615 .",
    "hence , @xmath616 , since @xmath609 and @xmath602 . as @xmath604 is an arbitrary codeword of @xmath605",
    ", we have shown that @xmath617 .",
    "therefore , @xmath618 , which completes the proof . + the proof of proposition  [ 3sum_prop2 ] closely resembles that of proposition  [ 2sum_prop2 ] , so we continue to use the notation introduced in the latter proof .",
    "+ _ proof of proposition  [ 3sum_prop2 ] _ : let @xmath0 and @xmath204 be @xmath27 $ ] and @xmath589 $ ] codes , respectively , for which @xmath339 can be defined .",
    "observe that , by proposition  [ 3sum_prop1 ] and lemma  [ 3barsum_lemma ] , we have @xmath619 therefore , to prove proposition  [ 3sum_prop2 ] , it is enough to show that @xmath620 .",
    "it is easily seen that an arbitrary codeword , @xmath621 , of @xmath622 must be of the form @xmath623 } \\pl \\x'_{[n'-3:]}$ ] for some @xmath600 and @xmath601 such that @xmath624 .",
    "we will show that any such @xmath621 is also in @xmath625 .",
    "let @xmath626 be an arbitrary codeword of @xmath627 , so that it is of the form @xmath628 } \\pl \\c'_{[n'-3:]}$ ] for some @xmath607 and @xmath608 such that @xmath629 .",
    "the dot product @xmath630 evaluates to @xmath631 , all addition operations being performed modulo 2 .",
    "but since @xmath25 and @xmath612 , we have @xmath613 , from which we obtain @xmath632 .",
    "similarly , @xmath633 .",
    "hence , @xmath634 , which equals 0 since @xmath635 and @xmath636 for @xmath637 . as @xmath626 is an arbitrary codeword of @xmath627 , we have shown that @xmath638 .    therefore , @xmath620 . which completes the proof .",
    "we will only provide a sketch of the proof of theorem  [ pag_opt_thm ] , as it is a result extant in the literature ( * ? ? ? * theorem  6.5 ) .",
    "the purpose of sketching out the proof is that it outlines the polynomial - time algorithm that determines @xmath639 for a length-@xmath6 code @xmath0 from a pag family , and a cost vector @xmath560 .",
    "the proof of the theorem is by induction using the following lemma and the fact ( explained further below ) that the minimization of a linear cost function can be done in polynomial time for graphic codes .    _",
    "let @xmath276 .",
    "then the minimum in ( [ min_prob ] ) can be obtained by solving two minimization problems of the form @xmath640 and one problem of the form @xmath641 .",
    "+ _ ( b ) _",
    "let @xmath642 .",
    "then the minimum in ( [ min_prob ] ) can be obtained by solving four minimization problems of the form @xmath640 and one problem of the form @xmath641 .",
    "[ min_lemma ]    let @xmath6 , @xmath274 and @xmath275 denote the lengths of @xmath0 , @xmath9 and @xmath10 , respectively .",
    "given @xmath24 , let @xmath643 .",
    "( a )  let @xmath276 .",
    "define @xmath644 and @xmath645 as follows : @xmath646 for @xmath647 , determine @xmath648 , and a minimum - achieving codeword @xmath649 . by choice of @xmath31",
    ", we have that @xmath650 , while @xmath651 .",
    "now , define @xmath652 as follows : @xmath653 solve for @xmath654 , and find a codeword @xmath655 achieving this minimum .",
    "we claim that @xmath656 , and that a minimum - achieving codeword in @xmath0 is @xmath657 we will first show that for each @xmath25 , we have @xmath658 .",
    "pick an arbitrary @xmath25 .",
    "there exists a unique pair of codewords @xmath659 , @xmath660 such that @xmath661 , and @xmath662 .",
    "suppose that @xmath663 .",
    "we then have @xmath664 next , suppose that @xmath665 .",
    "in this case , we have @xmath666 thus , @xmath658 , as desired .",
    "it is now enough to show that @xmath667 . by definition of @xmath668 ,",
    "@xmath669 in either case , @xmath667 .",
    "( b )  let @xmath642 .",
    "note that from ( a1@xmath238)(a3@xmath238 ) in definition  [ 3barsum_def ] , it follows that the restriction of @xmath9 ( resp .",
    "@xmath10 ) onto its last ( resp .",
    "first ) three coordinates is @xmath670 .",
    "define @xmath671 , @xmath672 , as follows : @xmath673 for @xmath674 , and @xmath675 for @xmath672 , determine @xmath648 , and a minimum - achieving codeword @xmath676 . by choice of the @xmath677 s , we have that @xmath678    now , take @xmath652 to be @xmath679 solve for @xmath654 , and find a codeword @xmath655 achieving this minimum .",
    "it may be verified that @xmath656 , and that a minimum - achieving codeword in @xmath0 is @xmath680 the details of the verification are along the lines of that in part ( a ) , and are left to the reader .",
    "suppose that we have a pag code family @xmath11 , and must solve ( [ min_prob ] ) for a given length-@xmath6 code @xmath23 and cost vector @xmath20 . note that if @xmath0 can be expressed as a direct sum , @xmath681 , of codes @xmath9 and @xmath10 of lengths @xmath274 and @xmath275 , respectively , then @xmath682 where @xmath683 and @xmath684 .",
    "therefore , to show that ( [ min_prob ] ) can be solved in time polynomial in @xmath6 , it is enough to show that there is a polynomial - time algorithm in the case when @xmath0 is 2-connected .",
    "it follows from definition  [ almost_graphic_def ] that there exists a finite sub - family @xmath549 such that each 2-connected code @xmath23 has a @xmath8-homogeneous , @xmath557-unary code - decomposition tree , which can be constructed in polynomial time .",
    "so , an algorithm for solving ( [ min_prob ] ) for a 2-connected code @xmath23 would use lemma  [ min_lemma ] to recursively go down the code - decomposition tree starting from the root node , solving at most four minimization problems at each leaf of the tree .",
    "recall that each leaf of a @xmath685-unary code - decomposition tree is a code in @xmath550 .",
    "since such a tree for a length-@xmath6 code can have at most @xmath6 leaves , the algorithm for solving ( [ min_prob ] ) would run in time polynomial in @xmath6 , provided that there is a polynomial - time algorithm for solving ( [ min_prob ] ) for codes @xmath686 , _",
    "i.e. _ , graphic codes .",
    "indeed , there exists a polynomial - time algorithm for solving ( [ min_prob ] ) for graphic codes .",
    "note that the minimization problem @xmath687 over a graphic code @xmath84 is equivalent to the problem of finding the minimum - weight eulerian subgraph in the graph @xmath71 whose edges @xmath688 , @xmath566 , are given the weights @xmath689 .",
    "an eulerian subgraph of a graph is a subgraph in which each vertex has even degree .",
    "the eulerian subgraph problem can be solved as follows .",
    "given a subset @xmath690 of the vertices of @xmath71 , a _",
    "t - join _ is a set of edges @xmath90 of @xmath71 such that a vertex @xmath691 in @xmath71 has odd degree with respect to ( wrt ) @xmath90 if and only if @xmath692 .",
    "let @xmath693 be the set of edges @xmath694 , and let @xmath690 be the subset of vertices with odd degree wrt @xmath693 .",
    "define the graph @xmath695 to be the graph @xmath71 but with edge - weights @xmath696 , @xmath566 .",
    "find a minimum - weight @xmath690-join , @xmath90 , in @xmath695 .",
    "the symmetric difference @xmath697 is the required minimum - weight eulerian subgraph of @xmath71",
    ". a minimum - weight @xmath690-join can be found in polynomial time ( * ? ? ?",
    "* chapter 29 ) , and so , a minimum - weight eulerian subgraph of @xmath71 can be determined in polynomial time .",
    "we will first prove that the family , @xmath85 , of graphic codes is not asymptotically good .",
    "this is probably a `` folk '' theorem , but we could not find an explicit proof in the literature .",
    "our proof relies on the fact @xcite that for a graph @xmath698 with girth @xmath699 and average degree @xmath700 , the number of vertices satisfies the so - called _ moore bound _ : @xmath701 for our purposes , the weaker bound @xmath702 is enough , as we then have , for @xmath703 , @xmath704 where , for the sake of concreteness , @xmath705 denotes the natural logarithm .    since codewords in @xmath84 correspond to cycles in @xmath71",
    ", we see that the minimum distance of @xmath84 equals the girth @xmath699 of the graph @xmath71 . furthermore , if @xmath71 is connected , then ( as mentioned in section  [ matroid_section ] ) the rank of its vertex - edge incidence matrix is @xmath706 , and hence , @xmath707 .",
    "thus , the rate of @xmath84 is @xmath708 .",
    "consequently , if a family of graphic codes has dimension growing linearly with codelength @xmath6 , then by ( [ g_bnd ] ) their minimum distance grows as @xmath709 , which implies that graphic codes are not asymptotically good .",
    "this argument is formalized in the proof given below .",
    "the family of graphic codes is not asymptotically good .",
    "[ graphic_bad_lemma ]    we will in fact prove a stronger statement : for @xmath710 , let @xmath711 ; then , for any code @xmath712 with length @xmath713 , we have @xmath714    consider first an @xmath28 $ ] code @xmath712 with @xmath715 . without loss of generality ( wlog ) , we can assume that @xmath716 for some connected graph @xmath698 ( * ? ? ?",
    "* proposition  1.2.8 ) .",
    "therefore , @xmath717 , or equivalently , @xmath718 . furthermore , since @xmath715 , we have that @xmath719 .",
    "therefore , the average degree , @xmath720 , of @xmath71 is larger than @xmath721 , which is in turn larger than @xmath722 . hence , by ( [ g_bnd ] ) , @xmath723 the last inequality above holds when @xmath724 , which is true for @xmath715 , since @xmath725 for @xmath710 , as a simple calculation will confirm .",
    "therefore , without the assumption @xmath715 , we have @xmath726 however , it is straightforward to verify that @xmath727 for any @xmath728 , from which we obtain that for @xmath713 , @xmath729 , and ( [ dmin_bnd ] ) follows .    given an almost - graphic code family @xmath11 , let @xmath22 be the finite sub - family of codes with the properties guaranteed by definition  [ almost_graphic_def ] .",
    "wlog , we may assume that @xmath22 is minor - closed .",
    "for @xmath710 , define @xmath730 to be the least positive integer such that for all @xmath731 , @xmath732 note that since @xmath733 , such an @xmath730 does exist .",
    "now , define @xmath734    we now have the definitions needed to state the next result , which shows that codes in @xmath11 can not have both dimension and minimum distance growing linearly with codelength .",
    "it is clear that theorem  [ ag_bad_thm ] follows directly from this result .",
    "let @xmath11 be an almost - graphic family of codes .",
    "for any @xmath710 , if @xmath23 is an @xmath28 $ ] code with @xmath735 , then @xmath736 [ ag_bad_lemma ]    from the definition of @xmath737 and ( [ dmin_bnd ] ) , it is obvious that the statement of the lemma holds for all codes in @xmath550 .",
    "the proof that the statement holds for all codes in @xmath11 is by induction on codelength for a fixed @xmath710 .",
    "so , fix an @xmath710 .",
    "if @xmath738 is the smallest length of a non - trivial code in @xmath11 , then a length-@xmath738 code in @xmath11 can not be decomposed into smaller codes , and so must be in @xmath550 .",
    "therefore , the statement of the lemma holds for the base case of length-@xmath738 codes .    now , suppose that for some @xmath739 , ( [ ag_dmin_bnd ] ) holds for all codes @xmath740 of length @xmath741 and rate larger than @xmath742 .",
    "let @xmath23 be an @xmath28 $ ] code with @xmath735 .",
    "if @xmath743 for some codes @xmath9 and @xmath10 in @xmath11 , then at least one of @xmath9 and @xmath10 has rate larger than @xmath742 , and so ( [ ag_dmin_bnd ] ) holds for @xmath0 by the induction hypothesis .",
    "we may thus assume that @xmath0 is 2-connected .",
    "if @xmath744 , there is nothing to be proved .",
    "so , either @xmath327 or @xmath552 for @xmath745 as in definition  [ almost_graphic_def ] .",
    "wlog , we may take @xmath70 to be the identity permutation , so that @xmath0 is either @xmath280 or @xmath455 , for some @xmath746 $ ] code @xmath553 and some @xmath747 $ ] code @xmath748 .",
    "we consider the case @xmath276 first . by proposition  [ 2sum_prop1 ] , @xmath749 , and @xmath750 , where @xmath751 and @xmath752 .",
    "note that for @xmath195 , @xmath753 is an @xmath754 $ ] code , where @xmath755 and @xmath756 .",
    "thus , @xmath757 and @xmath758 .",
    "now , if @xmath759 for some @xmath760 , then the statement of the lemma holds for @xmath0 by the induction hypothesis .",
    "so , we are left with the situation when @xmath761 for @xmath195 .",
    "but in this case , since @xmath762 , we must have @xmath763 ; otherwise , we would have @xmath764 , which would mean that @xmath765 .",
    "note that since @xmath553 , and @xmath766 is a minor of @xmath9 , we have that @xmath767 . if @xmath768 or @xmath769 , then @xmath770 ; otherwise , @xmath766 is graphic with @xmath771 , and so , by ( [ dmin_bnd ] ) and the definition of @xmath730 , @xmath772 in any case , @xmath773 .",
    "since @xmath774 , we have that ( [ ag_dmin_bnd ] ) holds for @xmath0",
    ".    finally , we deal with the case when @xmath642 .",
    "the approach is essentially the same as that in the 2-sum case .",
    "this time , defining @xmath775 and @xmath776 , we have @xmath750 .",
    "for @xmath195 , we now find that @xmath753 is an @xmath754 $ ] code , where @xmath777 and @xmath778 .",
    "thus , @xmath758 , and via lemma  [ 3barsum_lemma ] , @xmath779 .",
    "if either @xmath780 or @xmath781 is larger than @xmath742 , then ( [ ag_dmin_bnd ] ) holds for @xmath0 by the induction hypothesis .",
    "so suppose that @xmath761 for @xmath193 .",
    "since @xmath782 , we must have @xmath783 ; otherwise , we would obtain @xmath765 . if @xmath768 or @xmath769 , then @xmath770 ; otherwise , @xmath766 is graphic with @xmath771 , and so , by ( [ dmin_bnd ] ) and the definition of @xmath730 , @xmath784 in any case , @xmath785 , and since @xmath774 , we see that ( [ ag_dmin_bnd ] ) holds for @xmath0 .",
    "the proof of the lemma is now complete .",
    "the author would like to thank jim geelen for patiently answering the author s questions pertaining to the structure theory of matroids , adrian vetta for the polynomial - time algorithm for solving the minimum - weight eulerian subgraph problem , and alexander vardy for discussions leading up to this work . finally , the author is grateful to the anonymous reviewers for suggesting several improvements to the presentation .",
    "99 n.  alon , s.  hoory and n.  linial , `` the moore bound for irregular graphs , '' _ graphs combin .",
    "_ , vol .  18 , pp .  5357 , 2002 . f.  barahona and m.  grtschel , `` on the cycle polytope of a binary matroid , '' _",
    "j.  comb .",
    "theory ser .",
    "b _ , vol .",
    "40 , pp .  4062 , 1986 .",
    "a.  barg , `` the matroid of supports of a linear code , '' _ appl .",
    "algebra engrg .  comm",
    ".  comput .",
    "_ , vol .  8 , no .  2 , pp .",
    "165172 , 1997 .",
    "berlekamp , r.j .",
    "mceliece , and h.c.a .",
    "van tilborg , `` on the inherent intractability of certain coding problems , '' _ ieee trans .",
    "theory _ , vol .",
    "it-24 , pp .  384386 , 1978 .",
    "bixby and w.h .",
    "cunningham , `` converting linear programs to network problems , '' _ math .",
    "_ , vol .  5 , pp .",
    "321357 , 1980 .",
    "bixby and d.k .",
    "wagner , `` an almost linear - time algorithm for graph realization , '' _ math .",
    "_ , vol .  13 , no .  1 ,",
    "pp .  99123 , 1988 . b.  bollobs , _ modern graph theory _",
    ", springer , new york , 1998 .",
    "bredeson and s.l .",
    "hakimi , `` decoding of graph theoretic codes , '' _ ieee trans .",
    "inform . theory _",
    "it-13 , pp .  348349 , 1967 .",
    "cameron , `` polynomial aspects of codes , matroids and permutation groups , '' lecture notes , march 2002 .",
    "cunningham , _ a combinatorial decomposition theory _ , ph.d .",
    "thesis , univ .  of waterloo , 1973 .",
    "r.  dougherty , c.  freiling and k.  zeger , `` networks , matroids , and non - shannon information inequalities , '' _ ieee trans .",
    "theory _ , vol .",
    "53 , no .  6 , pp .  19491969 , june 2007 .",
    "j.  edmonds , `` matroid intersection , '' in _ discrete optimization i _ , p.l .  hammer , e.l .",
    "johnson and b.h .",
    "korte ( eds . ) , ann .",
    "discrete math .",
    ", vol .  4 , pp .  3949 , north - holland , amsterdam , 1979 .",
    "j.  edmonds , `` paths , trees and flowers , '' _ canad .  j.  math _ , vol .",
    "17 , pp .  449467 , 1965 .",
    "j.  edmonds and e.l .",
    "johnson , `` matching , euler tours and the chinese postman , '' _ math .",
    "programming _ , vol .  5 , pp .  88124 , 1973 . j.  feldman , m.j .",
    "wainwright and d.r .",
    "karger , `` using linear programming to decode binary linear codes , '' _ ieee trans .",
    "theory _ , vol .",
    "51 , no .  3 , pp .",
    "954972 , 2005 .",
    "forney , jr .",
    ", `` coset codes ii : binary lattices and related codes , '' _ ieee trans .",
    "theory _ , vol .",
    "34 , no .  5 , pp .",
    "11521187 , sept .",
    "forney , jr .",
    ", `` dimension / length profiles and trellis complexity of linear block codes , '' _ ieee trans .  inform .",
    "theory _ , vol .",
    "40 , no .  6 , pp .",
    "17411752 , nov .",
    "forney , jr .",
    ", `` codes on graphs : normal realizations , '' _ ieee trans .  inform .",
    "theory _ , vol .",
    "47 , no .  2 , pp .",
    "520548 , feb .",
    "forney , jr .",
    ", `` codes on graphs : constraint complexity of cycle - free realizations of linear codes , '' _ ieee trans .  inform .",
    "theory _ , vol .",
    "49 , no .  7 , pp .  15971610 , july 2003 .",
    "forney , jr . and m.d .",
    "trott , `` the dynamics of group codes : state spaces , trellis diagrams and canonical encoders , '' _ ieee trans .",
    "theory _ , vol .",
    "39 , no .  5 , pp .",
    "14911513 , sept .",
    "s.  fujishige , `` an efficient pq - graph algorithm for solving the graph realization problem , '' _ j.  comput .",
    "system sci .",
    "_ , vol .  21 , pp .  6386 , 1980 . j.  geelen , b.  gerards and g.  whittle , `` branch - width and well - quasi - ordering in matroids and graphs , ''",
    "_ j.  combin .",
    "theory ser .",
    "b _ , vol .",
    "84 , pp .  270290 , 2002 .",
    "j.  geelen , b.  gerards and g.  whittle , `` towards a matroid - minor structure theory , '' to appear in _ combinatorics , complexity and chance .",
    "a tribute to dominic welsh _ ,",
    "g.  grimmett and c.  mcdiarmid , eds . , oxford university press , 2007 .",
    "available online at ` http://homepages.cwi.nl/\\simbgerards/personal/papers/ ` ` towards_welsh.pdf ` . c.  greene , `` weight enumeration and the geometry of linear codes , '' _ studia appl .",
    "_ , vol .",
    "55 , pp .  119128 , 1976 . m.  grtschel and k.  truemper , `` decomposition and optimization over cycles in binary matroids , '' _",
    "j.  combin .",
    "theory series b _ , vol .",
    "46 , pp .  306337 , 1989 .",
    "hakimi and j.g .",
    "bredeson , `` graph theoretic error - correcting codes , '' _ ieee trans .  inform .",
    "it-14 , pp .  584591 , 1968 .",
    "p.  hlinn and g.  whittle , `` matroid tree - width , '' _ europ .",
    "j.  comb .",
    "_ , vol .  27 , pp .",
    "11171128 , 2006 .",
    "a.j .  hoffman and j.b .",
    "kruskal , `` integral boundary points of convex polyhedra , '' in _ linear inequalities and related systems _ , h.w .  kahn and a.w .",
    "tucker ( eds . ) , pp .  223246 , princeton univ .",
    "press , princeton , nj , 1956 . g.b .",
    "horn and f.r .",
    "kschischang , `` on the intractability of permuting a block code to minimize trellis complexity , '' _ ieee trans .",
    "inform . theory _ , vol .",
    "42 , no .  6 , pp .",
    "20422048 , nov .",
    "a.  itai and m.  rodeh , `` finding a minimum circuit in a graph , '' _",
    "siam j.  computing _ , vol .  7 , no ,  4 , pp .",
    "413423 , 1978 .",
    "d.  jungnickel and s.a .",
    "vanstone , `` graphical codes revisited , '' _ ieee trans .  inform . theory _",
    "43 , pp .  136146 , jan .",
    "n.  kashyap , `` matroid pathwidth and code trellis complexity , '' submitted to _",
    "siam j.  discrete math .",
    "_ arxiv e - print 0705.1384 .",
    "n.  kashyap , `` on codes of bounded trellis complexity , '' to appear in _ proc .",
    "2007 ieee inform .",
    "theory workshop ( itw 2007 ) _ , lake tahoe , ca , usa , sept .  2007 . f.r .  kschischang and v.  sorokine ,",
    "`` on the trellis structure of block codes , '' _ ieee trans .  inform .",
    "theory _ , vol .",
    "41 , pp .  19241937 , nov .",
    "l.  lovasz , `` graph minor theory , '' _ bull .",
    "_ , vol .  43 , pp .",
    "7586 , jan .",
    "macwilliams and n.j.a .",
    "sloane , _ the theory of error - correcting codes _ , north - holland , amsterdam , 1977 .",
    "ntafos and s.l .",
    "hakimi , `` on the complexity of some coding problems , '' _ ieee trans .  inform .",
    "theory _ , vol .",
    "it-27 , no .  6 , pp .",
    "794796 , nov .",
    "oxley , _ matroid theory _",
    ", oxford university press , oxford , uk , 1992 . n.  robertson and p.d .",
    "seymour , `` graph minors .",
    "the disjoint paths problem , '' _ j.  combin .",
    "theory , series b _ , vol .",
    "63 , pp .  65110 , 1995 . n.  robertson and p.d .",
    "seymour , `` graph minors .",
    "wagner s conjecture , '' _",
    "j.  combin .",
    "theory , series b _ , vol .",
    "92 , pp .  325357 , 2004 .",
    "a.  schrijver , _ combinatorial optimization : polyhedra and efficiency _ , springer - verlag , berlin , 2003 .",
    "seymour , `` decomposition of regular matroids , ''",
    "_ j.  combin .",
    "theory , series b _ , vol .",
    "28 , pp .  305359 , 1980 .",
    "seymour , `` matroids and multicommodity flows , '' _ europ .",
    "j.  combin .",
    "_ , vol .  2 , pp .",
    "257290 , 1981 .",
    "p.h .  siegel and m.h .",
    "taghavi , `` adaptive linear programming decoding , '' _ proc .",
    "2006 ieee int .",
    "symp .  inform .",
    "theory ( isit 2006 ) _ , seattle , wa , pp .  13741378 ,",
    "july 2006 .",
    "k.  truemper , `` a decomposition theory for matroids .",
    "i. general results , '' _ j.  comb .",
    "theory , series b _ , vol .",
    "39 , pp .  4376 , 1985 . k.  truemper , `` a decomposition theory for matroids .",
    "decomposition of graphs , '' _",
    "j.  comb .",
    "theory , series b _ , vol .",
    "45 , pp .  259292 , 1988 . k.  truemper , `` a decomposition theory for matroids .",
    "v. testing of matrix total unimodularity , '' _",
    "j.  comb .",
    "theory , series b _ , vol .",
    "49 , pp .  241281 , 1990 . k.  truemper , _ matroid decomposition _",
    ", academic press , san diego , 1992 . w.t .",
    "tutte , `` a homotopy theorem for matroids , i , ii , '' _ trans .",
    "amer .  math .",
    "_ , vol .",
    "88 , pp .",
    "144174 , 1958 .",
    "tutte , `` matroids and graphs , '' _ trans.amer .",
    "_ , vol .  90 , pp .",
    "527552 , 1959 .",
    "tutte , `` an algorithm for determining whether a given binary matroid is graphic , '' _ proc .",
    "_ , vol .  11 , pp .",
    "905917 , 1960 .",
    "tutte , `` connectivity in matroids , '' _ canad .",
    "j.  math .",
    "_ , vol .  18 , pp",
    "13011324 , 1966 .",
    "a.  vardy , `` the intractability of computing the minimum distance of a code , '' _ ieee trans .",
    "theory _ , vol .",
    "43 , no .  6 , pp .",
    "17571766 , nov .",
    "vontobel and r.  koetter , `` on the relationship between linear programming decoding and min - sum algorithm decoding , '' _ proc .",
    "isita 2004 _ , parma , italy , pp .  991 - 996 , october 1013 , 2004 .",
    "vontobel and r.  koetter , `` graph - cover decoding and finite - length analysis of message - passing iterative decoding of ldpc codes , '' preprint submitted to _ ieee trans .",
    "theory _ , dec .",
    "arxiv e - print cs.it/0512078 .",
    "h.  whitney , `` on the abstract properties of linear dependence , '' _ amer .",
    "j.  math .",
    "_ , vol .",
    "57 , pp .",
    "509533 , 1935 ."
  ],
  "abstract_text": [
    "<S> the decomposition theory of matroids initiated by paul seymour in the 1980 s has had an enormous impact on research in matroid theory . </S>",
    "<S> this theory , when applied to matrices over the binary field , yields a powerful decomposition theory for binary linear codes . in this paper , we give an overview of this code decomposition theory , and discuss some of its implications in the context of the recently discovered formulation of maximum - likelihood ( ml ) decoding of a binary linear code over a discrete memoryless channel as a linear programming problem . </S>",
    "<S> we translate matroid - theoretic results of grtschel and truemper from the combinatorial optimization literature to give examples of non - trivial families of codes for which the ml decoding problem can be solved in time polynomial in the length of the code . </S>",
    "<S> one such family is that consisting of codes @xmath0 for which the codeword polytope is identical to the koetter - vontobel fundamental polytope derived from the entire dual code @xmath1 . </S>",
    "<S> however , we also show that such families of codes are not good in a coding - theoretic sense  either their dimension or their minimum distance must grow sub - linearly with codelength . as a consequence , we have that decoding by linear programming , when applied to good codes , can not avoid failing occasionally due to the presence of pseudocodewords . </S>"
  ]
}
{
  "article_text": [
    "model predictive control ( mpc ) is a well established method of process control that has proven to be useful in numerous industrial applications in the past decades .",
    "one of the advantages of mpc is that it can be applied to large scale systems , with a considerable number of states and inputs for which hard constraints are often required @xcite .",
    "mpc requires that the control input at each time step be calculated by the online solution of an optimization problem . as a result ,",
    "one of the drawbacks of mpc as a control algorithm is the delay introduced by the computation time that is imposed for the evaluation of functions , their first or second order derivatives , and for matrix operations , computations that are usually required for most optimization algorithms .",
    "this computational burden is also worsened when mpc is implemented for a large - scale plant of interconnected subsystems , case where the dimension of the mpc problem is multiplied by the number of subsystems . for certain industries for which the manufacturing process is slow in nature ,",
    "this computational time is not an issue .",
    "however , multi - system applications have arisen where computing the input rapidly is essential for efficiency and stability .",
    "control problems for networks of interconnected multi - agent systems such as traffic control @xcite , building anti - earthquake systems @xcite , satellite formation flight @xcite , and wind turbine farms @xcite , have received plenty of interest in recent years . due to the large number of inputs and outputs of this class of systems , distributed control",
    "is often required .",
    "efficient distributed optimization methods for solving such control problems can be found in @xcite . from a practical viewpoint ,",
    "such methods can be sped up by implementing stronger , more powerful computational hardware .",
    "recent results in @xcite however , have shown that by exploiting the special underlying structure of some mpc problems , the number of flops required for an algorithm can be reduced substantially , thus making mpc a more attractive solution for control problems where speed is essential .",
    "the authors in @xcite propose an interior point method approach for solving the mpc problem in which they use a discrete - time riccati recursion to solve the linear equations efficiently at each iterate . in @xcite",
    "the authors propose a more efficient approach to linear algebra computations w.r.t the derivation given in @xcite .",
    "computational burden can be also overcome by distributing the necessary operations amongst different agents .",
    "to this purpose , the authors in @xcite examine a distributed approach to optimal control problems and appropriate optimization methods .    in this paper , we focus on extending these recent results on the computational time required for the control action for mpc problems with a special underlying structure arising in large - scale leader - follower systems , where the computational burden is distributed amongst the comprising subsystems , thus providing a certain independence that is usually required for these subsystems . in the first part of the paper , a stability analysis for leader - follower systems is presented , based on a linear feedback law , that allows us to construct local terminal sets and cost functions in a completely distributed way . compared with the existing approaches based on an end point constraint ,",
    "we reduce the conservatism by combining the underlying structure of the system with distributed optimization .",
    "this leads to a larger region of attraction for the controller .",
    "then , we formulate a distributed mpc problem for this type of systems , using a terminal cost - terminal set approach and an efficient implementation of an interior - point algorithm using mehrothra s predictor - corrector scheme for solving the corresponding optimization problem is presented . in particular , we show how the underlying newton system can be solved in a distributed manner .",
    "the paper is organized as follows . in section [ problema ]",
    "we present the formulation of the mpc problem corresponding to systems of the leader - follower type and then we investigate the stability issue for the current system in a distributed manner via a linear feedback law using a structured lyapunov function approach . in section [ sec2 ]",
    "we focus on decomposing the terminal state constraints required for stability as a cartesian product using distributed set computations , after which we formulate the general centralized mpc problem .",
    "we then show how to restructure the original mpc problem in section [ restructurare ] as to provide computational benefits using a distributed version of an interior - point algorithm presented in section [ ipm ] .",
    "large scale systems have attracted much interest from the control systems community in recent decades . in this paper",
    ", we focus on large scale systems of leader - follower type .",
    "the mpc problem associated with leader - follower systems can be found in a number of current applications such as platoons of vehicles @xcite , which is of great interest in the development of automated highway systems @xcite , or in the renewable energy industry such as the problem of controlling a wind turbine farm @xcite .",
    "+ platoon or leader - follower systems imply that each subsystem , from the second one onwards , is influenced by the previous .",
    "we consider linear time invariant systems , for which the dynamics of the first subsystem are : @xmath0 the dynamics for the remaining @xmath1 subsystems are described by the following linear equations : @xmath2 where @xmath3 and @xmath4 are the state and input vectors of subsystem @xmath5 at time @xmath6 , @xmath7 and @xmath8 are the state and input dynamic matrices for subsystem @xmath5 , while @xmath9 and @xmath10 are the matrices for the coupling dynamics which define the influence of subsystem @xmath11 upon subsystem @xmath5 .",
    "for these systems , we consider mixed state and input constraints of the following polyhedral form : @xmath12 where @xmath13 , @xmath14 , the matrix @xmath15 has full row rank and @xmath16 .",
    "we employ stage cost functions for states and inputs of the quadratic form : @xmath17 where @xmath18 and @xmath19 are positive definite . for the stability analysis",
    ", we also express the dynamics for the entire system as follows : @xmath20 where @xmath21 and @xmath22 comprise the states and inputs of all the subsystems at time @xmath6 and the matrices @xmath23 and @xmath24 are block banded matrices comprised of @xmath25 , @xmath26 and @xmath27 , @xmath28 respectively . in a similar fashion",
    "we define the block diagonal matrices @xmath29 and @xmath30 comprised of @xmath31 and @xmath32 , respectively . in order to ensure stability for the mpc scheme that we define below",
    ", we use a terminal set - terminal cost approach @xcite .",
    "we define the following final stage cost of the form : @xmath33 where matrix @xmath34 is positive definite . in order to find @xmath35 and also a terminal set @xmath36 we search for a linear feedback law @xmath37 , such that the system @xmath38 satisfies the following three properties",
    "@xcite :    1 .",
    "@xmath39 2 .",
    "@xmath40 , @xmath41 3 .",
    "@xmath42 satisfies the following property :    @xmath43    the centralized mpc scheme for the leader - follower system described by dynamics - based on a terminal set - terminal cost approach , given an initial state @xmath44 and prediction horizon @xmath45 , is formulated as follows : @xmath46 it is a well - known result @xcite that the above mpc scheme , under assumptions a.1-a.3 , stabilizes the system , with the optimal value of problem , @xmath47 , as a lyapunov function . keeping in line with the distributed nature of our system , the control law @xmath48 , the final stage cost @xmath42 and the terminal constraint set @xmath36 need to be computed locally . in the following sections we develop a distributed synthesis procedure under such structural constraints .      for a locally computed @xmath48 ,",
    "we employ distributed control laws @xmath49 for each subsystem , with @xmath50 and the resulting control law for the entire system will then be @xmath51 , where the matrix @xmath52 is block - diagonal .",
    "for the terminal stage cost , we define @xmath53 , where terminal stage costs for each subsystem are of the following quadratic form : @xmath54 where the matrix @xmath55 is positive definite , such that @xmath56 .    due to the block - diagonal structure of matrices @xmath35",
    ", @xmath29 and @xmath30 , we can rewrite equivalently as the following inequality : @xmath57 where the left hand side is a sum of local functions @xmath58 that have the following form : @xmath59 where @xmath60 , @xmath61 and matrices @xmath62 are of the following form : @xmath63",
    "we can ensure inequality imposing the following distributed structure ( see also @xcite for a similar approach ) : @xmath64 such that : @xmath65 we consider that the functions @xmath66 do not necessarily take negative values and have the following quadratic form : @xmath67 where the matrices @xmath68 are symmetric . clearly , @xmath69 is also quadratic function and thus can be written as @xmath70 , for an appropriate matrix @xmath71 defined below .",
    "we now define the following optimization problem : @xmath72 where @xmath73 refer to the matrix inequalities and and the matrix @xmath71 has the following block tridiagonal structure : @xmath74 it is straightforward to see that if has an optimal value @xmath75 , ensuring that @xmath76 and subsequently holds , then is satisfied .",
    "note that we do not require that matrices @xmath77 to be negative semi - definite . on the contrary , positive or indefinite",
    "matrices allow local terminal costs to increase as long as the global cost still decrease .",
    "this approach reduces conservatism in deriving the matrices @xmath78 and @xmath79 . however , problem is in a form that can not be solved efficiently since it is not a convex problem .",
    "subsequently , we show that can be expressed as a sparse sdp that can be solved distributively . to this goal",
    ", we employ the following linearization @xcite : @xmath80 we also define the following matrices in order to make constraints of the optimization problem in the following theorem more compact notationally : @xmath81    note that the linearizations have been employed under the assumption that all the subsystems have the same dimension for the states , i.e. @xmath82 for all @xmath83 .    if the following sdp @xmath84 where @xmath85 has the same structure as @xmath71 , has a negative optimal value @xmath86 , then holds .    from",
    "we observe that @xmath87 and @xmath88 , which in turn implies : @xmath89 by adding @xmath90 to the previous inequalities , we get : @xmath91 for @xmath92 , using and the equality constraints @xmath93 and by applying the schur complement to we obtain : @xmath94 which is equivalent to if we take : @xmath95 to transform inequality into a linear matrix inequality of type , we use the same linearizations and the proof follows similar steps as those previously presented . as a result , the sdp is equivalent to problem , and for a negative optimal value @xmath96 , is satisfied .",
    "note that the sdp problem - can be solved offline either using a sparse sdp solver or some distributed optimization algorithm @xcite .",
    "since we have imposed a diagonal structure on the controller @xmath52 , it follows that the system matrix @xmath97 has a block bidiagonal structure . if the optimal solution @xmath96 of the sdp is negative , then the matrix @xmath97 is schur ( all the eigenvalues are strict inside the unit circle ) .",
    "it follows that all the matrices @xmath98 are schur .      to complete the stability analysis for system , which implies properties a.1 - a.3",
    ", we need to complete the design procedure by the computation of a terminal set @xmath99 , defined locally ( as a cartesian product ) @xmath100 and equipped with invariance properties .",
    "first let us define the set of _ admissible states _ associated to the constraints and the specific linear controller @xmath101 : @xmath102 leading via the cartesian product to a set in @xmath103 : @xmath104    [ asum ] the origin is assumed to be an interior point of the set @xmath105 .",
    "we introduce the following formal definition of _ positive invariance _ in view of its use in the practical construction of the terminal set @xmath106 .",
    "a set @xmath107 is called positive invariant for system if @xmath108 it holds that @xmath109 for all @xmath110 .    as a standard approach in the mpc design @xcite ,",
    "the terminal set @xmath111 needs to be positive invariant for the nominal linear time - invaraint dynamics .",
    "this is a standard problem in set - theoretic control theory and there are a number of ways in which can be computed ( see e.g @xcite ) . due to the distributed nature of our system , such a general terminal constraint set can not be used due to the introduction of coupling constraints between the states of the subsystems .",
    "we need to explore the possibility of finding a terminal constraint set , which preserves the structure of a cartesian product : @xmath112 this will further enable a distributed use of the terminal constraint sets @xmath113 for each of the subsystems .",
    "is worth mentioning that for general systems the construction of a terminal set in the form given above can be cumbersome in distributed settings ( see e.g. @xcite for such a construction ) .",
    "however , for a system @xmath114 , where @xmath115 has a special block bidiagonal structure and the admissible set is expressed as @xmath116 , the computation of such an invariant set @xmath117 can be simplified by exploiting these structural properties .    without loss of generality",
    "the matrix @xmath115 will be considered to be of the following form : @xmath118 i.e block lower - bidiagonal .",
    "the developments in subsection [ sec1 ] point to the construction of a distributed linear controller which allow us to assume the stability of the unconstrained local closed - loop system @xmath119 around the origin . by the block lower - bidiagonal structure",
    "it follows that the matrix @xmath115 is schur ( i.e. @xmath120 ) and consequently through the block lower - bidiagonal form of @xmath115 , all the matrices @xmath121 are also schur , for all @xmath122 .",
    "the dynamics for the comprising subsystems are : @xmath123      by taking into account that the first subsystem is stable and its dynamics are not perturbed by the other subsystems , the computation of @xmath125 as a positive invariant set with respect to can be done easily through standard methods for lti nominal dynamics available in @xcite .",
    "we note also that the boundedness of the set @xmath126 will ensure boundedness properties for the set @xmath124 .",
    "[ lti_pi ] if @xmath127 is invariant with respect to and @xmath128 then @xmath129 is invariant and @xmath130 for any scalar @xmath131 .",
    "more than that , if @xmath132 , then @xmath133 .      for the subsystems",
    "@xmath134 we require a different treatment . if we denote @xmath135 , the dynamics for the remaining subsystems can be considered as : @xmath136 where @xmath137 can now be viewed as an unknown disturbance for this particular subsystem , where @xmath137 is bounded , i.e @xmath138 is in a set @xmath139 , we have @xmath140 , and by taking into account that @xmath141 is positive invariant , it can observed that @xmath142 is bounded , i.e @xmath143 , where @xmath144 . ] .",
    "we denote by @xmath145 the sequence @xmath146 of disturbances from the admissible set @xmath147 .",
    "[ robust1 ] the set @xmath148 is a robust positive invariant set for a system @xmath149 , if starting from @xmath150 , the evolution of the system remains in @xmath150 for all @xmath151 .",
    "we observe that @xmath113 can now be computed as a robust positive invariant set ( rpi ) for the subsystem with the index @xmath152 , by exploiting the contractiveness properties of @xmath121 and the existence of explicit bounds on @xmath137 .",
    "the practical construction of such rpi sets is standard in the literature , see for example the procedures in @xcite , @xcite , @xcite . in the following such a constructive procedure",
    "will be denoted by @xmath153 .",
    "let @xmath154 be an invariant set with respect to , having the origin as interior point .",
    "there always exists a scalar @xmath132 such that @xmath155 preserve the invariance properties and additionally @xmath156 .",
    "the proof is an immediate application of the remark [ lti_pi ] and the scaling properties of the rpi sets detailed in @xcite .    with these ( robust ) positive invariance and constraint satisfaction properties",
    "we are able to propose a constructive procedure for @xmath113 in a iterative manner , starting from the first subsystem and leading to an invariant set in @xmath157 , as presented in the following algorithm :    1 .",
    "compute @xmath141 2 .   for = @xmath158 = = + 1 .",
    "compute @xmath159 ; + 2 .",
    "compute @xmath160 ; 3 .   find @xmath161 such that @xmath162    since for the leader - follower systems described in this paper the matrix @xmath97 is block lower - bidiagonal as well , we can use the procedure described above to compute a terminal set of the form @xmath163 that satisfies the properties a.1a.3 .",
    "note that the distributed mpc controller presented below results in a larger region of attraction compared to other mpc schemes based on an end point constraint @xcite .",
    "an additional novelty of our approach consists in the fact that all the computations for the terminal set and cost can be carried out in a completely distributed way .",
    "note that this strategy for constructing sets @xmath113 can also be extended to the case where @xmath115 is block lower triangular , i.e subsystem @xmath164 is affected by subsystems @xmath165 . in this case , the sets @xmath166 would be constructed as @xmath167 , where by @xmath168 we denote the minkowski sum : @xmath169 and @xmath170 , @xmath171 .",
    "+ we can now reformulate the centralized mpc problem for the entire system as following : @xmath172 where we assume that the terminal sets @xmath113 constructed previously are polyhedra described by @xmath173 , with @xmath174 .",
    "we now propose to reformulate problem as to obtain a more suitable structure .",
    "we define the intermediary stage variables for subsystem @xmath5 as : @xmath175 ^t \\in { \\mathbb{r}}^{{\\mathbf}{n}_i } , \\nonumber\\ ] ] where @xmath176 and @xmath177 .",
    "next , we define the general decision variable @xmath178 for as follows : @xmath179^t , \\nonumber\\ ] ] where @xmath180 and @xmath181^t .",
    "\\nonumber\\ ] ]    now , in accordance with the general decision variable as defined above and in order to create a more compact and ordered final structure , we need to define the following matrices : @xmath182 where @xmath183 has @xmath184 @xmath185 blocks in its diagonal . using the intermediary stage variable we can rewrite the equality constraints in for subsystem @xmath5 as : @xmath186 we now recast as : @xmath187 where @xmath188 is @xmath189 , with @xmath190 .",
    "we have included the equality constraints for each subsystem in in @xmath191 , where @xmath192 and @xmath193 are the following : @xmath194 @xmath195 in the matrices @xmath196 , for @xmath190 , have the following structure : @xmath197 whilst the matrices @xmath198 , for @xmath199 , have the following structure : @xmath200 the inequality constraints in have been recast as @xmath201 , where @xmath202 , with @xmath203 and @xmath204 have the following structure : @xmath205^t , \\nonumber\\ ] ] where @xmath206 ^t   , \\nonumber\\ ] ] and @xmath207 whose matrix blocks @xmath208 are : @xmath209",
    "primal - dual interior point methods are very efficient optimization methods which employ the karush - kuhn - tucker ( kkt ) conditions , that are both necessary and sufficient for achieving optimality for a convex optimization problem .",
    "we intend to use a primal - dual interior point algorithm for problem , which uses mehrothra s predictor - corrector scheme @xcite .",
    "the kkt optimality conditions which result from are : @xmath210 where @xmath211 are slack variables , @xmath212 and @xmath213 are the lagrange multipliers and @xmath214 , @xmath215 are diagonal matrices formed from the slack variables and respective multipliers .",
    "these conditions lead to the following newton system ( see @xcite for more details ) : @xmath216 we can eliminate @xmath217 by using @xmath218 . furthermore , by reducing @xmath219 , we obtain the following system : @xmath220 where @xmath221 next , we form the schur complement of the matrix in so as to obtain the final system of equations : @xmath222    solving would normally employ the computation of @xmath223 , which may appear to be overwhelming given the large dimensions of @xmath223 and the fact that it requires an inversion of @xmath224 .",
    "however , due to the way in which matrix @xmath223 is formed in , we show that we can compute its cholesky factorization in an efficient and distributed manner , similar to the one found in @xcite for one linear system .",
    "the matrix @xmath225 has a block - diagonal structure @xmath226 , where the blocks @xmath227 are also block diagonal , with their first block of size @xmath228 , the following @xmath184 blocks of size @xmath229 and the final block of size @xmath230 .",
    "now , it can be observed that resulting matrix @xmath223 has the following block - tridiagonal structure : @xmath231 where the matrix blocks are : @xmath232    first , we show how to compute efficiently in a distributed fashion the matrix @xmath223 .",
    "note that inverting the block components of @xmath224 and then forming the block components of @xmath223 would be very inefficient .",
    "however , if we form the cholesky factorization of @xmath233 we get : @xmath234 where @xmath235 are also block diagonal , so that the block components of @xmath223 are : @xmath236    the most efficient computation of @xmath237 can be done by solving the following systems of matrix equations , where the matrices @xmath238 , with @xmath239 , are the diagonal elements of @xmath240 : @xmath241    equations  can be efficiently solved by matrix forward substitution , due to the lower triangular form of @xmath238",
    ". the resulting matrix will take the following form : @xmath242 to obtain @xmath243 we solve the following series of matrix equations , by matrix forward substitution , considering the dense nature of @xmath28 and @xmath244 : @xmath245 where @xmath246 are the diagonal elements of @xmath247 .",
    "the resulting @xmath243 matrices will have a block - diagonal structure .",
    "second , the resulting structure of the cholesky factorization of @xmath248 is as follows : @xmath249 where @xmath250 and @xmath251 .",
    "the block components @xmath252 and @xmath253 can be obtained from the following : @xmath254    note that the matrices @xmath255 have a block tridiagonal structure , but @xmath253 are usually dense so that there is no special structure in the terms @xmath256 .",
    "therefore , the cholesky factorization of these matrices is computationally demanding .",
    "the most important aspect of the algorithm previously presented is that it can be implemented in a distributed manner , between the @xmath257 subsystems .",
    "the cholesky factorization of @xmath223 clearly dominates the system of equations when it comes to computing cost . by computing the matrices @xmath258 and @xmath243 , the inversion of @xmath224",
    "can be avoided , and they can further be used in and to calculate the respective residuals .",
    "the factorization of @xmath223 is also the most complex when it comes to the communication between subsystems , requiring the back and forth transmission of matrices between subsystems .",
    "also , due to the structure of @xmath223 , the factorization can not be done in parallel and is achieved in a sequential manner . for subsystem @xmath5 , with @xmath259",
    "the following steps are required for obtaining @xmath252 and @xmath253 :    1 .",
    "compute @xmath260 2 .",
    "send @xmath240 to subsystem @xmath261 3 .",
    "receive @xmath247 from subsystem @xmath11 4 .",
    "compute @xmath262 : solve to 5 .   send @xmath262 to subsystem @xmath261 6 .",
    "compute @xmath243 : solve and 7 .",
    "compute @xmath255 , receive @xmath263 from subsystem @xmath11 8 .",
    "compute @xmath264 , receive @xmath265 from subsystem @xmath11 9 .",
    "compute @xmath253 from 10 .",
    "compute @xmath252 from , send @xmath266 to subsystem @xmath5    the number of flops for computing the cholesky factorization of @xmath223 by each subsystem are provided in table [ tabel1 ] : +    . [ cols=\"^,^ \" , ]     [ tabel1 ]     + it can be observed that the matrices transmitted back and forth are very sparse , with a known block structure such that the only data required to be transmitted are these comprising blocks .",
    "also , these blocks are transmitted only to neighboring subsystems , such that the transmission of data is localized .",
    "note that the cost of computing matrices @xmath252 and @xmath253 is cubic in @xmath45 but linear in @xmath257 overall , given the choice of @xmath267 .",
    "also , computations can be done sequentially and exchange of information is only between neighbors . if we would rearrange @xmath267 by the prediction horizon , instead of by subsystems , then the dominating cost for computing these matrices would be linear in @xmath45 overall and cubic in @xmath257 locally , i.e of order @xmath268 for @xmath252 .",
    "however , this would imply that every subsystem has knowledge of the dynamics of all other subsystems , and as a result computations would require all - to - all transmission of data between subsystems .",
    "thus , the efficient choice of @xmath267 given a physical leader - follower system involves the imposed prediction horizon @xmath45 , the number of the subsystems @xmath257 and possible transmission limitations between subsystems .",
    "in this paper we have showed that by restructuring certain mpc problems for large - scale systems we can reduce the computational cost of implementing an interior point algorithm foe solving such problems . an analysis for obtaining a stabilizing linear control law from a distributed viewpoint has been made . by combining several recent results ,",
    "we have proved that the online computation of mpc control laws for some special classes of large scale systems can be carried out with increased speed through a reduction of the number of required flops .",
    "this , in combination with ever - increasing distributed computing power that can be used for distributed computation of an mpc law suggests us that mpc can be used now in many large - scale applications where it has not been considered applicable before .",
    "* acknowledgements : * the research leading to these results has received funding from : the european union , seventh framework programme ( fp7/20072013 ) embocon under grant agreement no 248940 ; cncs - uefiscdi",
    "( project te , no .",
    "19/11.08.2010 ) ; ancs ( project pn ii , no .",
    "80eu/2010 ) ; sectoral operational programme human resources development 2007 - 2013 of the romanian ministry of labor , family and social protection through the financial agreements posdru/89/1.5/s/62557 .",
    "a. domahidi , a. u. zgraggen , m. n. zeilinger , m. morari , c. n. jones , _ efficient interior point methods for multistage problems arising in receding horizon control _ , in the proceedings of american control conference , 2012 .",
    "s. v. rakovic , e. c. kerrigan , k. i. kouramas , d. q. mayne , _ invariant approximations of robustly positively invariant sets for constrained linear discrete - time systems subject to bounded disturbances _ , department of engineering , university of cambridge , technical report , 2004 .",
    "jerez , g.a .",
    "constantinides , e.c .",
    "kerrigan , _ an fpga implementation of a sparse quadratic programming solver for constrained predictive control _",
    ", in proceedings of acm symposium on field programmable gate arrays , 2011 .",
    "e. g. gilbert , k. t tan , _ linear systems with state and control constraints : the theory of and application of maximal output admissible sets _",
    ", ieee transactions on automatic control , ac-36 ( 9 ) , 1008 - 1020 , 1991 .",
    "j. l. jerez , k.v .",
    "ling , g. a. constantinides , e. c. kerrigan , _ model predictive control for deeply pipelined field - programmable gate array implementation : algorithms and circuitry _ , iet control theory and applications , 2011 .",
    "e.g. gilbert and k.t .",
    "tan , _ linear systems with state and control constraints : the theory and application of maximal output admissible sets _ ,",
    "ieee transaction on automatic control , 36 , 10081020 , 1991 .",
    "i. necoara , i. dumitrache , j.a.k .",
    "suykens , _ smoothing techniques - based distributed model predictive control algorithms for networks _ , r. sipahi et.al .",
    "( eds . ) , time delay systems : methods , applications and new trends , lncs , springer , 423 , 2012 .",
    "i. necoara , d. doan , j. a. k. suykens , _ application of the proximal center decomposition method to distributed model predictive control _ , in the proceedings of the conference on decision and control , 2900 - 2905 , 2008 ."
  ],
  "abstract_text": [
    "<S> standard model predictive control strategies imply the online computation of control inputs at each sampling instance , which traditionally limits this type of control scheme to systems with slow dynamics . </S>",
    "<S> this paper focuses on distributed model predictive control for large - scale systems comprised of interacting linear subsystems , where the online computations required for the control input can be distributed amongst them . </S>",
    "<S> a model predictive controller based on a distributed interior point method is derived , for which every subsystem in the network can compute stabilizing control inputs using distributed computations . </S>",
    "<S> we introduce local terminal sets and cost functions , which together satisfy distributed invariance conditions for the whole system , that guarantees stability of the closed - loop interconnected system . </S>",
    "<S> we show that the synthesis of both terminal sets and terminal cost functions can be done in a distributed framework . </S>"
  ]
}
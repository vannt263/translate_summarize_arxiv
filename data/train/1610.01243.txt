{
  "article_text": [
    "in this paper , we introduce the problem of constructing in - block controllable ( ibc ) regions for affine systems . in particular , we study the construction of regions in the state space of affine systems such that all the states in the interior of the region are mutually accessible through the region s interior by applying uniformly bounded control inputs .",
    "we then use the proposed theoretical results to build safe speed profiles for several classes of robotic systems , including fully - actuated robot arms , ground robots with acceleration limits , and unmanned aerial vehicles ( uavs ) .    with the rapidly increasing desire for building the next generation of engineering systems that can safely interact with each other , their environment and possibly non - professional humans ( e.g. , self - driving cars or assistive robots )",
    ", there is an urgent need for developing controller design methods that consider and obey to all given safety constraints of the systems even in the transient period .",
    "hence , we set our goal to provide the mathematical foundations for controller design under safety constraints .",
    "there are two common ways for dealing with safety constraints in industrial control systems .",
    "first , typically , given safety constraints are not explicitly considered in the controller design phase but indirectly accounted for when manually tuning the controller parameters on the real system ( e.g. , pid controller design ) .",
    "usually , an emergency system is added to the controller to shut down the industrial system in case of constraint violation ( e.g. , a robotic arm moving into an obstacle ) . however , shutting down the system is not possible in all applications , and considering the safety constraints in the design phase will prevent system damage , unnecessary system downtime , and therefore save money and time .",
    "second , predictive / optimal controllers have received special interest for decades since they optimize the system s behavior , while respecting given , hard safety constraints @xcite .",
    "this is typically carried out by solving an online optimization problem within each sampling interval .",
    "such predictive controllers have been successful in practice because of their ability to explicitly consider system constraints @xcite .",
    "nevertheless , there are many fundamental questions in the area of controller design under safety constraints that still require further studies .",
    "for instance , suppose that we have a wheeled robot moving on a bounded table , with additional limits on the robot s speed .",
    "using kalman s controllability notion @xcite , we can not even answer the simple question whether the robot can reach , starting from any initial position and speed , any final position and speed while respecting the safety constraint of staying on the table and using uniformly bounded input force ?",
    "this illustrates the urgent need for finding checkable conditions that define when we can fully control our system within given safety constraints .",
    "hence , we recently introduced the study of in - block controllability ( ibc ) , which formalizes kalman s controllability under given safety state constraints @xcite .",
    "the notion of ibc can , however , be motivated from several different perspectives . in @xcite",
    ", we showed that if one constructs a special partition of the state space of piecewise affine ( pwa ) hybrid systems such that each region of the partition satisfies the ibc property , then one can systematically study controllability and build hierarchical structures for the pwa hybrid systems .",
    "we note that controllability of pwa hybrid systems is a challenging open problem to date @xcite .",
    "also , building hierarchical structures of pwa hybrid systems allows us to design controllers that achieve temporal logic statements at the higher - levels of the hierarchy , and then to systematically realize these high - level control decisions at the lower levels . in @xcite ,",
    "the ibc notion was also used to build special covers of the state space of nonlinear systems , in which each region satisfies the ibc property , and then these ibc covers were used to build hierarchical structures and to systematically study approximate mutual accessibility problems of nonlinear systems under safety constraints .",
    "moreover , the ibc notion is useful in the context of optimal control problems . in particular ,",
    "the ibc conditions ensure that all the optimal accessibility problems within given safety constraints are feasible .",
    "furthermore , in this paper we use the ibc results to build safe speed profiles for different classes of robotic systems .",
    "we then , for example , utilize these safe speed profiles to achieve static / dynamic obstacle avoidance .",
    "we also use the speed profiles to determine the feasibility of given reference trajectories , where we determine whether these reference trajectories are reachable from all other states in the safe position - speed region via trajectories that completely lie in the safe region and with inputs within the actuation limits .    the notion of ibc",
    "was first introduced for finite state machines in @xcite .",
    "the notion was then extended to nonlinear systems on closed sets in @xcite , and to automata in @xcite . in these papers , the notion was used to build hierarchical control structures of the systems . however , these papers do not study conditions for when the ibc property holds . in @xcite ,",
    "three necessary and sufficient conditions were provided for ibc of affine systems on given polytopes .",
    "the conditions require solving linear programming ( lp ) problems at the vertices of the given polytope . in @xcite ,",
    "the ibc conditions were extended to controlled switched linear systems having both continuous inputs and on / off control switches . in @xcite ,",
    "the notion of ibc was relaxed to the case where one can distinguish between soft and hard safety constraints .",
    "similar controllability studies to ibc can be found in @xcite , @xcite , @xcite , @xcite . in @xcite , @xcite ,",
    "controllability of linear systems under input constraints was studied , while in @xcite controllability of continuous - time linear systems under state and/or input constraints was studied under the assumption that the system transfer matrix is right invertible . under the same assumption ,",
    "the study of @xcite was extended in @xcite to null controllability of discrete - time linear systems under constraints .",
    "compared to the well - known controlled invariance problem @xcite , which requires that all the state trajectories initiated in a set to remain in the set for all future time , ibc has the additional requirement of achieving mutual accessibility .",
    "this is a basic , additional property that enables us to use ibc as a basis for building hierarchical control structures and for studying constrained mutual accessibility problems for pwa hybrid systems and nonlinear systems @xcite .    in many practical scenarios , however",
    ", it may happen that the given affine system is not ibc with respect to ( w.r.t . )",
    "the given polytope , representing the intersection of the given safety constraints . for this case , it would be important from a practical perspective to find the largest ibc region inside the given region , formed by the intersection of the safety constraints .",
    "the ibc region then represents a large , safe region within which we can fully control our system .",
    "also , constructing ibc regions is an essential problem for building the partitions / covers in @xcite , @xcite , respectively , so that one can make use of the hierarchical control results of these papers .",
    "this motivates us to study the problem of constructing ibc regions in this paper .    in this paper , we first show the difficulties that are faced when trying to directly use the available results for checking ibc of affine systems on given polytopes to construct ibc regions . in particular",
    ", while checking the ibc property requires solving lp problems , building polytopes for which the ibc property holds generally requires solving bilinear matrix inequalities ( bmis ) , which is np hard ( see @xcite ) .",
    "second , we explore the geometry of the problem , and try to provide a computationally efficient method for constructing ibc polytopic regions , which avoids solving bmis .",
    "our geometric approach was first introduced in @xcite for a special class of affine systems , namely hypersurface systems for which @xmath0 , where @xmath1 is the number of inputs and @xmath2 is the system dimension . in this paper , we extend the geometric study of @xcite to a more general geometric case that can be achieved for systems with @xmath3 .",
    "we also provide a computationally efficient algorithm for constructing ibc polytopic regions , and prove its soundness . for our geometric study of ibc , we utilize some geometric tools that are used for the study of the control - to - facet problem , also called the reach control problems ( rcp ) on polytopes , @xcite .",
    "third , we show how our proposed algorithm for constructing ibc regions can be useful for constructing safe speed profiles for different classes of robotic systems that include fully - actuated robots , ground robots modeled as unicycles with acceleration limits and uavs .",
    "that is , we construct for each position of the robot a corresponding safe speed range .",
    "the proposed safe speed profiles are useful for robot speed scheduling algorithms @xcite . in particular ,",
    "if the speed scheduling algorithms limit the selected speeds to the safe speed profiles provided by our algorithm , then safety of the robot can be always achieved on the given constrained position space by applying a feasible input within the robot s actuation limits .",
    "we also show in this paper how the proposed safe speed profiles can be used to achieve static / dynamic obstacle avoidance .",
    "compared to the safe speed profiles built by intuition or by the controlled invariance property , one advantage of the proposed safe speed profiles is that they guarantee full controllability of the robots on the position - speed regions constructed using our proposed algorithm .",
    "therefore , there is no loss of generality in restricting the robots to operate in these constructed safe regions . as another advantage",
    ", the proposed algorithm ensures that any state in the constructed safe position - speed region is reachable from all other states in the safe region with trajectories that completely lie in the safe region and using a feasible input within the robot s actuation limits .",
    "thus , in planning reference trajectories for robots , it would be important to select reference points inside the proposed safe position - speed regions to ensure that they are reachable within the given safety state constraints and under the robot s actuation limits .",
    "compared to the feasibility study of @xcite , we hereby take the safety position / speed constraints into consideration in determining the feasibility of given references , and not only the robot actuation limits .. finally , in this paper we provide several experimental results on uavs to verify the effectiveness of our proposed safe speed profiles .",
    "the paper is organized as follows .",
    "section [ sec : back ] provides some geometric background .",
    "section [ sec : ibc ] reviews ibc . in section",
    "[ sec : construct ] , we introduce the problem of constructing ibc regions , provide a computationally efficient algorithm for solving the problem , and prove its soundness . in section",
    "[ sec : rob ] , we provide applications of the proposed algorithm to several classes of robotic systems .",
    "we summarize our results in section [ sec : con ] . a brief preliminary version of the paper appeared in @xcite .",
    "here we include complete proofs , additional discussions and remarks , simulation results for fully - actuated and ground robots , and a novel , detailed subsection on uavs , which includes experimental results .",
    "notation : let @xmath4 be a set .",
    "the closure of @xmath5 is denoted by @xmath6 , the interior by @xmath7 , and the boundary by @xmath8 . for vectors",
    "@xmath9 , @xmath10 denotes the inner product of the two vectors .",
    "the notation @xmath11 denotes the euclidean norm of @xmath12 .",
    "the notation @xmath13 denotes the convex hull of a set of points @xmath14 .",
    "we present some geometric background relevant for the remainder of the paper , see @xcite .",
    "a set @xmath15 is _ affine _ if @xmath16 for all @xmath17 and all @xmath18 .",
    "an example are dashed , infinite lines @xmath19 , @xmath20 in figure [ fig_notation ] . if the affine set passes through the origin , then it forms a subspace of @xmath21 .",
    "for example , @xmath20 is a subspace of @xmath22 . for subspaces",
    "@xmath23 , @xmath24 .",
    "the set @xmath25 is also a subspace .",
    "the _ affine hull _ of a set @xmath5 , denoted by @xmath26 , is the smallest affine set containing @xmath5 .",
    "we mean by a dimension of a set @xmath5 its affine dimension , which is the dimension of @xmath26 .",
    "for instance , in figure [ fig_notation ] , the dimension of @xmath27 is the dimension of the affine set @xmath19 , which is one .",
    "hyperplane _ is an @xmath28-dimensional affine set in @xmath21 , dividing @xmath21 into two open half - spaces ( e.g. , @xmath19 in @xmath22 ) .",
    "a finite set of vectors @xmath29 is called _ affinely independent _ if the unique solution to @xmath30 and @xmath31 is @xmath32 for all @xmath33 .",
    "affinely independent vectors do not all lie in a common hyperplane . in figure",
    "[ fig_notation ] , the points @xmath34 are affinely independent , while the points @xmath35 are not",
    "@xmath2-dimensional simplex _ is the convex hull of @xmath36 affinely independent points in @xmath21 ( e.g. , the triangles @xmath37 and @xmath38 in @xmath22 ) .",
    "a simplex is a generalization of a triangle in 2d to arbitrary dimensions .",
    "@xmath2-dimensional polytope _ is the convex hull of a finite set of points in @xmath21 whose affine hull has dimension @xmath2 . let @xmath39 be a set of points in @xmath21 , where @xmath40 , and suppose that @xmath39 contains ( at least ) @xmath36 affinely independent points . then @xmath41 is an @xmath2-dimensional polytope .",
    "an example is the polytope @xmath42 in figure [ fig_notation ] .",
    "a simplex is a special case of a polytope in which @xmath43 .",
    "a _ face _ of @xmath44 is any intersection of @xmath44 with a closed half - space such that none of the interior points of @xmath44 lie on the boundary of the half - space .",
    "the polytope @xmath44 and the empty set are considered trivial faces , and all other faces are called _ proper faces_. a _ facet _ of @xmath44 is an @xmath28-dimensional face of @xmath44 .",
    "a polytope is _ simplicial _ if all its facets are simplices .",
    "we denote the facets of @xmath44 by @xmath45 , and we use @xmath46 to denote the unit normal vector to @xmath47 pointing outside of @xmath44 .",
    "figure [ fig_notation ] illustrates this concept for @xmath48 . in section [ sec : construct ] , we use triangulations of polytopes , and so we review its definition .",
    "[ @xcite ] a _ triangulation",
    "_ @xmath49 of an @xmath2-dimensional polytope @xmath44 is a finite collection of @xmath2-dimensional simplices @xmath50 such that :    \\(i ) @xmath51 ;    \\(ii ) for all @xmath52 with @xmath53 , the intersection @xmath54 is either empty or a common face of @xmath55 and @xmath56 .",
    "for example , @xmath57 is a triangulation of the polytope @xmath44 in figure [ fig_notation ] .",
    "in this section , we review in - block controllability ( ibc ) .",
    "consider the affine control system : @xmath58 where @xmath59 , @xmath60 , @xmath61 , and @xmath62 . throughout the paper , we assume that the input @xmath63 is measurable and bounded on any compact time interval to ensure the existence and uniqueness of the solutions of @xcite .",
    "let @xmath64 be the trajectory of under a control law @xmath65 , with initial condition @xmath66 and evaluated at time @xmath67 .",
    "we first review the ibc notion ( after @xcite ) .",
    "[ prob0 ] consider the affine control system defined on an @xmath2-dimensional polytope @xmath44 .",
    "we say that is _ in - block controllable ( ibc ) _ w.r.t .",
    "@xmath44 if there exists an @xmath68 such that for all @xmath69 , there exist @xmath70 and a control input @xmath65 defined on @xmath71 $ ] such that ( i ) @xmath72 and @xmath73 for all @xmath74 $ ] , and ( ii ) @xmath75 .    that is , the system is ibc w.r.t .",
    "the polytope @xmath44 if all the states in the interior of @xmath44 are mutually accessible through its interior using uniformly bounded inputs .",
    "we review below the main result on ibc . in @xcite",
    ", it was shown that for studying ibc we can always apply a coordinate shift , and assume without loss of generality ( w.l.o.g . ) that we study a linear system @xmath76 on a new polytope @xmath77 with @xmath78 .",
    "for notational convenience and w.l.o.g . , we will call @xmath77 , @xmath79 , and @xmath80 just @xmath44 , @xmath12 , and @xmath65 , respectively , in the remainder of the paper .",
    "let @xmath81 be the set of indices of the facets of @xmath44 , and @xmath82 be the set of indices of the facets of @xmath44 in which @xmath12 is a point .",
    "we define the closed , convex _ tangent cone _ to @xmath44 at @xmath12 as @xmath83 where @xmath84 is the unit normal vector to @xmath85 pointing outside @xmath44 .",
    "[ @xcite ] [ thm : main_ibc ] consider the system defined on an @xmath2-dimensional simplicial polytope @xmath44 satisfying @xmath86 .",
    "the system is ibc w.r.t .",
    "@xmath44 if and only if    a.   @xmath87 is controllable ; b.   the so - called invariance conditions of @xmath44 are solvable ( that is , for each vertex @xmath88 , there exists @xmath89 such that @xmath90 ) ; c.   the so - called backward invariance conditions of @xmath44 are solvable ( that is , for each vertex @xmath88 , there exists @xmath89 such that @xmath91 ) .    in @xcite",
    ", it was shown that conditions ( i)-(iii ) of theorem  [ thm : main_ibc ] are also necessary for ibc on non - simplicial polytopes . for given polytopes , both the invariance conditions and the backward invariance conditions",
    "can be easily checked by solving a linear programming ( lp ) problem for each vertex of the polytope .",
    "the invariance conditions and the backward invariance conditions should only be checked at the vertices of @xmath44 since solvability of these conditions at the vertices implies by a simple convexity argument that they are solvable at all boundary points of @xmath44 @xcite .",
    "[ rem : input_con ] the definition of ibc can be easily tailored to the case when we have both state and input constraints .",
    "suppose @xmath92 , where @xmath93 is a polytope having @xmath94 .",
    "for this case , the system is ibc if every @xmath69 are mutually accessible through @xmath95 using control inputs @xmath96 .",
    "similarly , the definitions of invariance and backward invariance conditions are adapted to restrict @xmath65 to lie in @xmath93 .",
    "it can be shown that for these tailored definitions , conditions ( i)-(iii ) of theorem [ thm : main_ibc ] remain necessary for ibc .",
    "also , the proof of the sufficiency of conditions ( i)-(iii ) in this case is similar to the one in section  v of @xcite under the mild assumption on @xmath93 that for any @xmath97 satisfying @xmath98 , the image of @xmath99 , there exists a @xmath100 such that @xmath101 .",
    "in this section , we study the problem of constructing ibc regions for affine systems . the motivation behind the study is as follows .",
    "first , in many practical scenarios , it may turn out that the given dynamical system is not ibc w.r.t .",
    "the given region resulting from the intersection of the given safety constraints .",
    "hence , it would be important to find a large ibc region within the given safety constraints , which represents a large safe region within which we can fully control our dynamical system .",
    "second , the problem of constructing ibc regions is an important milestone towards building the special partitions / covers in @xcite , @xcite , respectively , so that one can make use of the hierarchical control results in these papers .",
    "third , we show in section  [ sec : rob ] of the paper how the proposed results on constructing ibc regions can be useful for building safe speed profiles for different classes of robotic systems .",
    "these safe speed profiles are then utilized to achieve safe operation of robots , e.g. static / dynamic obstacle avoidance , and to determine the feasibility of given reference trajectories , in the sense that they can be reached from any safe initial condition within the given safety position / speed constraints and under the robot s actuation limits .",
    "following @xcite , we know that w.l.o.g .",
    "the problem of studying ibc of an affine system can be transformed to studying a linear system on a new polytope @xmath44 having @xmath86 .",
    "thus , we consider a linear system .",
    "given the necessity of condition ( i ) of theorem [ thm : main_ibc ] for ibc , in our study of constructing ibc regions , we assume w.l.o.g .",
    "that is controllable .",
    "we then construct around the origin an ibc polytopic region for .",
    "[ prob1 ] given a controllable linear system , construct a polytope @xmath44 such that @xmath86 and is ibc w.r.t . @xmath44 .",
    "it can be easily shown that if is ibc w.r.t .",
    "the polytope @xmath44 , then it is also ibc w.r.t .",
    "@xmath102 , a @xmath103-scaled version of @xmath44 , for every @xmath104 . moreover ,",
    "if all the mutual accessibility problems on @xmath95 are achieved using uniformly bounded inputs satisfying @xmath105 , then all the mutual accessibility problems on @xmath106 can be achieved using uniformly bounded inputs satisfying @xmath107 .    while checking ibc on given polytopes is easy and incorporates",
    "solving lp problems as mentioned in the previous section , building ibc polytopic regions is considerably more difficult .",
    "theorem [ thm : main_ibc ] suggests that we build around the origin simplicial polytopes satisfying both the invariance conditions and the backward invariance conditions .",
    "two difficulties are faced here .",
    "first , to build a polytope @xmath44 satisfying the invariance conditions ( similar argument holds for the backward invariance conditions ) , we would need to select the vertices of @xmath44 , @xmath108 , the unit normal vectors to the facets of @xmath44 , @xmath84 , and the control inputs at the vertices , @xmath109 , such that @xmath110 , for all @xmath111 .",
    "since @xmath84 , @xmath108 , and @xmath109 are all unknowns in this case , we have a set of bilinear matrix inequalities ( bmis ) , the solving of which is in general np - hard @xcite .",
    "second , even if one constructs a polytope @xmath44 around the origin satisfying both the invariance conditions and the backward invariance conditions , one still needs to verify that @xmath44 is simplicial since the proof of the sufficiency of theorem [ thm : main_ibc ] only holds for simplicial polytopes .",
    "one possible approach to face these difficulties is as follows .",
    "since the bmis can be solved offline , one can exploit available software packages for solving bmis such as penbmi @xcite .",
    "another possible approach is to use trial - and - error . in particular ,",
    "one first constructs a candidate simplicial polytope @xmath44 , and then uses theorem [ thm : main_ibc ] to check whether the given system is ibc w.r.t .",
    "if it is not the case , then one should try another candidate polytope , and so on .",
    "it is clear that these two approaches are computationally expensive , and for the second approach , there is no guarantee that one will eventually find the ibc polytope . instead ,",
    "in this paper , we explore the geometry of the problem , and try to provide a computationally efficient algorithm for building ibc polytopes that avoids solving bmis .",
    "we initiated this geometric study in @xcite for hypersurface systems with @xmath0 , and here we extend the study of @xcite to a more general geometric case .",
    "to that end , let @xmath112 be the image of @xmath99 , and define the set of possible equilibria of : @xmath113 at any point in @xmath114 , the vector field of can vanish by proper selection of the input @xmath65 .",
    "also , if @xmath115 is an equilibrium point of under some input , then @xmath116 @xcite .",
    "it can be verified that @xmath114 is closed , affine , and its dimension is @xmath117 @xcite .",
    "notice that both @xmath118 and @xmath114 are properties of the system , and , as such , they can be calculated before constructing the polytope @xmath44 .    for the geometric case @xmath119",
    ", we provide a computationally efficient algorithm for constructing ibc polytopes .",
    "we now show that this geometric condition is more general than the condition @xmath0 considered in @xcite . if @xmath0 , then the dimension of @xmath114 is @xmath120 @xcite . if @xmath121 , then @xmath119 clearly holds .",
    "we then show that @xmath119 holds for the case when @xmath122 .",
    "we claim that @xmath118 is not subset of @xmath114 .",
    "otherwise , we have @xmath123 for all @xmath124 , and so @xmath114 is an invariant set under any selection of the control input @xmath65 , which contradicts controllability of .",
    "if @xmath118 is not subset of @xmath114 , then we can identify a non - zero vector @xmath125 such that @xmath126 . since @xmath122 , then clearly @xmath119 . on the other hand , for the following linear system",
    ", @xmath119 holds , while @xmath127 : @xmath128 x(t ) + \\left [   \\begin{array}{rr } 1 & 0 \\\\ 0 & 1 \\\\ 0 & 0 \\\\ 0 & 0 \\end{array }   \\right ] u(t).\\ ] ] this shows that the geometric case considered in this paper is more general than the one studied in @xcite .",
    "indeed , since the dimension of @xmath118 is @xmath1 and the dimension of @xmath114 is @xmath117 @xcite , the condition @xmath119 may be achieved for systems having @xmath3 as in , which is a significant relaxation of the condition of @xcite pairs for which @xmath119 is achieved ( the examples are generated by matlab s rand command and are saved as .mat files ) .",
    "this includes an example of a large - scale system with @xmath129 and @xmath130 . ] . also , we found that studying the geometric case @xmath119 is general enough to consider different classes of robotic systems in section [ sec : rob ] , including fully - actuated robot arms , ground robots , and unmanned aerial vehicles .",
    "finally , we consider the study of the geometric case @xmath119 in this paper as a milestone in studying the general case in the future .",
    "we start by reviewing two geometric results of @xcite .",
    "[ lem1 ] consider the linear system . for any polytope @xmath44 ,",
    "if @xmath131 is a vertex of @xmath44 , then the invariance conditions and the backward invariance conditions of @xmath44 are solvable at @xmath132 .",
    "[ lem2 ] consider the linear system . for any polytope @xmath44 , if @xmath133 at a vertex @xmath132 of @xmath44 , where @xmath134 denotes the interior of @xmath135 , then the invariance conditions and the backward invariance conditions of @xmath44 are solvable at @xmath132 .",
    "since @xmath118 and @xmath114 are properties of the linear system and can be calculated before constructing the polytope @xmath44 , lemmas [ lem1 ] and [ lem2 ] suggest that we can construct the polytope @xmath44 such that the vertices of @xmath44 lie on @xmath114 , or the subspace @xmath118 dips into the interior of the tangent cones to the constructed polytope @xmath44 at the vertices .",
    "this ensures that both the invariance conditions and the backward invariance conditions are solvable at the vertices of the constructed polytope @xmath44 .",
    "however , as mentioned before , there is still the difficulty that the proof of the sufficiency of theorem [ thm : main_ibc ] was carried out in @xcite only for simplicial polytopes , and , consequently , theorem [ thm : main_ibc ] may not apply .",
    "an extension of theorem [ thm : main_ibc ] is needed .    in this paper",
    ", we first show that for a given controllable linear system , if the vertices of the polytope @xmath44 are such that either @xmath131 or @xmath133 , then the system is ibc w.r.t .",
    "we then provide , under the geometric condition @xmath136 , a computationally efficient algorithm for constructing a polytope @xmath44 around the origin such that the vertices of @xmath44 satisfy @xmath131 or @xmath133 .",
    "we also prove the soundness of the algorithm .",
    "[ thm : main_paper1 ] consider a controllable linear system defined on an @xmath2-dimensional polytope @xmath44 satisfying @xmath86 .",
    "if for each vertex @xmath132 of @xmath44 , either @xmath131 or @xmath133 , then the system is ibc w.r.t . @xmath44 .    by assumption and from lemmas",
    "[ lem1 ] , [ lem2 ] , both the invariance conditions and the backward invariance conditions are solvable at the vertices of @xmath44 .",
    "although the three conditions of theorem [ thm : main_ibc ] hold , the polytope @xmath44 in our case is not necessarily simplicial , and consequently we can not exactly follow the same sufficiency proof as in @xcite for theorem [ thm : main_ibc ] . indeed , the proof of theorem [ thm : main_ibc ] is divided into three parts . in the first part , the invariance conditions are used to construct a continuous piecewise linear ( pwl ) feedback law , and under the assumption that the polytope @xmath44 is simplicial , it is proved that all the trajectories initiated in @xmath95 eventually tend to @xmath114 through @xmath95 , and reach close to @xmath114 in finite time .",
    "then , in the second part , controllability of @xmath87 is used to construct a piecewise continuous control input that makes the trajectories initiated nearby @xmath114 slide along @xmath114 inside @xmath95 towards @xmath86 in finite time .",
    "third , using the backward invariance conditions and a similar argument to the first two parts , it is shown that one can steer the backward dynamical system @xmath137 from any state in @xmath95 to the origin in finite time through @xmath95 using uniformly bounded inputs .",
    "equivalently , one can steer the system from the origin to any final state in @xmath95 in finite time through @xmath95 using uniformly bounded inputs .",
    "one can see that the assumption that @xmath44 is simplicial is used in @xcite only in the first part of the proof to show that all trajectories initiated in @xmath95 tend to @xmath114 . as a result",
    ", our task is reduced to prove this part in our case for any polytope , not necessarily simplicial .",
    "the rest of the proof is similar to @xcite .",
    "the details of the proof are in the appendix .",
    "we now provide under the geometric condition @xmath136 a computationally efficient algorithm for constructing a polytope @xmath44 such that @xmath86 and the vertices of @xmath44 satisfy @xmath131 or @xmath133 , which implies from theorem [ thm : main_paper1 ] that the given system is ibc w.r.t .",
    "the algorithm is presented in algorithm [ alg_paper1 ] .",
    "we then prove the soundness of the algorithm .",
    "+ * given : * a controllable linear system satisfying @xmath136 ; suppose @xmath138 , and @xmath139 are such that @xmath140 for all @xmath141 and @xmath142 .",
    "+ * objective : * construct an @xmath2-dimensional polytope @xmath44 such that @xmath86 and the system is ibc w.r.t .",
    "+ * steps : *    1 .",
    "construct an initial @xmath2-dimensional polytope @xmath143 such that @xmath144 , and let @xmath145 denote the vertices of @xmath143 .",
    "2 .   let @xmath146 $ ] and @xmath147 $ ] . for @xmath108 , @xmath148",
    ", calculate @xmath149 .",
    "3 .   select @xmath150 , and define @xmath151 for @xmath148 .",
    "4 .   define @xmath152 .",
    "[ thm : main_paper2 ] consider a controllable linear system satisfying @xmath136 .",
    "then , algorithm [ alg_paper1 ] always terminates successfully , and the system is ibc w.r.t .",
    "the constructed polytope @xmath44 .",
    "since @xmath136 , one can always identify @xmath153 such that @xmath140 for all @xmath141 , and @xmath142 .",
    "since @xmath154 has linearly independent columns , it is invertible .",
    "hence , one can always calculate @xmath155 , and then construct @xmath44 . by construction , @xmath156 .",
    "we now show that is ibc w.r.t . @xmath44 . to that end",
    ", we prove that the vertices of @xmath44 satisfy @xmath131 or @xmath133 .",
    "notice that the vertices of @xmath44 are subset of @xmath157 .",
    "let @xmath158 .",
    "it is straightforward to show @xmath159 , @xmath160 , and @xmath161 . from step 2 , @xmath162 .",
    "thus , we have @xmath163 since @xmath114 is affine and @xmath164 , @xmath165 .",
    "we then study the vertices of @xmath44 in the set @xmath145 .",
    "notice that @xmath166 , and if @xmath167 , then @xmath168 . since @xmath169 by construction and @xmath86 , then @xmath170 .",
    "now if @xmath108 , @xmath171 , is a vertex of @xmath44 , then from , @xmath172 , which implies that @xmath173 dips into the interior of the tangent cone to @xmath44 at @xmath108 , i.e. @xmath174 . from theorem [ thm : main_paper1 ] , is ibc w.r.t . @xmath44 .",
    "[ rem_comp_eff ] notice that in step 2 of algorithm [ alg_paper1 ] , @xmath175 should be calculated only once .",
    "indeed , algorithm [ alg_paper1 ] does not require solving any optimization problem , which represents a significant reduction of computational complexity compared to the original formulation of the problem that requires solving bmis or using trial - and - error .",
    "computational efficiency is quite important in fast applications .",
    "for instance , in section [ sec : rob ] , we compute the ibc regions ( the safe speed profiles ) for uavs at each sampling instant to avoid dynamic obstacles that intersect with the vehicle s path .",
    "[ rem_scal ] as discussed before , for any @xmath104 , is also ibc w.r.t . @xmath176",
    "using @xmath103-scaled inputs of the ones used to solve mutual accessibility problems on @xmath95 .",
    "this may be useful in two ways .",
    "first , if it is required to keep the system within given , hard safety constraints that form a region @xmath177 around the origin , then one can first use algorithm [ alg_paper1 ] to construct an ibc polytopic region @xmath44 satisfying @xmath86 , and then one can simply scale @xmath44 such that @xmath178 . here , @xmath176 represents a safe region , within which we can fully control our system .",
    "second , for the case of input constraints ( @xmath92 , where @xmath94 ) , we can similarly scale @xmath44 such that on @xmath176 , @xmath179 , the ibc property is achieved using @xmath96 .",
    "we present a simple illustrative example of algorithm [ alg_paper1 ] .",
    "[ ex_alg ] consider the double integrator @xmath180 , @xmath181 .",
    "the system is evidently controllable .",
    "we have @xmath182 , the @xmath183-axis , and @xmath184 , the @xmath185-axis .",
    "hence , @xmath186 . we follow the steps of algorithm [ alg_paper1 ] : ( 1 ) we construct @xmath187 , where @xmath188 , @xmath189 , @xmath190 , and @xmath191 that the system is not ibc w.r.t .",
    "@xmath143 . ] ; ( 2 ) we have @xmath192 , @xmath193 , and we calculate @xmath194 and @xmath195 ; ( 3 ) we select @xmath196 , and so @xmath197 and @xmath198 ; ( 4 ) the system is ibc w.r.t . @xmath199 shown in figure  [ fig : ex_di ]",
    "in this section , we show how our proposed algorithm , algorithm [ alg_paper1 ] , can be useful in constructing safe speed profiles for different robotic systems that include fully - actuated robot arms , ground robots , and unmanned aerial vehicles ( uavs ) .",
    "we also highlight the advantages of the proposed safe speed profiles compared to the ones obtained by intuition or by constructing controlled invariant sets in the position - speed state space .",
    "moreover , in addition to the simulation results presented in this section , we present several experimental results on uavs to verify the effectiveness of our proposed results .",
    "we start this section with fully - actuated robots .",
    "consider a fully - actuated robot with @xmath200 links that is modeled by : @xmath201 where @xmath202 is the vector of generalized coordinates represents the angle of link @xmath203 if joint @xmath203 is revolute ( we assume @xmath204 $ ] ) , or it is the displacement if joint @xmath203 is prismatic .",
    "] , @xmath205 is the vector of velocities , @xmath206 is the vector of generalized applied forces , and @xmath207 is a positive definite matrix . for fully - actuated robots ,",
    "it is well - known that @xmath208 is full - rank , and so one can use the feedback law @xmath209 to convert into the equivalent controllable linear system @xmath210 which is a set of decoupled double integrators , @xmath211 , representing the dynamics in the different generalized coordinates .",
    "suppose that we have the position constraints @xmath212 $ ] , the velocity limits of the robot @xmath213 $ ] , where @xmath214 , and the actuator limits @xmath215 $ ] , where @xmath216 .",
    "assume that the position space is free of kinematic singularities , and that w.l.o.g .",
    "@xmath217 for each @xmath203 .",
    "operating the robot within the maximum velocity limits does not ensure that the robot remains within the required position limits , and consequently does not ensure safety of operation such as collision avoidance .",
    "instead , it is required to define a safe speed profile for the robot .",
    "that is , for each value of @xmath218 within the position limits , we define a corresponding range of safe velocities , resulting in an overall safe region in the position - velocity state space .",
    "we assume that for the given position - speed limits , the feedback linearization can be carried out within the actuator limits of the robot , provided that for each @xmath203 , @xmath109 is selected within @xmath219 $ ] , where @xmath220 .",
    "hence , our task is reduced to finding for the equivalent linear system a safe controllable region , within the given position - speed ranges , while taking into consideration the limits on the inputs @xmath109 .",
    "it is straightforward to verify that for the controllable linear system , @xmath221 , and so algorithm [ alg_paper1 ] can be used to find a controllable safe position - speed region . indeed , since is a set of decoupled double integrators , one can apply algorithm [ alg_paper1 ] for each subsystem @xmath211 to find a safe speed profile for each generalized coordinate @xmath218 ( similar problem to example [ ex_alg ] ) .    as discussed in remark",
    "[ rem_scal ] , although algorithm [ alg_paper1 ] does not directly take the actuator limits into consideration in calculating the ibc polytope @xmath44 , one can always scale the obtained polytope @xmath44 to find another ibc polytope @xmath176 , in which all the mutual accessibility problems are achieved using control inputs within the actuator limits .",
    "for the double integrator example ( @xmath180 , @xmath181 , @xmath222 $ ] , where @xmath223 ) , this can be simply done as follows .",
    "one should first verify after constructing the ibc polytope @xmath44 using algorithm [ alg_paper1 ] that at each vertex of @xmath44 not in @xmath182 , both the strict invariance conditions and the strict backward invariance conditions are achieved using inputs @xmath222 $ ] .",
    "since the polytope @xmath44 is known from algorithm [ alg_paper1 ] , this verification can be carried out by solving lp problems .",
    "if the verification result is positive , then in spite of the actuator limits , we can still construct the special pwl feedback @xmath224 in the proof of theorem [ thm : main_paper1 ] , and it can be shown that the system is ibc w.r.t . @xmath44 using inputs @xmath65 satisfying @xmath222 $ ] . instead , if the verification result is negative , then with the aid of the fact that here @xmath184 , it can be shown that one can always scale the @xmath185-component of the vertices of @xmath44 ( scale the velocity profile ) to end up with a new ibc polytope @xmath225 for which the mutual accessibility problems are achieved using inputs @xmath65 within @xmath226 $ ] .    to make our discussion more concrete , consider , for instance , a one degree - of - freedom ( dof ) robot arm represented by    @xmath227    where @xmath228 is the robot angle , @xmath229 is its inertia , @xmath1 is its mass , @xmath230 is the robot arm length , @xmath231 is the gravitational acceleration constant , and @xmath206 is the input torque .",
    "suppose that @xmath232 , @xmath233 , @xmath234 , and @xmath235 . also , suppose that we have the state constraints @xmath236 , @xmath237 , and the input constraints @xmath238 . by using the feedback linearization law @xmath239",
    "we get the linearized dynamics @xmath240 which is a double integrator .",
    "it is straightforward to verify that if @xmath241 , then with , @xmath242 , i.e. the actuator limits of the robot arm are satisfied . hence , for , it is required to find a safe controllable position - speed region under the limits @xmath241 .",
    "similar to example [ ex_alg ] , we use algorithm [ alg_paper1 ] to construct the ibc polytope @xmath199 shown in figure [ fig : ex_di_lim ] , where @xmath243 , @xmath244 , @xmath245 , @xmath246 , @xmath247 and @xmath248 .",
    "one can easily verify that under @xmath241 , both the strict invariance conditions and the strict backward invariance conditions are solvable at the vertices outside @xmath114 , and consequently the system is ibc w.r.t .",
    "@xmath44 under the given actuator limits .",
    "now suppose that we have tighter actuator limits @xmath249 . for this case",
    ", @xmath250 ensures under that the robot s actuator limits are satisfied .",
    "then under @xmath250 , it can be easily verified that the invariance conditions are not solvable at the vertex @xmath251 . as a result",
    ", we should scale the set @xmath44 , or as discussed above , scale the velocity - component ( @xmath185-component ) of the vertices not in @xmath114 . for a scaling factor @xmath252 of the velocity components",
    ", one can verify that for the new polytope @xmath253 shown in figure [ fig : ex_di_lim ] , where @xmath254 , @xmath255 , @xmath256 , and @xmath257 , both the strict invariance conditions and the strict backward invariance conditions are solvable at the vertices of @xmath225 not in @xmath114 using control inputs that satisfy @xmath258 .",
    "hence , @xmath225 satisfies the ibc property under @xmath249 .",
    "one can see that with @xmath44 or @xmath225 , we provide for each position within the given limits a corresponding safe speed range , staying within those guarantees us that the system is safe at all times .",
    "this safe profile can inform learning - based speed scheduling algorithms @xcite , which gradually increase a robot s speed based on information from previous runs . using the same example , suppose that it is required under the actuator limits @xmath242 to connect the state point @xmath259 to the origin @xmath260 in finite time within the given state constraints . since both state points lie in the ibc region @xmath44 , we know that we can find control inputs satisfying the constrained mutual accessibility in finite time under the given actuator limits .",
    "figure [ fig_onedof ] shows two trajectories connecting @xmath66 to the origin : the red trajectory is obtained by applying the traditional control law of connecting two states based on the control gramian , equation ( 15 ) of @xcite , with @xmath261 , while the blue trajectory is obtained by first using the pwl feedback discussed in the proof of theorem [ thm : main_paper1 ] to decelerate the robot arm and avoid violating the safety state constraints , and then using a traditional control law .",
    "one can see that using the traditional control law ( equation ( 15 ) of @xcite ) , there is no guarantee that the state constraints are satisfied in the transient phase .",
    "we now show the advantages of the proposed safe speed profiles compared to the ones obtained by intuition .",
    "one can simply argue that to prevent the violation of the position constraints near the edge @xmath262 , only a reduced forward velocity is allowed . similarly , to prevent the violation of the position constraints near the edge @xmath263 , only a reduced backward velocity is allowed .",
    "this results in a polytope @xmath264 shown in figure [ fig : ex_di_int ] , which represents a safe speed profile obtained by intuition .",
    "our proposed speed profiles in figure [ fig : ex_di_lim ] have the following advantages compared to the intuitive one in figure [ fig : ex_di_int ] .",
    "first , our proposed method provides a systematic approach for obtaining the vertices of the polytopic safe region , which is an advantage compared to the intuitive method , especially for more complicated systems .",
    "second , our constructed polytopes satisfy the ibc property , and consequently all the states in the interior of the polytope are mutually accessible through its interior by applying control inputs within the actuator limits . thus , there is no loss of generality ( in terms of controllability ) in restricting the robot to operate in the proposed safe position - speed regions . on the other hand ,",
    "the regions found by intuition are not necessarily ibc .",
    "third , since any state in our proposed safe position - speed regions is reachable from any other state in the safe region through the region itself , in planning a reference trajectory for the robot ( a position path and its corresponding scheduled speed ) , it would then be recommendable to select the states of the reference trajectory inside the proposed regions , which would ensure that they can be reached within the safety constraints and under the actuator limits .",
    "on the other hand , one can verify that the state @xmath265 , shown in figure [ fig : ex_di_int ] , is not reachable from @xmath266 within @xmath264 , i.e. it is not reachable from other states in the safe region through the region itself .",
    "hence , @xmath267 should not be selected as a state in a reference trajectory , as the system can not reach the state from a safe starting position without violating the constraints .",
    "one can see from figure [ fig : ex_di_lim ] that our proposed algorithm automatically excludes these non - reachable parts of the safe region to ensure full controllability on the proposed safe region .",
    "it is noteworthy that all the polytopes in figures [ fig : ex_di_lim ] and [ fig : ex_di_int ] satisfy the controlled invariance property .",
    "one can see that the polytope @xmath264 in figure [ fig : ex_di_int ] forms a larger invariant set compared to the polytopes in figure [ fig : ex_di_lim ] .",
    "indeed , using standard algorithms for calculating the largest polytopic invariant set within the given safety constraints @xcite , we end up with a polytope similar to @xmath264 in figure [ fig : ex_di_int ] .",
    "nevertheless , we emphasize that our proposed algorithm intentionally excludes some parts from the largest controlled invariant set to achieve the advantages mentioned in the previous paragraph .      in this subsection",
    ", we consider ground robots , modeled as unicycles with acceleration limits .",
    "in particular , we have the model @xmath268 where @xmath269 is the cartesian position of the unicycle in a world frame , @xmath270 is the orientation of the unicycle w.r.t .",
    "the @xmath183-axis , @xmath271 is the linear driving velocity , @xmath272 is the linear driving acceleration input , and @xmath273 is the steering velocity input .",
    "notice that differs from the kinematic model of unicycles , in which it is assumed that one can directly control the linear driving velocity . while it is easy to show that under the kinematic model we can ensure safety of the ground robots since we can decelerate the robot to zero velocity immediately , this is not the case for the more practical model .",
    "imagine a scenario in which the robot is initiated at a high linear velocity @xmath271 in the direction of the edges of a given cartesian region .",
    "it may happen that with the limits on the linear acceleration input @xmath272 , we can not decelerate the robot fast enough to avoid collision .",
    "hence , we study here the construction of safe speed profiles for .",
    "we hereby assume that for low linear velocities , @xmath274 , we can safely connect any two states of in the given position - velocity limits , and so the problem would be only in operating the robot at high linear velocities .",
    "the system can be feedback linearized as follows ( chapter 5 of @xcite ) . by defining the outputs @xmath275 , @xmath276 , and using the feedback linearization law : @xmath277= \\left [   \\begin{array}{cc } cos(x_3 ) & -x_4~sin(x_3 )   \\\\",
    "sin(x_3 ) & x_4~cos(x_3 )     \\end{array }   \\right]^{-1 }   \\left [   \\begin{array}{rr } v_1\\\\v_2\\end{array }   \\right ] ,    \\ ] ] we get @xmath278 and @xmath279 , which are two decoupled double integrators representing the dynamics in the two cartesian directions .",
    "notice that the matrix in is invertible at any state except those having @xmath280 .",
    "thus , for low linear velocities , one should not use to avoid the singularity problem .",
    "also , notice that one can define limits on the inputs of the linearized model @xmath281 to ensure that the actuator limits of the ground robot , i.e. the limits on @xmath282 , are satisfied .",
    "for instance , suppose that the actuator limits for the ground robot are : @xmath283 and @xmath284 .",
    "also , suppose that we depend on the feedback linearization law in controlling the ground robot as long as the linear velocity @xmath271 is such that @xmath285 m / s which clearly prevents the discussed singularity problem . with the aid of , it can be verified that if @xmath286 and @xmath287 , then the actuator limits on @xmath282 are always satisfied .",
    "similar to our discussion in the previous subsection , given position and velocity limits in the two cartesian directions as well as limits on the acceleration inputs @xmath281 , one can exploit algorithm [ alg_paper1 ] to construct an ibc region for the linearized system in the new coordinates .",
    "the ibc region represents safe speed profiles for the robot in the two cartesian directions . for instance",
    ", suppose that we have the position constraints @xmath288 , @xmath289 , the velocity constraints @xmath290 , @xmath291 , and the constraints @xmath286 , @xmath287 obtained from the actuator limits of the ground robot as discussed above . using algorithm [ alg_paper1 ] , we construct the safe speed profiles for the two cartesian directions as shown in red in figures [ fig1_unicycle ] and [ fig2_unicycle ] .    now to connect any two states @xmath66 and @xmath292 within the obtained safe region",
    ", one can start by finding a connecting trajectory @xmath293 , @xmath294 $ ] , for the linearized model .",
    "then , one can depend on the equivalence between the linearized model and as long as the linear velocity @xmath271 does not drop to a low value ( @xmath295 in our example ) .",
    "for the parts of the obtained connecting trajectory @xmath293 with low linear velocities @xmath271 , we avoid using , and directly control the nonlinear model to connect the two states of the trajectory having low linear velocities , which can always be done safely by assumption as stated at the end of first paragraph in this subsection . considering again our example , suppose that it is required to connect the state @xmath296 to the state @xmath297 in finite time within the given position and velocity constraints and under the actuator limits of the ground robot . notice that the ground robot is initiated with positive velocities in the directions of the edges @xmath298 and @xmath299 .",
    "figures [ fig1_unicycle ] and [ fig2_unicycle ] show , in blue lines , the proposed trajectories that achieve the constrained mutual accessibility .",
    "these proposed trajectories are obtained by first applying the pwl feedback , described in the proof of theorem [ thm : main_paper1 ] , to decelerate the ground robot , and hence avoid violating the safety position and velocity constraints .",
    "when @xmath295 , we stop using , and directly control the nonlinear system . in particular , we first decelerate the robot to zero velocity safely , then we set @xmath300 and control the input @xmath273 to change the steering angle of the robot , so that the robot heads towards the desired point in the @xmath301-plane , and finally , we set @xmath302 and control @xmath272 to reach the desired point in finite time .",
    "it is worth mentioning that there may be more optimal ways to control the robot , but since in this paper we focus on the notion of controllability under constraints and not on optimal controller design , we tried to show the existence of a feasible trajectory achieving the constrained mutual accessibility . nevertheless , as shown next , standard controllers are usually not sufficient for achieving the constrained mutual accessibility .",
    "figures [ fig1_unicycle ] and [ fig2_unicycle ] also show , in black lines , the trajectories initiated at @xmath66 under stabilizing pd controllers , designed for the linearized models in the @xmath183- , @xmath185-directions to stabilize the state @xmath292 .",
    "one can see that using standard pd controllers , the safety position and speed constraints are not necessarily satisfied in the transient phase , which illustrates the need for the proposed results of the paper .      in this subsection , we utilize our proposed algorithm to construct safe controllable position - speed regions for an important class of uavs , namely quadrotor vehicles @xcite , and then show using experimental results on a parrot ar.drone 2.0 platform how these regions can be useful for the safe control of uavs in confined spaces and under vehicle actuation limits . to that end , we start by reviewing briefly the dynamic model of quadrotor vehicles @xcite .",
    "the quadrotor vehicle has six degrees of freedom : the translational position @xmath303 , measured in the inertial coordinate frame @xmath304 , and the vehicle euler angles @xmath305 , rotating the inertial frame into the body - fixed frame @xmath306 , where @xmath307 is the roll angle representing ( for small angles ) the rotation of the quadrotor vehicle around the body @xmath12-axis , @xmath228 is the pitch angle representing ( for small angles ) the rotation of the vehicle around the body @xmath308-axis , and @xmath309 is the yaw angle representing ( for small angles ) the rotation around the body @xmath310-axis .",
    "notice that the full state of the quadrotor vehicle also includes the translational velocities @xmath311 in the inertial frame @xmath304 and the rotational velocities of the body frame @xmath312 in @xmath306 , and",
    "so the dynamic model of the quadrotor vehicle has 12 states .",
    "let @xmath313 .",
    "the translational dynamics of the quadrotor vehicle are represented by @xmath314 where @xmath315 , @xmath316 is the sum of the four rotor forces @xmath47 normalized by the vehicle mass @xmath1 , i.e. @xmath317 , @xmath318 , and @xmath319 is the rotation matrix for transforming coordinates from @xmath306 to @xmath304 , which is given by @xmath320 where @xmath321,\\ ] ] @xmath322,\\ ] ] @xmath323.\\ ] ]    the parrot ar.drone 2.0 platform has an onboard controller that takes four inputs : the desired pitch angle @xmath324 , the desired roll angle @xmath325 , the desired vertical velocity of the vehicle @xmath326 and the desired angular velocity of the vehicle around the body s @xmath310-axis @xmath327 , and then it calculates the required four motor forces @xmath328 , @xmath329 . in this paper , we assume that all the states of the quadrotor vehicle are measured .",
    "we first use standard , nonlinear controllers to stabilize the @xmath310-value of the vehicle to a fixed value @xmath330 , and the yaw angle of the vehicle to zero ( @xmath331 ) .",
    "then , we manipulate @xmath324 and @xmath325 to control the vehicle s motion in the @xmath12- , @xmath308-directions . assuming that the nonlinear controller successfully stabilizes the vehicle at @xmath330 and @xmath332 , we can assume @xmath333 and @xmath334 in the translational dynamics , and then can be reduced to @xmath335 now we linearize the dynamics and , so that we can apply the proposed algorithm in this paper to calculate safe speed profiles for the quadrotor vehicle in the @xmath12- , @xmath308-directions . to that end , let @xmath336 and @xmath337 .",
    "equivalently , @xmath338 and @xmath339 .",
    "if the onboard controller successfully stabilizes the angles @xmath307 and @xmath228 to these selected reference angles @xmath325 and @xmath324 , respectively , then the translational dynamics in the @xmath12- , @xmath308-directions become @xmath340 which are decoupled double integrators . since the onboard controller typically operates much faster than the position controllershz rate , while the onboard controller operates around three times faster . ] , it is reasonable to assume that the angles @xmath307 and @xmath228 are stabilized to the desired ones @xmath325 and @xmath324 quickly , and we can assume that and hold approximately .",
    "next , we translate the actuator limits on the quadrotor vehicle to constraints on the linearized inputs @xmath281 . for our quadrotor platform , we have the following constraints on the inputs to the onboard controller : @xmath341 rad , and @xmath342 rad .",
    "it can be verified that if @xmath343 , @xmath344 , then the constraints on @xmath325 and @xmath324 are satisfied .",
    "based on the above , our role reduces to constructing for and ibc regions under the limits @xmath343 , @xmath344 .",
    "suppose , for instance , that the position safety constraints are : @xmath345 and @xmath346 .",
    "similar to example [ ex_alg ] and the previous subsections , we use algorithm [ alg_paper1 ] to construct the ibc polytopes .",
    "figure [ fig1_uav ] shows the ibc region for the dynamics in the @xmath12-direction under the limit @xmath347 .",
    "similarly , one can construct an ibc region for the dynamics in the @xmath308-direction under @xmath348 . as discussed before",
    ", the ibc region in figure [ fig1_uav ] provides for each position a corresponding safe speed range . if one limits the speed at any position @xmath12 ,",
    "@xmath349 , to the safe speed range , then there exist feasible control inputs that keep the state trajectory inside the ibc region , and prevent the violation of the position safety constraints .",
    "moreover , we provide in the proof of theorem [ thm : main_paper1 ] of the paper a constructive method for synthesizing a pwl feedback that keeps the state trajectories inside the ibc regions .    in our first experiment , we stabilize the @xmath308-value of the quadrotor vehicle to @xmath350 , the @xmath310-value to @xmath351 , and the yaw angle to @xmath331 .",
    "we also allow the vehicle to gain an initial velocity in the direction of the edge of the position range @xmath349 , and then initiate our proposed pwl feedback in the proof of theorem [ thm : main_paper1 ] to decelerate the quadrotor vehicle to zero velocity , and so prevent the vehicle from violating the position constraints .",
    "figure [ fig1_uav ] shows samples of the state trajectories , under the proposed feedback , initiated at different critical states inside the ibc region ( blue trajectories ) .",
    "one can see that for all the shown , critical initial conditions in the ibc region , the proposed feedback successfully keeps the state trajectories in the ibc region , and prevents the violation of the safety constraints .",
    "after decelerating the vehicle to zero velocity , one can apply a robust hovering controller to keep the vehicle in place , or one can safely drive the vehicle to a safe point within the position constraints ( e.g. , the center of the safe region ) .",
    "figure [ fig1_uav ] also shows two cases where the vehicle is initiated at high initial velocities , outside the safe speed profile , in the direction of the edge @xmath352 , but with initial positions inside of the position constraints ( red trajectories ) .",
    "one can see that for these cases the proposed feedback , built based on the vehicle s actuator limits , can not decelerate the vehicle fast enough , and the position safety constraints are violated .",
    "the experiment shows the importance of keeping the quadrotor vehicle s speed within the safe speed profile for preventing collisions .    in the second experiment",
    ", we compare the proposed safe speed profile to the ones that can be obtained by intuition or by the controlled invariance property .",
    "one can argue that the states in the red triangles in figure [ fig2_uav ] should be included in the safe position - speed region since starting from any state in the red triangles , the position constraints are not violated .",
    "for instance , starting very close to the edge @xmath352 with a high negative velocity will make the vehicle head towards the other edge , and the position constraints are not violated .",
    "however , these states in the red triangles are not reachable from all other states inside the safe region through the region itself .",
    "hence , our algorithm automatically truncates these red triangles to ensure full controllability on the safe region . in figure",
    "[ fig2_uav ] , we show the state trajectories of connecting the origin to some points in the red triangles . the dotted blue trajectories are obtained from simulation by applying the standard open - loop control law of connecting two states based on the control gramian ( equation ( 15 ) of @xcite , with @xmath261 ) .",
    "the solid blue trajectories are real , experimental trajectories obtained by applying similar acceleration profiles to the real system .",
    "one can see that the quadrotor vehicle can not reach the points in the red triangles without violating the safety position constraints .",
    "hence , it is always recommended that the points of reference trajectories are selected inside the ibc region to ensure that they can be reached from other safe states with trajectories that completely lie inside the safe region .",
    "thirdly , we show how the constructed ibc regions can be useful in determining feasible reference trajectories for the quadrotor vehicle given the position safety constraints and the vehicle s actuator limits .",
    "for example , suppose that it is required to track a circle in the @xmath353-plane of radius 1.5 m , centered at @xmath260 .",
    "this can be achieved by tracking sinusoidal signals in both @xmath12- , @xmath308-directions , with a @xmath354 phase shift .",
    "also , suppose that we have three possible frequencies for going through the circle : @xmath355hz , @xmath356hz , or @xmath357hz .",
    "using the constructed safe speed profiles in the @xmath12- , @xmath308-directions , represented by the ibc regions , we want to determine a suitable , safe frequency .",
    "figure [ fig3_uav ] shows , for instance , the speed profile of the reference sinusoidal signal in the @xmath12-direction for the three frequencies . a similar figure can be drawn for the @xmath308-direction .",
    "one can see that for the @xmath357hz rate , the reference speed for the quadrotor vehicle does not completely lie within the safe speed profile , and so we avoid this frequency . also , the reference speed for the @xmath356hz rate is within the safe speed profile and it is faster than the @xmath355hz rate .",
    "thus , we select the @xmath356hz rate as reference trajectory .",
    "figure [ fig4_uav ] shows the tracking of the reference signal in the @xmath353-plane under standard tracking controllers and starting from two initial conditions .",
    "the trajectory starting at @xmath260 , shown in green , remains within the safety position constraints as required .",
    "notice that achieving perfect asymptotic tracking of reference signals is out of the scope of this paper .",
    "it is worth mentioning that although we know from the ibc property that there exist uniformly bounded control inputs connecting the initial state @xmath358 to the states of the reference trajectory within the ibc region , standard tracking controllers may not achieve asymptotic tracking with trajectories that completely lie within the safe position constraints ( see , for instance , the blue line in figure [ fig4_uav ] ) .",
    "hence , for the cases where the quadrotor vehicle is initiated at risky initial conditions ( with a positive velocity in the direction of the position region edge ) , it is recommended that one first applies the pwl feedback in the proof of theorem  [ thm : main_paper1 ] to safely decelerate the vehicle , and then connects the vehicle to the point @xmath260 in the center of the position region , and finally , applies the standard tracking controller ( see the magenta line representing the real trajectory connecting the initial position to the origin within the safe position region ) .",
    "there may be more advanced controller designs that achieve the tracking objective , but as mentioned before , we focus in this paper on controllability under constraints and use the experiments to illustrate the concept .    as discussed before",
    ", one advantage of the proposed algorithm for constructing the ibc regions is that it is computationally efficient .",
    "this enables us to implement the algorithm in real time to update the safe speed profile online if the position constraints change . to illustrate the main idea , in the next set of experiments , we use the proposed algorithm to achieve dynamic obstacle avoidance when the dynamic obstacles intersect with the quadrotor vehicle s path",
    "the idea is to detect that a dynamic obstacle is about to intersect with the quadrotor vehicle s path , and then to update the position constraints accordingly .",
    "then , our proposed algorithm is applied in real time to calculate for the updated position constraints a corresponding safe speed profilehz . ] , as well as an associated pwl feedback , as proposed in the proof of theorem [ thm : main_paper1 ] , which keeps the quadrotor vehicle within the updated safety position constraints . in the fourth experiment",
    ", we let the quadrotor vehicle track a sinusoidal reference trajectory in the @xmath308-direction with a frequency of @xmath355hz , while stabilizing the @xmath12-value to @xmath359 and keeping a constant height .",
    "we then run another quadrotor vehicle , our dynamic obstacle , to track a sinusoidal reference trajectory in the @xmath12-direction with a frequency of @xmath355hz , while stabilizing the @xmath308-value to @xmath360 and again keeping a constant height .",
    "the two vehicles collide if their @xmath12- , @xmath308-coordinates coincide . to achieve collision avoidance , we run the proposed algorithm for the first quadrotor vehicle in real time to update the safe speed profile online",
    ". figures [ fig5_uav ] , [ fig6_uav ] and [ fig7_uav ] show that the proposed algorithm succeeds and prevents the collision between the two vehiclesm , and so the euclidean distance between the @xmath12- , @xmath308-coordinates of the two vehicles ( @xmath361 ) should be kept higher than @xmath362 m . ] . to emphasize the effect of our proposed algorithm",
    ", we also illustrate in figures [ fig5_uav ] , [ fig6_uav ] and [ fig7_uav ] in green the case where we do not run our proposed algorithm to update the safe speed profile online .",
    "one can see that the euclidean distance between the @xmath12- , @xmath308-coordinates of the two vehicles drops below @xmath363 m in this case , which we consider a crash given the vehicle body radius of @xmath364 m . in figures",
    "[ fig8_uav ] , [ fig9_uav ] and [ fig10_uav ] , we repeat the same experiment after replacing the second quadrotor vehicle with a random human motion that intersects with the path of our controlled quadrotor vehicle .",
    "one can see from the figures that our proposed algorithm succeeds to prevent the collision with the moving human .",
    "in this paper , we studied the problem of constructing ibc regions for affine systems .",
    "that is , we construct safe regions in the state space within which we can fully control the given affine system using uniformly bounded control inputs . after formulating the problem , we discussed the difficulties that are faced if one tries to directly exploit the existing results for checking ibc on given polytopic regions .",
    "instead , we explored the geometry of the problem , provided a computationally efficient algorithm for constructing ibc regions , and proved its soundness .",
    "as sample case studies , we showed how our proposed algorithm can be useful for constructing safe speed profiles for different classes of robotic systems .",
    "we also provided several experimental results to verify the theoretical contributions of the paper .",
    "this includes using our proposed algorithm for real - time collision avoidance for uavs .",
    "* continuation of the proof of theorem [ thm : main_paper1 ] : * we construct a continuous pwl feedback @xmath224 under which all the trajectories initiated in @xmath95 tend to @xmath114 through @xmath95 . at a vertex @xmath365 , select input @xmath366 such that @xmath367 , which is always possible by the definition of @xmath114 .",
    "next , for the vertices @xmath108 satisfying @xmath368 , identify @xmath369 . since @xmath370 , then by definition @xmath371 for all @xmath111 . also , since @xmath372 , there exists @xmath373 such that @xmath374 .",
    "now for @xmath375 , where @xmath376 , we have @xmath377 for all @xmath111 . the second term of the right - hand side of is always negative , and we can always select @xmath376 sufficiently large such that @xmath378 , for all @xmath111 .",
    "the above control assignment at the vertices of @xmath44 satisfies the invariance conditions , and for the vertices having @xmath379 and @xmath368 , it satisfies the invariance conditions strictly ( with strict inequalities ) . at @xmath380 ,",
    "select @xmath381 .",
    "we construct a special triangulation of @xmath44 using the point set @xmath382 , where @xmath145 are the vertices of @xmath44 , such that if @xmath55 is an @xmath2-dimensional simplex in the triangulation , then @xmath383 is a vertex of @xmath55 @xcite .",
    "this can be carried out by triangulating each facet of @xmath44 , @xmath85 , into @xmath28-dimensional simplices , and then taking the convex hull of @xmath86 and the @xmath28-dimensional simplices to form a triangulation of @xmath44 consisting of @xmath2-dimensional simplices @xmath55 with the desired property .",
    "figure [ fig : triang ] shows a @xmath384 illustration of the triangulation .    based on the control values selected at @xmath382 , one can always construct on each simplex @xmath55 a unique affine feedback @xmath385 .",
    "moreover , @xmath386^t=[\\bar{v}~\\bar{1}]^{-1}\\bar{w}$ ] , where @xmath387 is a matrix whose rows are the transpose of the vertices of @xmath388 , @xmath389 is a column of ones , and @xmath390 is a column of the transpose of the selected inputs at the vertices of @xmath388 @xcite . since @xmath381 at @xmath380 by assignment and @xmath391 , then @xmath392 ; that is , the feedback on each @xmath388 is linear .",
    "it can be easily shown that the overall control law is a continuous pwl feedback , denoted by @xmath224 , and by a simple convexity argument , @xmath224 satisfies the invariance conditions of @xmath44 at every @xmath393 @xcite .",
    "let @xmath394 . since @xmath350 is a vertex in each @xmath55 , @xmath395 and @xmath396 is linear on each @xmath55 , then the vector field on @xmath397 represents @xmath103-scaled vectors of the vector field on @xmath398 for any @xmath399 .",
    "therefore , @xmath224 satisfies the invariance conditions of @xmath176 for any @xmath400 , and so starting from any @xmath401 , @xmath402 for all @xmath403 .",
    "we next show that for every @xmath404 , @xmath405 as @xmath406 , which implies by a simple argument that we can steer the trajectories to an @xmath407-neighborhood of @xmath114 in finite time , where @xmath408 can be selected arbitrarily small . since @xmath86 by assumption",
    ", it is known that @xmath44 can be expressed as @xmath409 , where @xmath410 , @xmath411 if @xmath412 and @xmath413 if @xmath414 .",
    "we define @xmath415 .",
    "notice that if @xmath393 , then @xmath416 .",
    "similarly , if @xmath417 for @xmath399 , then @xmath418 . one can show that @xmath419 is locally lipschitz , and its upper right dini derivative @xmath420 , where @xmath421 @xcite . with the aid of invariance conditions , it is shown in lemma 5.3 of @xcite , which also applies to non - simplicial polytopes , that @xmath422 for each @xmath423 .",
    "we hereby show that additionally @xmath424 .",
    "notice that for a vertex @xmath425 , @xmath426 by assignment , and so @xmath427 .",
    "next , the rest of the vertices of @xmath44 satisfy @xmath368 by assumption , and we assigned the control inputs at these vertices to satisfy the invariance conditions strictly .",
    "thus , @xmath428 , for all @xmath111 . note that @xmath429 if by definition @xmath430 , i.e. @xmath431 . then by the strict invariance conditions , we have @xmath428 for all @xmath429 , and so @xmath432 for all the vertices @xmath379 .",
    "let @xmath433 be arbitrary , and suppose that @xmath434 .",
    "let @xmath435 denote the smallest sub - simplex of @xmath436 such that @xmath437 , the relative interior of @xmath435 .",
    "since @xmath437 , we can write @xmath438 , where @xmath439 , @xmath440 , and @xmath441 are the vertices of @xmath435 , which are a subset of the vertices of the @xmath2-dimensional simplex @xmath436 . since the vector field @xmath396 is linear on the simplex @xmath436 by construction , we have @xmath442 .",
    "we now study @xmath443 .",
    "it is straightforward to show @xmath444 for every vertex @xmath445 .",
    "then , @xmath446 since @xmath439 and @xmath447 for every @xmath448 , then @xmath449 only if @xmath450 for all the vertices @xmath445 , which happens only if @xmath451 for every vertex @xmath445 . for this case , since the set @xmath114 is affine , then @xmath452 . to sum up , for any @xmath393 , if @xmath453 , then @xmath124 .",
    "since the vector field on @xmath454 represents @xmath103-scaled vectors of the vector field on @xmath398 for all @xmath399 , it can be easily shown that for any @xmath423 , if @xmath453 , then @xmath124 , i.e. @xmath424 .",
    "recall that @xmath422 for all @xmath423 .",
    "by lasalle s invariance principle , we know that the trajectories @xmath455 tend to @xmath424 as @xmath406 .                      camlibel m. k. , heemels w. p. m. h. , schumacher j. m. ( 2008 ) .",
    "algebraic necessary and sufficient conditions for the controllability of conewise linear systems . _ ieee transactions on automatic control_. vol .",
    "53(3 ) , pp . 762 - 774 .",
    "henrion d. , lfberg j. , kocvara m. , stingl m. ( 2005 ) . solving polynomial static output feedback problems with penbmi .",
    "_ ieee conference on decision and control , and the european control conference _ , seville , pp .",
    "7581 - 7586 .",
    "ostafew c. j. , schoellig a. p. , barfoot t. d. , collier j. ( 2014 ) .",
    "speed daemon : experience - based mobile robot speed scheduling . _ the canadian conference on computer and robot vision _ ,",
    "montreal , pp .",
    "56 - 62 .",
    "prado m. , simn a. , carabias e. , perez a. , ezquerro f. ( 2003 ) .",
    "optimal velocity planning of wheeled mobile robots on specific paths in static and dynamic environments .",
    "_ journal of robotic systems_. vol .",
    "20(12 ) , pp . 737 - 754 .",
    "thuan l. q. , camlibel m. k. ( 2014 ) .",
    "controllability and stabilizability of a class of continuous piecewise affine dynamical systems .",
    "_ siam journal of control and optimization_. vol .",
    "52(3 ) , pp . 1914 - 1934 .",
    "toker o. , ozbay h. ( 1995 ) .",
    "on the np - hardness of solving bilinear matrix inequalities and simultaneous stabilization with static output feedback . _ the american control conference _ , seattle , pp .",
    "2525 - 2526 ."
  ],
  "abstract_text": [
    "<S> this paper studies the problem of constructing in - block controllable ( ibc ) regions for affine systems . </S>",
    "<S> that is , we are concerned with constructing regions in the state space of affine systems such that all the states in the interior of the region are mutually accessible through the region s interior by applying uniformly bounded inputs . </S>",
    "<S> we first show that existing results for checking in - block controllability on given polytopic regions can not be easily extended to address the question of constructing ibc regions . </S>",
    "<S> we then explore the geometry of the problem to provide a computationally efficient algorithm for constructing ibc regions . </S>",
    "<S> we also prove the soundness of the algorithm . </S>",
    "<S> we then use the proposed algorithm to construct safe speed profiles for different robotic systems , including fully - actuated robots , ground robots modeled as unicycles with acceleration limits , and unmanned aerial vehicles ( uavs ) . finally , we present several experimental results on uavs to verify the effectiveness of the proposed algorithm . </S>",
    "<S> for instance , we use the proposed algorithm for real - time collision avoidance for uavs .    , </S>"
  ]
}
{
  "article_text": [
    "the healthy functioning of a human society depends on various public services or facilities such as schools , hospitals , parks , garbage disposal plants , and so on .",
    "constructing and maintaining public service is costly and the costs are paid by members of the whole society through tax . on the other hand",
    "it is often the case that a service ( e.g. , a hospital ) located at one place will serve not only the people of this place but also the people of neighboring places .",
    "therefore the total cost of fulfilling the needs of the whole society can be considerably reduced by appropriately choosing the service provider locations .",
    "this task of choosing the locations of public service is an important and challenging issue faced by a modern human society , and it is also an active research topic in the fields of algorithmic game theory @xcite and network game @xcite .    governmental institutions may prefer to solve such public service location problems in a top - down and centralized manner . a central planner will collect all the needed information about the network property of the social system , and then it will take this structural knowledge as input to a global optimization algorithm to obtain a minimum - cost solution .",
    "but such a centralized approach has drawbacks .",
    "firstly it requires a central planner and requires complete information about the networked system , and secondly the vast members of the society are not involved in the decision process and their individual preferences are not necessarily incorporated .",
    "this latter lack of involvement may cause people to suspect that their interests are compromised and may then induce strong friction and unwillingness .",
    "there are many recent large - scale events of such types of distrust and friction .",
    "for example in 2007 some residents in xiamen ( a major city of southeast china ) protested against the planned settlement of a px ( paraxylene ) plant for fear of unexpected health and environment effects , which eventually forced the relocation of this chemical plant @xcite .    a completely different approach for solving the public service location problem is to let individual agents make choices in best response to the choices of their neighboring agents .",
    "if an agent can access service from a neighbor in the network , it will have no motivation to be a service provider itself , and an agent will choose to be a service provider only if none of its network neighbors offers service",
    ". such a free - market approach has been investigated in the recent literature @xcite , and it was found that the resulting maximal independent - set solutions are far from being socially efficient .    in the present work ,",
    "we propose a local - consensus selection mechanism for solving the public service location problem .",
    "this decentralized approach lies between the above - mentioned centralized and individualized approaches .",
    "briefly speaking , the basic rules of this mechanism are that agents in need of service recommend their network neighbors of highest local impact ( to be precisely defined later ) as candidate service providers , and an agent may become a service provider only if all its non - server neighbors are happy with this arrangement .",
    "this distributed selection mechanism does not require the global structural information of the system but only involves local - scale information exchange .",
    "yet very encouragingly , we find that it leads to socially efficient solutions with tax level approaching the lowest possible value .",
    "our theoretical results suggest that distributed decision - making through local consensus can be an efficient mechanism for solving the network public service location problem .",
    "this collective mechanism may also be useful for other network resource allocation problems @xcite .",
    "in addition it may have potential applications in robotic swarm systems for collective problem - solving @xcite and be relevant to the research branch of distributed algorithmic mechanism design @xcite .",
    "we describe the public service location problem in the next section ; then the best - response dynamics ( sec .",
    "[ sec : brd ] ) , the centralized planning approach ( sec .",
    "[ sec : cp ] ) , and the local - consensus mechanism ( sec .",
    "[ sec : lc ] ) are discussed and their performances are compared .",
    "we conclude this work in sec .",
    "[ sec : conc ] .",
    "some technical details are given in the two appendices .",
    "let us consider a society formed by @xmath0 agents each of which interacting with a set of neighboring agents .",
    "the neighborhood property is reciprocal so that if agent @xmath1 is a neighbor of agent @xmath2 then @xmath2 is also a neighbor of @xmath1 .",
    "every agent is dependent on certain essential public service provided by itself or by its neighbors @xcite .",
    "we assume that the provision of this service is costly for an agent ( without loss of generality this cost is set to be unity ) , but once it is provided by one agent it will be accessible to all the neighboring agents ( fig .  [",
    "fig : pgmodel ] ) .",
    "because of this non - excludable nature of the public service , an agent does not need to provide service if at least one of its neighbors is already providing it .",
    "this is referred to as a property of strategic substitutes in the literature @xcite ) .",
    "if the service costs are borne only by the service providers , naturally every agent will not volunteer to be a provider but will wait the neighboring agents to do so , leading to extortion and the `` tragedy of the commons '' .",
    "the only fair solution under this cost no - sharing rule will then be that every agent is a service provider , which is not socially efficient as the total cost to the society is the maximum .    in this paper ,",
    "therefore , we assume that the agents have reached the agreement that free - riding is not allowed and that the total service cost is evenly shared by all the agents in the society .",
    "the challenge faced by this society is then a mechanism design problem : how to choose an appropriate set of agents as service providers such that each agent is accessible to the service .",
    "we can represent this public service location problem by a network @xmath3 of @xmath0 nodes and @xmath4 links .",
    "each node of this network represents an agent and the link @xmath5 between two nodes @xmath1 and @xmath2 signifies that @xmath1 can access the service produced by @xmath2 and @xmath2 can access the service produced by @xmath1 ( fig .",
    "[ fig : pgmodel ] ) .",
    "the network structure is fixed in time , while each node @xmath1 can choose to be a service provider ( server , denoted by occupation state @xmath6 ) or just be a consumer ( state @xmath7 ) and it might change between these two choices over time . a solution of this public service location problem",
    "is then an occupation configuration @xmath8 such that each node is either a server ( e.g. , nodes @xmath9 and @xmath10 in fig .",
    "[ fig : pgmodel ] ) or is a consumer surrounded by one or more servers ( e.g. , nodes @xmath11 and @xmath12 in fig .",
    "[ fig : pgmodel ] ) .",
    "the total number @xmath13 of servers in the solution @xmath14 is then the total service cost of the system , and @xmath15 is the fraction of servers . because of the fair - sharing rule , each consumer needs to pay a tax @xmath16 and each server will receive a subsidy @xmath17 so as to reduce its net cost back to @xmath18 .",
    "an illustration of the public service location problem .",
    "there are @xmath19 nodes ( agents ) and @xmath20 links in this example system .",
    "nodes @xmath9 , @xmath10 , and @xmath21 are the servers and the total cost of providing service is then @xmath22 .",
    "all the other eight nodes are the consumers which access service from the neighboring server nodes .",
    "each consumer has to pay a tax @xmath23 . ,",
    "scaledwidth=20.0% ]    the question we address in this paper is : how should the agents make decisions about who should be the servers so that a solution @xmath14 with sufficiently low number @xmath13 of servers can be achieved ? in the next section we will demonstrate that if every agent makes choice individually and without any cooperation , the final fraction @xmath24 of servers ( and hence the tax level @xmath18 ) can not be reduced below certain high level .",
    "we will then offer a decentralized mechanism of cooperative decision - making to solve this challenging issue efficiently .",
    "our public service location problem actually is a network game @xcite in which each agent makes decision under the strong self - interest of having access to the service and the weak incentive of lowering the number of servers .",
    "a simplest decision - making strategy is best response to the current situation of the neighborhood @xcite .",
    "if an agent @xmath1 has one or more neighboring servers it just chooses to be a consumer ( @xmath7 ) , otherwise it chooses to be a server ( @xmath6 ) . starting from an initial condition ( for example , all the agents have not yet determined ) , the agents update their choices non - synchronously until all are satisfied with their last choice . after a transient period of choice changes ,",
    "this best response dynamics will converge to a solution @xmath14 , i.e. , a nash equilibrium ( ne ) of the game , in which all the servers are separated from each other and every consumer has at least one neighboring server .",
    "the set of servers of this solution @xmath14 therefore is just a maximal independent set of the network @xmath3 @xcite .",
    "the fraction @xmath24 of servers on a large er random network of @xmath25 nodes and mean node degree @xmath26 during the best response dynamics . at each time interval",
    "@xmath27 a node @xmath1 is chosen uniformly at random from the network and its occupation state ( @xmath6 or @xmath7 ) is then updated .",
    "the three curves correspond to three different initial conditions with fraction of servers being @xmath28 , @xmath29 and @xmath30 , respectively . , scaledwidth=45.0% ]    figure  [ fig : istax ] shows the evolution of the fraction @xmath24 of serves on a single erds - rnyi ( er ) random network with @xmath25 agents and @xmath31 links ( on average each agent has @xmath32 neighbors ) .",
    "the @xmath4 links of an er network are chosen uniformly at random from the total number @xmath33 of possible links .",
    "we notice that the final value of @xmath34 reached by this best response dynamics is independent of the initial conditions and it is in excellent agreement with the predicted value of @xmath35 by a mean field theory ( see @xcite or appendix  [ app : jamming ] ) .",
    "in general , the final fraction of servers reached by the best response dynamics is @xmath36 for an er network of mean node degree @xmath37 ( fig .",
    "[ fig : erandrrandsfjam]a ) .",
    "the same converging behavior is observed for many other random network instances and real - world network instances .",
    "every node in a regular random ( rr ) network has the same integer degree @xmath38 ( so the mean degree @xmath39 ) .",
    "for such a network the fraction of servers converges to the final value @xmath40/2 $ ] ( fig .",
    "[ fig : erandrrandsfjam]b ) @xcite .",
    "the node degrees of an exponential network obey an exponential distribution with mean value @xmath37 .",
    "for such a random network we find that the fraction of servers converges to @xmath41/(2 c)$ ] [ see eq .",
    "( [ eq : jammexp ] ) ] .     the tax level that is necessary for three different decision - making protocols : the best response dynamics ( gray circles ) , the local - consensus dynamics ( green diamonds ) , and the centralized planning ( black squares ) .",
    "each data point is the averaged result obtained on @xmath42 network instances with @xmath25 nodes and mean node degree @xmath37 .",
    "we consider three types of random networks , namely er networks ( a ) , rr networks ( b ) , and sf networks ( c ) with decay exponent @xmath43 generated through the static model @xcite . , scaledwidth=45.0% ]    we also consider scale - free ( sf ) random networks which are better models of real - world networked systems than er or other homogeneous random networks @xcite .",
    "a sf network is very heterogeneous in the sense that the probability @xmath44 of a randomly chosen node to have @xmath45 attached links decays with @xmath45 in a power - law form @xmath46 with exponent @xmath47 .",
    "there are many highly connected nodes in such a network , however we find that this structural property does not help to improve the performance of the best - response mechanism ( fig .",
    "[ fig : erandrrandsfjam]c ) . on the contrary ,",
    "compared with er and rr networks of the same ( mean ) node degree @xmath37 , the final server fraction needed in a sf network is even higher .",
    "the best - response mechanism also performs poorly on real - world network instances ( table  [ tab : realnetwork ] ) .    .",
    "solving the public service location problem on eight real - world networks . for each network",
    ", we show the number of nodes @xmath0 , the number of links @xmath4 , the mean fraction @xmath24 of server nodes in the solutions obtained by three methods , namely the best - response ( br ) dynamics , the local - consensus ( lc ) dynamics , and by the global bpd algorithm @xcite . [",
    "cols=\"<,>,>,<,<,<\",options=\"header \" , ]",
    "if there is a central planner who has complete structural information about the network @xmath3 , this central planner can try to get an optimized solution @xmath14 for the public service location problem by global optimization and then appoints some agents as servers accordingly .",
    "actually the set @xmath48 of severs , with the property that every node in @xmath3 either belongs to @xmath48 or has a neighboring node in @xmath48 , is nothing but a dominating node set for network @xmath3 @xcite . therefore an optimal service location solution corresponds to a minimum dominating set , which has the smallest cardinality among all possible dominating sets .",
    "unfortunately the minimum dominating set problem is a np - hard ( nondeterministic polynomial hard ) combinatorial optimization problem , meaning that a guaranteed optimal solution can only be obtained by checking an exponential number of candidate solutions . in practice",
    "one can only solve the minimum dominating set problem approximately , and so far the best way appears to be converting it to a spin glass model and then treating it by methods of statistical physics @xcite .",
    "such a spin glass approach can offer an estimate about the size of minimum dominating sets , and it also offers a powerful message - passing algorithm called bpd ( belief propagation - guided decimation ) for solving single network instance . for random networks ,",
    "the solutions obtained by the bpd algorithm are very close to be minimum dominating sets @xcite .",
    "to be self - contained , some technical details of this algorithm are given in appendix  [ sec : bpd ] .",
    "here we use the result obtained by the bpd algorithm as a good proxy of the true optimal solution . by applying the bpd algorithm to the er network instance of fig .",
    "[ fig : istax ] we obtain a service location solution @xmath14 with a fraction @xmath49 of servers , which is much better than the solutions ( @xmath34 ) obtained by the best - response dynamics .",
    "this result confirms that the service location solutions obtained by the best - response dynamics cost too much to the society .",
    "the same conclusion holds for other random networks ( fig .",
    "[ fig : erandrrandsfjam ] ) and real - world network instances ( table  [ tab : realnetwork ] ) .",
    "although bpd or other global optimization methods can obtain socially efficient solutions for the public service location problem , such centralized mechanism design approaches may not be feasible in some social systems if either the central planner is absent or the computational burden on the central planner is unmanageable ; even if they are feasible they may be unfavorable among members of a society for fear of manipulation .",
    "is it possible to achieve close - to - optimal solutions for the public service location problem through distributed planning ? we give a positive answer to this question in the next section .",
    "we now propose a local - consensus collective selection mechanism to reach a cooperative solution for the public service location problem .",
    "let us define the impact @xmath50 of a node @xmath1 as follows : if @xmath1 is a server ( @xmath6 ) , its impact @xmath50 is the total number of consumers which rely exclusively on @xmath1 , i.e. , the consumers who can not access the service any longer once @xmath1 changes to be a consumer ; if @xmath1 is a consumer ( @xmath7 ) , its impact is the increase in the number of served nodes if @xmath1 becomes a server ( see fig .",
    "[ fig : localimpact ] for concrete examples ) .",
    "the impact of a node changes with time during the local - consensus dynamics .",
    "we assume that every node can read the latest impact values of all its neighbors and their latest occupation states as well .    in our local - consensus mechanism the servers for the network",
    "are assigned sequentially until every node is being served ( namely , it is either a server or has one or more servers among its neighbors ) .",
    "initially there is no server in the network and all the nodes are unserved consumers with the impact of a node @xmath1 simply being @xmath51 , where the degree @xmath52 is the number of this node s neighbors ( fig .",
    "[ fig : localimpact]a ) . at each elementary time interval",
    "every non - server node @xmath1 checks its neighborhood : if @xmath1 is _ unserved _ ( having no neighboring server ) , then it regards a neighboring node @xmath2 as suitable to be a server if and only if @xmath2 has the highest impact among @xmath1 s neighboring nodes and @xmath53 is no less than @xmath50 ; if node @xmath1 is _ served _ ( having at least one neighboring server )",
    "then it regards a neighboring unserved node @xmath54 as suitable to be a sever if @xmath55 . an unserved node becomes a server candidate if it is regarded as a suitable server by all its neighbors ( e.g. , node 1 in fig .",
    "[ fig : localimpact]a ) , while for a served non - server node , it becomes a server candidate if only all the neighboring unserved nodes recommend it as a server ( e.g. , node 12 in fig .",
    "[ fig : localimpact]b ) .",
    "there will be one or more non - server nodes which are evaluated as server candidates .",
    "one node ( say @xmath54 ) is selected uniformly at random from these candidates to be a server ( @xmath56 ) , and then all its neighbors update their impacts and the game process repeats ( see fig .",
    "[ fig : localimpact]b-[fig : localimpact]e ) .",
    "after all the servers are selected through such a local - consensus mechanism , if a server node has zero impact ( e.g. , node @xmath57 in fig .",
    "[ fig : localimpact]e ) , then it is changed back to be a consumer .",
    "this polish process is carried out in a random sequential manner until all the remaining servers have positive impact ( fig .",
    "[ fig : localimpact]f ) . after the final set of server nodes",
    "is obtained ( whose relative size being @xmath24 ) , the tax level @xmath18 is then set to @xmath16 so that every node bears the same cost independent of its role .     the local - consensus selection mechanism for solving the public service location problem distributively and cooperatively .",
    "blue nodes are servers , green nodes are served consumers , and white nodes are unserved consumers .",
    "the non - negative integer beside a node is its impact , which might changes with the game process .",
    "( a ) initially there is no server node , and node @xmath58 is the only candidate server who is agreed by all its neighbors .",
    "( b ) after node @xmath58 changes to be a server , all its neighbors are served , and then @xmath59 becomes the set of candidates .",
    "( d)-(e ) nodes @xmath57 , @xmath60 and @xmath61 are then sequentially chosen as server nodes by the local - consensus rule , resulting in a server arrangement with node @xmath57 having zero impact .",
    "( f ) node @xmath57 is changed back to be a consumer , resulting in the final server set @xmath62 , which is an optimal solution .",
    ", scaledwidth=45.0% ]    applying this local - consensus mechanism to the er network of fig .",
    "[ fig : istax ] , the server fraction of obtained solutions is @xmath63 , which is a big drop as compared with the server fraction of @xmath34 of the best - response mechanism , and it is only slightly beyond the server fraction of @xmath64 reached by the global bpd algorithm .",
    "this local - consensus mechanism also leads to a big drop in the fraction of servers for other er random network instances and rr networks and also for scale - free random networks whose structures are very heterogeneous ( fig .  [",
    "fig : erandrrandsfjam ] ) .",
    "its performance on real - world network instances is also very encouraging , as the solutions obtained by local - consensus and those obtained by the global bpd algorithm are almost equally good in terms of server fractions @xmath24 ( table  [ tab : realnetwork ] ) , and they are much better than the solutions obtained by the best - response dynamics .     comparing the performances of the local - consensus selection mechanism and the greedy highest - impact algorithm @xcite on an er network of @xmath25 nodes and @xmath65 links .",
    "each histogram @xmath66 of server fraction @xmath24 is obtained by sampling @xmath67 independent solutions .",
    ", scaledwidth=45.0% ]    compared with the central planning approach , a nice advantage of the local - consensus mechanism is that each node does not need to know the structure of the whole network @xmath3 but only needs to know who are the neighbors and what are their states ( server , unserved or served consumer ) and current impact values .",
    "the essence of this decentralized mechanism is that the nodes recommend their highest - impact neighbors as candidate servers .",
    "unserved _ node will only be selected as a server if it currently has the highest impact among its neighbors and the neighbors of its unserved neighbors . through this mechanism ,",
    "a served consumer node may change to be a server in response to the recommendation of all its unserved neighbors .    from the algorithmic point of view",
    ", the local - consensus mechanism is very similar to a greedy algorithm which repeatedly selects among the whole network a highest - impact consumer node and changes it into a server @xcite .",
    "interestingly , we observe that the performance of the local - consensus mechanism slightly outperforms this greedy algorithm ( fig .",
    "[ fig : erimpactdiff ] ) .",
    "this surprising difference can be explained by two factors : first the local - consensus mechanism does not perform a global ranking of nodes based on their impact values , so a node of low impact value may become a server earlier than a node of much higher impact value ; and second , and more importantly , the local - consensus selection mechanism may convert a served consumer @xmath1 to a server even if @xmath1 has neighbors of higher impact values .",
    "in this paper we considered the public service location problem as a cooperative game among @xmath0 agents in a network , and presented a local - consensus selection mechanism through which a set of high - impact agents are appointed as service providers .",
    "we demonstrated that this decentralized selection mechanism can reduce the societal cost of providing service to a low level that is close to the lowest - possible value .    from the theoretical point of view",
    ", the demonstrated excellent performance of the local - consensus mechanism is very encouraging .",
    "our work suggests that it is theoretically possible to efficiently solve the service location problem by distributed decision - making .",
    "the local - consensus mechanism does not need a central planner and it does not require the structural knowledge about the whole network .",
    "furthermore , every agent participates in the decision - making process and its opinion has been incorporated in the final cooperative solution , which may help stabilizing the solution .    for simplicity we ignored the issue of congestion in accessing service , but this is itself an interesting factor to explore @xcite .",
    "we did nt discuss the actual implementation of the local - consensus mechanism .",
    "instead we assumed the ideal situation that every agent is cooperative and obeys the microscopic rules of the local - consensus mechanism .",
    "the practical feasibility of the local - consensus mechanism is an issue to be addressed in future empirical studies .",
    "collective problem - solving , division of labor , and role specialization are common not only in human societies but also in various other social systems such as social insects ( e.g. , ants and bees ) and biological multi - cellular systems @xcite and swarms of robots @xcite . for robotic systems , it might be relatively easy to implement the local - consensus decision - making mechanism to facilitate efficient division of labor and collective problem - solving .",
    "this work was supported by the national natural science foundation of china ( grant numbers 11121403 and 11225526 ) , the state key laboratory of theoretical physics ( grant number y5kf201cj1 ) , the fundamental research funds for the central universities , and the research funds of renmin university of china ( grant number 14xnlf13 ) .",
    "in this appendix we present a mean field theory to compute the final fraction @xmath24 of occupied ( server ) nodes under the best response dynamics .",
    "this theory is applicable for a generic random network with node degree distribution @xmath44 .",
    "it focuses on the evolution of the following quantities :    1 .",
    "@xmath68 : mean number of unserved nodes at time @xmath69 ; 2 .",
    "@xmath70 : probability that at time @xmath69 a randomly chosen unserved node has degree @xmath45 ; 3 .",
    "@xmath71 : mean value of the sum of degrees of all the occupied nodes at time @xmath69 ; 4 .",
    "@xmath72 : mean value of the sum of degrees of all the unoccupied nodes at time @xmath69 ; 5 .",
    "@xmath73 : mean value of the sum of degrees of all the unserved nodes at time @xmath69 .",
    "initially all the nodes are unoccupied so @xmath74 , where @xmath37 is the mean node degree . at each time interval @xmath75",
    "a randomly chosen unserved node is occupied , therefore @xmath76 on the other hand , @xmath77 and @xmath78 the mean accumulated degree @xmath79 is expressed as @xmath80 initially all the nodes are unserved , @xmath81 . at each time interval @xmath82 a randomly chosen unserved node is occupied and all the unserved neighbors of this newly occupied node become served . since the nearest neighbors of each occupied node are all unoccupied , the probability at time @xmath69 of a randomly chosen neighbor of an unserved node also being unserved is equal to @xmath83 .",
    "consequently the evolution of the number of unserved nodes is governed by @xmath84 from this equation we can obtain the evolution equation for @xmath85 as @xmath86      } {        1-\\frac{1}{\\overline{n}_{u}(t ) } -        \\frac { \\frac{\\overline{h}_{u}(t ) } {            \\overline{h}_{0}(t)-\\overline{h}_{1}(t ) }          \\sum_{d^\\prime }   p_{u}(d^\\prime ; t ) d^\\prime        } { \\overline{n}_{u}(t ) }      } \\ ; .\\ ] ]    let us define several intensive quantities @xmath87 , @xmath88 , @xmath89 , and @xmath90 as :    @xmath91/n \\ ; , \\\\        h_u(t ) & \\equiv \\overline{h}_{u}(t ) / n \\ ; , \\\\",
    "\\rho_u(t ) & \\equiv   \\overline{n}_u(t ) / n \\ ; , \\\\",
    "c_u(t ) & \\equiv \\sum_{d } p_u(d ; t ) d \\ ; .      \\end{aligned}\\ ] ]    @xmath89 is the fraction of unserved nodes at time @xmath69 , and @xmath90 is the mean degree of unserved nodes at time @xmath69 . from eq .",
    "( [ eq : hut ] ) we know that @xmath92 furthermore , at the limit of @xmath93 we have @xmath94 and the evolution of @xmath85 is governed by @xmath95 \\ ; .",
    "\\label{eq : pukevol}\\ ] ]    combining eq .",
    "( [ eq : pukevol ] ) and eq .",
    "( [ eq : huexp ] ) we can obtain an explicit expression for @xmath85 as @xmath96 because of eq .",
    "( [ eq : dhdtexp ] ) we know that @xmath97 \\ ; .\\ ] ] plugging this expression into eq .",
    "( [ eq : pukevol3 ] ) we finally obtain that @xmath98^{d/2 }      }      {        \\sum\\limits_{d^\\prime } p(d^\\prime )        \\bigl[h(t)/c \\bigr]^{d^\\prime/2 }      } \\ ; .\\ ] ] while @xmath87 is obtained by solving the self - consistent equation @xmath99^{d/2 }      }      {        \\sum\\limits_{d^\\prime } p(d^\\prime )        \\bigl[h(t)/c \\bigr]^{d^\\prime/2 }      }      \\ ; .\\ ] ] with @xmath87 known , we can then obtain @xmath90 from eq .",
    "( [ eq : dhdtexp ] ) and then apply eq .",
    "( [ eq : drhouvst ] ) to obtain @xmath89 as the solution of the following differential equation @xmath100 ^ 2 } { h(t ) } \\ ; .\\ ] ] as time @xmath69 increases the fraction @xmath89 of unserved nodes decreases continuously and approaches zero at certain threshold time @xmath101 , i.e. , @xmath102 . since a node is occupied at each time interval @xmath82 , the final fraction @xmath24 of occupied nodes during this best response dynamics is simply @xmath103 .    in the following subsections we apply this mean field theory to several simple network ensembles .",
    "the degree distribution for an er network is @xmath104 for this random network ensemble we have    @xmath105    therefore the fraction of occupied nodes @xmath24 is @xmath106 equation ( [ eq : jammer ] ) was derived earlier in ref .",
    "@xcite following the probabilistic approach of ref .  @xcite .      in a regular random network",
    "every node has the same ( integer ) degree @xmath107 , therefore @xmath108 for this random network ensemble we have    @xmath109    therefore the fraction of occupied nodes @xmath24 is @xmath110 \\ ; .\\ ] ] equation ( [ eq : jammrr ] ) was derived earlier in ref .",
    "@xcite .      the degree distribution for an exponential random network of mean degree @xmath37 is @xmath111 for this random network ensemble we have    @xmath112 \\ ; .",
    "\\end{aligned}\\ ] ]    therefore the fraction of occupied nodes @xmath24 is @xmath113 the correctness of eq .",
    "( [ eq : jammexp ] ) has been confirmed by our numerical simulation results .",
    "selecting a minimum set of agents as service providers in a network is an intrinsically difficult combinatorial optimization problem . in the computer science literature",
    "this problem is usually referred to as the minimum dominating set problem . the spin glass model for the minimum dominating set problem and the associated replica - symmetric mean field theory",
    "have already been discussed in great detail @xcite . here",
    "we briefly review this mean field theory and the bpd message - passing algorithm .",
    "given an input network @xmath3 , the marginal probability @xmath114 that a node @xmath1 of this graph is in the occupation state @xmath115 is estimated by @xmath116 where @xmath117 is a positive re - weighting parameter ; the kronecker symbol @xmath118 if @xmath119 and @xmath120 if otherwise ; and @xmath121 denotes the set of neighboring nodes of node @xmath1 . for a link @xmath122 between two nodes @xmath1 and @xmath2 ,",
    "we denote by @xmath123 the joint probability that @xmath1 is in occupation state @xmath124 and @xmath2 is in occupation state @xmath125 when the constraint of node @xmath1 ( that is , @xmath1 should be occupied or be surrounded by at least one occupied neighobr ) is not considered .",
    "this ` cavity ' probabiity can be evaluated through the following belief - propagation ( bp ) equation : @xmath126 where @xmath127 denotes the subset obtained by deleting node @xmath1 from set @xmath128 .",
    "equations ( [ eq : mqi ] ) and ( [ eq : mbp ] ) are exploited by the bpd algorithm to construct a near - optimal dominating set for the network @xmath3 .",
    "the details of the bpd algorithm are given in @xcite .",
    "roughly speaking , at each round of the bpd process , first the bp equation ( [ eq : mbp ] ) is iterated on the network a few number of times , then the occupation prababilities @xmath114 of all the unoccupied nodes @xmath1 are estimated by eq .",
    "( [ eq : mqi ] ) , and then those nodes with the highest probabilities of being occupied are set to be occupied .",
    "more and more nodes become occupied as the bpd process continues , and it stops as soon as a dominating set is reached ."
  ],
  "abstract_text": [
    "<S> we discuss the issue of distributed and cooperative decision - making in a network game of public service location . </S>",
    "<S> each node of the network can choose to be a provider of service which is accessible to the provider itself and also to all the neighboring nodes . </S>",
    "<S> a node may also choose only to be a consumer , and then it has to pay a tax , and the collected tax is evenly distributed to all the service providers to remedy their cost . if nodes do not communicate with each other but make individual best - response decisions , the system will be trapped in an inefficient situation of high tax level . in this work </S>",
    "<S> we investigate a decentralized local - consensus selection mechanism , according to which nodes in need of service recommend their neighbors of highest local impact as candidate servers , and a node may become a server only if all its non - server neighbors give their assent . we demonstrate that this local - consensus mechanism , although only involving information exchange among neighboring nodes , leads to socially efficient solutions with tax level approaching the lowest possible value . </S>",
    "<S> our results may help in understanding and improving collective problem - solving in various networked social systems and robotic systems . </S>",
    "<S> + key words : _ public service location ; mechanism design ; local consensus ; collective problem solving ; dominating set _ </S>"
  ]
}
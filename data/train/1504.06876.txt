{
  "article_text": [
    "reversible logic is essential in quantum computing , but it also has a great potential in designing various computing devices with low power consumption .",
    "landauer proved  @xcite that irreversible computations lead to energy dissipation regardless of the underlying technology .",
    "moreover , bennett showed  @xcite that zero - level of energy loss can be achieved only when a circuit is completely built from reversible gates .",
    "the main problem is that reversible circuits with fewer number of gates ( _ gate complexity _ ) and input count are more practical to use . unfortunately , strict asymptotic bounds for the gate complexity of reversible circuits havent been found so far .",
    "circuit complexity theory goes back to the work of shannon  @xcite .",
    "he suggested considering a complexity of the minimal switching circuit implementing some boolean function as a measure of complexity of this function . for today",
    ", the asymptotic gate complexity @xmath12 of a boolean function of @xmath5 variables in a basis of classical gates `` not , or , and '' is well - known .",
    "reversible computations were discussed by toffoli in 1980  @xcite .",
    "he described the first reversible gate , 2-cnot ( controlled controlled not ) .",
    "after that various reversible gates ( cnot  @xcite , fredkin , etc . ) were introduced .",
    "the subject of this paper is reversible logic circuits consisting of not , cnot and 2-cnot gates .",
    "a formal definition of these gates from  @xcite will be used .",
    "it is well known that any even permutation @xmath13 can be implemented in a circuit with @xmath5 inputs , consisting of not , cnot and 2-cnot gates  @xcite .",
    "hence , the gate complexity or the depth of this circuit can be considered as a measure of the permutation @xmath14 complexity .    in this paper",
    "we describe a set @xmath0 of all transformations @xmath1 that can be implemented by reversible circuits with @xmath2 inputs .",
    "we estimate the gate complexity and the depth of reversible circuit , implementing some transformation @xmath15 with @xmath6 additional inputs ( also referred to as an additional memory ) . for this purpose",
    "we define the shannon gate complexity function @xmath3 and the depth function @xmath4 as functions of @xmath5 and the number of additional inputs @xmath6 .    using the counting argument",
    ", we prove general lower bounds for the functions @xmath3 and @xmath4 : @xmath16    after that we introduce a new group theory based synthesis algorithm , which can produce a circuit @xmath7 without additional inputs and with the gate complexity @xmath8 and the depth @xmath17 .",
    "finally , using these lower and upper bounds , we formulate the main statement of this paper : almost every reversible circuit with no additional inputs , consisting of not , cnot and 2-cnot gates , implements a transformation from @xmath9 with the gate complexity @xmath10 and with the depth @xmath11 .",
    "the concept of reversible gates was discussed by toffoli in 1980  @xcite .",
    "gates not and @xmath18-cnot and the synthesis of circuits consisting of these gates were discussed , for example , in  @xcite .",
    "we will use the following formal definitions of not and @xmath18-cnot gates .",
    "[ formula_not_definition ] gate @xmath19 is a not gate with @xmath5 inputs , which defines the transformation @xmath20 as follows : @xmath21    [ formula_k_cnot_definition ] gate @xmath22 , @xmath23 , is a generalized toffoli gate ( @xmath18-cnot ) with @xmath5 inputs , @xmath18 control inputs , which defines the transformation @xmath24 as follows : @xmath25    we will omit an upper index in @xmath19 and @xmath26 , if the value of @xmath5 is clear from the context .",
    "also we will refer to @xmath27 and @xmath28 as @xmath29 and @xmath30 , respectively .",
    "it is obvious that in this case the equality @xmath31 holds .",
    "let s denote a set of all not , cnot ( feynman ) and 2-cnot ( toffoli ) gates with @xmath5 inputs as @xmath32 .",
    "a circuit of gates is usually defined as an acyclic oriented graph with marked edges and vertices . in case of reversible circuits of gates from @xmath32 , fan - in , fan - out and random connection of inputs and outputs of gates are forbidden . in an oriented graph describing a reversible circuit @xmath7 , all the vertices corresponding to gates have exactly @xmath5 numbered inputs and outputs .",
    "these vertices are numbered from @xmath33 to @xmath34 and @xmath35-th output of @xmath36-th vertex , @xmath37 , is connected only to an @xmath35-th input of @xmath38-th vertex .",
    "the circuit inputs are the inputs of the first vertex and the circuit outputs are the outputs of the @xmath34-th vertex .",
    "we will also call such a connection of gates as _ composition_.    for every vertex in the graph , @xmath35-th input and output are assigned to a symbol @xmath39 from some set @xmath40 . all symbols @xmath39 can be treated as memory registers names ( memory cells indices ) , storing the current computation result of the circuit . from definitions   and   it follows that the value of only one memory register can be inverted at a time .",
    "this makes an essential difference between reversible circuits and irreversible ones .    among all the properties of a reversible circuit the most important ones for us are the gate complexity and the depth .",
    "let a reversible circuit @xmath7 with @xmath5 inputs be a composition of @xmath34 gates from @xmath32 : @xmath41 , where @xmath42 and @xmath43 are the controlled output and the set of control inputs of @xmath44-th gate respectively .",
    "the gate complexity @xmath45 of the reversible circuit @xmath41 is the number of gates @xmath34 .",
    "classically a circuit s depth is defined as the length of the longest path from an input to an output vertex of the graph , associated with this circuit . in our model of a reversible circuit , the associated graph presents itself a single chain , so if we use a classical definition of a circuit s depth , we will get it equal to the circuit s gate complexity .",
    "but it is clear that in reality it is not the case . to keep our reversible circuit s model",
    ", we introduce an alternative , but equivalent definition of a reversible circuit s depth .",
    "reversible circuit @xmath41 has depth @xmath46 , if for every two of its gates @xmath47 and @xmath48 the following equation holds : @xmath49    reversible circuit @xmath7 has depth @xmath50 , if it can be divided into @xmath51 disjoint sub - circuits with the depth of each equal to 1 : @xmath52    now we can rigorously define a reversible circuit s depth .",
    "[ define_circuit_depth ] the depth @xmath53 of a reversible circuit @xmath7 is the minimal number of disjoint sub - circuits with the depth of each equal to 1 from the equation  .    from the definition  [ define_circuit_depth ] we can derive a simple equation for the depth function in case of a reversible circuit @xmath7 with @xmath5 inputs : @xmath54    for example , let s consider a reversible circuit @xmath55 ( see fig .",
    "[ pic_scheme_example ] ) .",
    "the circuit has six gates , so its gate complexity is @xmath56 .",
    "also , we can divide the circuit into 3 disjoint sub - circuits with the depth of each equal to 1 : @xmath57 .",
    "so the circuit s depth is @xmath58 .     with the gate complexity @xmath56 and the depth @xmath58 . ]    from fig .",
    "[ pic_scheme_example ] one can note that our reversible circuit is equivalent to another one with the depth equal to 3 : @xmath59 .",
    "therefore from here on we will consider , that such circuits @xmath7 and @xmath60 are different in terms of our reversible circuit s model , but equivalent in terms of the equality of boolean transformations , defined by them .",
    "it was proved that a reversible circuit with @xmath61 inputs defines an even permutation on the set @xmath62 @xcite . in the same time",
    ", it can implement a transformation @xmath63 , where @xmath64 , with or without additional inputs .",
    "we need the following functions to explain this :    * _ expanding _ function @xmath65 defined as @xmath66 * _ reducing _ function @xmath67 defined as @xmath68 where @xmath69 is a permutation on the set @xmath70 .",
    "let us now define a reversible circuit implementing a transformation ( see fig .",
    "[ pic_function_realization_with_memory ] ) .     implementing a transformation @xmath71 with @xmath6 additional inputs . for every @xmath72 the equation @xmath73 holds . ]    a reversible circuit @xmath74 with @xmath2 inputs , defining a transformation @xmath75 , implements a transformation @xmath76 using @xmath77 additional inputs ( additional memory ) , if there is such a permutation @xmath78 that for every @xmath72 the following equation holds : @xmath79    note that in this terminology expressions `` implements a transformation '' and `` defines a transformation '' have different meanings : if a reversible circuit @xmath74 defines a transformation @xmath80 , then @xmath81 for all @xmath82 . if a circuit @xmath74 implements a transformation @xmath76 and has exactly @xmath5 inputs , we will say that this circuit implements @xmath80 _ without additional inputs_.    let @xmath83 be the set of all transformations @xmath1 .",
    "let @xmath84 be the set of all transformations that can be implemented by reversible circuits with @xmath2 inputs .",
    "the set of permutations , corresponding to all the gates from @xmath32 , generates the alternating group @xmath85 and the symmetric group @xmath86 for @xmath87 and @xmath88 respectively  @xcite .",
    "this implies that @xmath9 is equal to the set of transformations that are defined by all the permutations from @xmath85 and from @xmath86 for @xmath87 and @xmath88 respectively . on the other hand , it is not difficult to show that for @xmath89 the equality @xmath90 holds",
    ".    let s consider a transformation @xmath15 . among all reversible circuits , consisting of gates from @xmath91 and implementing the transformation @xmath80 with @xmath6 additional inputs , we can find a circuit @xmath92 with the minimum gate complexity and a circuit @xmath93 with the minimum depth .",
    "let @xmath94 and @xmath95 .",
    "now we can define the shannon gate complexity function @xmath3 and the depth function @xmath4 as follows : @xmath96    if we consider all the gates from @xmath32 regardless of an underlying technology , we can assume that they all have the same technological cost . however , in a quantum technology , for example , a technological cost of not and cnot gates is much less than a technological cost of a toffoli gate  @xcite .",
    "hence , we will assume that a gate @xmath97 from @xmath32 has the weight @xmath98 depending on the underlying technology .",
    "we define a _ quantum weight _",
    "function @xmath99 for a reversible circuit @xmath7 as a sum of weights of all its gates .",
    "note that the value of @xmath99 is not equal to the technological cost of a reversible circuit @xmath7 , because they may significantly differ .",
    "but we can state that in most cases a greater value of the function @xmath99 means a greater technological cost of a reversible circuit @xmath7 .",
    "let s define the function @xmath100 in a similar way as the functions @xmath101 and @xmath102 .",
    "then we can define the shannon quantum weight function @xmath103 as follows : @xmath104    let s also assume that all not and cnot gates from @xmath32 have the same weight @xmath105 and all 2-cnot gates from @xmath32 have weight @xmath106 . if we denote the number of not and cnot gates in a reversible circuit @xmath7 as @xmath107 and the number of 2-cnot gates as @xmath108 , then we can derive a simple equality for the quantum weight function @xmath109 equation   means that we should count the number of 2-cnot gates in a reversible circuit separately from the other ones .",
    "many reversible logic synthesis algorithms were proposed recently  @xcite . for almost every one of them",
    "an upper bound for the gate complexity of a synthesized circuit is proved .",
    "the best known is the upper bound @xmath110 for a reversible circuit @xmath7 without additional inputs , consisting of gates from @xmath32 @xcite .",
    "we can consider this bound as the best upper bound for the function @xmath111 : @xmath112    unfortunately , there are no known general lower bounds for the functions @xmath3 and @xmath4 for today . in  @xcite a lower bound @xmath113 for the function @xmath111 was proved . in  @xcite",
    "a lower bound for the gate complexity of a reversible circuit without additional inputs , consisting of gates mexor , was proved .",
    "however , the gate complexity of reversible circuits with additional inputs was out of the scope .",
    "the main result of this paper is the following theorems .",
    "[ theorem_complexity_lower ] there is such @xmath114 that for @xmath115 the following equation holds : @xmath116    the proof of the theorem  [ theorem_complexity_lower ] will be given in section  [ section_lower_bounds ] .",
    "[ theorem_depth_lower ] there is such @xmath114 that for @xmath115 the following equation holds : @xmath117    follows from the theorem  [ theorem_complexity_lower ] and the equation  .",
    "[ theorem_quantum_weight_lower ] there is such @xmath114 that for @xmath115 the following equation holds : @xmath118    follows from the theorem  [ theorem_complexity_lower ] and the equation  .",
    "[ theorem_complexity_upper_no_memory ] @xmath119 where @xmath120 is an arbitrarily slowly growing function and @xmath121 equals to : @xmath122    [ theorem_depth_upper_no_memory ] @xmath123 where @xmath120 is an arbitrarily slowly growing function and @xmath121 equals to : @xmath124    [ theorem_quantum_weight_upper_no_memory ] @xmath125 where @xmath120 is an arbitrarily slowly growing function and : @xmath126    proofs of the theorems  [ theorem_complexity_upper_no_memory][theorem_quantum_weight_upper_no_memory ] will be given in section  [ section_upper_bound_no_memory ] .",
    "[ theorem_complexity_main ] @xmath127    follows from the theorems  [ theorem_complexity_lower ] and  [ theorem_complexity_upper_no_memory ] .",
    "as we said earlier , we can implement any permutation @xmath13 with a reversible circuit without additional inputs , consisting of gates from @xmath32 . in paper",
    "@xcite it was proved that the length @xmath128 of a permutation group @xmath129 with respect to a generating set @xmath130 has the following lower bound : @xmath131 in our case we have @xmath132 , @xmath133 , @xmath134 . since the cardinality of the set @xmath32 equals to @xmath135 we can derive a simple lower asymptotic bound for the function @xmath111 : @xmath136 this bound is asymptotically equal to the bound @xmath113 from the paper  @xcite .    to derive a general lower bound for the function @xmath137 , we should take into account all transformations @xmath1 that can be implemented by a reversible circuit with @xmath2 inputs .",
    "there are no more than @xmath138 ( an @xmath5-permutation of @xmath2 ) of such transformations .",
    "let s now proceed to the proof of the theorem  [ theorem_complexity_lower ] .",
    "we use counting argument to prove that there is such @xmath114 that for @xmath115 the following equation holds : @xmath139    let @xmath140 . from the equation   it follows that @xmath141    let @xmath142 and @xmath143 be the number of all reversible circuits of gates from @xmath32 with the gate complexity @xmath144 and no more than @xmath144 respectively .",
    "then the following equations hold : @xmath145    as we said earlier , there are no more than @xmath138 of different transformations",
    "@xmath1 , that can be implemented by a reversible circuit with @xmath2 inputs .",
    "hence , we can state that @xmath146 since @xmath147 and @xmath148 , it follows that @xmath149    there is such @xmath114 that for @xmath115 an equation @xmath150 holds . for such values of @xmath5 we can state that @xmath151    from this",
    "we obtain a general lower bound for the function @xmath3 : @xmath139    in the following section we will give a description of a new group theory based synthesis algorithm , which can produce a reversible circuit with asymptotically the best gate complexity and without additional inputs .",
    "a reversible circuit without additional inputs , consisting of gates from @xmath32 , can implement only an even permutation . in  @xcite a group theory",
    "based synthesis algorithm was described .",
    "this algorithm for any permutation @xmath13 can produce a circuit @xmath7 implementing @xmath14 with the gate complexity @xmath152 .",
    "let us now describe a new synthesis algorithm which use a similar technique as the algorithm from  @xcite , but has a better upper bound for the gate complexity of a synthesized circuit .",
    "this algorithm s description will be given in a form of the theorem proof .",
    "we will describe a new group theory based synthesis algorithm , which for any permutation @xmath13 can produce a circuit @xmath7 implementing @xmath14 with the gate complexity @xmath153 where @xmath120 is an arbitrarily slowly growing function and the function @xmath121 equals to @xmath154    let s consider a permutation @xmath13 and the transformation @xmath155 , defined by it . the main idea is in a decomposition of @xmath14 into the product of transpositions in such a way that all of them can be grouped by @xmath156 independent transpositions : @xmath157 where @xmath158 is an @xmath35-th group of @xmath156 independent transpositions , @xmath159 and @xmath160 is a residual permutation .",
    "our goal is to show that a group @xmath161 can be implemented by a composition of a single multiple controls toffoli gate and many cnot and 2-cnot gates .",
    "the permutation @xmath14 can also be represented as the product of independent cycles with the sum of cycles lengths no more than @xmath162 . having this permutation representation , we can obtain independent transpositions from the cycles as follows : @xmath163 @xmath164    if we look at the permutation representation   and the equations  , we will see that @xmath156 independent transpositions ca nt be obtained from a residual permutation @xmath160 only if it has less than @xmath156 independent cycles and every of these cycles has the length less than 5 .",
    "hence , a sum of the cycles lengths of the permutation @xmath160 is no more than @xmath165 .",
    "let @xmath166 be the set of non - fixed points of a permutation @xmath167 : @xmath168 then we can state that @xmath169 , @xmath170 .",
    "if we apply the equation   to the permutation @xmath160 providing that @xmath171 , we will see that this permutation can be represented as a product of no more than @xmath172 independent transpositions pairs and one cycle with the length 3 at most .",
    "every cycle with the length 3 also can be represented as a product of two independent transpositions pairs : @xmath173    let @xmath174 be a permutation which is represented as a product of @xmath35 independent transpositions and @xmath175 be the transformation defined by this permutation .",
    "now we can derive an upper bound for the function @xmath176 , where @xmath177 is the transformation , defined by a permutation @xmath13 : @xmath178 all we should do now is to find out an upper bound for the function @xmath179 .",
    "let s consider an arbitrary permutation @xmath180 .",
    "let @xmath18 be the cardinality of the set @xmath181 : @xmath182 , then @xmath183 .",
    "the essence of the proposed synthesis algorithm is in a conjugation of the permutation @xmath184 in order to get a permutation corresponding to a single @xmath18-cnot gate .",
    "every gate @xmath97 from @xmath32 defines a permutation @xmath185 , for which @xmath186 .",
    "this means that conjugating @xmath184 by @xmath185 corresponds to the attaching the gate @xmath97 to the front and back of a current sub - circuit .",
    "let @xmath187 .",
    "we define a matrix @xmath188 as follows : @xmath189    let @xmath18 be the power of two : @xmath190 . if @xmath191 , then we can state that no more than @xmath192 and no less than @xmath193 pairwise distinct columns exist in the matrix @xmath188 . without the loss of generality we can assume that all @xmath194 pairwise distinct columns are the first ones . then for every @xmath44-th column , @xmath195 , there is equal to it an @xmath35-th column , @xmath196 . if we conjugate @xmath184 by the permutation , corresponding to the gate @xmath197 , we will zero out a @xmath44-th column in the matrix @xmath188 .",
    "we do this for all the columns whose index is greater than @xmath51 using @xmath198 cnot gates .",
    "[ page_l1 ] in result we obtain a new permutation @xmath199 and a new matrix @xmath200 for it as follows : @xmath201    now for every @xmath202 we conjugate @xmath199 by the permutation corresponding to the gate @xmath203 in order to zero out the first row of the matrix @xmath200 .",
    "we need @xmath204 not gates to do this .",
    "[ page_l2 ] in result we obtain a new permutation @xmath205 and a new matrix @xmath206 for it as follows : @xmath207    next step is reducing the matrix @xmath206 to a _",
    "canonical form _",
    ", where every row , after reversing the order of its elements , will represent itself the binary expansion of row index minus 1 .",
    "all the rows in the matrix @xmath206 are distinct .",
    "the first row is already in the canonical form , so we will successively transform the rest of the rows beginning from the second one . let s assume that the current row has an index @xmath35 and all the rows with indices from @xmath33 to @xmath208 are in the canonical form .",
    "there are two cases :    1 .",
    "there is nonzero element @xmath209 in the @xmath35-th row with an index @xmath210 . in this case for every element @xmath211 , @xmath212 , @xmath213 , which is not equal to the @xmath214-th bit in the binary expansion of the number @xmath208 , we conjugate @xmath205 by the permutation corresponding to the gate @xmath215 .",
    "this will require no more than @xmath216 cnot gates . to make the current row canonical",
    ", we should now zero out only the @xmath44-th element of it .",
    "it can be done with conjugating @xmath205 by the permutation corresponding to the gate @xmath217 , where @xmath218 is the set of nonzero bits indices in the binary expansion of the number @xmath208 .",
    "for example , if @xmath219 , then @xmath220 . since @xmath221 , we can replace this multiple controls toffoli gate by a composition of no more than @xmath222 toffoli gates  @xcite , thus we need no more than @xmath223 toffoli gates for this part .",
    "+ so , summing up , in this case we need @xmath224 gates from @xmath32 to transform the @xmath35-th row to the canonical form",
    "there is no nonzero element in the @xmath35-th row with an index @xmath210 : @xmath225 for all @xmath210 . in this case , we conjugate @xmath205 by the permutation corresponding to the gate @xmath226 , where @xmath218 is the set of current row nonzero elements indices .",
    "because of inequality of matrix rows and because all the previous rows are in the canonical form , we can state that the value of @xmath227 will be inverted only if @xmath228 .",
    "since @xmath221 , we can replace this multiple controls toffoli gate by a composition of no more than @xmath222 toffoli gates  @xcite , thus we need no more than @xmath223 toffoli gates for this part .",
    "after that we can go to the previous case .",
    "+ so , summing up , in this case we need @xmath229 gates from @xmath32 to transform the @xmath35-th row to the canonical form .",
    "as we can see , we obtained a new restriction to the value of @xmath18 : @xmath193 should be strictly less than @xmath5 , otherwise we will not be able to transform the matrix @xmath206 to the canonical form . after this transforming , we obtain a new permutation @xmath230 and a new matrix @xmath231 for it as follows : @xmath232 for this transformation we need @xmath233 gates from @xmath32[page_l3 ] : @xmath234    finally , for every @xmath235 we conjugate @xmath230 by the permutation corresponding to the gate @xmath203 .",
    "we need @xmath236 not gates to do this.[page_l4 ] in result we obtain a new permutation @xmath237 and a new matrix @xmath238 for it as follows : @xmath239    the permutation @xmath237 corresponds to the single gate @xmath240 .",
    "this gate has @xmath241 control inputs , thus it can be replaced by no more than @xmath242 [ page_l5 ] toffoli gates  @xcite .",
    "we obtained the permutation @xmath237 with the help of conjugation the permutation @xmath184 by specific permutations .",
    "if we conjugate @xmath237 by exactly the same permutations , but in a reverse order , we will obtain @xmath184 . in terms of a circuit synthesis",
    "this means that we should attach all the gates we used in our matrix transformations to the gate @xmath240 from left and right , but in a reverse order . as a result",
    "we will obtain a reversible circuit @xmath243 , which defines the permutation @xmath184 . from this",
    "it follows that @xmath244 and @xmath245 @xmath246 also , @xmath247 .    using these upper bounds in the equation  , we obtain the following upper bound for the function @xmath176 : @xmath248    our synthesis algorithm requires @xmath18 to be the power of two and @xmath193 to be strictly less than @xmath5 .",
    "let @xmath249 and @xmath250 , where @xmath120 is an arbitrarily slowly growing function .",
    "then @xmath251 and @xmath252    from this we obtain the final upper bound for the function @xmath176 : @xmath253 where the function @xmath121 equals to @xmath122    since our synthesis algorithm can produce a reversible circuit @xmath7 for an arbitrary permutation @xmath13 , it follows that the function @xmath111 is upper bounded by the same value as @xmath176 .    to explain the main part of our synthesis algorithm ,",
    "let s consider a permutation @xmath254 .",
    "this permutation can be implemented by a reversible circuit @xmath255 .",
    "the process of obtaining the circuit @xmath7 is showed in fig .",
    "[ pic_conjugation_process ] .",
    "ccc @xmath7 & @xmath256 & @xmath257 +   + @xmath258 & @xmath259 & @xmath260    ccc @xmath261 & @xmath262 & @xmath263 +   + @xmath264 & @xmath265 & @xmath266    @xmath267    the proposed synthesis algorithm allows us to prove the theorem  [ theorem_depth_upper_no_memory ] .",
    "we should prove the following equation : @xmath268 where @xmath120 is an arbitrarily slowly growing function and @xmath121 equals to @xmath269 this can be easily done , if we take into account that some of operations in the proposed synthesis algorithm can be done with the logarithmic depth . for example , we can zero out duplicating columns in the matrix with the logarithmic depth ( see fig .",
    "[ pic_zeroing_out ] ) .",
    "also , a conjugation by permutations , corresponding to not gates , can be done with the constant depth .",
    "this implies that @xmath270 ( against @xmath198 , see page  ) , @xmath271 ( against @xmath204 , see page  ) and @xmath272 ( against @xmath273 , see page  ) .",
    "all other parts of our synthesis algorithm produce sub - circuits with the depth equal to the gate complexity : @xmath274 , @xmath275 ( see page  ) .",
    "using these depth values , we can derive the following upper bound : @xmath276 also , @xmath277 .    using these upper bounds in the equation   for the circuit depth , we obtain the following upper bound for the function @xmath278 : @xmath279    providing @xmath249 and @xmath250 , where @xmath120 is an arbitrarily slowly growing function",
    ", we obtain an upper bound for the function @xmath278 : @xmath280 where the function @xmath121 equals to @xmath281    since our synthesis algorithm can produce a reversible circuit @xmath7 for an arbitrary permutation @xmath13 , it follows that the function @xmath282 is upper bounded by the same value as @xmath278 .",
    "now we should prove the last theorem of this paper .",
    "we should count the number of not , cnot and 2-cnot gates in a reversible circuit , synthesized by the proposed synthesis algorithm , to prove an upper bound of the theorem @xmath125 where @xmath120 is an arbitrarily slowly growing function and @xmath126    we can see that @xmath283    summing up , we obtain the following upper bounds : @xmath284 also , @xmath285 and @xmath286 .    using the equation  , we obtain the following upper bounds for the functions @xmath287 and @xmath288 : @xmath289    providing @xmath249 and @xmath250 , where @xmath120 is an arbitrarily slowly growing function , we obtain the following upper bounds for the functions @xmath287 and @xmath288 : @xmath290 where the functions @xmath291 and @xmath292 equal to @xmath126    since our synthesis algorithm can produce a reversible circuit @xmath7 for an arbitrary permutation @xmath13 , it follows that the function @xmath293 is upper bounded by the same value as @xmath294 . from upper bounds for the functions @xmath287 and @xmath288 and from the equation  , an upper bound for the function @xmath293 from the theorem  [ theorem_quantum_weight_upper_no_memory ] follows .    from the proof it follows that the ratio of the numbers of gates not , cnot and toffoli in a synthesized circuit is approximately equal to 1:1:4 .",
    "we have discussed the problem of general synthesis of a reversible circuit without additional inputs , consisting of not , cnot and 2-cnot gates , with the lowest possible gate complexity and depth .",
    "we have studied the shannon gate complexity function @xmath3 , the depth function @xmath4 and the quantum weight function @xmath103 for a reversible circuit , implementing a transformation @xmath76 from the set @xmath0 without additional inputs .    from the lower bounds of these function",
    "we can see that using additional inputs should reduce the circuit s gate complexity and the depth .",
    "this is in line with respective practical evaluations as e.g. conducted in  @xcite . also , in paper  @xcite an upper asymptotic bound @xmath162 for the function @xmath3 in case of using additional inputs was established .",
    "this bound is asymptotically lower than our bound for @xmath111 , but a significant number of additional inputs in a reversible circuit is required to achieve it .    when solving the problem of reversible logic synthesis one should find a compromise between the gate complexity , the depth ( working time ) and the amount of used memory ( additional inputs ) of a reversible circuit .",
    "further research should establish a more precise relationship of these parameters from each other .",
    "a. barenco , c.h .",
    "bennet , r. cleve , d.p .",
    "divincenzo , n. margolus , p. shor , t. sleator , j.a .",
    "smolin and h. weinfurter .",
    "elementary gates for quantum computation .",
    "_ aps physical review a _ , 52(5):34573467 , 1995 .",
    "doi : 10.1103/physreva.52.3457    a.b .",
    "khlopotine , m.a . perkowski and p. kerntopf .",
    "reversible logic synthesis by iterative compositions . in _",
    "iwsl02 : proceedings of the international workshop on logic and synthesis _ , pages 261266 , louisiana , usa , june 2002 .",
    "miller and g.w .",
    "spectral techniques for reversible logic synthesis . in _",
    "6^th^ international symposium on representations and methodology of future computing technologies _ , pages 5662 , march 2003 .",
    "miller , d.a .",
    "maslov and g.w .",
    "dueck . a transformation based algorithm for reversible logic synthesis . in _",
    "dac03 : proceedings of the 40^th^ annual design automation conference _ , pages 318323 , california , usa , june 2003 .",
    "doi : 10.1145/775832.775915    m. saeedi , m. sedighi and m.s .",
    "zamani . a novel synthesis algorithm for reversible circuits . in _ iccad07 : proceedings of international conference on computer - aided design _ ,",
    "pages 6568 , california , usa , november 2007 .",
    "doi : 10.1109/iccad.2007.4397245    d.a .",
    "maslov , g.w .",
    "dueck and d.m .",
    "techniques for the synthesis of reversible toffoli networks . _",
    "acm trans . on design automation of electronic systems ( todaes ) _ , 12(4",
    "doi : 10.1145/1278349.1278355    m. saeedi , m.s .",
    "zamani , m. sedighi and z. sasanian .",
    "reversible circuit synthesis using a cycle - based approach .",
    "_ acm j. on emerging technologies in computing systems ( jetc ) _ , 6(4 ) , 2010 .",
    "doi : 10.1145/1877745.1877747      m.m .",
    "gluhov and a.y .",
    "o dlinah simmetricheskih i znakoperemennyh grupp podstanovok v razlichnyh sistemah obrazujushhih ( obzor ) . in _ mathematical problems of cybernetics _ , 8:532 , nauka publishers , moscow , 1999 ( in russian ) .",
    "zakablukov . reduction of the reversible circuits gate complexity without using the equivalent replacement tables for the gate compositions .",
    "_ j. science and education , bmstu , electronic scientific and technical journal _ ,",
    "no.3 , 2014 ( in russian ) .",
    "doi : 10.7463/0314.0699195    d.m .",
    "miller , r. wille and drechsler r. reducing reversible circuit cost by adding lines . in _",
    "ismvl10 : proceedings of the 40^th^ ieee international symposium on multiple - valued logic _ , pages 217222 , spain , may 2010 .",
    "10.1109/ismvl.2010.48    n. abdessaied , r. wille , m. soeken and r. drechsler . reducing the depth of quantum circuits using additional circuit lines . in _",
    "rc13 : proceedings of the 5^th^ international conference on reversible computation _ , pages 221233 , victoria , bc , canada , july 2013 .",
    "doi : 10.1007/978 - 3 - 642 - 38986 - 3_18    d.v .",
    "zakablukov gate complexity of reversible circuits as a measure of even permutation complexity .",
    "i m . n.e .",
    "baumana , priborostr . _",
    "[ _ herald of the bauman moscow state tech .",
    ", instrum .",
    "_ ] , 1(100):67-82 , 2015 ( in russian ) ."
  ],
  "abstract_text": [
    "<S> reversible computation is one of the most promising emerging technologies of the future . </S>",
    "<S> the usage of reversible circuits in computing devices can lead to a significantly lower power consumption . in this paper </S>",
    "<S> we study reversible logic circuits consisting of not , cnot and 2-cnot gates . </S>",
    "<S> we introduce a set @xmath0 of all transformations @xmath1 that can be implemented by reversible circuits with @xmath2 inputs . </S>",
    "<S> we define the shannon gate complexity function @xmath3 and the depth function @xmath4 as functions of @xmath5 and the number of additional inputs @xmath6 . </S>",
    "<S> first , we prove general lower bounds for functions @xmath3 and @xmath4 . </S>",
    "<S> second , we introduce a new group theory based synthesis algorithm , which can produce a circuit @xmath7 without additional inputs and with the gate complexity @xmath8 . using these bounds </S>",
    "<S> , we state that almost every reversible circuit with no additional inputs , consisting of not , cnot and 2-cnot gates , implements a transformation from @xmath9 with the gate complexity @xmath10 and with the depth @xmath11 .    </S>",
    "<S> * keywords * : reversible logic , gate complexity , circuit depth , asymptotic bounds . </S>"
  ]
}
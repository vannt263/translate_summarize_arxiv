{
  "article_text": [
    "vertex coloring problems ( vcp ) have been studied extensively since the inception of graph theory . in classical form ,",
    "problem of @xmath0-coloring a graph is stated like this : can we color vertices of a graph using @xmath0 different colors , so that no neighbouring vertices have the same color ? it is known that this problem is np - complete @xcite .",
    "vcps have received much attention in the literature not only for its theoretical aspects and difficulty from the computational point of view , but also for its real world applications , for example in : scheduling @xcite , timetabling @xcite , register allocation @xcite , train platforming @xcite , frequency assignment @xcite , communication networks @xcite and many other engineering fields .    in this paper",
    "we study a variation of the coloring problem . using only two colors we want to color the vertices , so that there is no monochromatic cycle of given length .",
    "there have been some research in solving a slightly different problem : is there a 2-coloring such that there exists no monochromatic cycles ( of any length ) .",
    "this problem can be viewed as partitioning a graph into two induces forests and it is known to be np - complete @xcite for directed graphs .",
    "another result worth mentioning is by nobinon et al .",
    "@xcite where authors show that this problem is np - complete even for oriented graphs .",
    "they also give implementation of three exact algorithms and some inapproximability results . the motivation to study",
    "this class of problems lies in economics  2-coloring without monochromatic cycles can be used in the study of rationality of consumption behavior .",
    "many more papers have been written on subject of acyclic coloring ( or partitioning ) .",
    "papers relevant to ours include ( among many others ) : @xcite , @xcite , @xcite .",
    "the rest of the paper is organized in the following way : in section 2 we define notation used in this paper , we also give definitions of studied problems and we state the main theorem . in section 3 and 4",
    "we prove the hardess of our coloring problem for cycles of small length ( 3 , and 4 ) .",
    "later , in section 5 we generalize the ideas used in previous sections to prove the main theorem .",
    "we end the paper with some conclusions and we show perspectives for future work .",
    "the purpose of this section is to introduce reader to notation used in later chapters as well as definitions of studied problems .",
    "let @xmath1 be an undirected , unweighted graph .",
    "the _ cycle _ in @xmath2 is a vertex disjoint , closed , simple path in @xmath2 .",
    "we denote @xmath3 to be a set of all cycles in @xmath2 of length @xmath0 .",
    "let @xmath4 be a mapping that for each vertex in @xmath5 assigns one of two colors ( _ red _ or _ blue _ ) .",
    "we will call any such @xmath6 : the _ coloring _ of graph @xmath2 .",
    "furthermore , we will say that given coloring @xmath6 is _ valid _ , if a certian predicate @xmath7 is true .",
    "let @xmath8 be a clique of size @xmath9 , that is : a graph with @xmath9 vertices in which every vertex is connected by an edge to any other vertex .",
    "let @xmath10-@xmath11 be the decision problem of whether there exists a valid 2-coloring for given graph .",
    "we give the validity predicate @xmath12 below .",
    "it is true only if the coloring @xmath6 does not contain any cycles of size @xmath0 with vertices of the same color .",
    "@xmath13    formally , our problem can be expressed as :    @xmath14    we are interested in knowing how hard is the question , whether given graph @xmath2 belongs to @xmath10-@xmath11 . in the next two sections we study the simplest variants , that is when @xmath15 and @xmath16 .",
    "cycle of size three we call a _ triangle _ , and of size four : a _",
    "square_.    let @xmath17denote the classical boolean satisfiability problem .",
    "namely , it is the set of all boolean formulas in cnf ( conjunctive normal form ) for which there exists a truth assignment that satisfies it .",
    "it is known that this problem is np - complete @xcite .",
    "it is also known that a certain variation of @xmath17called @xmath18-@xmath17(not - all - equal sat ) is np - complete @xcite . in this variation",
    "we impose additional constraint on the satisfing assignment : each clause has at least one literal that is true , and at least one that is false .",
    "we denote @xmath0-@xmath17and @xmath0-@xmath18-@xmath17(for @xmath19 ) to be subsets of @xmath17and @xmath18-@xmath17where each clause in given formula has at most @xmath0 literals ( it s in kcnf ) . for @xmath20 for both problems there",
    "exists polynomial time algorithms that solves them .",
    "we are ready to state the main theorem :    [ thm : main ] for any integer @xmath19 , @xmath10-@xmath11 is np - complete .    in order to prove theorem [ thm : main ] , we will prove the following theorem :    [ thm : red ] for any integer @xmath19 , there exists a computable function @xmath21 , such that for any boolean formula @xmath22 , @xmath23-@xmath18-@xmath17 if and only if @xmath24@xmath10-@xmath11 .",
    "in this section we prove theorem [ thm : red ] for @xmath15 .",
    "let @xmath22 be a boolean formula in 3cnf with @xmath9 variables @xmath25 and @xmath26 cluses @xmath27 .",
    "we construct desired graph @xmath28 in the following way .",
    "let us begin by showing an abstract form of @xmath28 .",
    "the reduction consists of three gadgets : one for each variable , one for each clause , and one for each _ super - edge_. the super - edge @xmath29 is an edge with a property , that any valid coloring @xmath6 implies that @xmath30 . for starters , assume that we already have such edges at our disposal .",
    "this is how we would construct @xmath28 : a gadget for variable @xmath31 consists of two vertices labeled @xmath31 and @xmath32 connected by a super - edge .",
    "gadget for clause @xmath33 consists of a triangle with vertices labeled @xmath34 and @xmath35 .",
    "we connect each literal from variable gadget to its every occurrence in clause gadgets using super - edges .",
    "example is given in figure [ fig : basic_red ] for formula @xmath36 .",
    "dashed lines represent super - edges .",
    "we prove that this is indeed the correct reduction .        for any given @xmath22 ,",
    "graph @xmath28 has a property , that :    @xmath37    first we assume that @xmath38-@xmath18-@xmath17and let @xmath39 be the truth assignment that certify it .",
    "each vertex with non - negated label @xmath31 in vertex gadgets is colored red if @xmath40 and blue otherwise .",
    "coloring of every other vertex is forced by super - edges .",
    "notice that the only place where there could be any monochromatic triangle is in some clause gadget .",
    "we can not make that trinagle using mixture of vertices from other clause gadgets or vertex gadgets because we always have to pass through a super - edge , hence we change a color of vertices on our path .",
    "now if we assume on the contrary , that some clause @xmath33 form a monochromatic triangle , then either @xmath41 or @xmath42 , which gives a contradiction .",
    "now let @xmath6 be the valid coloring of @xmath28 .",
    "since @xmath28 has no monochromatic triangles , and from the property of super - edge we simply assign value @xmath43 for all variables from vertex gadgets that have color red , and @xmath44 otherwise .",
    "this gives an assignment @xmath39 that proves that @xmath38-@xmath18-@xmath17 . to see that ,",
    "observe that every clause corresponding to clause gadget will have at least one literal that is true , and at least one that is false , because this clause gadget does not form a monochromatic triangle , which was assumed .",
    "all we have to do now is construct a gadget for super - edge .",
    "such gadget need to have a property , that some selected edge @xmath45 in that gadget will always have @xmath46 , for any valid coloring @xmath6 of that gadget ( a valid coloring also has to exist ) .",
    "an example of the gadget is shown in figure [ fig : super_edge1 ] .",
    "on the left picture edge @xmath45 is pointed out . in the middle",
    "we have an example of valid coloring , and on the picture on the right we see how coloring @xmath45 in one color gives a contradiction ( vertex with a question mark can not be colored neither red , nor blue ) .",
    "the existence of this gadget completes the proof of theorem [ thm : red ] for @xmath15 ( and also theorem [ thm : main ] , with additional observation that our reduction is polynomial with respect to size of @xmath22 ) .",
    "we argue , that even if a super - edge in figure [ fig : super_edge1 ] is enough to verify the genuineness of theorem [ thm : red ] ( for @xmath15 ) , it is not ellegant .",
    "we give a better construction of the gadget that uses a certain coloring property of @xmath47 .",
    "our method is also easier to generalize for @xmath48 .",
    "the basic observation is that when we color any two vertices of @xmath47 in one selected color ",
    "lets say red  then the other two vertices will have to be colored blue ( otherwise there would be a monochromatic triangle ) . now",
    "if we were to _ hook _ another @xmath47 to those blue vertices ( see figure [ fig : coloring_property ] ) then the two non - colored vertices would have to be red , and so on , and so on .",
    "with this we can create _",
    "strings _ of @xmath47-s .",
    "the trick is to tie two ends of the string together .",
    "this will form a _",
    "loop_. it is easy to verify , that loop of length 5 is the desired gadget for super - edge .",
    "we show its properties in figure [ fig : super_edge2 ] . on the left ,",
    "the edge @xmath45 is pointed out . in the middle picture",
    "we give some valid coloring , and the last picture shows how coloring @xmath45 in a single color leads to a contradiction ( vertices marked in question marks can not be colored without creating a monochromatic triangle ) . in fact",
    ", we can make an easy observation :    any loop of odd length ( for lengths greater than 3 ) can be used as a gadget for super - edge .",
    "it turns out that loop of length 3 can not be used , because it is isomorphic to @xmath49 ( and therefore is not colorable ) .",
    "also , coloring loops of even length would not lead to a contradiction , no matter which edge you choose for @xmath45 .",
    "we leave verification of this statements to the reader .",
    "our symmetric gadget is slightly bigger than the one in figure [ fig : super_edge1 ] .",
    "it s 25 edges and 10 vertices versus 21 edges and 9 vertices .",
    "it has been computed ( by brute - force ) , that there is no super - edge gadget that uses 8 vertices or less .",
    "we did not bother to check if there is a gadget with number of edges less than 21 . using the symmetric gadget we can compute number of edges and vertices used in entire @xmath28 .",
    "let @xmath50 , @xmath51 , @xmath52 denote a set of edges used in all clause gadgets , all vertex gadgets and all super - edge gadgets respectively .",
    "we define @xmath53 , @xmath54 , @xmath55 in a similiar fashion .",
    "we have :    @xmath56    @xmath57    this shows that reduction can be performed in polynomial time ( with respect to @xmath9 and @xmath26 ) and therefore completes ( yet another ) proof of theorem [ thm : red ] .",
    "but we can improve the reduction even further and push properties of our symmetric gadget to its limit .",
    "we will now show what we call _ the necklace reduction_. if we look at a loop of size @xmath58 , we will spot as many as @xmath58 candidates for chosing the edge @xmath45 .",
    "this is easily seen in figure 5 . the symmetry of our gadget guarantees , that any edge on the juncture of @xmath47-s can be considered @xmath59 .",
    "but that leaves @xmath60 candidates unused . in nacklace reduction",
    "we get rid of wasting so many useful edges ( to some extent ) .",
    "we simply weave all vertex gadgets on a single loop of length @xmath61 .",
    "vertex gadget for variable @xmath62 ( for @xmath63 ) now becomes egde on the juncture of @xmath64-th and @xmath65-th @xmath47-s ( numeration can start at any arbitrary @xmath47 ) .",
    "we leave the rest of reduction the same as before .",
    "we have now created a beautiful necklace of which example can be seen in figure [ fig : necklace ] ( it uses formula from previous example ; some labels were omitted ) .",
    "number of edges and vertices drops down to :    @xmath66    we can further improve the necklace by weaving all other super - edges , but the construction is rather complicated .",
    "details will be available in extended version of this paper .",
    "in this section we extend our reduction to cycles of length 4 .",
    "the abstract form of @xmath28 remains almost the same and the only diffrence is that we have squares in place of triangles for clause gadgets .",
    "in fact we use the similiar graph for higher values of @xmath0 .",
    "proof of correctness is the same as before , so we leave the details to the reader .    the most importnant part is to construct a gadget for super - edges .",
    "now , we want to create a graph with a selected edge @xmath45 that there exists a valid coloring ( without monochromatic squares ) and that in every valid coloring @xmath6 : @xmath67 .",
    "we use @xmath49 as a building block for the gadget and exploit its coloring property .        in figure",
    "[ fig : coloring_property_k6 ] on the left we see @xmath49 . on the right",
    "it is the same @xmath49 , but with rearranged edges .",
    "three arbitrarily chosen , disjoint edges have been pointed out and streched in three different directions .",
    "rest of the edges are less significant so we placed dotted lines in their place .",
    "notice , that when we color vertices of top edge in a single color  let s say red  then by using easy pigeon hole argument we can conclude , that exactly one of two bottom edges will have both of its vertices colored blue .    to further simplify the @xmath49 ,",
    "imagine that the selected edges become nodes and that there are lines between top node and two bottom nodes .",
    "this creates a reverse v - shaped component .",
    "the node which has two different colors associated to it , we label as @xmath68 ( see figure [ fig : coloring_property_k6_2 ] ) .    ]",
    "now we present the trick to our gadget .",
    "we build a full binary tree of height 4 , consisting of reverse v - shaped components .",
    "it follows from coloring property of @xmath49 discussed before , that if we color root node in red , then there exist a path from root to leaf with alternating colors ( see figure [ fig : super_edge_sq ] ) .",
    "notice the analogy to the construction of strings in previous section .        to achieve a contradition we connect all leafs to the root using two edges for each leaf in a way that they form a square .",
    "this completes the construction .",
    "we choose root node as @xmath45 .    chosing",
    "the height 4 for @xmath43 is not a coincidence , as using any tree of smaller size would either not lead to contradiction ( heights 1 or 3 ) or would not be colorable  for height 2 we can find a monochromatic square in any coloring .",
    "we again leave verification to the reader .",
    "it remains to show that our gadget has a valid coloring .",
    "we simply label all nodes by @xmath68 .",
    "we now prove that this will not create any monochromatic square .",
    "there are two places in our gadget that require special attention :    * @xmath69 .",
    "connections between inner nodes of the tree , and * @xmath70 .",
    "connections between leafs and root .",
    "both of them can be handaled in a strightforward way . for the former look at figure [ fig : connections_1 ] , where we reverse the process of @xmath49-simplification for some subtree of @xmath43 .",
    "we quickly verify , that there are no monochromatic squares .",
    "this is the smallest , nontrivial subtree in which there could lurk some hidden monochromatic squares .",
    "thanks to regular structure and symmerty of full binary trees , any other combinations of nodes need not be checked .",
    "one could use induction for formal proof , but we will leave it like this .",
    "@xmath70 couses some minor troubles .",
    "take a look at figure [ fig : connections_2 ] .",
    "notice that we found a monochromatic square .",
    "this leads to conclusion that not every coloring that labels each node by @xmath68 is valid .",
    "we can fix that by coloring both leafs so that they form alternating squares with the root ( the color is alternating ) .",
    "now any path that passes from leaf to root have to change the color , so there are no more threat to find a monochromatic square .",
    "this completes the proof of theorem [ thm : red ] for @xmath16 .",
    "we see that this is a polynomial reduction . for sake of completness",
    "lets count number of edges and vertices in a single super - edge gadget , and then in entire graph @xmath28 :    @xmath71    @xmath72    @xmath73",
    "in this section we finally prove theorem [ thm : red ] for @xmath74 . we do this by expanding the binary tree gadget from last section",
    ". the tree will grow exponantially with respect to @xmath0 , but remember that @xmath0 is a constant associated with the problem @xmath10-@xmath11 , so our reduction will still be polynomial in size of @xmath22 ( but very , very big ) .",
    "our goal now is to construct a graph with a selected edge @xmath45 , that there exists a valid coloring ( without monochromatic cycles of length @xmath0 ) and that in every valid coloring @xmath6 : @xmath67 . for",
    "now assume that @xmath0 is even .",
    "this will simplify our reasoning .",
    "first we construct a binary tree @xmath43 consisting of reverse v - shaped components introduced in previous section .",
    "let height of @xmath43 be @xmath75 .",
    "for @xmath76 , we will call all nodes of depth @xmath77 : _ cycle - inducing _ ( notice that root and leafs are also cycle - inducing ) .",
    "let @xmath78 be the set of all cycle - inducing nodes in @xmath43 . if we color root node in a single color ",
    "let s say red  then there exists a path @xmath79 from root to some leaf , with alternating colors .",
    "notice that all nodes in @xmath80 are now colored red .",
    "those nodes will create a monochromatic cycle of length @xmath0 . to achieve this , we add edges between cycle - induced nodes in the following way .",
    "first , we connect root and leafs just like in previous section .",
    "next , for each cycle - induced node of depth @xmath77 ( @xmath81 ) we conect it to all its descendants on depth @xmath82 ( they also belong to @xmath78 ) .",
    "we add edges between them the same way we did with root and leafs .",
    "the example of how this produces monochromatic cycle is shown on in figure [ fig : super_edge_general ] .",
    "if we take the graph induced by @xmath80 , it forms a _",
    "donut _ shown in the right picture .",
    "we can easily identify a monochromatic cycle of length @xmath0 .",
    "last thing to do is to prove that there exist a valid coloring of our super - edge gadget .",
    "again we begin with labeling all nodes in tree by @xmath68 . we know from previous section how to handle connections between root and",
    "leafs  we have to do the same with all cycle - inducing nodes and their first cycle - inducing descendants .",
    "this way we will not be able to form a monochromatic cycle that passes through two different nodes that are in @xmath78 . note that at this point the gadget is correct only when value @xmath83 is odd .",
    "this is true because of the way we color nodes in @xmath78 : the coloring of nodes on level @xmath77 force the coloring on nodes on level @xmath82 .",
    "this problem can be easily fixed by expanding tree another 4 levels and treating nodes at level @xmath84 as _ dummy nodes_.    we are left with the case when @xmath0 is an odd number .",
    "note that the construction above is not working in this case , as we will not achieve a contradiction .",
    "the fix is as follows : we change connections between leafs and root .",
    "choose one vertex of root node and connect all vertices in leafs to it .",
    "this creates triangles rather than squares and the _ donut _ now looks like someone has taken a bite , but we can now find a monochromatic cycle of length @xmath0 for all odd numbers ( if we color root node in red ) .",
    "the valid coloring does not change .",
    "for sake of completness we count the number of edges and vertices in entire reduction :    @xmath85    @xmath86    thus , we have proved theorem [ thm : main ] .",
    "we have shown that using symmetry , one can conceive many interesting combinatorial structures and in graph theory there is nothing more symmetric and regular than a clique .",
    "the obvious question is : can we make the reduction smaller ?",
    "we have proved that string gadget from section 3 can be used as a tool to greatly decrease the number of edges and vertices used , but we do not know if the same can be said about tree gadget from sections 4 and 5 ."
  ],
  "abstract_text": [
    "<S> in this paper we study a problem of vertex two - coloring of undirected graph such that there is no monochromatic cycle of given length . </S>",
    "<S> we show that this problem is hard to solve . </S>",
    "<S> we give a proof by presenting a reduction from variation of satisfiability ( sat ) problem . </S>",
    "<S> we show nice properties of coloring cliques with two colors which plays pivotal role in the reduction construction .    2 </S>"
  ]
}
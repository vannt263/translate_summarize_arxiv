{
  "article_text": [
    "compositionality in natural language describes the extent to which the meaning of a phrase can be decomposed into the meaning of its constituents and the way these constituents are combined .",
    "automatic compositionality detection has long received attention ( see , for instance , @xcite , @xcite , @xcite ) . one popular compositionality detection technique is to replace the constituents of a phrase by their synonyms ( one at a time ) , obtaining a new `` perturbed '' phrase , and to measure the semantic distance of the resulting phrase to the original phrase : the smaller the semantic distance , the higher the degree of compositionality in the original phrase . table [ tab : example ] illustrates this point .",
    "different variants of this substitution - based approach to compositionality detection exist ( overviewed in section [ s : rw ] ) , which differ in their measurement of semantic similarity between the original and the perturbed phrase .",
    "one approach is to represent the original phrase and its perturbed phrases as vectors , whose elements are contextual terms ( i.e. frequently co - occurring terms ) extracted from their respective distributional semantics in some appropriate corpus .",
    "then , vector distance can be measured using , for instance , the cosine of the angle of the vectors .",
    "another approach is to represent the original and perturbed phrases as language models and approximate their similarity , e.g. , using kullback - leibler divergence .",
    "these are mostly _ supervised _ approaches that consider the aggregated distance or divergence ( over all the elements of the vectors or language models ) as an ( inverse ) approximation of semantic similarity .",
    "we conjecture that it is not necessary to use all the elements of such vectors or language models to compute semantic similarity , but that it suffices to use solely the most semantically salient elements .",
    "if this conjecture is true , the potential benefit is that semantic similarity ( and any derived analysis thereof ) can be done more efficiently as , e.g. , the involved computations will be done on lower dimension elements .",
    "motivated by this , we propose the following _ alternative approach to compositionality detection _ : we represent the original phrase and its perturbed phrases as ranked lists , containing only the term weight ( e.g. , tf - idf @xcite ) of their contextual terms .",
    "we rank the elements of each list decreasingly by this term weight .",
    "this allows to compute the semantic similarity between the phrase and its perturbed phrases using a range of different metrics designed for ranked list comparison .",
    "different such metrics emphasise different aspects of the ranked lists , such as the weight of the elements in the list , or their position in the ranking , or the similarity between elements .",
    "as metrics of distance and correlation between ranked lists tend to be parameter - free , our approach is completely unsupervised .    *",
    "our contribution : * we propose a novel formulation of compositionality detection as ranked list similarity that is completely unsupervised .",
    "we perform an empirical study of how this formulation fares when a number of different distance and correlation metrics for ranked lists are used .",
    "the results of the study show that our method performs better than strong , recent , supervised baselines .",
    "we divide related work on compositionality detection into two broad categories :    * approaches estimating the similarity between a phrase and its components ( mostly earlier ) , and * approaches estimating the similarity between a phrase and a perturbed version of that phrase where terms have been replaced by their synonyms ( more recent ) .",
    "baldwin et al .",
    "@xcite use latent semantic analysis ( lsa ) to calculate the similarity between a phrase and its components , reasoning that higher similarity indicates higher compositionality .",
    "they extract contextual vectors for the terms in the phrase , and represent them as points in vector space .",
    "they measure the similarity between two vectors as the cosine of the angle between them .",
    "katz and giesbrecht @xcite present a similar idea ( with a slightly different choice of methods and with german data ) .",
    "venkatapathy and joshi @xcite also present a similar idea , by extending the lsa context vectors of baldwin et al .",
    "@xcite with collocation features ( e.g. phrase frequency , point - wise mutual information ) extracted from the british national corpus . more recently , reddy et al .",
    "@xcite define a term literality score as the similarity between a phrase and its constituent contextual vectors .",
    "they use different vectorial operations to estimate the semantic distance between a phrase and its individual components , from which they deduce compositionality .",
    "closer to ours is the work of kiela and clark @xcite , who detect non - compositionality based on the earlier hypothesis that the mutual information between the constituents of a non - compositional phrase is significantly different from that of a phrase created by substituting terms in the original phrase by their synonyms @xcite .",
    "they represent phrases by their context vectors . using standard vectorial similarity",
    ", this model slightly outperforms that of mccarthy et al .",
    "@xcite and venkatapathy and joshi @xcite . a recent variation of this idea replaces the context vectors with language models and computes their kullback - leibler divergence to approximate their semantic distance @xcite .",
    "however , the accuracy of this approach has not been evaluated .",
    "further approaches to compositionality detection also exist .",
    "for instance , cook et al . @xcite use syntax to identify non - compositionality in verb - noun phrases .",
    "they reason that compositional expressions are less syntactically restricted than non - compositional ones , as the latter tend to occur in a small number of fixed syntactic patterns . along a similar line , mccarthy et al .",
    "@xcite consider the selectional preferences of verb - object phrases .",
    "lastly , compositionality detection has also been studied using representation learning of word embeddings .",
    "socher et al .",
    "@xcite present a recursive neural network ( rnn ) model that learns compositional vector representations for phrases and sentences of arbitrary syntactic type and length .",
    "they use a parse tree structure and assign a vector and a matrix to every node : the vector captures the meaning of the constituent , while the matrix captures how it changes the meaning of neighboring words or phrases .",
    "mikolov et al .",
    "@xcite extend a word - based skip - gram model that learns non - compositional phrases by being trained on phrases ( treated as individual tokens ) as opposed to individual words .",
    "the training phrases are extracted from a corpus using a threshold on the ratio of their bigram over ( product of ) unigram counts . along a similar line , salehi et al . @xcite",
    "use the word embeddings of mikolov et al .",
    "@xcite with several vectorial composition functions to detect non - compositionality .",
    "yazdani et al .",
    "@xcite also learn semantic composition and detect non - compositional phrases as those that stand out as outliers in the process .",
    "they examine various composition functions of different levels of complexity and conclude that complex functions such as polynomial projection and neural networks can model semantic composition more effectively than the commonly used additive and multiplicative functions .    to our knowledge ,",
    "no prior work on compositionality detection has used ranked list distance or correlation .",
    "the starting point of our method is the substitution - based approach to non - compositionality detection of kiela and clark @xcite . given a phrase , each term is replaced by a synonym ( one at a time ) producing perturbations of the original phrase by substituting synonyms . the semantic similarity between the original phrase and its perturbations",
    "is then assumed to be proportional to the degree of compositionality of the original phrase .",
    "this idea is in fact a modern implementation of leibniz s principle of intersubstitutivity ( _ salva veritate _ ) to detect irregular composition of meaning , which posits that terms which can be substituted for one another without altering the truth of any statement are the same ( _ eadem _ ) or coincident ( _ coincidentia _ ) .      kiela and clark @xcite represent the original phrase and its perturbations as vectors ( of their contextual semantics ) and compute their semantic distance using cosine similarity , while lioma et al . @xcite",
    "represent them as language models and approximate their semantic distance using kullback - leibler divergence .",
    "instead , we represent the original phrase and its perturbations as _ ranked lists _ , and use their ( inverse ) distance or correlation to measure compositionality .",
    "the elements of each ranked list are term weights ( e.g. tf - idf ) of their contextual terms that are typically represented in vectors .",
    "the ranking in each list is by descending term weight , and hence more informative terms are represented earlier in the list .",
    "the high - level steps of our method are displayed in algorithm i ( table [ alg1 ] ) .",
    "ranklistcomp find synonym @xmath0 of each term @xmath1 + each @xmath2 and @xmath0 + @xmath3 @xmath4 get context terms from @xmath5 + each context term @xmath6 + compute term weight @xmath7 + each @xmath0 + perturbed phrase @xmath8 original terms @xmath9 } + list @xmath10 sort \\{@xmath11 } + list @xmath12 sort \\{@xmath13 } + @xmath14 similarity(@xmath15 , @xmath16 )    the ranked lists of the original and perturbed phrase appear in lines 8  9 of the above algorithm , respectively .",
    "central in the computation of compositionality is the choice of similarity metric ( line 10 ) .",
    "a number of different ways to compute this similarity ( as distance or correlation ) between two ranked lists exist in the literature ( for the problem of comparing ranked lists in general , and not for our specific problem formulation ) .",
    "some metrics consider the aggregate distance over the whole list , whereas other metrics emphasise specific list characteristics , such as the weight , position , or similarity between elements .",
    "next , we present an overview of these metrics .",
    "let @xmath17 and @xmath18 be positive integers .",
    "we consider lists @xmath19 $ ] and @xmath20 $ ] where @xmath21 ( i.e. , each element in each list is a non - negative real number ) .",
    "we assume that @xmath22 ( i.e. , @xmath23 is possibly longer than @xmath24 ) and @xmath25 and @xmath26 ( i.e. , both lists are ordered non - increasingly ) .    in our problem formulation ,",
    "@xmath24 and @xmath23 represent _ ranked lists _ of term weights . in principle , the lists may be of unequal length , depending on the implementation of extracting term weights and/or the corpus statistics from which we extract contextual terms .",
    "note also that there is no a priori relationship between the elements of @xmath24 and @xmath23 .",
    "indeed in extreme cases we may have @xmath27 .",
    "next , we review metrics on lists that have been , or could be , used to measure some notion of `` ( dis)similarity '' between ranked lists .",
    "we partition these metrics into three general classes :    * class i : metrics that can natively compute differences between ranked lists of * unequal length*. this is the scarcest class , consisting primarily of modern metrics specifically devised to tackle ranked lists . * class ii : metrics that can compute differences between ranked lists of * equal length*. such metrics can be applied to ranked lists on unequal length only if the _",
    "shortest _ list ( @xmath24 above ) is padded with @xmath28 zeroes at the end , or if the _",
    "longest _ list ( @xmath23 above ) is pruned to the length of @xmath24 .",
    "both of these options can only work when they do not alter the semantics of the data represented in the list .",
    "most of these class ii metrics are classic metrics on the vector space @xmath29 . *",
    "class iii : metrics that can compute differences between ranked lists which constitute * permutations of a set of @xmath18 elements*. formally , let @xmath30 = \\ { 1 , ... ,",
    "n\\}$ ] , and let @xmath31 be the set of permutations on @xmath32 $ ] ; for two elements @xmath33 , a metric @xmath34 assigns a non - negative real number @xmath35 as a `` distance '' , with @xmath36 iff @xmath37 .",
    "most of the metrics we have come across are class iii .",
    "however , as the ranked lists @xmath24 and @xmath23 of term weights that we are interested in may contain different elements and may be of different length , class iii metrics are not directly applicable to our setup of using ranked lists : if @xmath24 and @xmath23 were of equal length and contained the same elements , the fact that they are both ordered implies that they would correspond to the exact same permutation of @xmath18 elements , hence that their distance would be @xmath38 ( because they would be identical ) .",
    "even though class iii metrics can not be used in our setup , for completeness we briefly outline them in table [ tab : classiii ] .",
    "next we focus on class i and ii metrics of distance ( section [ ss : distance ] ) and correlation ( section [ ss : correlation ] ) .",
    "we now give a brief overview of the pertinent metrics .",
    "we divide the metrics into distances ( which , strictly speaking , should satisfy the conditions of being non - negative _ and _ symmetric _ and _ the shortest possible path between two points ) and correlations .",
    "[ [ rank - or - l_1-distance - class - iii - minkowski - distances - class - ii ] ] 3.3.1.1 rank or @xmath39 distance ( class iii ) , minkowski distances ( class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    ciobanu and dinu @xcite introduce the _",
    "rank distance _",
    "@xmath40 ( identical to the well - known @xmath39 distance , a.k.a .",
    "spearman s footrule ) .",
    "@xmath40 is the sum of absolute rank differences in the lists @xmath24 and @xmath23 : @xmath41 } \\vert \\sigma(i )",
    "- \\pi(i ) \\vert\\ ] ] while the version of ciobanu and dinu @xcite is class iii , the @xmath39 distance can also easily be viewed as being in class ii .",
    "indeed any of the minkowski distances @xmath42 for @xmath43 induce a distance metric in the usual sense on ranked lists of equal length : @xmath44 a similar metric is the _ chebyshev distance _ , below .",
    "[ [ chebyshev - or - l_infty - distance - class - ii ] ] 3.3.1.2 chebyshev or @xmath45 distance ( class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the _ chebyshev _ or @xmath45 distance is the maximal absolute difference in rank between two equal - sized ranked lists : @xmath46 } \\vert v_i - w_i \\vert\\ ] ]    [ [ cosrank - distance - class - iii - class - ii ] ] 3.3.1.3 cosrank distance ( class iii , class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    dinu and ionescu @xcite introduce the cosine rank distance @xmath47 as the usual cosine distance in an @xmath18-dimensional vector space of the vectors @xmath48 and @xmath49 : @xmath50 } \\sigma(i)\\pi(i)}{\\sum_{i\\in[n ] i^2}}\\ ] ] the usual cosine similarity can also be used on the @xmath18-dimensional vector space @xmath29 , hence on equal - sized ranked lists : @xmath51 where @xmath52 is the dot product of vectors .",
    "[ [ hamming - distance - class - ii ] ] 3.3.1.4 hamming distance ( class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the _ hamming distance _",
    "@xmath53 between equal - sized ranked lists @xmath24 and @xmath23 is the number of indices @xmath54 where @xmath55 ; using kronecker s delta @xmath56 , we can write : @xmath57 ( equivalently , @xmath58 : v_i \\neq w_i\\}\\vert$ ] ) .",
    "[ [ hausdorff - distance - class - i ] ] 3.3.1.5 hausdorff distance ( class i ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    if a @xmath34 metric on elements is given , the hausdorff distance is a particular metric computing distances between certain _ sets _ of elements .",
    "for instance , if one considers the usual euclidean distance @xmath59 on real numbers , the hausdorff distance can be used directly on ranked lists of possibly distinct lengths :    @xmath60    the hausdorff distance is thus the _ largest _ difference in term weight from a term weight @xmath61 in @xmath24 to the term weight in @xmath23 that is closest to @xmath61 .",
    "ranked list similarity can also be estimated using _ correlation metrics _ that generally do not always adhere to all of the classic axioms required by distance metrics in mathematics .    [",
    "[ pearson - correlation - coefficient - class - ii ] ] 3.3.2.1 pearson correlation coefficient ( class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the pearson ( product - moment ) correlation coefficient quantifies the linear dependence between two variables .",
    "it is the ratio of the covariance of the variables to the product of their standard deviation , easily applicable to two equal - sized ranked lists by using the formula for a sample :    @xmath62 } v_iw_i - \\sum_{i \\in [ n ] } v_i \\sum_{i \\in [ n ] } w_i}% { \\sqrt{n \\sum_{i \\in [ n ] } v_i^2 - \\left ( \\sum_{i\\in [ n ] } v_i \\right ) } \\sqrt{n \\sum_{i \\in [ n ] } w_i^2 - \\left ( \\sum_{i\\in [ n ] } w_i \\right ) } } \\end{gathered}\\ ] ]    note that etesami et al . @xcite introduce it as a `` class iii '' distance , i.e. to compare different rankings of the same group of items .",
    "nevertheless , the usual pearson correlation can be used directly , as it can be computed for samples , not just for random variables .",
    "[ [ ap - correlation - coefficient - class - ii ] ] 3.3.2.2 ap correlation coefficient ( class ii ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    yilmaz et al .",
    "@xcite present a correlation metric , the _ ap metric _ , inspired by kendall s @xmath63 , that particularly penalizes differences in the top - ranked items . while the metric does not natively apply to lists containing distinct items , it is easy to adapt it to do so .",
    "let us define @xmath64 where @xmath65 where @xmath66 is the number of items in @xmath24 occurring earlier than @xmath54 whose value is greater than or equal to the value of the @xmath54 item in @xmath23 ( i.e. , in our case @xmath67 , j \\leq i } v_j \\geq w_i\\}$ ] ) .",
    "@xmath68 is defined symmetrically _",
    "mutatis mutandis_.    the distance @xmath69 is now the following _ symmetric _ function : @xmath70    [ [ further - class - ii - metrics ] ] 3.3.2.3 further class ii metrics",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    two more correlation metrics that can compute differences between ranked lists of equal length ( class ii metrics ) are the * hirschfeld - gebelein - rnyi maximal correlation * and the * maximal rank correlation * @xcite . however , the hirschfeld - gebelein - rnyi maximal correlation is a function that , by definition , requires a probability distribution .",
    "we do not have such a probability distribution in our setup .",
    "the reason we can do without a probability distribution for the pearson correlation is that it is possible to compute covariance , standard deviation etc . for a sample",
    " but doing so for the hirschfeld - gebelein - rnyi maximal correlation and the maximal rank correlation does not seem to make sense without a probability distribution ( in particular since the definitions quantify over all functions between two spaces ) . also note that no polynomial - time algorithm is known for computing maximal rank correlation , even if an efficiently computable probability mass function is given as input ( for instance , by approximating the probability mass functions from relative frequencies ) .    for compositionality detection",
    ", we use all the above distance and correlation metrics ( except those discussed in section 3.2.2.3 ) to compute the ( dis)similarity in line 10 of our algorithm , i.e. the semantic distance between an original phrase and its perturbed version .    next , we describe in detail the implementation steps of our compositionality detection method .",
    "we refer the reader to the algorithm of our compositionality detection method ( algorithm i : ranklistcomp ) displayed in table [ alg1 ] .",
    "the remainder explains how each line in the algorithm is implemented .",
    "the input is some phrase , and the goal is to measure its compositionality . given an input phrase , for each of its terms , we fetch from wordnet all its hypernyms , and for each hypernym we select all hyponyms .",
    "if there are no hypernyms or hyponyms , we fetch all synonyms .",
    "we retrieve from the trec disks 4 - 5 corpus congressional record , the 1994 federal register , the 1992 - 1994 financial times , the 1996 foreign broadcast information service , and the 1989 - 1990 los angeles times .",
    "we use this corpus because of its coverage and diversity .",
    "any other corpus of reasonable coverage can be used alternatively . ]",
    "all documents that contain any of these hypernyms and hyponyms ( and synonyms , if applied ) , and select the 100 documents where the original term _ and _ its hypernyms _ and _ its hyponyms ( or synonyms ) occur most often .",
    "we then select the single hypernym or hyponym ( or synonym ) that occurs most often in most of these 100 documents .",
    "we consider this term as a `` near - synonym '' to the original input term .      for each term ( in the original phrase + `` near - synonym '' ) we identify a context window of @xmath71 terms around it from trec disks 4 - 5 ( i.e. the 5 terms preceding the term and 5 terms following it ) .",
    "we neither remove stopwords , nor apply stemming .",
    "the above extraction of context windows can give a different number of context terms for different words .",
    "other sizes of context windows can also be used ; we use @xmath71 terms , following prior work @xcite .",
    "we compute the tf - idf score of each term @xmath72 in the context windows as : @xmath73 where @xmath74 is the frequency of term @xmath72 in document @xmath34 , @xmath75 is the total number of terms in document @xmath34 , @xmath76 is the total number of documents in the collection , and @xmath77 is the total number of documents that contain @xmath72 in the collection .",
    "we compute tf - idf using the corpus statistics of trec disks 4 - 5 ( unlike @xcite , who use an adapted version of tf - idf on the statistics of the context windows ) .",
    "we do this because we aim to compute tf - idf scores reflecting how generally informative a word is , hence the bigger the corpus used to estimate this , the more representative the resulting scores will be ( as long as the corpus has good coverage and representativess ) .",
    "we create ranked lists of tf - idf scores for each term in the original phrase and its `` near - synonyms '' .",
    "we then combine the ranked lists of tf - idf scores extracted for each term , into a single ranked list for the whole original phrase ( and separately for each perturbed phrase ) , by simply appending their respective tf - idf scores to one list and sorting them by their tf - idf .",
    "we do not keep duplicate elements . at this point",
    ", we have a single ranked list of tf - idf scores per phrase ( either original or perturbed ) .",
    "the length of the ranked lists may be different from term to term and may differ across phrases .",
    "indeed the minimum and maximum length of ranked lists we observe per phrase are min=200 ( for the perturbed phrase ` musculus contractions ` generated in response to the original phrase ` muscle contractions ` ) , and max=31309 ( for the perturbed phrase ` know 1 ` generated in response to the original phrase ` know one ` ) .",
    "the mean list length is 9259 .",
    "this variation in the length of our ranked lists practically means that we can not always use the majority of distance and correlation metrics presented in section [ s : metrics ] , because they require equal - sized lists . to address this , we impose a fixed list length of maximum 1000 elements , i.e. we keep , at most , the top-1000 ranked elements in each list . if , when comparing two lists , one contains @xmath781000 elements , we prune both lists to the length of the shortest list . the choice of 1000 as maximum length is an arbitrary choice and is not indicative of any tuning . fixing the length of our ranked lists to 1000 implies that we represent each phrase by the top 1000 most informative terms found in their context windows .",
    "we compute the distance and correlation between the ranked list of tf - idf scores of the original phrase and its substitution phrase using all the class i & ii metrics presented in section [ s : metrics ] .",
    "this outputs a single score per phrase , which we treat as an ( inverse for distances or direct for correlations ) approximation of the degree of compositionality of that phrase .",
    "we evaluate our compositionality detection method on a recent dataset of 1048 2-term phrases ( noun - noun ) @xcite .",
    "this is the largest compositionality - annotated dataset we could find . in this dataset",
    ", each phrase has four binary compositionality human expert assessments .",
    "we report spearman s @xmath79 correlation between our method s decisions on compositionality and the average of the four human annotations of compositionality of that dataset ( table [ tab : results ] ) .",
    "we report , as state of the art baseline performance , the additive and multiplicative models of reddy et al . @xcite and the best performing deep learning method ( sparse interaction ) of yazdani et al .",
    "we do not reimplement these methods ; we only report their published scores on the same dataset as per yazdani et al .",
    "@xcite .",
    "we see in table [ tab : results ] that our approach outperforms all baselines using any of the considered metrics . among these distance and correlation metrics ,",
    "the chebyshev and hausdorff distances score the lowest , but still outperform the baselines .",
    "the chebyshev and hausdorff distances emphasise the maximal absolute difference in rank and maximal difference in tf - idf score respectively .",
    "it thus appears that this emphasis on maximal differences is not optimal for this setup .",
    "one reason could be that we have trimmed our ranked lists to the top 1000 highest tf - idf scores , and that among those highest tf - idf scores , maximal differences may not be as noticeable , as on a much bigger range of tf - idf scores that represent most levels of term informativeness ( as opposed to just the most informative terms ) .",
    "add ( reddy et al . , 2011 ) & 0.21 + mult ( reddy et al . , 2011 ) &",
    "0.09 + deep learning ( yazdani et al . ,",
    "2015 ) & 0.41 +   + rank or @xmath39 distance ( equation [ eq : l1 ] ) & 0.59 + chebyshev or @xmath45 distance ( equation [ eq : cheb ] ) & 0.50 + cosrank distance ( equation [ eq : cosrank ] ) & 0.60 + hamming distance ( equation [ eq : ham ] ) & 0.55 + hausdorff distance ( equation [ eq : haus ] ) & 0.50 + pearson correlation coefficient ( equation [ eq : pearson ] ) & 0.62 + ap correlation coefficient ( equation [ eq : ap ] ) & 0.58 +    the best performing metric is the standard pearson s correlation , followed closely by the cosrank distance .",
    "pearson s correlation is the ratio of the covariance of the tf - idf scores in the two lists over the product of their standard deviation . on a higher level of abstraction ,",
    "pearson s correlation can be seen as analogous to the cosine distance in vector space : the cosine distance measures similarity in vector space , by considering only the non - zero dimensions of ( very often ) sparse vectors .",
    "it is possible to normalise the attribute vectors by subtracting the vector means , in which case one can compute the _ centered cosine similarity _ , which is equivalent to pearson s correlation .",
    "our second best metric , cosrank , is also analogous to the cosine distance as discussed in section [ s : metrics ] and also by dinu and ionescu @xcite .",
    "the fact that our two best performing metrics can be seen as analogous to the cosine distance in vector space indicates that not only the choice of measurement , but also the choice of representation , can greatly affect performance .",
    "cc    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;    &    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;     +    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;    &    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;     +    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;    &    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;     +    + [ mark=+,only marks , mark size=4.0 , blue ] table[x index=0,y index=1 ] from ;    &    figure [ fig : bins ] plots the human compositionality annotations of the 1042 phrases ( y axis , 0 = compositional , 1 = non - compositional ) against the distance or correlation of our 7 metrics ( x axis ) .",
    "the 1042 data points have been sorted per distance or correlation score and then binned into 11 bins .",
    "each point in figure [ fig : bins ] corresponds to the mean human compositionality score per bin .",
    "the number of bins has been decided using scott s formula @xcite : @xmath80    where @xmath81 is the number of bins , @xmath82 is the range , @xmath76 is the number of data points , and @xmath83 is the sample variance .",
    "this results in : 10 equal - sized bins of 95 phrases each , and 1 bin of the remaining 92 phrases ( this is the bin with the highest distance or correlation ) .    in figure",
    "[ fig : bins ] ideally we would expect compositionality ( x axis ) to increase as distance decreases or as correlation increases .",
    "we see that this is indeed the case approximately for rank cosrank , hamming distance and for pearson and ap correlation .",
    "however , for chebyshev and hausdorff , we see no such linear trend : the points are generally scattered , and seem to have more of an approximately ascending ( as opposed to the expected descending ) trend as the y axis increases .",
    "this finding agrees with the observation that these two metrics ( chebyshev and hausdorff ) performed the lowest among all our metrics in table [ tab : results ] . as discussed above , a reason why these two metrics underperform could be their emphasis on maximum score difference between the two lists ( which is largely reduced when we trim lists to the top 1000 ) .     `",
    "freshman year ` & highest minkowski distance + ` case law ` & highest chebyshev distance + ` body whorl ` & highest cosrank distance + ` umbrella organisation ` & highest hamming distance + ` case law ` & highest hausdorff distance + ` vice president ` & lowest pearson correlation + ` chain smoker ` & lowest ap correlation +   + ` mountain goat ` & lowest minkowski distance + ` picnic lunch ` & lowest chebyshev distance + ` goose fossil ` & lowest cosrank distance + ` potato peeler ` & lowest hamming distance + ` nightclub goer ` & lowest hausdorff distance + ` school alumni ` & highest pearson correlation + ` flight lessons ` & highest ap correlation +    finally table [ tab : examples ] displays some examples of phrases that were annotated as most or least compositional _ both _ by humans and also by our metrics ( by having the highest / lowest distance / correlation respectively ) .",
    "we see that ( a ) compositional phrases tend to have more literal meanings that non - compositional , and ( b ) depending on the degree of ( non-)compositionality , its detection may be a hard task even for humans ( e.g. ` case law , goose fossil ` ) .",
    "as all substitution - based methods for compositionality detection , our method can also be criticised for being unable to discriminate non - compositional phrases from collocational phrases , because they both share the same property of non - substitutability ( their constituents can not be replaced with their synonyms ) @xcite .",
    "this criticism is related to the venerable _ principle of semantic substitutivity _ , first formulated by husserl ( 1913 ) @xcite : two phrases belong to the same semantic category if they are intersubstitutable within any meaningful expression _ salva significatione_. this principle is considered controversial , because there are many synonyms that are not everywhere intersubstitutable @xcite . to our knowledge , this remains an open problem in substitution - based compositionality detection .",
    "our method estimates the degree of compositionality of isolated phrases , following the current experimental practice of using mainly 2-term phrases .",
    "applying the same method to phrases that are embedded into fully formed sentences may be problematic .",
    "for instance , problems may arise when the phrase whose compositionality we detect is a constituent of a larger expression .",
    "borrowing an example from @xcite , measuring the semantic similarity of :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` plato was bald ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    with    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` baldness was an attribute of plato ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    could lead to misleading inferences about the semantic similarity of :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` the philosopher whose most eminent pupil was plato was bald ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    and    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` the philosopher whose most eminent pupil was baldness was an attribute of plato . ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in this case , the second sentence , not only has a different meaning than the first sentence , but also is semantically non - sensical .",
    "it remains to be investigated to what extent and under which conditions phrase - level compositionality estimation can be applied to full sentences .",
    "the absence of large human - annotated bespoke datasets for this task remains a problem for such investigations .",
    "we presented a method for estimating degrees of compositionality in phrases .",
    "our method is based on the premise that substitution by synonyms is meaning - preserving @xcite , and estimates compositionality as the semantic similarity between a phrase and a version of that phrase where words have been replaced by their synonyms @xcite . unlike previous approaches that represent such phrases ( original and substitution - formed ) as vectors or language models , we represent them as ranked lists .",
    "this ranked list representation is a novel contribution .",
    "the elements of these lists are contextual terms extracted from some appropriate corpus and ranked according to their tf - idf ( any other term informativeness score can be used ) .",
    "moving to ranked list representations allows us to approximate the semantic similarity between two phrases using a range of well - known and , we argue , more refined distance and correlation metrics , designed specifically for lists .",
    "we review a number of these metrics and experimentally show that they outperform state - of - art baselines for this task .",
    "work partially supported by c. lioma s freja research excellence fellowship ( grant no .",
    "we thank jakob grue simonsen for thoughtful comments and valuable insights .",
    "10 url # 1`#1`urlprefixhref # 1#2#2 # 1#1    d.  kiela , s.  clark , detecting compositionality of multi - word expressions using nearest neighbours in vector space models , in : proceedings of the 2013 conference on empirical methods in natural language processing , association for computational linguistics , seattle , washington , usa , 2013 , pp",
    ". 14271432 .    c.  lioma , j.  g. simonsen , b.  larsen , n.  d. hansen , non - compositional term dependence for information retrieval , in : r.  a. baeza - yates , m.  lalmas , a.  moffat , b.  a. ribeiro - neto ( eds . ) , proceedings of the 38th international acm sigir conference on research and development in information retrieval , santiago , chile , august 9 - 13 , 2015 , acm , 2015 , pp . 595604 .",
    "d.  lin , automatic identification of non - compositional phrases , in : proceedings of the 37th annual meeting of the association for computational linguistics , association for computational linguistics , college park , maryland , usa , 1999 , pp .",
    "317324 .",
    "t.  baldwin , c.  bannard , t.  tanaka , d.  widdows , an empirical model of multiword expression decomposability , in : proceedings of the acl 2003 workshop on multiword expressions : analysis , acquisition and treatment , association for computational linguistics , sapporo , japan , 2003 , pp .",
    "8996 .",
    "g.  katz , e.  giesbrecht , automatic identification of non - compositional multi - word expressions using latent semantic analysis , in : proceedings of the workshop on multiword expressions : identifying and exploiting underlying properties , association for computational linguistics , sydney , australia , 2006 , pp .",
    "s.  venkatapathy , a.  joshi , measuring the relative compositionality of verb - noun ( v - n ) collocations by integrating features , in : proceedings of human language technology conference and conference on empirical methods in natural language processing , association for computational linguistics , vancouver , british columbia , canada , 2005 , pp .",
    "899906 .",
    "s.  reddy , d.  mccarthy , s.  manandhar , an empirical study on compositionality in compound nouns , in : proceedings of 5th international joint conference on natural language processing , asian federation of natural language processing , chiang mai , thailand , 2011 , pp .",
    "210218 .",
    "d.  mccarthy , s.  venkatapathy , a.  joshi , detecting compositionality of verb - object combinations using selectional preferences , in : proceedings of the 2007 joint conference on empirical methods in natural language processing and computational natural language learning ( emnlp - conll ) , association for computational linguistics , prague , czech republic , 2007 , pp .",
    "369379 .",
    "p.  cook , a.  fazly , s.  stevenson , pulling their weight : exploiting syntactic forms for the automatic identification of idiomatic expressions in context , in : proceedings of the workshop on a broader perspective on multiword expressions , association for computational linguistics , prague , czech republic , 2007 , pp .",
    "r.  socher , b.  huval , c.  d. manning , a.  y. ng , semantic compositionality through recursive matrix - vector spaces , in : proceedings of the 2012 joint conference on empirical methods in natural language processing and computational natural language learning , association for computational linguistics , jeju island , korea , 2012 , pp .",
    "12011211 .",
    "t.  mikolov , i.  sutskever , k.  chen , g.  s. corrado , j.  dean , distributed representations of words and phrases and their compositionality , in : c.  j.  c. burges , l.  bottou , z.  ghahramani , k.  q. weinberger ( eds . ) , advances in neural information processing systems 26 : 27th annual conference on neural information processing systems 2013 .",
    "proceedings of a meeting held december 5 - 8 , 2013 , lake tahoe , nevada , united states .",
    ", 2013 , pp . 31113119 .",
    "b.  salehi , p.  cook , t.  baldwin , a word embedding approach to predicting the compositionality of multiword expressions , in : proceedings of the 2015 conference of the north american chapter of the association for computational linguistics : human language technologies , association for computational linguistics , denver , colorado , 2015 , pp .",
    "977983 .",
    "m.  yazdani , m.  farahmand , j.  henderson , learning semantic composition to detect non - compositionality of multiword expressions , in : proceedings of the 2015 conference on empirical methods in natural language processing , association for computational linguistics , lisbon , portugal , 2015 , pp .",
    "17331742 .",
    "s.  vigna , a weighted correlation index for rankings with ties , in : a.  gangemi , s.  leonardi , a.  panconesi ( eds . ) , proceedings of the 24th international conference on world wide web , www 2015 , florence , italy , may 18 - 22 , 2015 , acm , 2015 , pp . 11661176 .",
    "a.  ciobanu , a.  dinu , alternative measures of word relatedness in distributional semantics , in : proceedings of the joint symposium on semantic processing .",
    "textual inference and structures in corpora , 2013 , pp .",
    "l.  p. dinu , r.  ionescu , clustering methods based on closest string via rank distance , in : a.  voronkov , v.  negru , t.  ida , t.  jebelean , d.  petcu , s.  m. watt , d.  zaharie ( eds . ) , 14th international symposium on symbolic and numeric algorithms for scientific computing , synasc 2012 , timisoara , romania , september 26 - 29 , 2012 , ieee computer society , 2012 , pp .",
    "207213 .",
    "e.  yilmaz , j.  a. aslam , s.  robertson , a new rank correlation coefficient for information retrieval , in : s.  myaeng , d.  w. oard , f.  sebastiani , t.  chua , m.  leong ( eds . ) , proceedings of the 31st annual international acm sigir conference on research and development in information retrieval , sigir 2008 , singapore , july 20 - 24 , 2008 , acm , 2008 , pp .",
    "587594 .",
    "c.  lioma , r.  blanco , http://dx.doi.org/10.1007/978-3-642-00958-7_37[part of speech based term weighting for information retrieval ] , in : m.  boughanem , c.  berrut , j.  mothe , c.  soul - dupuy ( eds . ) , advances in information retrieval , 31th european conference on ir research , ecir 2009 , toulouse , france , april 6 - 9 , 2009 .",
    "proceedings , vol .",
    "5478 of lecture notes in computer science , springer , 2009 , pp .",
    "http://dx.doi.org/10.1007/978-3-642-00958-7_37 [ ] .",
    "http://dx.doi.org/10.1007/978-3-642-00958-7_37    c.  lioma , i.  ounis , http://dx.doi.org/10.1007/978-3-540-75530-2_19[extending weighting models with a term quality measure ] , in : n.  ziviani , r.  a. baeza - yates ( eds . ) , string processing and information retrieval , 14th international symposium , spire 2007 , santiago , chile , october 29 - 31 , 2007 , proceedings , vol .",
    "4726 of lecture notes in computer science , springer , 2007 , pp .",
    "r.  blanco , c.  lioma , http://doi.acm.org/10.1145/1277741.1277930[random walk term weighting for information retrieval ] , in : w.  kraaij , a.  p. de  vries , c.  l.  a. clarke , n.  fuhr , n.  kando ( eds . ) , sigir 2007 : proceedings of the 30th annual international acm sigir conference on research and development in information retrieval , amsterdam , the netherlands , july 23 - 27 , 2007 , acm , 2007 , pp .",
    "http://dx.doi.org/10.1145/1277741.1277930 [ ] .",
    "r.  blanco , c.  lioma , http://dx.doi.org/10.1007/s10791-011-9172-x[graph-based term weighting for information retrieval ] , inf .",
    "retr . 15  ( 1 ) ( 2012 ) 5492 .",
    "http://dx.doi.org/10.1007/s10791-011-9172-x [ ] .",
    "http://dx.doi.org/10.1007/s10791-011-9172-x    c.  lioma , b.  larsen , w.  lu , http://doi.acm.org/10.1145/2348283.2348407[rhetorical relations for information retrieval ] , in : w.  r. hersh , j.  callan , y.  maarek , m.  sanderson ( eds . ) , the 35th international acm sigir conference on research and development in information retrieval , sigir 12 , portland , or , usa , august 12 - 16 , 2012 , acm , 2012 , pp .",
    "http://doi.acm.org/10.1145/2348283.2348407    m.  farahmand , a.  smith , j.  nivre , a multiword expression data set : annotating non - compositionality and conventionalization for english noun compounds , in : proceedings of the 11th workshop on multiword expressions , association for computational linguistics , denver , colorado , 2015 , pp . 2933 ."
  ],
  "abstract_text": [
    "<S> compositionality in language refers to how much the meaning of some phrase can be decomposed into the meaning of its constituents and the way these constituents are combined . based on the premise that substitution by synonyms is meaning - preserving </S>",
    "<S> , compositionality can be approximated as the semantic similarity between a phrase and a version of that phrase where words have been replaced by their synonyms . </S>",
    "<S> different ways of representing such phrases exist ( e.g. , vectors @xcite or language models @xcite ) , and the choice of representation affects the measurement of semantic similarity .    </S>",
    "<S> we propose a new compositionality detection method that represents phrases as ranked lists of term weights . </S>",
    "<S> our method approximates the semantic similarity between two ranked list representations using a range of well - known distance and correlation metrics . </S>",
    "<S> in contrast to most state - of - the - art approaches in compositionality detection , our method is completely unsupervised . </S>",
    "<S> experiments with a publicly available dataset of 1048 human - annotated phrases shows that , compared to strong supervised baselines , our approach provides superior measurement of compositionality using any of the distance and correlation metrics considered .    </S>",
    "<S> compositionality detection , metrics of distance and correlation </S>"
  ]
}
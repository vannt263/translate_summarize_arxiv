{
  "article_text": [
    "we are interested in enumeration of hamiltonian cycles on @xmath2  that is , on square grid graphs of @xmath3 nodes .",
    "the varied interest in this problem can be illustrated by the many names attached to it : as well as hamiltonian cycles or circuits , there are rook s tours and compact self - avoiding walks . since thompson @xcite stated the problem and provided elementary results , several authors have tackled this problem .",
    "for example , myers @xcite converted the problem into enumeration of the skeleton graphs inside the cycle ; this was considered to be a simpler problem . in 1994 , harris kwong and rogers @xcite reported a recent `` flurry of interest '' in the problem . these and other researchers @xcite use a matrix method , one version of which is discussed in section  [ matrixmethod ] .",
    "this method was earlier applied to self - avoiding walks ( saws ) on an infinite square lattice @xcite .",
    "it is still used in that area @xcite .",
    "jensen @xcite reports that enumeration of saws is ` one of the most important and classic combinatorial problems in statistical mechanics ' ; also it has ` traditionally served as a benchmark for both computer performance and algorithm design ' , and in doing so has had many cpu years applied to it .        ' '' ''",
    "+ @xmath4 & none    ' '' ''     + @xmath5 & one reflection + @xmath6 & 180rotation + @xmath7 & two reflections and 180rotation + @xmath8 & 90rotation + @xmath9 & all +    these previous efforts have typically counted all reflections and rotations of the cycles , where they are distinct .",
    "for example ,",
    "the on - line encyclopedia of integer sequences ( * ? ?",
    "? * sequence a003763 ) lists numbers of hamiltonian cycles on @xmath3 square grids of nodes up to @xmath10 .",
    "the count for @xmath11 is known @xcite and has 71 decimal digits . by contrast",
    ", there are only 4 terms in sequence a209077 , listing the counts of nonisomorphic cycles .",
    "the largest count has 6 decimal digits .",
    "( here and throughout this paper , a ` count of nonisomorphic cycles ' is intended to mean the number of equivalence classes of cycles under all symmetry operations of the square .",
    "the title of a209077 calls it a count ` reduced for symmetry ' . )",
    "there are also variants of sequence a003763 : a143246 counts directed cycles , and therefore contains values twice as large ; and a222065 considers @xmath12 squares .",
    "hamiltonian cycles are impossible for odd @xmath13 , so a222065 alternates zeros with the values of a143246 .",
    "the current work considers only undirected cycles and even @xmath13 .",
    "this paper reports enumeration of nonisomorphic cycles on @xmath3 square grids of nodes up to @xmath10 . essentially , the method is to enumerate the symmetric cycles , and to make the appropriate reductions to sequence a003763 . for most symmetries ,",
    "the efficient matrix methods can be adapted . for 90rotational symmetry",
    ", the enumeration can be done by a direct search on only one quadrant of the square .",
    "table  [ symmetrytable ] defines symbols for the numbers of isomorphism classes of hamiltonian cycles on @xmath3 grids of nodes .",
    "these can be deduced from the counts defined in table  [ counttable ] ; the matrix equation        ' '' ''     + @xmath14 & none    ' '' ''     + @xmath15 & reflection in a specified axis + @xmath16 & 180rotation + @xmath17 & two reflections and 180rotation + @xmath18 & 90rotation + @xmath19 & all +    @xmath20    can be inverted :    @xmath21    equation  [ matrix1 ] simply expresses how many times each member of an isomorphism class is included in each count .",
    "the coefficients for calculating @xmath15 depend on the line of reflection having a specified orientation .",
    "so for example , two members from each class in @xmath5 are included , rotated 180relative to each other ; two members from each class in @xmath6 are included , rotated 90relative to each other .",
    "count @xmath14 is oeis sequence a003763 .",
    "section  [ matrixmethod ] shows that counts @xmath15 , @xmath16 and @xmath17 can be generated by small modifications of the matrix method .",
    "count @xmath19 is 1 for the @xmath22 square , and 0 for all others .",
    "count @xmath18 is considered separately , in section  [ dancinglinks ] .",
    "results are presented in section  [ results ] .",
    "the matrix method described here is essentially the same as that of kloczkowski and jernigan @xcite , with some differences in terminology and implementation .    we define a _ connectivity state _ ( or simply ` state ' ) to be a specification of the horizontal edges between two adjacent columns of nodes , together with how these edges are connected in the paths to the left of these columns .",
    "the key observation of the method is that the ways of continuing the paths to the right are independent of how the connectivity state was reached from the left .",
    "we define a _ continuation _",
    "@xmath23 to be a set of vertical edges in the column of nodes to the right of state @xmath24 that ensures that all the column s nodes are visited , and that results in @xmath25 as the next state .",
    "an example is shown in figure  [ fig : state_etc ] .",
    "a matrix @xmath26 is formed , with each entry @xmath27 equalling 1 or 0 according to whether @xmath28 exists .",
    "if @xmath29 is a vector of the number of ways of reaching states between columns @xmath30 and @xmath31 , then @xmath32    some states can be generated by the leftmost column of a square ; these are called _ starting states_. ( examples are shown in tables  [ start6counts ] and  [ start8counts ] . ) an equal number of _ ending states _ can be made into complete hamiltonian cycles by the rightmost column .",
    "it can be shown that the number of starting states for a @xmath0 square is the fibonacci number @xmath33 .",
    "one state is both starting and ending : this is the state that links the top and bottom nodes .",
    "the count @xmath14 can therefore be calculated : @xmath34 where @xmath35 and @xmath36 are vectors whose entries are the characteristic functions of starting and ending states respectively .",
    "these vectors are simple to generate ; the only remaining problem is how to generate @xmath26 .",
    "kloczkowski and jernigan @xcite considered _ bond distributions _",
    ", which are sets of vertical edges at the right edge of a state .",
    "a different method was used in the current work ; see section  [ details ] .",
    "an immediate modification of the method is to reject any states or continuations without reflective symmetry in the horizontal axis .",
    "using overbars to symbolise this modification , the result is count @xmath15 ( defined in table  [ counttable ] ) : @xmath37    another modification is to apply the unrestricted method only @xmath38 times , to arrive at @xmath39 , the numbers of ways to generate states in the central position .",
    "if and only if a central state consists of only one pair of horizontal edges , the paths that generate that state can be reflected to a create single cycle with reflective symmetry in the vertical axis .",
    "there is only one way to do this in each case , and so @xmath40 where @xmath41 is a vector containing the characteristic function of single - pair states .",
    "this forms a cross - check for the calculation of @xmath15 using equation  [ firstb ] .",
    "similarly , some central states will form a single cycle with 180rotational symmetry when the paths to the left are copied and rotated to fill the other half of the square . if @xmath42 is a vector containing the characteristic function of these states ,",
    "then @xmath43 it is easy to detect single - pair states , to form the vector @xmath41 .",
    "various properties can be deduced for the states in vector @xmath42 , but a pragmatic test is simply to rotate and flip the state , and test whether a cycle following these loops does indeed visit all loops and return to the start .    finally ,",
    "if the symmetric continuations of equation  [ firstb ] are applied to the symmetric @xmath44 ( or @xmath45 , which is identical ) , then the result has both reflective symmetries and 180rotational symmetry : @xmath46    thus , the efficient matrix method can be applied to enumeration of cycles with reflective and 180rotational symmetries .",
    "results are given in section  [ results ] .",
    "section  [ details ] contains details of the implementation of the algorithm and some observations .",
    "the only remaining task is to enumerate 90rotational symmetries , and this is considered in section  [ dancinglinks ] .",
    "in the current work , continuations were generated from each state by an exhaustive backtracking search .",
    "starting from each state , each node in the column on the right was considered in turn : a vertical edge and/or a horizontal edge were added to it such the node had degree exactly 2 .",
    "it was forbidden for edges to complete a cycle .",
    "when contradictions or complete continuations were reached , the search backtracked  for example , vertical edges were replaced with horizontal edges .",
    "thus , the search generated every state that could be reached by a continuation .",
    "kloczkowski and jernigan @xcite note that some states are impossible because the connections cross , which is not possible in the planar paths .",
    "also , some states are impossible by parity arguments ( similar to those mentioned in section  [ dancinglinks ] ) . in the current implementation",
    ", each iteration considers only those states that have been reached , beginning with the relatively small number of starting states .",
    "thus , the first iterations need to consider fewer states and are quicker .",
    "table  [ statetable ] shows the final numbers of states and continuations that were reached .",
    "it was impractical to store all the continuations , and therefore the approach taken was to store a vector @xmath29 , to generate all continuations , and to add each continuation s contribution to @xmath47 individually .     & states & continuations & states & continuations    ' '' ''     + 1 & 1 & 1 & 1 & 1    ' '' ''     + 2 & 6 & 14 & 4 & 6 + 3 & 32 & 162 & 14 & 20 + 4 & 182 & 1966 & 40 & 101 + 5 & 1117 & 25567 & 120 & 327 + 6 & 7280 & 351880 & 320 & 1560 + 7 & 49625 & 5056350 & 946 & 5333 + 8 & 349998 & 75100735 & 2496 & 24727 + 9 & 2535077 & 1144833705 & 7418 & 88422 + 10 & 18758264 & 17821104101 & 19616 & 403552 +    an efficient form of record - keeping was used to enforce the requirement that continuations must not form loops prematurely .",
    "a record was kept of the _ destination _ @xmath48 of each node on the right of the state .",
    "when node @xmath49 currently has degree 1 , for example when nodes are linked by the state at the start of the search , the destination is defined to be the node at the other end of the path . when @xmath49 currently has degree 0 , then @xmath48 is defined to be @xmath49 itself .",
    "when @xmath49 has degree 2 , @xmath48 is allowed to contain historical information . in a similar way to the dancing links algorithm discussed in section  [ dancinglinks ] , this information is used when edges are removed and nodes are released from the middle of a path . when an edge is added between nodes",
    "@xmath49 and @xmath50 , then the destinations can be updated . in pseudo - code : @xmath51 in the simplest case , @xmath49 is linked to another node , @xmath52 , and @xmath50 is linked to @xmath53 .",
    "when the edge between @xmath49 and @xmath50 is added , @xmath52 and @xmath53 are now linked and their destinations are updated . when the edge is later removed , the information in @xmath48 and @xmath54 is sufficient to find and restore the old destinations .",
    "the cases where @xmath49 , @xmath50 , @xmath52 and @xmath53 are not all distinct need to be detected and treated differently during backtracking .",
    "the matrix method allows individual states to be considered separately , by starting with special vectors in equation  [ eq : continuation ] .",
    "for example , this makes it simple to find the minimum number of continuations to reach a state from starting states , or the minimum number of continuations to reach an ending state .",
    "for example , the grid on the left of figure  [ fig : state_etc ] can be completed to a cycle in exactly one way .",
    "other observations are made in figure  [ fig : notables ] .",
    "tables  [ start6counts ] and  [ start8counts ] show the _ success rate _ of starting states in producing cycles .",
    "the single - loop state is the most successful ( for the two sizes shown and all other sizes considered in the current work ) .",
    "the starting state with unit - length loops ( the penultimate state in table  [ start6counts ] ) is less successful than the single - loop ( for @xmath55 )",
    ". the ratio of counts increase with @xmath56 , as shown in figure  [ fig : ratiograph ] .",
    "large numbers are reached during the enumerations . some previous work ( for example @xcite )",
    "used modular arithmetic : the large numbers were stored modulo various integers and the final answers were deduced using the chinese remainder theorem . in the current work ,",
    "the gmp multiple - precision library was used to store and manipulate the values .",
    "this was considered to be more convenient . from an information - theoretical perspective",
    ", there should be no memory penalty in storing the values themselves , and the library allows efficient arithmetic .",
    "grid , there is exactly one way to form a state with the horizontal edges shown in bold ( and no others ) in the central position . there is then no way to continue that state to a complete cycle .",
    "right : in the @xmath57 grid , there are many ways to form states with the horizontal edges shown ( and no others ) , but at least 5 continuations are required to form any such state from a starting state .",
    "therefore , this pattern of horizontal edges can occur _ only _ in the central position.,width=170 ]    c c c c c   &   &   &   &   + 397 & 203 & 203 & 145 & 124    ' '' ''     +    c c c c c c c c c   &   &   &   &   &   &   &   &   + 909009 & 510478 & _ 483465 _ & _ 337470 _ & _ 322007 _ & 268967 & 253695 & _ 149394 _ & 111755    ' '' ''     +     grids .",
    "closed symbols : ratio between the single - loop state ( the most successul ) and the unit - length state .",
    "open symbols : ratio between the unit - length state and the least successful state.,width=453 ]",
    "a direct search on a modified grid was used to find all cycles with 90rotational symmetry .",
    "the modified grid is shown in figure  [ fig : grid90 ] : for cycles on @xmath0 grids , a grid of size @xmath58 is used , with additional edges between the right edge and the bottom edge as shown .",
    "hamiltonian cycles on the modified grid can be copied to the larger grid , with the additional edges converted to edges between the copies .",
    "an odd number of the additional edges must be used in the cycle .",
    "it is found that this always occurs for odd @xmath56 , and there are no cycles for even @xmath56 .",
    "an outline of a proof is given below .",
    "there is a well - known parity argument proving that hamiltonian cycles are not possible in @xmath58 grid for odd @xmath56 .",
    "( for example , see @xcite , where it is also shown by parity arguments that some states are impossible in hamiltonian cycles . )",
    "if the nodes are coloured alternately as in figure  [ fig : grid90 ] , then every edge must join nodes of opposite colours",
    ". therefore , equal numbers of nodes of both colours are present in a cycle .",
    "however , for odd @xmath56 , there is one more node of the ` corner ' colour , so no cycle can be hamiltonian . in the modified grid , by contrast , additional edges link nodes of equal colour .",
    "therefore , a hamiltonian cycle is possible if it includes one of these additional edges , linking nodes of ` corner ' colour .",
    "further pairs of additional edges , of opposite colours , are also possible .",
    "the odd additional edge permits cycles with odd @xmath56 but invalidates even @xmath56 .",
    "therefore , square grids of nodes can have hamiltonian cycles with 90rotational symmetry if and only if they have length @xmath59 for some @xmath60 .     grid , suitable for searching for @xmath61 solutions with 90  rotational symmetry.,width=264 ]    knuth s dancing links  x ( dlx ) algorithm @xcite was modified to perform exhaustive backtracking searches for cycles on the modified grids . in the terminology of the dlx algorithm , each node",
    "was represented by a column , and each edge by a row containing references to its two nodes .",
    "dlx was originally applied to exact cover problems , where rows are selected such that every column is present in exactly one row .",
    "when a row was selected , all columns in that row could be removed from consideration , along with all other rows including those columns .",
    "the ` dancing links ' make it easier to reinstate these columns when the row is deselected during backtracking .",
    "the modification was to insist that each column must be visited exactly twice . when a row is selected and a column is visited for the first time , then only the row is removed from consideration .",
    "when the column is visited twice , then that column and all rows that include it are removed .",
    "there is one important detail in this modification : when a column is used as the basis for selecting rows in the search , then a pair of rows should be chosen only once . therefore , the search will select a second row only if it follows the first selected row .",
    "also , when a column is used once as the basis for selecting rows , then it is immediately used again if possible .",
    "these precautions are required to avoid double counting .",
    "this modified method is suitable for direct searches for hamiltonian cycles on other graphs .",
    "since every cycle is reached individually , the very large enumerations of section  [ matrixmethod ] are not feasible . however , for the specific application to 90rotational symmetry , the reduced search size ( on grids of size @xmath56 rather than @xmath62 ) makes the search manageable .",
    "results are given in section  [ results ] .",
    "the methods described in earlier sections were implemented on a four - core intel core i7 - 3770 machine with the windows  8 operating system .",
    "programs were written in the c language , using the gcc compiler , version 4.8.0 , and the gnu multiple precision library , version 5.1.3 .",
    "cpu times are quoted from running one process at a time .    for the search using the matrix method , table  [ statetable ]",
    "shows that the number of continuations increases by a factor of approximately 15 for each increase in @xmath56 .",
    "the complexity of finding each continuation also increases .",
    "also , the search for all continuations must be done @xmath63 times , since ( in the current work ) continuations could not be stored in memory .",
    "therefore , there were rapid increases in the computer resources required : for grids of @xmath64 , @xmath65 and @xmath66 nodes , the cpu times were 6  seconds , 2  minutes and 16  hours respectively .",
    "the largest of these used approximately 3  gb of ram , increasing over the course of the run because of the memory requirement for two counts ( in vectors @xmath29 and @xmath47 ) for every state .",
    "table  [ statetable ] shows that the number of continuations is much smaller when reflective symmetry is enforced . for this variant ,",
    "even a @xmath67 grid required only 5  minutes of cpu time and 1  gb of ram .    for the direct search for cycles with 90rotational symmetry , as described in section  [ dancinglinks ] ,",
    "the search for @xmath68 took less than 1  second and the search for @xmath69 took 13.75  hours .",
    "the memory requirements were very small : less than 0.3  mb for @xmath69 .",
    "results are shown in tables  [ rawresults ] , [ deducedresults ] and  [ oeisresults ] .",
    "the current work agrees with previously published results . also , the current work was subject to further cross - checks .",
    "as mentioned earlier , equations  [ firstb ] and  [ secondb ] represent alternative routes to @xmath15 , using substantially different calculations ( albeit in the same overall method ) .",
    "similarly , the matrix method generates counts of cycles on @xmath70 grids of nodes as intermediate results , and these can be compared with the @xmath71 grids results .",
    "the matrix method could be stopped at only @xmath38 continuations , since there are sufficient values of @xmath14 already known @xcite . instead ,",
    "the method was run for @xmath72 continuations to allow cross - checks with those values and the extended sequence  a222200 @xcite .",
    "the direct search had relatively few cross - checks .",
    "the previously published results extend only to @xmath73 .",
    "however , the method is only a small modification of a search for cycles in an @xmath74 grid of nodes . for that problem",
    ", the search gives the correct answer up to @xmath75 ; this test takes 6  seconds of cpu time .",
    "the test for @xmath10 would be expected to take more than 100000 times longer .",
    "+ 2 & 6 & 4 & 2 & 2 & 0 & 0 + 3 & 1072 & 44 & 28 & 6 & 2 & 0 + 4 & 4638576 & 2828 & 1504 & 40 & 0 & 0 + 5 & & & & & + & & 564468 & 520176 & 488 & 204 & 0 + 6 & & & & & + & & 754425400 & 696179102 & 13782 & 0 & 0 + 7 & & & & + & & & & & + & & & & & + & & & & 757626 & 510718 & 0 + 8 & & & & + & & & & & + & & & & & + & & & & 95835196 & 0 & 0 + 9 & & & + & & & & & + & & & & & + & & & & 24236840344 & 31008619522 & 0 + 10 & & + & & & & + & & & & + & & & & & + & & & & & 0 & 0 +             + 2 & 0 & 1 & 0 & 1 & 0 & 0 + 3 & 121 & 19 & 5 & 3 & 1 & 0 + 4 & 578937 & 1394 & 366 & 20 & 0 & 0 + 5 & 58407351059 & 281990 & 129871 & 244 & 102 & 0 + 6 & & & & & + & & 377205809 & 174041330 & 6891 & 0 & 0 + 7 & & & & + & & & & & + & & & & & + & & & & 378813 & 255359 & 0 + 8 & & & & + & & & & & + & & & & & + & & & & 47917598 & 0 & 0 + 9 & & & + & & & & + & & & & & + & & & & 12118420172 & 15504309761 & 0 + 10 & & + & & & & + & & & & + & & & & & + & & & & & 0 & 0 +               + 2 & 2 & 1 & 1 + 3 & 149 & 24 & 4 + 4 & 580717 & 1760 & 20 + 5 & 58407763266 & 411861 & 346 + 6 & 134528361351329451 & 551247139 & 6891 + 7 & & + & & 2883245852086 & 634172 + 8 & & + & & 85948329517780776 & + 9 & + & & + & & & + 10 & + & & + & & & +"
  ],
  "abstract_text": [
    "<S> the enumeration of hamiltonian cycles on @xmath0 grids of nodes is a longstanding problem in combinatorics . </S>",
    "<S> previous work has concentrated on counting all cycles . </S>",
    "<S> the current work enumerates nonisomorphic cycles  that is , the number of isomorphism classes ( up to all symmetry operations of the square ) . </S>",
    "<S> it is shown that the matrix method used previously can be modified to count cycles with all combinations of reflective and 180rotational symmetry . </S>",
    "<S> cycles with 90rotational symmetry were counted by a direct search , using a modification of knuth s dancing links algorithm . from these counts , </S>",
    "<S> the numbers of nonisomorphic cycles were calculated for @xmath1 .    </S>",
    "<S> hamiltonian cycle , hamiltonian circuit , grid graph , compact self - avoiding walk </S>"
  ]
}
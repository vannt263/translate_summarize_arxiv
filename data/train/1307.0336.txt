{
  "article_text": [
    "let @xmath0 be a time homogeneous diffusion process which is the unique ( strong ) solution of the following stochastic differential equation : @xmath1    if @xmath2 is a time dependent boundary , we are interested in estimating either the pdf or cdf of the first passage time ( fpt ) of the diffusion process through this boundary that is we will study the following random variable : @xmath3    in general , there is no explicit expression for the first passage - time density of a diffusion process through a time - varying boundary . to this date",
    ", only a few specific cases provide closed formed formulas for example when the process is gaussian and the boundary is of a daniels curve type . thus , we mainly rely on simulation techniques to estimate this density in a general setting .",
    "the main goal of this work is to develop a computationally efficient algorithm that will provide reliable fpt density estimates .",
    "the paper is organized as follows . in section 2 ,",
    "we review existing techniques followed by the mathematical foundations leading to a novel algorithm .",
    "finally , section 3 is devoted to various examples enabling us to evaluate the algorithm s performance .",
    "this is the simplest and best - known approach based on the law of large numbers . after fixing a time interval",
    ", basically we divide the latter into smaller ones , simulate a path of the process along those time points and , if it occurs , note the subinterval where the first upcrossing occurs . generally , the midpoint of this subinterval forms the estimated first passage time of this simulated path .",
    "we repeat the process a large number of time to construct a pdf or cdf estimate of this stopping time .",
    "consider a brownian motion @xmath4 , a linear boundary @xmath5 , then for @xmath6 and @xmath7 , from standard theory the first passage time probability has an explicit form given by @xmath8 where @xmath9 denotes the cdf of a standard normal distribution .",
    "+ setting @xmath10 , @xmath11 and @xmath12 , table 1 gives us estimates of the fpt probability with various number of simulated paths @xmath13 and time - step discretization @xmath14 .",
    "clearly , even in a simple case as this one , in order to have a suitable estimation of the true value @xmath15 we have to rely on a large number of paths and a very fine partition of the time interval .",
    ".monte carlo estimates of the fpt probability of a brownian motion through the boundary @xmath16 [ cols=\"^,^,^,^\",options=\"header \" , ]     another drawback of the crude monte carlo approach is that it tends to overestimates the true value of the first passage - time since an upcrossing may occur earlier in between simulated points of a complete path as illustrated in figure [ onepath ] .",
    "+      instead of continuously repeating the whole monte carlo procedure with an even finer interval partition to obtain better estimates , let us see how one could improve on the initial estimates without discarding the simulated paths .",
    "an astute idea that have been put forward by several authors , is to ideally obtain the probability law of an upcrossing between simulated points , thus if @xmath17 is the probability of an upcrossing in the time interval @xmath18 $ ] , then one would simply generate a value @xmath19 taken from a uniform random variable on @xmath20 $ ] and assert that there is an upcrossing if @xmath21 . since the exact fpt probability of a diffusion bridge will more than often not be available , we need to consider an adequate estimation of this probability .      for each subinterval",
    ", one could consider simulating paths of approximate tied - down processes as proposed by giraudo , sacerdote and zucca @xcite where they basically used a kloden platen approximation scheme with order of convergence 1.5 , or we could make use of more recent results from lin , chen and mykland @xcite or srensen and bladt @xcite to improve on the fpt probability estimates . although all of these may constitute adequate approximations of the true fpt probability it may prove costly in computation time since these methods tantamounts to generating numerous simulations of bridge paths on successive subintervals for each of the original sample paths . +",
    "another alternative , as first proposed in strittmatter @xcite , is to consider that for a small enough interval , the diffusion part of the process should remain fairly constant and then consider a brownian bridge approximation of the diffusion bridge and exploit known results on the fpt of brownian bridges .",
    "for example giraudo and sacerdote @xcite considered solving numerically the volterra type integral equation linked to the generalized brownian bridge fpt probability through a general time varying boundaries . since a certain number of iterations may be needed to obtain adequate solutions of integral equations specific to each sample paths and successive subinterval this may sensibly increase computing time .",
    "finally , it is worth mentioning that all of the above methods could , in many cases , be improved significantly as far as accuracy is considered by first applying a lamperti transform on both the original process and the frontier as described for example in iacus @xcite .",
    "indeed , define @xmath22 and apply it on the original process and the time - varying boundary .",
    "assuming that @xmath23 is one - to - one , then the original problem is equivalent to finding the fpt density of @xmath24    where the new boundary is given by @xmath25 and , by it s formula , the diffusion process @xmath26 follows the dynamic @xmath27    where @xmath28 since the diffusion part of the process @xmath26 is constant , then the simple brownian bridge will constitute a good approximation of the diffusion bridge .      in our approach , while still considering a brownian bridge approximation of the diffusion bridges after a lamperti transform as described previously , we propose to consider localized daniels curve approximation of the time - varying boundary . since explicit formulas of the first passage time probability are available in this case , one would readily get an adequate approximation of the true probability @xmath17 .",
    "furthermore , under mild assumptions , a ( unique ) daniels curve approximation can easily be obtained by simply taking the endpoints of the segment and the value at midpoint ( or another point of our choosing ) .",
    "indeed , we will show that it leads to consider a non - linear system of three equations that can be explicitly solved .    before describing our algorithm",
    ", we will need the following key results :    * proposition 1*. consider a brownian bridge @xmath29 define on an time interval @xmath30 $ ] and @xmath2 a daniels curve defined by @xmath31\\ ] ] where @xmath32 , @xmath33 and @xmath34 , if @xmath35 then @xmath36    _ proof .",
    "_ apply therom 3.4 of di nardo et al .",
    "@xcite .",
    "* proposition 2*. let @xmath30 $ ] be a time interval , consider the points @xmath37 , @xmath38,@xmath39 and set @xmath40 @xmath41et @xmath42 .",
    "if @xmath43    then there is a unique daniels curve ( [ dan ] ) passing through the three points with parameters @xmath44    _ proof .",
    "_ the set of points generate the following non - linear system of equations : @xmath45 & = & b\\\\ \\nonumber\\frac{\\alpha}{2}-\\frac{\\delta",
    "t}{\\alpha}\\ln\\left[\\frac{\\beta+\\sqrt{\\beta^{2}+4\\gamma e^{-\\alpha^{2}/\\delta t}}}{2}\\right ] & = & c\\end{aligned}\\ ] ]    obviously the first equation gives @xmath46 , while simple algebraic manipulations on the last two equations lead us to solve the following linear system @xmath47    which can be rewritten in the form @xmath48    since @xmath49 then there exists a unique solution given by : @xmath50\\end{aligned}\\ ] ]    this would constitute the solution to the original system provided that @xmath51 and @xmath34 .",
    "notice first that @xmath52 and therefore @xmath51 and if furthermore @xmath53 then @xmath54 and clearly @xmath34 is satisfied .",
    "so if we assume now that @xmath55 then @xmath56 , thus we need to verify that @xmath57 which is the case since    @xmath58\\\\   & = & \\frac{a^{2}}{\\left(a^{3}b - c\\right)^{2}}\\left(\\left(a^{4}b^{2}-c^{2}\\right)^{2}+4a^{3}bc\\left(c - ab\\right)\\left(a^{3}b - c\\right)\\right)\\\\   & = & \\frac{a^{2}}{\\left(a^{3}b - c\\right)^{2}}\\left(a^{4}b^{2}+c^{2}-2a^{3}bc\\right)^{2}\\end{aligned}\\ ] ]    the final step is to make sure that it solves the original system . substituting back in ( [ eq1 ] ) , ( where only positive square roots are involved ) , we see that is the case only if @xmath59 , or equivalently @xmath60 which is verified through ( [ cond1 ] ) . + the fpt algorithm is described as follows :    1 .",
    "apply the lamperti transform ( [ lamp ] ) to the original diffusion process ( [ diffx ] ) and frontier @xmath2 to obtain the new process ( [ diffy ] ) and boundary @xmath61 2 .   select a time interval @xmath62 $ ]  and construct a partition @xmath63 3 .",
    "initialize fpt vector counter to @xmath64 4 .",
    "initialize path counter to @xmath65 + while @xmath66 is less than @xmath13 the number of desired paths do the following : + 1 .   simulate a path of the process @xmath67 2 .",
    "initialize subinterval counter to @xmath68 + while @xmath69 is less than @xmath70 the number of desired subintervals do the following : + 1 .",
    "if @xmath71 then set @xmath72 fpt vector component to @xmath73 and path counter to @xmath74 , go to step 5 2 .",
    "set @xmath75 , @xmath76 , @xmath77 , + @xmath78 , finally set @xmath79 , @xmath80 , @xmath81 , @xmath82 , @xmath83 and @xmath84 as in ( [ param ] ) of proposition 2 3 .",
    "if @xmath85 then set @xmath86 , @xmath87 + if @xmath88 then set @xmath89 , @xmath90 + if @xmath91 then set @xmath92 @xmath93 4 .",
    "set probability upcrossing to @xmath94 5 .",
    "generate a value @xmath95 taken from a uniform random variable 6 .",
    "if @xmath96 then set @xmath72 fpt vector component to @xmath73 and path counter to @xmath74 , go to step 5 , else set @xmath97 , go to step 7    note that step 9 includes extreme cases where the middle point of the frontier in a subinterval may not be reached by a daniels curve , thus we use the closest curve possible .",
    "we will focus our examples on diffusion processes which paths can be simulated exactly . therefore with known results on fpt density and bounds , it will allow us to better visualize the approximation error due essentially to the algorithm .        where @xmath100 is the probability density function of the ornstein - uhlenbeck process starting at @xmath101 .",
    "+ figure [ ex1 ] compares the true fpt density with the empirical density histogram obtained through our algorithm using a time step discretization of 0.01 and 10 000 simulated paths .",
    "furthermore , the algorithm gives us a fpt probability estimate of @xmath102 over the whole interval compared to the true value of @xmath103 representing a relative error of about @xmath104 .",
    "example 2 .",
    "consider the following geometric brownian process and linear boundary @xmath105 by applying the lamperti transform to both the process and boundary we obtain respectively @xmath106 as in example 1 , this transformed diffusion process is also a gauss - markov process and , although the new frontier does not allow an explicit fpt density , using the deterministic algorithm in di nardo et al .",
    "@xcite with a 0.01 time step discretization , we can obtain a reliable approximation .",
    "+ figure [ ex1 ] compares the di nardo fpt density approximation with the empirical density histogram obtained through our algorithm using the same time step discretization with 10 000 simulated paths .",
    "in addition , the algorithm offers a fpt probability estimate of @xmath107 over the whole interval agreeing with the actual value of @xmath108 ( a relative error of about @xmath109 ) .",
    "example 3 .",
    "consider the modified cox - ingersoll - ross process and linear boundary @xmath110 by applying the lamperti transform to both the process and boundary we obtain respectively @xmath111 as opposed to the preceding examples , this transformed diffusion process is not gaussian however using beskos and roberts @xcite exact algorithm we can simulate exact sample paths .",
    "although an explicit fpt density is not available , using results of downes and borovkov @xcite we can , in this case , obtain the following lower and upper bounds : @xmath112 where @xmath113 is the probability density function of a standard brownian motion .",
    "+ figure [ ex1 ] compares the fpt bounds with the empirical density histogram obtained through our algorithm using a 0.01 time step discretization starting initially with 15 000 simulations and obtaining 11 768 valid paths through the exact algorithm .",
    "moreover , the algorithm suggests a fpt probability estimate of @xmath114 over the whole interval which lies within the values @xmath115 and @xmath116 ."
  ],
  "abstract_text": [
    "<S> in this paper , we develop a monte carlo based algorithm for estimating the fpt density of a time - homogeneous sde through a time - dependent frontier . </S>",
    "<S> we consider brownian bridges as well as localized daniels curve approximations to obtain tractable estimations of the fpt probability between successive points of a simulated path of the process . under mild assumptions , a ( unique ) </S>",
    "<S> daniels curve local approximation can easily be obtained by explicitly solving a non - linear system of equations .    </S>",
    "<S> imene allab and francois watier + </S>"
  ]
}
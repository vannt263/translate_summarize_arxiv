{
  "article_text": [
    "throughout this paper , we suppose that @xmath6 is a weighted tree with the vertex set @xmath7 , the edge set @xmath8 , vertex - weight function @xmath9 and edge - weight function @xmath10 ( where @xmath11 is a commutative ring with a unit element @xmath12 ) , if not otherwise specified . if a weighted tree @xmath6 satisfies @xmath13 , we call @xmath0 a simple tree and denote it by @xmath14",
    ". let @xmath15 denote the set of subtrees of a tree @xmath0 . for arbitrary two fixed vertices @xmath16 and",
    "@xmath17 , denote by @xmath18 ( resp .",
    "@xmath19 ) the set of subtrees of @xmath0 , each of which contains vertex @xmath16 ( resp .",
    "vertices @xmath16 and @xmath17 ) , denote by @xmath20 the number of subtrees of @xmath0 with @xmath21 edges , denote by @xmath22 ( resp .",
    "@xmath23 ) the number of subtrees of @xmath0 , each of which contains vertex @xmath16 ( resp .",
    "vertices @xmath16 and @xmath17 ) and @xmath21 edges , denote by @xmath24 the number of subtrees of @xmath0 with @xmath21 vertices , and denote by @xmath25 ( resp .",
    "@xmath26 ) the number of subtrees of @xmath0 with @xmath21 vertices , each of which contains vertex @xmath16 ( resp .",
    "vertices @xmath16 and @xmath17 ) .",
    "obviously , for any @xmath27 , we have the following : @xmath28 for a given subtree @xmath1 of a weighted @xmath0 , we define the weight of @xmath1 , denoted by @xmath29 , as the product of the weights of the vertices and edges in @xmath1 .",
    "the generating function of subtrees of a weighted tree @xmath6 , denoted by @xmath30 , is the sum of weights of subtrees of @xmath0 .",
    "that is , @xmath31 similarly , we can define the generating function of subtrees of a weighted tree @xmath6 containing a fixed vertex @xmath16 ( resp .",
    "two fixed vertices @xmath16 and @xmath17 ) , as the sum of weights of subtrees of @xmath0 containing vertex @xmath16 ( resp .",
    "vertices @xmath16 and @xmath17 ) , denoted by @xmath32 ( resp .",
    "@xmath33 ) .",
    "hence we have @xmath34    by the definitions of @xmath35 and @xmath33 , if we weight each edge by @xmath36 and each vertex by @xmath37 , then @xmath38    let @xmath0 be a simple tree of order @xmath39 , and let @xmath16 and @xmath17 be arbitrary two distinct vertices of @xmath0 . for the sake of convenience , we denote by @xmath40 the number of subtrees of @xmath0 , by @xmath41 the number of subtrees of @xmath0 , each of which contains vertex @xmath16 , and by @xmath42 the number of subtrees of @xmath0 , each of which contains vertices @xmath16 and @xmath17 .",
    "szkely and wang @xcite studied the problem enumerating subtrees of a tree .",
    "they proved the following :    the path @xmath43 has @xmath44 subtrees , fewer than any other trees of @xmath39 vertices .",
    "the star @xmath45 has @xmath46 subtrees , more than any other trees of @xmath39 vertices .",
    "szkely and wang @xcite said that it was not difficult to design a recursive algorithm that would compute the number of subtrees of a tree in a time bounded by a polynomial of @xmath39 , the number of vertices ( but we have not found such an algorithm ) .",
    "these may be the first results on enumeration of subtrees of a simple tree . for some related results",
    "see also szkely and wang @xcite and wang @xcite .    in the next section ,",
    "we give a linear - time algorithm to count the generating functions @xmath47 , and @xmath33 of subtrees of a weighted tree @xmath6 for any two vertices @xmath16 and @xmath17 . as an applications , in section 3 we characterize the tree with the diameter at least @xmath2 , which has the maximum number of subtrees , and we characterize the tree with the maximum degree at least @xmath3 , which has the minimum number of subtrees .",
    "finally , section 4 presents our conclusions .",
    "let @xmath6 be a weighted tree of order @xmath48 and @xmath49 a pendant vertex of @xmath0 .",
    "suppose @xmath50 is the pendant edge of @xmath0 .",
    "we define a weighted tree @xmath51 of order @xmath52 from @xmath0 as follows : @xmath53 , and @xmath54 for any @xmath55 , and @xmath56 for any @xmath57 .",
    "figure 1 illustrates the procedure constructing @xmath58 from @xmath0 .     with a pendent edge @xmath50 .",
    "( b )  the corresponding weighted tree @xmath51 . ]    keeping the above notation , we have @xmath59    * proof *  we partition the sets @xmath15 and @xmath60 of subtrees of @xmath0 and @xmath58 as follows : @xmath61    @xmath62 is the set of subtrees of @xmath0 , each of which contains vertex @xmath63 but not vertex @xmath49 ;    @xmath64 is the set of subtrees of @xmath0 , each of which contains edges @xmath50 ;    @xmath65 is the set of subtrees of @xmath0 , each of which contains neither @xmath49 nor @xmath63 ;    @xmath66 is the set of subtrees of @xmath0 , each of which contains @xmath49 but not @xmath63 ;    @xmath67 is the set of subtrees of @xmath58 , each of which contains vertex @xmath63 ;    @xmath68 is the set of subtrees of @xmath58 , each of which contains no vertex @xmath63 .    by the definitions above ,",
    "we have    @xmath69  there exist two natural bijections ( ignore weights ) @xmath70 between @xmath62 and @xmath67 , and @xmath71 between @xmath65 and @xmath68 ;    @xmath72  @xmath73 , where @xmath74 is the tree obtained from @xmath1 by attaching a pendant edge @xmath75 at vertex @xmath63 of @xmath1 ;    @xmath76  @xmath77 .    note that we have @xmath78\\frac{\\omega(t_1')}{f'(v)}. \\eqno{(2)}\\ ] ]    by @xmath79 and @xmath76 , we have @xmath80 @xmath81 @xmath82 by @xmath83 , we have @xmath84 \\omega(t_1)=\\sum_{t_1\\in \\mathcal t_1}f(v)[f(u)g(e)+1 ] \\frac{\\omega(t_1)}{f(v)}. \\eqno{(6)}\\ ] ] by @xmath69 , @xmath70 is a natural bijection between @xmath62 and @xmath67 , then @xmath85 since @xmath1 and @xmath86 have  almost all \" the same weights of vertices and edges except the weights of @xmath63 in @xmath1 and @xmath86 ( one is @xmath87 and another is @xmath88 ) .",
    "so by @xmath89 and @xmath90 we have @xmath91 hence by @xmath92 , and the definitions of @xmath30 and @xmath93 we have @xmath94 @xmath95 and the theorem thus follows .",
    "@xmath96    by a similar argument we have the following :    let @xmath6 be a weighted tree of order @xmath48 and @xmath49 a pendant vertex of @xmath0 .",
    "suppose @xmath50 is the pendant edge of @xmath0 .",
    "let @xmath58 be the weighted tree defined as above .",
    "then , for arbitrary vertex @xmath97 , the generating functions @xmath32 and @xmath98 of subtrees of @xmath0 and @xmath58 satisfy the following : @xmath99    let @xmath6 be a weighted tree of order @xmath48 and @xmath49 a pendant vertex of @xmath0 .",
    "suppose @xmath50 is the pendant edge of @xmath0 .",
    "let @xmath58 be the weighted tree defined as above .",
    "then , for arbitrary two distinct vertices @xmath16 and @xmath17 such that @xmath100 , the generating functions @xmath33 and @xmath101 of subtrees of @xmath0 and @xmath58 satisfy the following : @xmath102    for the sake of convenience , if @xmath103 is a sequence , we define : @xmath104 if @xmath105 .",
    "let @xmath106 be a weighted path of order @xmath39 , where @xmath107 , @xmath108 for @xmath109 , and @xmath110 for @xmath111 .",
    "then @xmath112 @xmath113 . \\eqno{(11)}\\ ] ]    * proof *  we prove the corollary by induction on @xmath39 .",
    "it is easy to prove that if @xmath114 or @xmath115 the corollary holds .",
    "now we suppose @xmath116 and proceed by induction .",
    "let @xmath117 , where @xmath118 , @xmath119 for @xmath120 and @xmath121 , and @xmath122 for @xmath123 .",
    "then , by theorem 2.1 , we have @xmath124 by induction , we have @xmath125 where @xmath126 for @xmath127 , and @xmath128 .",
    "hence we have @xmath129 @xmath130@xmath131 note that @xmath132 for @xmath120 , and @xmath128 .",
    "by @xmath133 , it is easy to show that @xmath134 holds .",
    "similarly , we can show that @xmath135 holds and hence the corollary has been proved .",
    "@xmath96    a direct result of corollary 2.4 is the following :    @xmath136 @xmath137    similarly , we can prove the following :    let @xmath138 be a weighted star of order @xmath39 , where @xmath139 , @xmath108 for @xmath109 , and @xmath110 for @xmath111 . then @xmath140y_n.\\ ] ]    @xmath141    by corollaries 2.5 and 2.7 , we have the following :    [ szkely and wang @xcite ] @xmath142    by theorems 2.1 , 2.2 , and 2.3 , we can produce three graph - theoretical algorithms for computing the generating functions @xmath35 , and @xmath33 of subtrees of a weighted tree @xmath6 directly from @xmath0 for arbitrary two different vertices @xmath16 and @xmath17 , respectively , as follows :    let @xmath6 be a weighted tree with two or more vertices .",
    "* step 1 *  initialize .",
    "define : @xmath143 , for all @xmath144 ; and @xmath145 .",
    "* step 2 *  contract .",
    "( a )  choose a pendant vertex @xmath49 and let @xmath50 denote the pendant edge .",
    "( b )  replace @xmath146 with @xmath147 .",
    "( c )  replace @xmath148 with @xmath149 .",
    "( d )  eliminate vertex @xmath49 and edge @xmath150 .",
    "* step 3 *  if @xmath63 is the only remaining vertex , go to step 4 .",
    "otherwise , go to step 2 .",
    "* step 4 *  answer : @xmath151 .",
    "let @xmath6 be a weighted tree with two or more vertices and @xmath16 a fixed vertex of @xmath0 .",
    "* step 1 *  initialize .    define : @xmath143 , for all @xmath144 .",
    "* step 2 *  contract .",
    "( a )  choose a pendant vertex @xmath152 and let @xmath50 denote the pendant edge .",
    "( b )  replace @xmath146 with @xmath147 .",
    "( c )  eliminate vertex @xmath49 and edge @xmath150 .",
    "* step 3 *  if @xmath63 is the only remaining vertex @xmath16 , go to step 4 .",
    "otherwise , go to step 2 .",
    "* step 4 *  answer : @xmath153 .",
    "let @xmath6 be a weighted tree with two or more vertices , and @xmath16 and @xmath17 two distinct vertices of @xmath0 .",
    "* step 1*.  initialize .",
    "define : @xmath154 for all @xmath144 .",
    "* step 2 *  if @xmath0 is a path , and @xmath16 and @xmath17 are two pendant vertices , go to step 5 . otherwise , go to step 3 .",
    "* step 3 *  contract .    @xmath155  choose a pendant vertex @xmath49 , which is different from @xmath16 and @xmath17 , and",
    "let @xmath50 denote the pendant edge .",
    "@xmath156  replace @xmath146 with @xmath147 .",
    "@xmath157  eliminate vertex @xmath49 and edge @xmath150 .",
    "* step 4 *  if there exists no vertex @xmath49 satisfying the condition @xmath155 in step 3 , go to step 5 . otherwise , go to step 3 .",
    "* step 5 *  answer : @xmath158 , where @xmath159 denotes the unique path of @xmath0 from vertex @xmath16 to @xmath17 .",
    "it is not difficult to see that algorithms 2.9 , 2.10 , and 2.11 are linear on the number of vertices of the tree @xmath0 .",
    "let @xmath0 be a simple tree of order @xmath39 and @xmath16 and @xmath17 two distinct vertices of @xmath0 . by algorithms 2.9 , 2.10 , and 2.11",
    ", we can compute easily the numbers @xmath160 and @xmath26 , respectively .",
    "the following examples show these procedures of computations .",
    "we compute the numbers @xmath161 of a simple tree @xmath0 , which appears in the upper left corner in figure 2 .",
    "we weight each vertex and edge of @xmath0 by one . from the illustration in figure 2 , we know that @xmath162 .",
    "we compute the edge generating functions @xmath163 and @xmath164 of a simple tree @xmath0 , which appears in figure 3 .",
    "we can weight each vertex by one and each edge by @xmath36 ( or weight each vertex by @xmath37 and each edge by one , see example 2.15 ) . from the illustration in figure 3 , we know that @xmath165 . hence @xmath166 .",
    "we compute the vertex generating functions @xmath167 and @xmath168 of a simple tree @xmath0 , which appears in figure 4 or figure 3 .",
    "we weight each vertex by @xmath37 and each edge by @xmath12 . from the illustration in figure 4 , we know that @xmath169 . hence @xmath170 .",
    "from example 2.14 , for the tree @xmath0 shown in figure 3 , we have @xmath171 .",
    "we suppose that the tree @xmath0 considered in this section is simple , if not specified . in section 3.1 , we introduce four transformations of trees , each of which gives us a way of comparing numbers of subtrees of a pair of trees . in section 3.2 , by the four transformations of trees we characterize the tree with the diameter at least @xmath2 , which has the maximum number of subtrees , and we also characterize the tree with the maximum degree at least @xmath3 , which has the minimum number of subtrees . as corollaries",
    ", we obtain the trees with the second , third , fourth , and fifth largest numbers of subtrees and the tree with the second minimum number of subtrees .",
    "denote the degree of a vertex @xmath63 of tree @xmath0 by @xmath172 .",
    "let @xmath86 and @xmath173 be two trees , and let @xmath49 ( resp .",
    "@xmath63 ) be a vertex of @xmath86 ( resp .",
    "@xmath173 ) , where @xmath174 .",
    "let @xmath1 be a tree obtained from @xmath86 and @xmath173 by identifying vertices @xmath49 and @xmath63 ( see the illustration in figure 5(a ) ) .",
    "construct a tree @xmath175 from @xmath86 by attaching @xmath176 pendant edges to vertex @xmath49 of @xmath86 ( see figure 5(b ) ) .",
    "we call the procedure constructing @xmath175 from @xmath1 the first transformation of tree @xmath1 , denoted by @xmath177 .",
    "let @xmath1 and @xmath175 be the trees defined as above , where @xmath178 and @xmath179 . then @xmath180 with equality holds if and only if @xmath181 and @xmath182 .",
    "* proof *  let @xmath183 ( @xmath184 ) be two functions defined as follows : @xmath185 where @xmath186 is the number of subtrees of @xmath0 , each of which contains vertex @xmath63 .",
    "suppose that @xmath187 is the set of subtrees of @xmath86 with as least two vertices , each of which contains vertex @xmath49 . by algorithms 2.9 and 2.10",
    ", we have @xmath188\\\\ & = & f(t_2';1,1)+f(t_1'-u;1,1)+f(t_2';1,1;v)|\\phi_u(t_1')|,\\\\ \\]]@xmath189    hence we have @xmath190+[2^r - f(t_2';1,1;v)]|\\phi_u(t_1')|.\\ ] ] note that @xmath173 is a tree with @xmath191 vertices .",
    "hence , by theorem 1.1 or corollary 2.8 , @xmath192 with equality holds if and only if @xmath181 .",
    "since @xmath173 has at least @xmath176 subtrees @xmath16 s ( @xmath193 ) with a vertex , each of which is not a subtree of @xmath173 containing vertex @xmath63 , @xmath194note that @xmath195 hence @xmath196 therefore , we have @xmath197 with equality holds if and only if @xmath181 and @xmath182 .",
    "hence we have @xmath198 with equality holds if and only if @xmath181 and @xmath182 . the lemma thus follows .",
    "@xmath96    let @xmath86 and @xmath173 be two trees , and let @xmath49 ( resp .",
    "@xmath63 ) be a vertex of @xmath86 ( resp .",
    "@xmath173 ) , where @xmath174 .",
    "let @xmath1 be the tree defined as above ( see figure 5(a ) ) .",
    "construct a tree @xmath199 from @xmath86 by identifying vertex @xmath49 of @xmath86 and one of two pendant vertices of a path with @xmath191 vertices ( see figure 5(c ) ) .",
    "we call the procedure constructing @xmath199 from @xmath1 the second transformation of tree @xmath1 , denoted by @xmath200 .",
    "as that in the proof of lemma 3.1 we can prove the following :    let @xmath1 and @xmath199 be the trees defined as above , where @xmath201 .",
    "then @xmath202 with equality holds if and only if @xmath203 and @xmath204 .",
    "let @xmath0 be a tree with @xmath39 vertices and @xmath205 and @xmath206 .",
    "suppose that @xmath207 is a pendant edge of @xmath0 and @xmath208 .",
    "let @xmath86 be the subtree of @xmath0 containing two vertices @xmath209 and @xmath49 , and let @xmath210 . obviously , with application of the first ( resp .",
    "second ) transformation of tree @xmath0 , @xmath0 can be transformed into the star @xmath45 ( resp .",
    "the path @xmath43 ) .",
    "hence , by lemma 3.1 ( resp .",
    "lemma 3.2 ) , @xmath211 ( resp .",
    "@xmath212 ) .",
    "suppose @xmath213 and @xmath214 are the vertex set and edge set of a path @xmath215 with @xmath216 vertices , respectively .",
    "assume that @xmath217 are @xmath218 non - negative integers and @xmath219 .",
    "construct two trees , denoted by @xmath220 and @xmath221 , with @xmath222 vertices as follows .",
    "@xmath0 is the tree obtained from @xmath215 by attaching @xmath223 pendant edges to vertices @xmath224 for @xmath225 ( see figure 6(a ) ) and @xmath226 is the tree obtained from @xmath215 by attaching @xmath227 pendant edges to vertex @xmath228 and @xmath223 pendant edges to vertices @xmath224 for @xmath229 ( see figure 6(b ) ) .",
    "we call the procedure constructing @xmath226 from @xmath0 the third transformation of tree @xmath0 , denoted by @xmath230 .",
    "suppose @xmath2 and @xmath223 for @xmath225 are non - negative integers and @xmath231 .",
    "let @xmath220 and @xmath221 be the two trees defined as above .",
    "if @xmath232 , then we have @xmath233 with equality holds if and only if @xmath234 , @xmath2 is odd and @xmath235 .",
    "* proof *  we assume that @xmath1 is one of two components of @xmath236 , which contains vertex @xmath237 .",
    "obviously , @xmath1 is a subtree of @xmath0 and it can be naturally regarded as a subtree of @xmath226 . by algorithms 2.9 and 2.10 , we have @xmath238\\\\ & & + i2^{k_i+k_{i+1}}[f(t_1;1,1;v_{i+2})+1];\\\\ f(t^*;1,1)&=&\\frac{1}{2}i(i+1)+k_{i}+k_{i+1}+f(t_1;1,1)+2^{k_i+k_{i+1}}(i+1)[f(t_1;1,1;v_{i+2})+1 ] . \\end{array}\\ ] ] hence it is easy to obtain the following @xmath239[2^{k_{i+1}}f(t_1;1,1;v_{i+2})+2^{k_{i+1}}-i].\\ ] ] note that @xmath240 .",
    "so we have @xmath241 . since @xmath242 has at least @xmath243 vertices , @xmath244 , which implies that @xmath245 with equality holds if and only if @xmath246 and @xmath247 .",
    "since @xmath232 , we have @xmath248 with equality if and only @xmath249 and @xmath247 .",
    "it is not difficult to see @xmath247 if and only if @xmath234 .",
    "hence we have prove that @xmath250 with equality holds if and only if @xmath234 , @xmath2 is odd and @xmath235 .",
    "hence the lemma follows .",
    "@xmath96    let @xmath251 be a tree with at least two vertices and @xmath49 a vertex of @xmath0 . for arbitrary two positive integers @xmath252 , construct a tree , denoted by @xmath253 , from @xmath251 by attaching two paths with @xmath254 and @xmath255 vertices to vertex @xmath49 .",
    "figure 7(a ) and ( b ) illustrate two trees @xmath253 and @xmath256 .",
    "we call the procedure constructing @xmath256 from @xmath253 the fourth transformation of @xmath253 , denoted by @xmath257 .",
    "let @xmath251 be a tree with at least two vertices and @xmath49 a vertex of @xmath251 .",
    "for arbitrary two positive integers @xmath258 , let @xmath253 be the tree defined as above .",
    "then @xmath259    * proof *  let @xmath260 ( @xmath184 ) be two functions defined as follows : @xmath261 suppose that @xmath262 is the set of subtrees of @xmath251 with as least two vertices , each of which contains vertex @xmath49 . by algorithms 2.9 and 2.10",
    ", we have @xmath263 @xmath264 from the equalities above , we have @xmath265 since @xmath266 and @xmath267 , we have @xmath268 .",
    "hence @xmath269 which implies @xmath259 hence we have finished the proof of the lemma .",
    "@xmath96      first , we need to defined two trees as follows .",
    "suppose @xmath270 and @xmath3 are three positive integers , @xmath271 and @xmath272 .",
    "let @xmath273 be the tree obtained from @xmath274 by attaching @xmath275 pendant edges to one of pendant vertices of @xmath276 ( see figure 8(a ) ) .",
    "suppose @xmath277 and @xmath278 are the vertex set and edge set of a path @xmath215 with @xmath216 vertices , respectively .",
    "let @xmath279 be the tree obtained from @xmath215 by attaching @xmath280 pendant edges to vertex @xmath281 + 1 $ ] , where @xmath282 $ ] denotes the largest integer no more than @xmath36 ( see figure 8(b ) ) .",
    "let @xmath3 be a positive integer more than two , and let @xmath0 be a tree with @xmath39 vertices , which has the maximum degree at least @xmath3 . then @xmath283 with equality holds if and only if @xmath284 , where @xmath273 is the tree defined as above .",
    "let @xmath2 be a positive integer more than one , and let @xmath0 be a tree with @xmath39 vertices , which has diameter at least @xmath2 . if @xmath285 , then @xmath286 where @xmath279 is the tree defined as above .    before we prove the theorems above , we consider some of their corollaries , which characterize the trees with the second , third , fourth , and fifth largest numbers of subtrees and the tree with the second minimum number of subtrees .",
    "since the maximum degree of a tree @xmath0 with @xmath39 vertices , which is different from @xmath43 , is more than two , the following corollary is immediate from theorems 3.6 and 1.1 .",
    "let @xmath0 be a tree with @xmath39 ( @xmath287 ) vertices and @xmath288 .",
    "then @xmath289    in order to present corollary 3.9 , we need to define a new tree @xmath290 ( where @xmath291 ) as follows .",
    "let @xmath290 be the tree with @xmath39 vertices obtained from @xmath292 by attaching @xmath2 pendant edges to one of pendant vertices of @xmath292 ( figures 9(b ) and ( c ) show @xmath293 and @xmath294 , respectively ) . obviously , @xmath295 ( see figure 9(a ) ) .",
    "let @xmath0 be a tree with @xmath296 vertices and @xmath297,@xmath298 ( see figure 9(a)@xmath299(d ) ) . then @xmath300@xmath301    * proof *   by theorem 1.1 and theorem 3.7",
    ", we have @xmath302 if the diameter of @xmath0 is at least @xmath303 , then by theorem 3.7 we have @xmath304 the following equalities can be proved from algorithm 2.9 : @xmath305 @xmath306 obviously , if @xmath296 , then by @xmath307 and @xmath308 we have @xmath309    note that if the diameter of a tree @xmath58 with @xmath310 or @xmath311 vertices equals three , then @xmath0 must be one of @xmath312 , and @xmath294 .",
    "hence the corollary holds when @xmath310 or @xmath311 .",
    "note that if the diameter of a tree @xmath58 with @xmath313 vertices equals three , then @xmath58 must has the form of @xmath290 , where @xmath314 ( by the definition of @xmath290 ) .",
    "by @xmath307 and @xmath308 , @xmath315 by the definition of @xmath316 , @xmath317 .",
    "it is not difficult to show that if @xmath318 ( hence @xmath319 ) , then @xmath320 therefore , we have shown that if @xmath313 and @xmath319 , then @xmath321    hence the corollary follows .",
    "@xmath96    * proof of theorem 3.6 *  let @xmath0 be a tree with @xmath39 vertices and @xmath322 .",
    "note that @xmath0 is a tree with the maximum degree at least @xmath3 .",
    "hence there exists a vertex @xmath49 of @xmath0 such that @xmath323 . without loss of generality , we assume that @xmath324 is a subset of the neighbor set of @xmath49 in @xmath0 . obviously , if we delete @xmath275 edges @xmath325 from @xmath0 , then @xmath3 components @xmath326 s ( for @xmath327 ) of @xmath0 can be obtained , where @xmath326 is the component containing vertex @xmath16 for @xmath328 and @xmath329 is the one containing vertex @xmath49 .",
    "furthermore , @xmath329 contains at least two vertices . hence @xmath0 has the form illustrated in figure 10(a ) .    with repeated applications of the second transformations of trees",
    ", @xmath0 can be transformed to the form of @xmath226 showed in figure 10(b ) .",
    "hence by lemma 3.2 we have @xmath330 . if @xmath331 , then the theorem holds .",
    "if @xmath332 , then by repeated applications of the forth transformations of trees @xmath226 can be transformed to @xmath273 , and we have @xmath333 . hence @xmath334 .",
    "the theorem thus has been proved .",
    "@xmath96 * proof of theorem 3.7 *  let @xmath0 be a tree with @xmath39 vertices with the diameter at least @xmath2 and @xmath335 .",
    "then there exists a path of length @xmath336 in @xmath0 , denoted by @xmath337 , where @xmath338 .",
    "then @xmath0 must has the form illustrated in figure 11(a ) , where @xmath326 is a subtree of @xmath0 containing vertex @xmath16 for @xmath339 .",
    "particularly , since the diameter of @xmath0 is at least @xmath2 , @xmath340 contains at least two vertices . with repeated applications of the first transformations of trees",
    ", @xmath0 can be transformed to the tree with form of @xmath226 shown in figure 11(b ) and hence we have the following : @xmath233 with equality holds if and only if @xmath341 .    if @xmath342 , then by repeated applications of the third transformations of trees @xmath226 can be transformed to @xmath279 and hence @xmath343 .",
    "so @xmath344 . if @xmath345 , then @xmath346 .",
    "but in this case we have shown that @xmath347 .",
    "the theorem thus follows .",
    "in this paper , we have investigated the problem on enumeration of subtrees of trees .",
    "we obtained a linear - time algorithm to count the sum of weights of subtrees of a tree and we also characterized some trees with extremal number of subtrees . note that if @xmath348 is a connected graph then some coefficients of its tutte polynomial @xmath349 can count the numbers of some kinds of subgraphs of @xmath348 @xcite .",
    "for example , @xmath350 is the number of spanning trees of @xmath348 , @xmath351 is the number of forests in @xmath348 , @xmath352 is the number of connected spanning subgraphs in @xmath348 , and @xmath353 equals the number of spanning subgraphs in @xmath348",
    ". a natural extension of our work would be to give some methods to enumerate connected subgraphs of a connected graph .",
    "on the other hand , an acyclic molecular can be expressed by a tree in quantum chemistry ( see @xcite ) .",
    "the study of the topological indices ( see , for example , @xcite ) has been undergoing rapid expansion in the last few years .",
    "obviously , the number of subtrees of a tree can be regarded as a topological index . hence another interesting direction",
    "is to explore the role of this index in quantum chemistry ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be a weighted tree . </S>",
    "<S> the weight of a subtree @xmath1 of @xmath0 is defined as the product of weights of vertices and edges of @xmath1 . </S>",
    "<S> we obtain a linear - time algorithm to count the sum of weights of subtrees of @xmath0 . as applications , </S>",
    "<S> we characterize the tree with the diameter at least @xmath2 , which has the maximum number of subtrees , and we characterize the tree with the maximum degree at least @xmath3 , which has the minimum number of subtrees . </S>",
    "<S> +   + _ keywords:_subtree , extremal tree , tree transformation , diameter , connected subgraph    * enumeration of subtrees of trees * + weigen  yan@xmath4 and yeong - nanyeh@xmath5 + </S>"
  ]
}
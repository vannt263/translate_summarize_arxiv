{
  "article_text": [
    "we assume familiarity with basic notions of combinatorial semigroup theory , including free semigroups and monoids , and semigroup and monoid presentations . except where stated otherwise , we assume we have a fixed finite presentation for a monoid ( or semigroup , the difference being unimportant ) .",
    "words are assumed to be drawn from the free monoid on the generating alphabet unless otherwise stated .",
    "we write @xmath0 to indicate that two words are equal in the free monoid or semigroup , and @xmath1 to indicate that they represent the same element of the monoid or semigroup presented .",
    "we say that a word @xmath2 is a _",
    "possible prefix _ of @xmath3 if there exists a ( possibly empty ) word @xmath4 with @xmath5 , that is , if the element represented by @xmath3 lies in the right ideal generated by the element represented by @xmath2 .",
    "the empty word is denoted @xmath6 .",
    "a _ relation word _ is a word which occurs as one side of a relation in the presentation .",
    "piece _ is a word in the generators which occurs as a factor in sides of two _ distinct _ relation words , or in two different ( possibly overlapping ) places within one side of a relation word .",
    "note that this definition differs slightly from that used in @xcite in the presence of the word `` distinct '' ; we shall discuss the significance of this shortly . by convention ,",
    "the empty word is always a piece .",
    "we say that a presentation is",
    "_ weakly @xmath7 _ , where @xmath8 is a positive integer , if no relation word can be written as the product of _ strictly fewer than _ @xmath8 pieces .",
    "thus for each @xmath8 , being weakly @xmath9 is a stronger condition than being weakly @xmath7 .",
    "in @xcite we used a slightly more general definition of a piece , following through with which led to slightly more restrictive conditions @xmath7 ; the author is grateful to uri weiss for pointing out this discrepancy . specifically , in @xcite we defined a piece to be a word which occurs more than once as a factor of words in the _ sequence _ of relation words . under this definition , if the same relation word appears twice in a presentation then it is considered to be a piece , and so the presentation fails to satisfy @xmath10 . by contrast , remmers defined a piece to be a word which appears more than once as a factor of words in the _ set _ of relation words .",
    "the effect of this is that remmers definition permits @xmath10 ( and higher ) presentations to have relations of , for example , the form @xmath11 and @xmath12 with @xmath13 .",
    "( equivalently , one could choose to define a piece in terms of the sequence of relation words but permit `` @xmath8-ary '' relations of the form @xmath14 , to be interpreted as equivalent to relations @xmath15 and @xmath16 ) .",
    "in this paper , we say that a presentation is _ strongly _",
    "@xmath7 if it is weakly @xmath7 and has no repeated relation words , that is , if it satisfies the condition which was called _",
    "c(n ) _ in @xcite .    in fact",
    "it transpires that the weakly @xmath7 conditions still suffice to establish the main methods and results of @xcite .",
    "however , this fact is rather obscured by the technical details and notation in @xcite .",
    "in particular , for a relation word @xmath17 we defined @xmath18 to be the ( necessarily unique ) word such that @xmath19 or @xmath20 is a relation in the presentation .",
    "the extensive use of this notation makes it difficult to convince oneself that the arguments in @xcite do indeed apply in the more general case , so the aim of this paper is to provide full proofs of the results of those papers in the more general setting .    for each relation word @xmath17 ,",
    "let @xmath21 and @xmath22 denote respectively the longest prefix of @xmath17 which is a piece , and the longest suffix of @xmath17 which is a piece .",
    "if the presentation is weakly @xmath23 then @xmath17 can not be written as a product of two pieces , so this prefix and suffix can not meet ; thus , @xmath17 admits a factorisation @xmath24 for some non - empty word @xmath25 .",
    "if moreover the presentation is weakly @xmath26 , then the relation word @xmath17 can not be written as a product of three pieces , so @xmath25 is not a piece .",
    "the converse also holds : a weakly @xmath23 presentation such that no @xmath25 is a piece is a weakly @xmath26 presentation .",
    "we call @xmath21 , @xmath25 and @xmath22 the _ maximal piece prefix _ , the _ middle word _ and the _ maximal piece suffix _ respectively of @xmath17 .    assuming now that the presentation is weakly @xmath23 , we shall use the letters @xmath27 , @xmath28 and @xmath29 ( sometimes with adornments or subscripts ) exclusively to represent maximal piece prefixes , middle words and maximal piece suffixes respectively of relation words ; two such letters with the same subscript or adornment ( or with none ) will be assumed to stand for the appropriate factors of the same relation word .",
    "we say that a relation word @xmath18 is a _ complement _ of a relation @xmath17 if there are relation words @xmath30 such that either @xmath31 or @xmath32 is a relation in the presentation for @xmath33 .",
    "we say that @xmath18 is a _ proper _ complement of @xmath17 if , in addition , @xmath34 . abusing notation and terminology slightly , if @xmath35 and @xmath36 then we write @xmath37 , @xmath38 and so forth .",
    "we say that @xmath39 is a complement of @xmath21 , and @xmath40 is a complement of @xmath41 .",
    "a _ relation prefix _ of a word is a prefix which admits a ( necessarily unique , as a consequence of the small overlap condition ) factorisation of the form @xmath42 where @xmath27 and @xmath28 are the maximal piece prefix and middle word respectively of some relation word @xmath43 .",
    "an _ overlap prefix ( of length @xmath8 ) _ of a word @xmath3 is a relation prefix which admits an ( again necessarily unique ) factorisation of the form @xmath44 where    * @xmath45 ; * @xmath44 has no factor of the form @xmath46 , where @xmath47 and @xmath48 are the maximal piece prefix and middle word respectively of some relation word , beginning before the end of the prefix @xmath49 ; * for each @xmath50 , @xmath51 is a relation word with @xmath52 and @xmath53 the maximal piece prefix and suffix respectively ; and * for each @xmath33 , @xmath54 is a proper , non - empty prefix of @xmath55 .",
    "notice that if a word has a relation prefix , then the shortest such must be an overlap prefix .",
    "a relation prefix @xmath56 of a word @xmath3 is called _ clean _",
    "if @xmath3 does * not * have a prefix @xmath57 where @xmath58 and @xmath59 are the maximal piece prefix and middle word respectively of some relation word , and @xmath60 is a proper , non - empty prefix of @xmath28 . as in @xcite , clean overlap prefixes will play a crucial role in what follows .",
    "if @xmath3 is a word and @xmath2 is a piece , we say that @xmath3 is _ @xmath2-active _ if @xmath61 has a relation prefix @xmath62 with @xmath63 , and _",
    "@xmath2-inactive _ otherwise .",
    "in this section we show how some technical results and methods from @xcite concerning strongly @xmath26 monoids can be extended to cover weakly @xmath26 monoids .",
    "we assume throughout initially a fixed monoid presentation which is weakly @xmath26 .",
    "the following three foundational statements are completely unaffected by our revised definitions , and can still be proved exactly as in @xcite .",
    "[ prop_overlapprefixnorel ] let @xmath64 be an overlap prefix of some word .",
    "then this prefix contains no relation word as a factor , except possibly the suffix @xmath65 in the case that @xmath66 .",
    "[ prop_opgivesmop ] let @xmath3 be a word .",
    "every overlap prefix of @xmath3 is contained in a clean overlap prefix of @xmath3 .",
    "[ cor_nomopnorel ] if a word @xmath3 has no clean overlap prefix , then it contains no relation word as a factor , and so if @xmath1 then @xmath0 .",
    "the following lemma is essentially a restatement of ( * ? ? ?",
    "* lemma  1 ) using our new notation .",
    "the proof is essentially the same as in @xcite , with the addition of an obvious inductive argument to allow for the fact that several rewrites may be needed to obtain @xmath67 from @xmath43 .",
    "[ lemma_staysclean ] suppose @xmath68 with @xmath69 a clean overlap prefix and @xmath67 is a complement of @xmath43 .",
    "then @xmath70 is a clean overlap prefix of @xmath71 .    from now on",
    ", we shall assume that our presentation is weakly @xmath26 .",
    "we are now ready to prove our first main technical result , which is an analogue of ( * ? ? ?",
    "* lemma 2 ) , and is fundamental to our approach to weakly @xmath26 monoids .    [ lemma_overlap ] suppose a word @xmath3 has clean overlap prefix @xmath72 . if @xmath1 then @xmath73 has overlap prefix @xmath74 for some complement @xmath67 of @xmath43 , and no relation word occurring as a factor of @xmath73 overlaps this prefix , unless it is @xmath75 in the obvious place .    since @xmath72 is an overlap prefix of @xmath3 , it has by definition a factorisation @xmath76 for some @xmath77 .",
    "we use this fact to prove the claim by induction on the length @xmath78 of a rewrite sequence ( using the defining relations ) from @xmath3 to @xmath73 .    in the case",
    "@xmath79 , we have @xmath0 , so @xmath73 certainly has ( clean ) overlap prefix @xmath69 . by proposition  [ prop_overlapprefixnorel ] ,",
    "no relation word factor can occur entirely within this prefix , unless it is the suffix @xmath80 and @xmath81 .",
    "if a relation word factor of @xmath73 overlaps the end of the given overlap prefix and entirely contains @xmath82 then , since @xmath82 is not a piece , that relation word must clearly be @xmath43 .",
    "finally , a relation word can not overlap the end of the given overlap prefix but not contain the suffix @xmath82 , since this would clearly contradict either the fact that the given overlap prefix is clean , or the fact that @xmath28 is not a piece .",
    "suppose now for induction that the lemma holds for all values less than @xmath78 , and that there is a rewrite sequence from @xmath3 to @xmath73 of length @xmath78 .",
    "let @xmath83 be the second term in the sequence , so that @xmath83 is obtained from @xmath3 by a single rewrite using the defining relations , and @xmath73 from @xmath83 by @xmath84 rewrites .",
    "consider the relation word in @xmath3 which is to be rewritten in order to obtain @xmath83 , and in particular its position in @xmath3 . by proposition  [ prop_overlapprefixnorel",
    "] , this relation word can not be contained in the clean overlap prefix @xmath69 , unless it is @xmath80 where @xmath81 .",
    "suppose first that the relation word to be rewritten contains the final factor @xmath28 of the given clean overlap prefix .",
    "( note that this covers in particular the case that the relation word is @xmath82 and @xmath81 . ) from the weakly @xmath26 assumption we know that @xmath28 is not a piece , so we may deduce that the relation word is @xmath85 contained in the obvious place . in this case , applying the rewrite clearly leaves @xmath83 with a prefix @xmath86 for some complement @xmath87 of @xmath43 . by lemma  [ lemma_staysclean ] , this is a clean overlap prefix",
    ". now @xmath73 can be obtained from @xmath83 by @xmath84 rewrite steps , so it follows from the inductive hypothesis that @xmath73 has overlap prefix @xmath70 where @xmath67 is a complement of @xmath87 and hence of @xmath82 .",
    "it follows also that no relation word occurring as a factor of @xmath73 overlaps this prefix , unless it is @xmath75 ; this completes the proof in this case .",
    "next , we consider the case in which the relation word factor in @xmath3 to be rewritten does not contain the final factor @xmath28 of the clean overlap prefix , but does overlap with the end of the clean overlap prefix . then @xmath3 has a factor of the form @xmath88 , where @xmath89 is the maximal piece prefix and @xmath90 the middle word of a relation word , which overlaps @xmath80 , beginning after the start of @xmath28 .",
    "this clearly contradicts the assumption that the overlap prefix is clean .",
    "finally , we consider the case in which the relation word factor in @xmath3 which is to be rewritten does not overlap the given clean overlap prefix at all .",
    "then obviously , the given clean overlap prefix of @xmath3 remains an overlap prefix of @xmath83 .",
    "if this overlap prefix is clean , then a simple application of the inductive hypothesis again suffices to prove that @xmath73 has the required property .",
    "there remains , then , only the case in which the given overlap prefix is no longer clean in @xmath83 .",
    "then by definition there exist words @xmath89 and @xmath90 , being a maximal piece prefix and middle word respectively of some relation word , such that @xmath83 has the prefix @xmath91 for some proper , non - empty prefix @xmath60 of @xmath28 . now certainly this is not a prefix of @xmath3 , since this would contradict the assumption that @xmath92 is a clean overlap prefix of @xmath3 .",
    "so we deduce that @xmath83 can be transformed to @xmath3 by rewriting a relation word overlapping the final @xmath93 .",
    "this relation word factor can not contain the entire of this factor @xmath93 , since then it would overlap with the prefix @xmath94 , which would again contradict the assumption that this prefix is a clean overlap prefix of @xmath3 .",
    "nor can the relation word contain the final factor @xmath90 , since @xmath90 is not a piece .",
    "hence , @xmath83 must have a prefix @xmath95 for some relation word and proper , non - empty prefix @xmath96 of @xmath90 and some relation word @xmath17 .",
    "suppose @xmath35 where @xmath21 and @xmath22 are the maximal piece prefix and suffix respectively .",
    "then it is readily verified that @xmath97 is a clean overlap prefix of @xmath83 .",
    "indeed , the fact it is an overlap prefix is immediate , and if it were not clean then some factor of @xmath83 of the form @xmath98 would have to overlap the end of the given prefix ; but this factor would either be contained in @xmath99 ( contradicting the fact that @xmath100 is a maximum piece prefix of @xmath101 ) or would contain a non - empty suffix of @xmath25 followed by @xmath22 ( contradicting the fact that @xmath22 is a maximum piece prefix of @xmath24 ) .",
    "now by the inductive hypothesis , @xmath73 has prefix @xmath102 for some complement @xmath40 of @xmath41 .",
    "but now @xmath73 has prefix @xmath103 which in turn has prefix @xmath104 moreover , by proposition  [ prop_overlapprefixnorel ] , the prefix of @xmath73 contains no relation word as a factor , unless it is the final factor @xmath40 and @xmath105 , and it follows easily that no relation word factor overlaps the prefix of @xmath73 .",
    "the following results are now proved exactly as their analogues in @xcite .",
    "[ cor_noncleanprefix ] suppose a word @xmath3 has ( not necessarily clean ) overlap prefix @xmath69 .",
    "if @xmath1 then @xmath73 has a prefix @xmath4 and contains no relation word overlapping this prefix .    [ prop_dumpprefix ] suppose a word @xmath3 has an overlap prefix @xmath42 and that @xmath106 .",
    "then @xmath1 if and only if @xmath107 where @xmath108 .",
    "[ prop_inactive ] let @xmath3 be a word and @xmath2 a piece .",
    "if @xmath3 is @xmath2-inactive then @xmath109 if and only if @xmath110 for some @xmath4 with @xmath111 .",
    "[ prop_coactive ] let @xmath112 and @xmath113 be pieces and suppose @xmath3 is @xmath112-active and @xmath113-active .",
    "then @xmath112 and @xmath113 have a common non - empty suffix , and if @xmath114 is their maximal common suffix then    * @xmath3 is @xmath114-active ; * @xmath115 if and only if @xmath116 where @xmath117 and @xmath118 ; and * @xmath119 if and only if @xmath120 where @xmath121 and @xmath118 .",
    "[ cor_actsame ] let @xmath112 and @xmath113 be pieces .",
    "suppose @xmath122 and @xmath3 is @xmath113-active",
    ". then @xmath123 .",
    "the following is a strengthening of the ( * ? ?",
    "* corollary 4 )    [ cor_eitheror ] let @xmath3 and @xmath73 be words and @xmath124 be pieces .",
    "suppose there exist words @xmath125 such that for @xmath33 there exists @xmath126 with @xmath127 .",
    "then @xmath128 for some @xmath129 with @xmath130 .",
    "fix @xmath3 , @xmath73 and @xmath131 , and suppose @xmath8 is minimal such that a sequence @xmath132 with the hypothesized properties exists .",
    "our aim is thus to show that @xmath133 .",
    "suppose for a contradiction that @xmath134 .",
    "if @xmath135 was @xmath136-inactive then by proposition  [ prop_inactive ] we would have @xmath137 so that @xmath138 which clearly contradicts the minimality assumption on @xmath8 .",
    "thus , @xmath135 is @xmath136-active .",
    "but now since @xmath139 , we apply corollary  [ cor_actsame ] to see that @xmath140 , which again contradicts the minimality of @xmath8 .",
    "we now present a lemma which gives a set of mutually exclusive combinatorial conditions , the disjunction of which is necessary and sufficient for two words of a certain form to represent the same element .    [ lemma_eq ] suppose @xmath141 where @xmath82 is a clean overlap prefix of @xmath3 . then @xmath1",
    "if and only if one of the following mutually exclusive conditions holds :    * @xmath142 and @xmath143 and @xmath144 for some complement @xmath145 of @xmath29 ; * @xmath141 , @xmath146 , and @xmath29 fails to be a prefix of at least one of @xmath147 and @xmath148 , and @xmath149 ; * @xmath150 , @xmath151 for some uniquely determined proper complement @xmath67 of @xmath43 , and @xmath152 for some complement @xmath153 of @xmath29 ; * @xmath141 , @xmath151 for some uniquely determined proper complement @xmath67 of @xmath43 but @xmath29 is not a prefix of @xmath147 and @xmath154 ; * @xmath150 , @xmath155 for some uniquely determined proper complement @xmath67 of @xmath43 , but @xmath145 is not a prefix of @xmath148 and @xmath156 ; * @xmath141 , @xmath155 for some uniquely determined proper complement @xmath67 of @xmath43 , @xmath29 is not a prefix of @xmath147 and @xmath145 is not a prefix of @xmath148 , but @xmath157 , @xmath158 , @xmath159 , @xmath160 where @xmath161 and @xmath114 is the maximal common suffix of @xmath29 and @xmath145 , @xmath114 is non - empty , and @xmath114 is a possible prefix of @xmath162 .",
    "it follows easily from the definitions that no complement of @xmath82 is a prefix of another .",
    "hence , @xmath73 can have at most one of them as a prefix .",
    "thus , conditions ( 1)-(2 ) are not consistent with conditions ( 3)-(6 ) , and the prefixes of @xmath73 in ( 3)-(6 ) are uniquely determined . the mutual exclusivity of ( 1 ) and ( 2 ) is self - evident from the definitions , and likewise that of ( 3)-(6 ) .",
    "it is easily verified that each of the conditions ( 1)-(5 ) imply that @xmath1 .",
    "we show next that ( 6 ) implies that @xmath1 . since @xmath114 is a possible prefix of @xmath162 and @xmath161 , we may write @xmath163 for some word @xmath164 .",
    "now we have @xmath165 it remains to show that @xmath1 implies that one of the conditions ( 1)-(6 ) holds .",
    "to this end , suppose @xmath1 ; then there is a rewrite sequence taking @xmath3 to @xmath73 . by lemma  [ lemma_overlap ] ,",
    "every term in this sequence will have prefix which is a complement of @xmath82 , and this prefix can only be modified by the application of a relation , both sides of which are complements of @xmath43 , in the obvious place .",
    "we now prove the claim by case analysis .    by lemma  [ lemma_overlap ] ,",
    "@xmath73 begins either with @xmath82 or with some proper complement @xmath166 .",
    "consider first the case in which @xmath73 begins with @xmath82 ; we split this into two further cases depending on whether @xmath3 and @xmath73 both begin with the full relation word @xmath43 ; these will correspond respectively to conditions ( 1 ) and ( 2 ) in the statement of the lemma .",
    "* case ( 1 ) .",
    "* suppose @xmath142 and @xmath167 .",
    "then clearly there is a rewrite sequence taking @xmath3 to @xmath73 which by lemma  [ lemma_overlap ] can be broken up as : @xmath168 where each prefix @xmath169 is a complement of @xmath43 , and none of the steps in the sequences indicated by @xmath170 involves rewriting a relation word overlapping with the prefix @xmath171 .",
    "it follows that there are rewrite sequences .",
    "@xmath172 now by corollary  [ cor_eitheror ] , we have @xmath173 for some @xmath50 , where @xmath53 is a complement of @xmath29 as required to show that condition ( 1 ) holds .",
    "* case ( 2 ) .",
    "* suppose now that @xmath141 , @xmath174 and @xmath29 fails to be a prefix of at least one of @xmath147 and @xmath148 .",
    "we must show that @xmath149 ; suppose for a contradiction that this does not hold .",
    "we again consider rewrite sequences from @xmath175 to @xmath174 .",
    "again using lemma  [ lemma_overlap ] , we see that there is either ( i ) such a sequence taking @xmath3 to @xmath73 containing no rewrites of relation words overlapping the prefix @xmath82 , or ( ii ) such a sequence taking @xmath3 to @xmath73 which can be broken up as : @xmath176 where each prefix @xmath169 is a complement of @xmath43 , and none of the steps in the sequences indicated by @xmath170 involves rewriting a relation word overlapping with the prefix @xmath171 . in case ( i )",
    "there is clearly a rewrite sequence taking @xmath147 to @xmath148 so that @xmath149 as required . in case ( ii )",
    ", there are rewrite sequences .",
    "@xmath177 now if @xmath147 does not begin with @xmath29 , we can deduce from proposition  [ prop_inactive ] that @xmath83 is @xmath29-active . by corollary  [ cor_eitheror ] ,",
    "we have @xmath178 for some complement @xmath153 of @xmath29 . since @xmath83 is @xmath29-active , corollary  [ cor_actsame ] tells us that we also have @xmath179 .",
    "but now @xmath180 so condition ( 2 ) holds .",
    "a similar argument applies if @xmath148 does not begin with @xmath29 .",
    "* case ( 3 ) .",
    "* suppose @xmath142 and @xmath181 . then @xmath182 , so by the same argument as in case ( 1 ) we have either @xmath183 or @xmath144 as required to show that condition ( 3 ) holds .    * case ( 4 ) .",
    "* suppose @xmath175 and @xmath181 but @xmath29 is not a prefix of @xmath147 .",
    "then @xmath184 .",
    "now applying the same argument as in case ( 2 ) ( with @xmath185 in place of @xmath73 and setting @xmath186 ) we have @xmath187 so that condition ( 4 ) holds .",
    "* case ( 5 ) . *",
    "suppose @xmath142 , @xmath188 but @xmath145 is not a prefix of @xmath148 .",
    "then we have @xmath189 , and moreover , lemma  [ lemma_staysclean ] guarantees that @xmath166 is a clean overlap prefix of @xmath190 . now applying the same argument as in case ( 1 ) ( but with @xmath190 in place of @xmath3 and setting @xmath191 ) we obtain @xmath192 so that condition ( 5 ) holds .",
    "* case ( 6 ) . *",
    "suppose @xmath175 , @xmath188 and that @xmath29 is not a prefix of @xmath147 and @xmath145 is not a prefix of @xmath148 .",
    "it follows this time that there is a rewrite sequence taking @xmath3 to @xmath73 of the form @xmath193 where once more by lemma  [ lemma_overlap ] each prefix @xmath169 is a complement of @xmath43 , and none of the steps in the sequences indicated by @xmath170 involves rewriting a relation word overlapping with the prefix @xmath171 .",
    "now there are rewrite sequences .",
    "@xmath194 notice that , since @xmath147 does not begin with @xmath29 , we may deduce from proposition  [ prop_inactive ] that @xmath83 is @xmath29-active . by corollary  [ cor_eitheror ] , we have @xmath178 for some complement @xmath153 of @xmath29 . now",
    "since @xmath83 is @xmath29-active , corollary  [ cor_actsame ] tells us that we also have @xmath179 .",
    "but now @xmath195 where @xmath147 does not begin with @xmath29 , and also @xmath196 were @xmath148 does not begin with @xmath145 . by applying proposition  [ prop_inactive ] twice",
    ", we deduce that @xmath197 is both @xmath29-active and @xmath145-active .",
    "let @xmath114 be the maximal common suffix of @xmath29 and @xmath145 . then applying proposition  [ prop_coactive ] ( with @xmath198 and @xmath199 )",
    ", we see that @xmath114 is non - empty and    * @xmath159 where @xmath157 and @xmath200 ; and * @xmath160 where @xmath158 and @xmath201 .",
    "but then we have @xmath202 and also @xmath114 is a possible prefix of @xmath162 as required to show that condition ( 6 ) holds .",
    "[ lemma_eqandprefix ] suppose @xmath141 where @xmath82 is a clean overlap prefix , and suppose @xmath2 is a piece",
    ". then @xmath1 and @xmath2 is a possible prefix of @xmath3 if and only if one of the following mutually exclusive conditions holds :    * @xmath142 and @xmath143 and @xmath144 for some complement @xmath145 of @xmath29 , and also @xmath2 is a prefix of some complement of @xmath27 ; * @xmath141 , @xmath146 , and @xmath29 fails to be a prefix of at least one of @xmath147 and @xmath148 , and @xmath149 , and also either * * @xmath2 is a prefix of @xmath27 ; or * * @xmath2 is a prefix of some complement of @xmath27 and @xmath29 is a possible prefix of @xmath147 . *",
    "@xmath150 , @xmath151 for some uniquely determined proper complement @xmath67 of @xmath43 , and @xmath152 for some complement @xmath153 of @xmath29 , and @xmath2 is a prefix of some complement of @xmath27 ; * @xmath141 , @xmath151 for some uniquely determined proper complement @xmath67 of @xmath43 , but @xmath29 is not a prefix of @xmath147 and @xmath154 , and also @xmath2 is a prefix of some complement of @xmath27 ; * @xmath150 , @xmath155 for some uniquely determined proper complement @xmath67 of @xmath27 , but @xmath145 is not a prefix of @xmath148 and @xmath156 , and also @xmath2 is a prefix of some complement of @xmath27 ; * @xmath141 , @xmath155 for some uniquely determined proper complement @xmath67 of @xmath43 , @xmath29 is not a prefix of @xmath147 and @xmath145 is not a prefix of @xmath148 , but @xmath157 , @xmath158 , @xmath159 , @xmath160 where @xmath161 , @xmath114 is the maximal common suffix of @xmath29 and @xmath145 , @xmath114 in non - empty , @xmath114 is a possible prefix of @xmath162 , and also @xmath2 is a prefix of some complement of @xmath27 .    mutual exclusivity of the six conditions is proved exactly as for lemma  [ lemma_eq ] .",
    "suppose now that one of the six conditions above applies .",
    "each condition clearly implies the corresponding condition from lemma  [ lemma_eq ] , so we deduce immediately that @xmath1 .",
    "we must show , using the fact that @xmath2 is a prefix of a complement of @xmath27 , that @xmath2 is a possible prefix of @xmath3 , or equivalently of @xmath73 .    in case ( 1 )",
    ", @xmath2 is clearly a possible prefix of @xmath203 , and cases ( 3 ) , ( 4 ) and ( 5 ) are entirely similar . in case ( 2 )",
    ", if @xmath2 is a prefix of @xmath27 then it is already a prefix of @xmath3 , while if @xmath2 is a prefix of a proper complement @xmath204 of @xmath27 and @xmath29 is a possible prefix of @xmath147 , say @xmath205 , then @xmath206 where the latter has @xmath2 as a possible prefix . finally , in case ( 6 ) we know that @xmath114 is a possible prefix of @xmath162 , say @xmath207",
    ", so we have @xmath208 and it is again clear that @xmath2 is a possible prefix of @xmath3 .",
    "conversely , suppose @xmath1 and @xmath2 is a possible prefix of @xmath3",
    ". then exactly one of the six conditions in lemma  [ lemma_eq ] applies . by lemma  [ lemma_overlap ]",
    ", every word equivalent to @xmath3 begins with a complement of @xmath82 , so @xmath2 must be a prefix of a word beginning with some complement @xmath88 . since @xmath89 is the maximal piece prefix of @xmath87 and @xmath90 is non - empty , it follows that @xmath2 is a prefix of @xmath89 .",
    "if any but condition ( 2 ) of lemma  [ lemma_eq ] is satisfied , this suffices to show that the corresponding condition from the statement of lemma  [ lemma_eqandprefix ] holds .",
    "if condition ( 2 ) from lemma  [ lemma_eq ] applies , we must show additionally that either @xmath2 is a prefix of @xmath27 , or that @xmath29 is a possible prefix of @xmath147 .",
    "suppose @xmath2 is not a prefix of @xmath27 .",
    "then by the above , @xmath2 is a prefix of some complement @xmath89 .",
    "it follows from lemma  [ lemma_overlap ] , that the only way the prefix @xmath82 of the word @xmath3 can be changed using the defining relations is by application of a relation of the form @xmath209 . in order for this to happen",
    ", one must clearly be able to rewrite @xmath210 to a word of the form @xmath211 ; consider the shortest possible rewrite sequence which achieves this . by lemma  [ lemma_overlap ] , no term in the sequence except for the last term will contain a relation word overlapping the initial @xmath82 .",
    "it follows that the same rewriting steps rewrite @xmath147 to @xmath212 , so that @xmath29 is a possible prefix of @xmath147 , as required .",
    "the main application presented in @xcite was for each strongly @xmath26 monoid presentation , a linear time recursive algorithm to decide , given words @xmath3 , @xmath73 and a piece @xmath2 , whether @xmath1 and @xmath2 is a possible prefix of @xmath3 . in particular , by fixing @xmath213 , we obtain an algorithm which solves the word problem for the presentation in linear time .",
    "figure  1 shows a modified version of the algorithm which works for weakly @xmath26 presentations .",
    "the proofs of correctness and termination are essentially the same as those in @xcite , but relying on the more general results of section  [ sec_main ] .",
    "thus , we establish the following theorem .",
    "[ thm_lineartime ] for every weakly @xmath26 finite monoid presentation , there exists a two - tape turing machine which solves the corresponding word problem in time linear in the lengths the input words .",
    "@xmath214 or @xmath215 @xmath214 and @xmath215 and @xmath213 [ li_start_a ] [ li_allepsilon ] [ li_someepsilon ] [ li_end_a ] @xmath3 does not have the form @xmath216 with @xmath82 a clean overlap prefix @xmath3 and @xmath73 begin with different letters [ li_start_b ] [ li_uvdifferentstart ] @xmath217 and @xmath3 and @xmath2 begin with different letters [ li_updifferentstart ] @xmath218 with first letter deleted @xmath219 with first letter deleted @xmath217 @xmath220 with first letter deleted @xmath221 [ li_rec_nomop ] [ li_end_b ]    @xmath222 be such that @xmath175 [ li_start_c ]    @xmath2 is not a prefix of a complement of @xmath27 [ li_pnotprefix ]    @xmath73 does not begin with a complement of @xmath82 [ li_vstartswrong ]    @xmath142 and @xmath181 for some complement @xmath67 of @xmath43 @xmath162 is @xmath153-active for some complement @xmath153 of @xmath29 @xmath223 for some such @xmath153 [ li_rec_case1b ] @xmath224 [ li_rec_case1a ]    @xmath175 and @xmath174 @xmath2 is a prefix of @xmath27 @xmath225 [ li_rec_case2a ] @xmath226 [ li_rec_case2b ]    @xmath175 and @xmath181 for some complement @xmath67 of @xmath43 @xmath227 [ li_rec_case4 ]    @xmath142 and @xmath188 for some complement @xmath67 of @xmath43 @xmath228 [ li_rec_case5 ]    @xmath175 and @xmath188 for some complement @xmath166 of @xmath82 @xmath114 be the maximal common suffix of @xmath29 and @xmath145 @xmath229 be such that @xmath157 @xmath230 be such that @xmath158 @xmath147 does not begin with @xmath229 or @xmath148 does not begin with @xmath230 ; [ li_case6no ] @xmath162 be such that @xmath231 @xmath232 be such that @xmath233 ; @xmath234 [ li_rec_case6 ] [ li_end_c ]    the algorithms presented ( * ? ? ? * section  5 ) for finding the pieces of a presentation and hence testing strong small overlap conditions may clearly also be used to test the weak variants of those conditions , with the proviso that one considers the _ set _ of relation words in the presentation , with any duplicates disregarded . in particular , we have :    there is a ram algorithm which , given as input a finite presentation @xmath235 , decides in time @xmath236 whether the presentation is weakly @xmath26 .    [ thm_ramuniform ] there is a ram algorithm which , given as input a weakly @xmath26 finite presentation @xmath235 and two words @xmath237 , decides whether @xmath3 and @xmath73 represent the same element of the semigroup presented in time @xmath238    just as with the algorithm from @xcite , the algorithm in figure  [ fig_algorithm ] is essentially a finite state process , and can be implemented on a @xmath239-tape prefix - rewriting automaton using a slight variation on the technique described in the proof of ( * ? ? ?",
    "* theorem  2 ) .",
    "it follows that we have :    [ thm_main ] let @xmath235 be a finite monoid presentation which is weakly @xmath26 . then the relation @xmath240 is deterministic rational and reverse deterministic rational .",
    "moreover , one can , starting from the presentation , effectively compute 2-tape deterministic automata recognising this relation and its reverse .",
    "just as in @xcite , we obtain as corollaries large number of other facts about weakly @xmath26 monoids . for brevity",
    "we refrain from explaining all terms , and instead refer the reader to @xcite for definitions .",
    "every monoid admitting a weakly @xmath26 finite presentation    * is _ rational _ ( in the sense of sakarovitch @xcite ) ; * is word hyperbolic ( in the sense of duncan and gilman @xcite ) ; * is asynchronous automatic ; * has a regular language of linear - time computable normal forms ( namely , the set of words minimal in their equivalence class with respect to the lexicographical order induced by any total order on the generating set ) ; * has a boolean algebra of rational subsets ; * has uniformly decidable rational subset membership problem ; and * has rational subsets which coincide with its recognisable subsets .",
    "this research was supported by an rcuk academic fellowship .",
    "the author thanks uri weiss for drawing his attention to the distinction between weak and strong @xmath7 conditions , and asking the questions answered by this paper ."
  ],
  "abstract_text": [
    "<S> small overlap conditions are simple and natural combinatorial conditions on semigroup and monoid presentations , which serve to limit the complexity of derivation sequences between equivalent words in the generators . </S>",
    "<S> they were introduced by j.  h.  remmers , and more recently have been extensively studied by the present author . </S>",
    "<S> however , the definition of small overlap conditions hitherto used by the author was slightly more restrictive than that introduced by remmers ; this note eliminates this discrepancy by extending the recent methods and results of the author to apply to remmers small overlap monoids in full generality .    </S>",
    "<S> mark kambites +    school of mathematics ,  university of manchester , + manchester m13 9pl ,  england .    ` </S>",
    "<S> mark.kambites@manchester.ac.uk ` </S>",
    "<S> +    small overlap conditions are simple and natural combinatorial conditions on semigroup and monoid presentations , which serve to limit the complexity of derivation sequences between equivalent words in the generators </S>",
    "<S> . introduced by j.  h.  remmers @xcite , and more recently studied by the present author @xcite , </S>",
    "<S> they are the natural semigroup - theoretic analogue of the small cancellation conditions widely used in combinatorial group theory @xcite .    the definitions of small overlap conditions originally introduced by remmers are slightly more general than those used by the present author . </S>",
    "<S> the aims of this note are to clarify this distinction , and then to extend the methods and results introduced in @xcite to the full generality of small overlap monoids as studied by remmers .    </S>",
    "<S> in addition to this introduction , this article comprises three sections . in section  [ sec_prelim ] </S>",
    "<S> we briefly recall the definitions of small overlap conditions , and also discuss the distinction between remmers and the author s definitions . in section  [ sec_main ] </S>",
    "<S> we show how to extend the key technical results from @xcite , from the slightly restricted setting considered there to remmers small overlap conditions in their more general form . </S>",
    "<S> finally , section  [ sec_apps ] applies the results of the previous section to extend the main results of @xcite to the more general case .    </S>",
    "<S> the proofs for certain of the results in this paper are very similar ( in some cases identical ) to arguments used in previous papers @xcite . in the interests of brevity </S>",
    "<S> we refrain from repeating these , instead providing detailed references . </S>",
    "<S> hence , while the results of this paper may be read in isolation , the reader wishing to fully understand the proofs is advised to read it in conjunction with @xcite . </S>"
  ]
}
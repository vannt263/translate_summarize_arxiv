{
  "article_text": [
    "practical realization of quantum information processing requires specific types of quantum operations that may be difficult to construct . in particular , to perform quantum computation robustly in the presence of noise , one needs fault - tolerant implementation of quantum gates acting on states that are block - encoded using quantum error correcting codes  @xcite .",
    "fault - tolerant quantum gates must prevent propagation of single qubit errors to multiple qubits within any code block so that small correctable errors will not grow to exceed the correction capability of the code .",
    "this requirement greatly restricts the types of unitary operations that can be performed on the encoded qubits .",
    "certain fault - tolerant operations can be implemented easily by performing direct _ transversal _",
    "operations on the encoded qubits , in which each qubit in a block interacts only with one corresponding qubit , either in another block or in a specialized ancilla .",
    "unfortunately , for a given code , only a few useful operations can be done transversally , and these are not universal in that they can not be composed to approximate an arbitrary quantum circuit . to obtain a universal set of gates , additional gates have to be constructed using ancilla states and fault - tolerant measurement .",
    "although these additional gates have been constructed successfully  @xcite , their _ ad - hoc _ construction is complicated and is not easily generalized .",
    "another kind of application in which we are challenged to construct useful quantum operations from a limited set of primitives is in distributed quantum information processing . in this problem ,",
    "certain kinds of communication between different parties are constrained or prohibited , but prior distribution of standard states may be allowed . for example , quantum teleportation  @xcite demonstrates how an unknown quantum state can be sent between two parties without sending any quantum information , using only classical communication and prior entanglement .",
    "protocols for distributed state preparation and computation are also known  @xcite , but again , they have been largely constructed by hand and offer neither an explanation of why a particular ancilla state is required nor a systematic path for generalization .    a general framework for addressing such problems has been presented in  @xcite ; it uses quantum teleportation as a basic primitive to enable construction of quantum operations that can not be directly performed through unitary operations .",
    "this framework provides systematic and generalizable construction for an infinite family of fault - tolerant gates , including the @xmath0 and toffoli gates .",
    "it does not , however , lead to circuits equivalent to ( or as simple as ) prior _ ad - hoc _",
    "construction for the same gates .    in this paper",
    ", we provide an extension to the teleportation method of gate construction with a similar but simpler primitive , which we call `` one - bit teleportation '' because it uses one qubit instead of two as ancilla .",
    "this method simplifies the construction of  @xcite and , furthermore , provides strikingly unified construction of the @xmath0 , controlled - phase , and toffoli gates .",
    "an infinite hierarchy of gates , including the controlled rotations @xmath1 used in the quantum factoring algorithm  @xcite , can be constructed with the present scheme .",
    "the structure of the paper is as follows .",
    "first , in section  [ sec : circuit ] , we define one - bit teleportation , and describe its properties and various guises . its application to fault - tolerant gate construction is presented in section  [ sec : ftqc_gate ] , which is followed in section  [ sec:3examples ] with specific circuits for the @xmath0 , controlled - phase , and toffoli gates . in section  [ sec : remotegate ] , we describe the use of one - bit teleportation to derive the two - bit quantum teleportation protocol and to construct a remote quantum gate .",
    "we summarize our results in section  [ sec : concl ] .",
    "in standard quantum teleportation , alice performs a joint measurement of the unknown qubit and some ancilla , and sends the classical measurement outcome to bob , who subsequently reconstructs the unknown state .",
    "no quantum operation is performed jointly by alice and bob , but they need a certain _ two_-qubit entangled _ ancilla _ state .",
    "( we refer to any state other than the original unknown qubit state as ancilla state . )",
    "the same objective , communicating a qubit , can be accomplished in a simpler manner if alice and bob are allowed to perform a quantum gate ( such as a controlled - not gate , a cnot ) between their respective qubits . in this case , only a _ single _",
    "qubit ancilla in bob s possession is required .",
    "we call such a quantum circuit one - bit teleportation , which can be derived using the following facts :    * * fact 1 : * an unknown qubit state @xmath2 can be swapped with the state @xmath3 using only two cnot gates , as shown in the following circuit : @xmath4 note that in all circuits we show , time proceeds from left to right as is usual , and conventions are as in  @xcite . throughout this section ,",
    "the first and second qubits refer to the registers with respective initial states @xmath3 and @xmath2 . *",
    "* fact 2 : * @xmath5 , where @xmath6 and @xmath7 are pauli operators , and @xmath8 is the hadamard gate defined as @xmath9 \\,.\\ ] ] then eq .  (",
    "[ eq : swap ] ) is equivalent to the following circuit : @xmath10 * * fact 3 : * a quantum - controlled gate can be replaced by a classically - controlled operation when the control qubit is measured .",
    "@xmath11 the meter represents the measurement of @xmath7 , which projects the measured state onto @xmath3 or @xmath12 .",
    "the double line coming out of the meter carries the _ classical _ measurement result , and @xmath13 is performed if the measurement result is @xmath12 .    in eq .",
    "( [ eq : x2 ] ) , the two qubits are disentangled before the second hadamard gate . therefore , the second qubit can be measured before the second hadamard gate without affecting the unknown state in the first qubit .",
    "applying fact 3 to eq .",
    "( [ eq : x2 ] ) results in the following circuit : @xmath14 the circuit in eq .",
    "( [ eq : zteleport ] ) uses a cnot and only one qubit for the ancilla .",
    "therefore it is a one - bit teleportation circuit , which we refer to as `` @xmath7-teleportation '' because a classically - controlled-@xmath7 is applied after the measurement .    using @xmath7-teleportation",
    "we can derive other one - bit teleportation circuits .",
    "for instance , the following circuit first teleports the state @xmath15 using @xmath7-teleportation , and then applies @xmath16 to the teleported state @xmath15 to obtain the original state @xmath2 : @xmath17 this circuit can be simplified to @xmath18 which we refer to as `` @xmath6-teleportation '' .",
    "similarly , we can derive other one - bit teleportation circuits as discussed in appendix  [ sec : general ] .",
    "we will focus on @xmath6  and @xmath7-teleportation circuits because they are sufficient for our construction in this paper .",
    "@xmath6  and @xmath7-teleportation circuits can both be represented using the same general structure : @xmath19 where the first qubit ( the ancilla qubit ) is initially in the @xmath3 state . for @xmath7-teleportation , @xmath20 ( @xmath21 is the @xmath22 identity operator ) , @xmath23 , and",
    "@xmath24 is a cnot with the first qubit as its target . for @xmath6-teleportation ,",
    "@xmath25 , and @xmath24 is a cnot with the first qubit as its control .",
    "in this section , we develop a general method for fault - tolerant gate construction using one - bit teleportation as a basic primitive . we will confine our attention to the calderbank - shor - steane ( css ) codes that are doubly even and self - dual  @xcite , although the results can be extended to any other stabilizer codes  @xcite .",
    "we first summarize the fault - tolerant gate hierarchy introduced in  @xcite .",
    "let @xmath26 denote the _",
    "pauli group_. then for @xmath27 , we can recursively define @xmath28 as @xmath29 for every @xmath30 , @xmath31 , and the set difference @xmath32 is nonempty . for instance , @xmath33 .",
    "@xmath34 is a group called the _ clifford group _",
    "@xcite , which is the set of operators that conjugate pauli operators into pauli operators .",
    "besides the pauli operators , @xmath34 also contains other important gates , such as the cnot , @xmath8 , and the phase gate @xmath35 ( defined by @xmath36 for @xmath37 ) . for doubly even and self - dual css codes ,",
    "any encoded @xmath34 gate has transversal unitary implementation  @xcite , which is fault - tolerant .",
    "@xmath34 gates alone , however , are not sufficient for universal quantum computation  @xcite .",
    "an additional gate outside @xmath34 is necessary and sufficient to complete universality  @xcite . in particular , adding any one of the following gates in @xmath38 to the clifford group results in a universal set of unitary operations : the @xmath0 gate @xmath39(@xmath40 for @xmath41 ) , the controlled - phase gate @xmath42 ( @xmath43 for @xmath44 ) , and the toffoli gate ( controlled - controlled - not )  @xcite .",
    "the construction of an encoded operation in @xmath38 is much more complicated than that of an encoded operation in @xmath34 , and requires quantum measurement and a particular ancilla state . but",
    "applying a @xmath38 gate to certain _ known _ states can be replaced by direct preparation of the final states , which can be relatively easier as stated in the following : + * theorem 1 : * let @xmath13 be an @xmath45-qubit gate in @xmath46 .",
    "then the encoded state @xmath47 can be prepared fault - tolerantly by applying and measuring @xmath34 operators .",
    "+ * proof : * see appendix  [ sec : fa ] .    since @xmath46 is closed under multiplication by elements in @xmath34  @xcite , theorem 1 is also applicable when @xmath48 is replaced by @xmath49 for @xmath50 , because @xmath51 with @xmath52 .",
    "we will use theorem 1 in our fault - tolerant logic gate construction .",
    "we now consider a general method of constructing fault - tolerant gates in @xmath46 using the one - bit teleportation scheme as a primitive .",
    "the basic idea is the following .",
    "to apply the encoded operation @xmath13 to an encoded state @xmath2 , we can first teleport @xmath2 by either @xmath6  or @xmath7-teleportation , and apply @xmath13 to the reconstructed @xmath2 .",
    "the extra teleportation step can be done fault - tolerantly because both @xmath6  and @xmath7-teleportation use @xmath34 gates only .",
    "it further reduces the problem of fault - tolerant construction of a quantum logic gate to fault - tolerant preparation of a particular ancilla state .",
    "the reason for the reduction is that @xmath13 is applied to the ancilla , which is originally in the _ known _ state @xmath3 .",
    "if @xmath13 can be commuted backwards until it is applied to a _ known _ state without introducing more complicated gates , we can prepare the resulting known state , without applying @xmath13 directly , as the input ancilla .",
    "using such an ancilla , the reconstructed state after the _ modified _ one - bit teleportation circuit will be @xmath53 .",
    "that is , the encoded @xmath13 has been applied to the encoded @xmath2 fault - tolerantly .",
    "we now detail the formal construction .",
    "let @xmath54 be an @xmath45-qubit gate to be applied to @xmath2 , an encoded quantum state with @xmath45 _ logical _ qubits .",
    "we first teleport each logical qubit using either @xmath6 or @xmath7-teleportation such that @xmath2 is reconstructed in the ancilla , which is initially in the @xmath48 state .",
    "we then apply @xmath13 to the reconstructed @xmath2 to obtain @xmath53 .",
    "this is described by the following quantum circuit : @xmath55 in eq .",
    "( [ eq : basic1 ] ) , a register ( wire ) with the symbol `` /@xmath56 '' represents a bundle of @xmath45 logical qubits .",
    "@xmath57 is a bitwise operation , @xmath58 , where @xmath59 acts on the @xmath60 logical qubit only .",
    "@xmath61 is a bitwise operation similar to @xmath57 .",
    "@xmath24 is a tensor product such that @xmath62 , where each @xmath63 is a cnot between the @xmath60 logical qubits of @xmath2 and the known ancilla .",
    "the measurement box measures @xmath7 bitwise and the double line represents the @xmath45-bit classical outcome .",
    "the @xmath60 classical bit controls whether an operator @xmath64 is performed on the @xmath65@xmath66 logical state in the first register .",
    "this is denoted by @xmath67 for the sake of simplicity .    according to sec .",
    "[ sec : circuit ] , if @xmath7-teleportation is applied to the @xmath65@xmath66 logical qubit , @xmath68 , and @xmath63 is a cnot with the first qubit as its target ; if @xmath6-teleportation is applied instead , @xmath69 , and @xmath63 is a cnot with the first qubit as its control .",
    "we now commute @xmath13 backwards in time .",
    "commuting @xmath13 with the classically - controlled operation @xmath67 changes @xmath67 to @xmath70 . as @xmath71 and @xmath72 , @xmath73",
    "can still be performed transversally .",
    "likewise , commuting @xmath13 with @xmath24 changes @xmath24 to @xmath74  @xcite .",
    "as cnot @xmath75 , the resulting operation @xmath74 may not be in @xmath34 for an arbitrary @xmath72 .",
    "to ensure @xmath76 , we only consider @xmath13 that commutes with @xmath24 such that @xmath77 .",
    "then eq .",
    "( [ eq : basic1 ] ) becomes @xmath78 all the circuit elements outside the dotted box can be performed fault - tolerantly .",
    "therefore , if we can prepare the input ancilla in the state @xmath79 , we can apply @xmath54 to any encoded state @xmath2 fault - tolerantly .",
    "as @xmath80 , @xmath81 is also a @xmath46 operation . by theorem  1 ,",
    "the ancilla state @xmath79 can be created fault - tolerantly .",
    "the stabilizers of such an ancilla state , which will be measured in preparing the state , can be easily derived .",
    "recall that when @xmath82 , @xmath83 , and when @xmath84 , @xmath85 .",
    "therefore , @xmath86 is always true  @xcite , and the stabilizers of @xmath79 are @xmath87 . using the above method , we can systematically construct interesting gates in @xmath38 , including the @xmath0 , controlled - phase , and toffoli gate , as will be shown in section  [ sec:3examples ] .    finally , we remark that the @xmath46 gates commuting with @xmath24 are not the only gates that can be performed by the one - bit teleportation scheme .",
    "any @xmath46 gate of the form @xmath88 for @xmath89 commuting with @xmath24 and @xmath90 can be performed using the generalized one - bit teleportation circuits .",
    "we discuss this in appendix  [ sec : general ] .      in this section ,",
    "we extend our discussion to the gates in @xmath28 and characterize a class of gates that can be recursively constructed with one - bit teleportation as a basic primitive .",
    "we prove by induction that the diagonal subset of @xmath28 , defined by @xmath91 , can be recursively constructed .",
    "first , when @xmath92 , we choose to apply @xmath6-teleportation to each logical qubit . in this case",
    ", each @xmath63 is a cnot taking the @xmath60 logical qubit in the ancilla as the control bit .",
    "therefore , @xmath24 commutes with @xmath13 and eq .",
    "( [ eq : basic2 ] ) holds with @xmath93 and @xmath85 for @xmath94 .",
    "second , since for @xmath95 and @xmath96 , @xmath97 for some @xmath98  @xcite , @xmath99 for some @xmath100 .",
    "therefore , if the gates in @xmath101 can be performed , the classically - controlled operation @xmath102 for @xmath95 can also be performed .",
    "third , the required ancilla @xmath103 can be prepared fault - tolerantly with recursive construction as shown in appendix  [ sec : fa ] . finally , the gates in @xmath104 have transversal implementation . by induction",
    ", all the gates in @xmath105 can be performed fault - tolerantly with recursive application of the one - bit teleportation scheme .",
    "the sets @xmath105 contain many interesting gates , such as @xmath106 , which are the single qubit @xmath107 rotations , and @xmath108 , which are the controlled rotations used in the quantum fourier transform circuit  @xcite essential to shor s factoring algorithm  @xcite .",
    "@xmath105 also includes the multiple - qubit gates @xmath109 for @xmath110  @xcite , where @xmath109 applies @xmath111 to the @xmath112 qubit if and only if the first @xmath45 qubits are all in the state @xmath12 . by the closure property of @xmath105  @xcite ,",
    "all products of @xmath109 for @xmath113 are in @xmath105 . to perform gates in @xmath105 for @xmath30 small",
    ", the recursive construction we have described can be more efficient than approximating these gates to the same accuracy using a universal set of fault - tolerant quantum logic gates .",
    "the gates in @xmath105 are not the only ones that can be constructed using the one - bit teleportation scheme .",
    "for instance , if @xmath114 is related to an element in @xmath105 by conjugation with hadamard gates in the @xmath115 , @xmath116 , @xmath117 qubits , @xmath24 can be made to commute with @xmath13 by applying @xmath7 teleportation to the @xmath115 , @xmath116 , @xmath117 qubits and @xmath6-teleportation to the rest .",
    "the toffoli gate is an example .",
    "more generally , any gate that is a product of @xmath34 gates and a single @xmath105 gate can be constructed recursively .",
    "in this section , we systematically construct three important fault - tolerant gates in @xmath38 using the general method described in sec .  [",
    "sec : ftqc_gate ] .",
    "any one of these gates , together with the clifford group , forms a universal set of gates . for each of the construction",
    ", we will derive the required circuit and the ancilla .",
    "the ancilla can always be prepared fault - tolerantly ( see appendix  [ sec : fa ] ) .",
    "the @xmath0 gate , @xmath39 , has the following matrix representation : @xmath118 \\,.\\ ] ] as @xmath39 is diagonal , following the recipe in sec .",
    "[ sec : ftqc_gate ] , we choose to apply @xmath6-teleportation to @xmath2 and apply @xmath39 to the teleported @xmath2 : @xmath119 we commute @xmath39 backwards using two facts .",
    "first , @xmath120 , where the phase gate @xmath35 is defined in sec .",
    "[ sec : ck ] .",
    "second , @xmath39 commutes with the @xmath121 by construction .",
    "thus , we obtain a circuit to implement the @xmath0 gate ( where an irrelevant overall phase has been ignored ) : @xmath122 all the circuit elements outside the dotted box can be performed fault - tolerantly .",
    "the dotted box , then , can be replaced by an ancilla in the state @xmath123 which can be prepared fault - tolerantly as described in appendix  [ sec : fa ] .",
    "thus , we have derived a circuit and the corresponding ancilla for performing the fault - tolerant @xmath0 gate .",
    "we note that this re - derives the same circuit and ancilla state used in  @xcite .      the controlled - phase gate @xmath42 ( defined in sec .",
    "[ sec : ck ] ) is in @xmath46 , and forms a universal set of gates  @xcite together with @xmath8 and cnot .",
    "we use the following circuit symbol for @xmath42 : @xmath124 @xmath42 commutes with @xmath125 , and conjugates @xmath126 ( @xmath127 ) as follows : @xmath128 @xmath129 where the controlled-@xmath7 operation , @xmath130 , acts on basis states as @xmath131 . to construct @xmath42",
    ", we first teleport the two - qubit state @xmath2 and apply @xmath42 .",
    "this linear transformation preserves phase coherence , and thus , it suffices to consider its action on the basis states @xmath132 . since @xmath42 is diagonal , we apply @xmath6-teleportation to both qubit states such that the cnots in the circuit commute with @xmath42 . @xmath133 commuting @xmath42 backwards using the commutation rules in eqs .",
    "( [ eq : com1])-([eq : com2 ] ) , we obtain a circuit for the controlled - phase gate : @xmath134 where the double lines control all the operations in the corresponding boxes .",
    "all the circuit elements in eq .",
    "( [ eq : cphase ] ) , except those in the dotted box , can be performed fault - tolerantly .",
    "finally , we can replace the dotted box by an input ancilla in the following state : @xmath135 which can be prepared fault - tolerantly .",
    "this completes the requirement for performing the controlled - phase gate fault - tolerantly .      to construct the toffoli gate ( controlled - controlled - not )",
    ", we begin with some useful commutation rules : @xmath136 @xmath137 as in the controlled - phase gate construction , we demonstrate the construction on basis states @xmath138 for three qubits .",
    "we first teleport @xmath138 and then apply a toffoli gate . since the toffoli gate is diagonalized by a hadamard transform on the target qubit , the choice of @xmath6-teleportation for the control qubits and @xmath7-teleportation for the target qubit ensures that the three cnots commute with the toffoli gate .",
    "@xmath139 commuting the toffoli gate backwards to the far left using eqs .",
    "( [ eq : tofcom1])-([eq : tofcom2 ] ) , eq .",
    "( [ eq : toffoli1 ] ) is equivalent to @xmath140 all the circuit elements except those in the dotted box can be performed fault - tolerantly .",
    "it remains to prepare the state created in the dotted box , @xmath141 where @xmath13 denotes the toffoli gate .",
    "again this ancilla state can be prepared fault - tolerantly , as described in appendix  [ sec : fa ] .",
    "the ancilla and the quantum circuit derived here are the same as those in shor s original construction  @xcite .",
    "the one - bit teleportation scheme elucidates the choice of the ancilla state and the procedure in  @xcite .",
    "the one - bit teleportation scheme , in addition to being useful for fault - tolerant gate construction , can also be used to design a variety of remote quantum operations .",
    "constructing remote quantum operations is related to constructing fault - tolerant gates in that both require a particular ancilla state to replace a prohibited operation . in this section ,",
    "we use one - bit teleportation as a basic primitive to derive the quantum circuits and the required ancilla states for the two - bit quantum teleportation and the remote cnot .",
    "suppose alice needs to send a qubit state @xmath2 to bob .",
    "direct quantum communication is not allowed , but alice and bob can share some ancilla state .",
    "the question is , how can alice send @xmath2 to bob ?",
    "a well - known solution to this problem is quantum teleportation  @xcite , which uses an epr state and classical communication .",
    "using one - bit teleportation , we give an alternative derivation of the required ( entangled ) ancilla and the required teleportation circuit .",
    "we first construct a circuit to send the unknown state with a prohibited operation .",
    "then we remove the requirement of such a prohibited operation .",
    "let @xmath2 be the state to be communicated from alice to bob .",
    "alice can send @xmath2 to bob by applying one - bit teleportation twice .",
    "step 1 : alice swaps @xmath2 with an ancilla @xmath3 using @xmath6-teleportation .",
    "step 2 : alice sends the teleported @xmath2 to bob using @xmath7-teleportation ( with a prohibited cnot in this step ) .",
    "the circuit representation for the process is @xmath142 the prohibited operation ( cnot ) , which is marked by an asterisk , can be commuted backwards using the commutation relation : @xmath143 this leads to the usual quantum teleportation circuit @xmath144 in eq .",
    "( [ eq : twotel2 ] ) , the prohibited cnot acts on the _ known _ state inside the dotted box , which can be replaced by the following state it creates : @xmath145 in other words , if alice shares this entangled state with bob , the state @xmath2 can be sent to bob without quantum communication .",
    "note that the classically - controlled-@xmath6 on the second register only affects its overall sign , and can be omitted since the second register is subsequently measured .",
    "an alternative circuit , which accomplishes the same task , can be derived when @xmath7 and @xmath6-teleportation are used for the two steps instead .",
    "we start with the following circuit : @xmath146 using the commutation rule @xmath147 we can commute the prohibited cnot backwards to obtain an equivalent quantum teleportation circuit @xmath148 the disallowed element in the dotted box can be replaced by the epr state of eq .",
    "( [ eq : epr ] ) .",
    "the irrelevant classically - controlled-@xmath7 on the second register can be omitted .",
    "the two - bit teleportation circuits of eqs .",
    "( [ eq : twotel2 ] ) and ( [ eq : twotel4 ] ) are equivalent to that in  @xcite , but as mentioned above , they are derived differently .",
    "suppose alice and bob have in their possession quantum states @xmath149 and @xmath150 , respectively .",
    "how can they perform a simple distributed computation , a cnot from @xmath149 to @xmath150 , without communicating any quantum information between them , but perhaps with the aid of some initially shared standard quantum state ?",
    "a solution to this problem is given in  @xcite .",
    "the _ ad - hoc _ method employed , however , does not suggest a systematic technique for deriving the solution , or solutions to generalized versions of this problem . here , we use one - bit teleportation to present a general technique and derive a different circuit that accomplishes the same task .",
    "alice and bob first swap their states with their respective ancilla state @xmath3 by one - bit teleportation , and then apply a prohibited cnot .",
    "the quantum circuit is chosen so that alice uses @xmath6-teleportation and bob uses @xmath7-teleportation : @xmath151 the prohibited cnot can be commuted backwards to obtain a remote cnot circuit : @xmath152 the prohibited operation in the dotted box is applied to a known state , and can be replaced by the epr state of eq .",
    "( [ eq : epr ] ) . provided such a shared entangled state is initially available to alice and bob , they can perform a remote cnot operation using two bits of classical communication .",
    "note that a remote cnot can also be constructed by using two - bit teleportation twice in an obvious way : bob first sends his qubit @xmath150 to alice with two - bit teleportation , and then alice applies cnot to @xmath153 and sends the qubit @xmath154 to bob with two - bit teleportation . such construction ,",
    "however , requires two pairs of maximally entangled state and four bits of classical communication , which is twice that required for the one - bit teleportation scheme .    our remote cnot construction in eq .",
    "( [ eq : remotecn ] ) is different from that in  @xcite , which can also be derived using the one - bit teleportation scheme , as described in appendix  [ sec : gottesmancn ] .",
    "finally , we remark that the two examples of constructing remote operations strengthen the concept of teleporting quantum logic gates with one - bit teleportation , as we have shown that if the input ancilla is a special state related to the cnot gate , the reconstructed state is the one to which a cnot gate has been applied .",
    "we have presented a systematic technique to construct a variety of quantum operations , by using a primitive one - bit teleportation scheme .",
    "such a scheme reduces the problem of constructing a quantum logic gate to preparing an ancilla state created by the same gate applied to a known state .",
    "the usefulness of this technique is particularly manifest for two kinds of application : fault - tolerant quantum computation and remote quantum computation , as demonstrated in our construction of the @xmath0 , controlled - phase , and toffoli gates , and the remote - cnot . with recursive application of the one - bit teleportation scheme",
    ", we can also construct an infinite hierarchy of gates fault - tolerantly .",
    "the idea of teleporting quantum logic gates has been used in  @xcite , with two - bit teleportation as a primitive , to perform universal quantum computation .",
    "the two - bit teleportation scheme allows _ all _ @xmath46 gates to be teleported fault - tolerantly , and _ all _ @xmath28 gates to be teleported with recursive application of the scheme . for one - bit teleportation , however , we can only provide _ sufficient _ conditions for gates in @xmath46 to be teleportable , namely , any @xmath46 gate that can be written as a product of @xmath34 gates and a single @xmath46 gate that commutes with cnot .",
    "it is not known if this includes all the @xmath46 gates .",
    "the difficulty in describing the exact set of one - bit teleportable @xmath46 gates arises from the requirement for a @xmath155 gate in the one - bit teleportation circuit .",
    "such a @xmath155 gate may be conjugated outside @xmath34 by a @xmath46 gate , and therefore can not be directly performed fault - tolerantly .",
    "this places further constraint on the teleportable @xmath156 for @xmath157 . because of our present lack of understanding of the general structure and nature of @xmath28 gates , the distinction between the ultimate capabilities of the one and two - bit teleportation schemes remains an interesting and difficult open question",
    "nevertheless , as we have shown , one - bit teleportation can provide much simpler protocols than two - bit teleportation in constructing quantum logic gates .",
    "this is because one - bit teleportation only requires projective measurement of @xmath7 and as many ancilla qubits as the state to be transformed ; two - bit teleportation , however , requires bell measurement and twice as many ancilla qubits as the original state .    at a very general level ,",
    "the logical gate teleportation schemes reduce the difficulty of constructing quantum logic gates by using special ancilla states",
    ". this can be useful not only for simplifying hardware requirements , but also for designing and optimizing computation and communication protocols  @xcite .",
    "even more intriguing , perhaps , is that this result gives us a first glimpse at what might someday be a standard architecture for a quantum computer : a simple assembly of one - bit teleportation primitives , capable of universal quantum computation on quantum data , given the assistance of standard quantum states that are obtained as commercial resources .",
    "the definition of such a stored - program architecture could be pivotal in the development of this field , much as the von  neumann or harvard architecture  @xcite were important in classical computation .",
    "the relation between fault - tolerant quantum logic gate construction and teleportation is first alluded to by shor  @xcite .",
    "the @xmath6 and @xmath7 teleportation circuits presented in this paper are due to charles bennett and daniel gottesman ( unpublished ) .",
    "we are grateful to daniel gottesman for introducing us to the interesting subject of the @xmath28 hierarchy , and for enlightening discussions .",
    "we thank professor james harris and yoshihisa yamamoto for support and encouragement .",
    "this work was supported by the darpa ultra - scale program under the nmrqc initiative , contract daag55 - 97 - 1 - 0341 , administered by the army research office . d.l .",
    "acknowledges support from the ibm fellowship program and nippon telegraph and telephone corporation ( ntt ) .",
    "the one - bit teleportation circuit used in fault - tolerant gate construction has three components : a particular input ancilla , a sequence of @xmath34 gates , and finally the measurement and classically - controlled operation .",
    "the teleportability of one - bit teleportation is governed by the sequence of @xmath34 gates before the measurement .",
    "using the @xmath6 and @xmath7-teleportation circuits of eq .",
    "( [ eq : basic2 ] ) , any @xmath54 that commutes with @xmath24 can be teleported . in this appendix",
    ", we derive other one - bit teleportation circuits , which use different @xmath34 gates , and then discuss their application in constructing fault - tolerant gates .    by teleporting @xmath158 using @xmath6-teleportation and applying @xmath159 to the teleported @xmath158 , we obtain the following generalized one - bit telelportation circuit : @xmath160 when @xmath161 and @xmath162 , eq .",
    "( [ eq : generalonebit ] ) reduces to the @xmath6 and @xmath7-teleportation circuits .    in sec .  [",
    "sec : ftqc_gate ] , we showed that all the operations in @xmath163 can be performed fault - tolerantly using @xmath6-teleportation . here , we generalize the result to show that , if @xmath54 and @xmath164 , where @xmath165 and @xmath166 , then @xmath13 can be performed fault - tolerantly using the general one - bit teleportation scheme by the following procedure :    step 1 : using the circuit of eq .",
    "( [ eq : generalonebit ] ) with @xmath167 , we first teleport the state @xmath2 to the ancilla initialized in the state @xmath48 , and then apply @xmath13 to the ancilla .",
    "this can be represented by @xmath168    step 2 : commuting @xmath13 backwards , one obtains @xmath169 note that the new classically - controlled operation is @xmath170 , which is in @xmath34 because @xmath171 .",
    "therefore , all the circuit elements can be performed fault - tolerantly , except those in the dotted box , which can be replaced by an ancilla in the state @xmath172 .",
    "there are @xmath46 gates that can not be constructed using @xmath6 and @xmath7-teleportation _ directly _ , but can be constructed using other one - bit teleportation circuits .",
    "for instance , the controlled - hadamard gate @xmath173 does not commute with @xmath24 in eq .",
    "( [ eq : basic1 ] ) for all possible combinations of @xmath6 and @xmath7-teleportation circuits , but @xmath174 can be written as @xmath175 with @xmath176 , @xmath177 and @xmath178 , where @xmath179 .",
    "thus , @xmath174 can still be performed using the general one - bit teleportation scheme .",
    "we remark that a @xmath46 gate @xmath180 with @xmath181 and @xmath182 can be performed _ indirectly _ by applying @xmath183 and @xmath184 in sequence , where @xmath89 is applied by @xmath6-teleportation . if the operations in the generalized one - bit teleportation circuit , @xmath185 , and @xmath186 of eq .  (",
    "[ eq : s2 ] ) , are also considered , the total requirements to perform @xmath13 by such indirect implementation and by direct one - bit teleportation are almost the same .",
    "but if we are given different one - bit teleportation circuits as primitives , we can use them to directly teleport different sets of @xmath46 gates .",
    "in other words , if we are given the circuit of eq .",
    "( [ eq : basic2 ] ) , using an input ancilla in the state @xmath79 , we can teleport @xmath54 that commutes with @xmath24 ; if we are given the circuit of eq .",
    "( [ eq : s2 ] ) , using an input ancilla in the state @xmath187 , we can teleport @xmath13 in the form of @xmath188 . in this sense , then , the generalized one - bit teleportation circuits are interesting and allow more gates in @xmath46 to be teleported directly .",
    "in this section , we first prove theorem 1 in sec .  [",
    "sec : ck ] by construction .",
    "we then show how to create the three ancilla states in sec .",
    "[ sec:3examples ] fault - tolerantly .",
    "finally , we explain how to prepare a class of encoded quantum states fault - tolerantly by recursive application of the one - bit teleportation scheme .",
    "a stabilizer of a quantum state is a quantum operator that transforms the state to itself .",
    "let @xmath189 be the codeword space corresponding to an @xmath190 $ ] stabilizer code , which encodes @xmath45 logical qubits using @xmath191 physical qubits .",
    "the stabilizer @xmath35 of @xmath189 is an abelian subgroup of the pauli group , or @xmath26 , such that @xmath192 if and only if @xmath193 . by performing error correction for the stabilizer code",
    ", we can project an arbitrary state onto an encoded state in @xmath189  @xcite .",
    "the stabilizer @xmath35 has @xmath194 elements generated by @xmath195 independent operators in @xmath26 , and defines a quantum code of dimension @xmath196 .",
    "each encoded state is , then , determined by @xmath45 extra independent stabilizers .",
    "( in the following , we will restrict our discussion to the codeword space and exclude the stabilizers of the code from the stabilizers of an encoded state . ) for instance , the encoded @xmath48 is determined by @xmath125 for @xmath197 , where @xmath125 is the encoded @xmath7 on each logic qubit . in general , stabilizers need not commute with one another and need not square to the identity .",
    "but an independent set of stabilizers can always be chosen to be a mutually commuting set of elements that square to the identity .",
    "this is because @xmath198 for some encoded @xmath13 , leading to a possible choice @xmath199 with the desired properties .",
    "we restate the above as a lemma : + * lemma 1 : * for any @xmath2 , @xmath200 can be chosen such that @xmath201 , ( a ) @xmath202 and ( b ) @xmath203 = mn - nm=0 $ ] . + note that the elements in @xmath200 are all valid encoded operations , and their actions preserve the codeword space .    as a quantum state",
    "is the simultaneous @xmath204 eigenstate of its stabilizers , the state can be prepared by projecting an arbitrary encoded state onto the simultaneous @xmath204 eigenstate of its stabilizers . in the following",
    "we will show how to create a class of quantum states fault - tolerantly by measuring their stabilizers .    given a quantum state @xmath2 encoded with an @xmath190 $ ] stabilizer code",
    ", the operator @xmath205 with @xmath206 can be measured fault - tolerantly on @xmath2 as follows .",
    "first , we prepare a cat state @xmath207 where @xmath208 consists of @xmath191 physical qubits in the state @xmath209 ( @xmath210 ) .",
    "( the cat state can not be created fault - tolerantly , but it can always be verified  @xcite . ) for the doubly even and self - dual css codes , the encoded @xmath205 can be written as @xmath211 , where @xmath212 acts only on the @xmath213 physical qubit of each block of the encoded state @xmath2 . for each @xmath214 , we perform controlled-@xmath212 with the @xmath213 qubit of the cat state as the control bit and the @xmath213 qubit of @xmath2 as the target qubit .",
    "effectively , a cat - state - controlled-@xmath215 is applied to the state @xmath216 with transversal operations leading to the state @xmath217 note that as @xmath202 , @xmath218 are @xmath219 eigenstates of @xmath215 for any @xmath2 .",
    "we can measure the cat state fault - tolerantly using the procedure described in  @xcite to distinguish @xmath220 , the @xmath204 eigenstate of @xmath215 ; otherwise the resulting encoded state is @xmath221 , the @xmath222 eigenstate of @xmath215 , which may be transformed to a @xmath204 eigenstate of @xmath215 by the following lemma . + * lemma 2 : * if @xmath223 , and there exists @xmath224 such that @xmath225 , then we can always transform an arbitrary encoded state @xmath2 onto a @xmath204 eigenstate of @xmath215 using fault - tolerant operations .",
    "the resulting @xmath204 eigenstate is either @xmath226 or @xmath227 , which can be written jointly as @xmath228 for @xmath229 or @xmath230 .",
    "+ _ proof : _ we have shown that we can project an arbitrary encoded state @xmath2 onto @xmath231 , the @xmath219 eigenstate of @xmath215 . if the resulting state is @xmath226 , we are done ; otherwise , we apply @xmath224 fault - tolerantly to @xmath221 .",
    "since @xmath232 anticommutes with @xmath215 , it transforms the @xmath222 eigenstate of @xmath215 to a @xmath204 eigenstate of @xmath215 as follows : @xmath233 .",
    "thus , we can always obtain a @xmath204 eigenstate of @xmath215 , which is @xmath228 for @xmath229 or @xmath230 .",
    "next we will show that a special class of quantum states can be created fault - tolerantly . + * lemma 3 : * if @xmath234 and @xmath235 there exists @xmath236 such that @xmath237 , and @xmath238= 0 $ ] for @xmath239 , then @xmath2 can be created fault - tolerantly by measuring the elements in @xmath200 fault - tolerantly .",
    "+ _ proof : _ by lemma 1 , @xmath240 , @xmath241 .",
    "starting from _ any _ encoded state @xmath242 , we measure @xmath243 sequentially , and after each measurement we apply the corresponding operation @xmath244 if the projected state is the @xmath222 eigenstate of @xmath245 . by lemma 2",
    ", the resulting state is @xmath246 where @xmath247 or @xmath230 , and we have used the fact that @xmath238=0 $ ] for @xmath239 . as @xmath248 = 0 $ ] , it is easily verified that @xmath249 immediately follows : + * theorem 1 : * @xmath250 , @xmath13 can be applied to the encoded @xmath48 state using @xmath34 operators and fault - tolerant measurement of @xmath34 operators .",
    "+ _ proof : _ applying @xmath54 to the encoded @xmath48 state is equivalent to preparing the state @xmath198 , which has stabilizers @xmath251 for @xmath94 .",
    "define @xmath252 for each @xmath65 .",
    "then @xmath253 implies @xmath254 , and for @xmath239 , @xmath255 = 0 $ ] implies @xmath238 = u[z_i , x_j]u^{\\dagger } = 0 $ ] .",
    "thus by lemma 3 , the state @xmath2 can be created fault - tolerantly .      to prepare a specific encoded state from an _ unknown _ encoded state we need to measure _ all _ its independent stabilizers .",
    "when the initial state is a _ known _ encoded state related to the desired state , we may not have to measure all the independent stabilizers .",
    "for instance , given two encoded states @xmath242 and @xmath256 with @xmath257 and @xmath258 , the following state @xmath259 is the simultaneous @xmath204 eigenstate of @xmath245 for @xmath94 .",
    "thus , starting from @xmath256 , we can prepare the encoded state @xmath242 by measuring only the @xmath260 different stabilizers . in the following",
    ", we will construct an initial state , with which , the desired state can be obtained by measuring only a single stabilizer .",
    "assume we want to prepare the encoded state @xmath261 for @xmath54 .",
    "define @xmath245 and @xmath244 for @xmath262 as in the proof of theorem 1 .",
    "then @xmath263 is a @xmath222 eigenstate of @xmath245 such that @xmath264 , and the following state @xmath265 is different from @xmath266 by only one independent stabilizer : @xmath244 has replaced @xmath245 .",
    "therefore , the state @xmath2 also satisfies the conditions of lemma 3 , and can be prepared fault - tolerantly .",
    "it follows that to obtain the state @xmath266 , we only need to measure the single stabilizer @xmath245 on @xmath2 .    to prepare an encoded state @xmath266 by preparing @xmath2 first can be simpler than directly preparing @xmath266 from an arbitrary encoded state if @xmath2 itself can be prepared easily .",
    "for instance , when @xmath2 is a product state , it can be prepared by measuring only single qubit operators .",
    "we will describe how to prepare the required ancilla states for the three gates in sec .",
    "[ sec:3examples ] .",
    "when the required ancilla @xmath266 is an entangled state with multiple - qubit stabilizers , we will construct it by preparing an easier state @xmath2 first .",
    "the required ancilla for constructing the @xmath0 gate , @xmath39 , is @xmath267 with stabilizer @xmath268 which anticommutes with @xmath269 .",
    "then starting from any encoded state , we can measure @xmath215 , and apply @xmath7 if the projected state is the @xmath222 eigenstate , to create the state @xmath266 fault - tolerantly .",
    "the required ancilla for constructing the controlled phase gate is @xmath270 with stabilizers @xmath271 for @xmath272 . using eqs .",
    "( [ eq : com1])-([eq : com2 ] ) , @xmath273 the corresponding operator that anticommutes with @xmath245 is @xmath274 for @xmath272 .",
    "@xmath266 is an entangled state , and both of @xmath275 and @xmath276 are two - qubit operators . but the following state @xmath277 is a product of single qubit states and has stabilizers @xmath278 and @xmath279 .",
    "thus , we can first prepare @xmath2 fault - tolerantly by measuring @xmath278 and @xmath279 , and then measure @xmath275 alone to get the state @xmath266 .",
    "equivalently , we can also first prepare the state @xmath280 , which has stabilizers @xmath279 and @xmath278 , and measure @xmath276 to obtain the state @xmath266 .",
    "the required ancilla for the toffoli gate construction is @xmath281 where @xmath13 is the toffoli gate .",
    "the stabilizer of this state is @xmath282 for @xmath283 and @xmath284 . using eqs .",
    "( [ eq : tofcom1])-([eq : tofcom2 ] ) , @xmath285 where cz represents a controlled-@xmath7 , and the _ ordered _ subscripts for cnot and cz specifies the control and target bits .",
    "the operator that anticommutes with @xmath245 is @xmath286 , or @xmath287 and @xmath288 for @xmath283 and @xmath284 , respectively .",
    "again , each of @xmath245 is a two - qubit operator , but the following state @xmath289 can be prepared easily by measuring its stabilizers @xmath290 and @xmath291 .",
    "then we only need to measure a single two - qubit operator @xmath275 on @xmath2 to obtain @xmath266 .",
    "equivalently , we can also first prepare the state @xmath292 with stabilizers @xmath293 and @xmath291 or the state latexmath:[$|\\psi\\rangle = \\frac{1}{\\sqrt{2}}(i+q_3 )    @xmath288 , and measure the corresponding single stabilizer to obtain @xmath266 .      in this subsection , we will prove the following theorem , which is used in sec .",
    "[ sec : recursive ] : + * theorem 2 : * the encoded state @xmath295 for @xmath95 can be prepared fault - tolerantly by recursive application of one - bit teleportation .",
    "first we have the following lemma , which is a generalization of lemma 3 .",
    "+ * lemma 4 : * @xmath2 can be created fault - tolerantly if given @xmath296 , @xmath297 + ( 1 ) the cat - state - controlled-@xmath245 can be performed fault - tolerantly ; + ( 2 ) there exists @xmath244 such that @xmath244 can be performed fault - tolerantly , @xmath237 , and for @xmath298 = 0 $ ] .",
    "+ _ proof : _ since @xmath241 , by applying the cat - state - controlled-@xmath245 and measuring the cat state fault - tolerantly as before , we can project any encoded state onto @xmath219 eigenstate of @xmath245 . then apply @xmath244 if a @xmath222 eigenstate is obtained . using the same argument as in the proof of lemma 3 , we can fault - tolerantly prepare the state @xmath2 . +",
    "* lemma 5 : * if operations in @xmath101 and cat - state - controlled-@xmath89 for any @xmath299 can be performed fault - tolerantly using the one - bit teleportation scheme , then @xmath103 for @xmath300 can be created fault - tolerantly .",
    "+ _ proof : _ the stabilizers of @xmath301 are @xmath302 for some @xmath100 .",
    "define @xmath303 .",
    "@xmath244 satisfies condition ( 2 ) of lemma 4 . since @xmath304 ,",
    "the cat - state - controlled-@xmath245 is the product of cat - state - controlled-@xmath305 and cat - state - controlled-@xmath126 .",
    "the cat - state - controlled-@xmath126 is easily performed fault - tolerantly .",
    "thus it remains to show how to perform the cat - state - controlled-@xmath305 for @xmath306 fault - tolerantly .",
    "as @xmath100 is constructed with one - bit teleportation scheme using the circuit of eq .",
    "( [ eq : basic2 ] ) , where @xmath307 and @xmath308 , to perform cat - state - controlled-@xmath305 , we need to perform cat - state - controlled-@xmath24 , cat - state - controlled-@xmath309 , and to prepare the ancilla @xmath310 fault - tolerantly . as @xmath311 and @xmath312 with @xmath313 ,",
    "both of cat - state - controlled-@xmath24 and cat - state - controlled-@xmath314 can be performed fault - tolerantly .",
    "next , the state @xmath315 has stabilizers @xmath316 with @xmath317 , which satisfies both conditions of lemma 4 and can therefore be prepared fault - tolerantly .",
    "thus cat - state - controlled-@xmath305 can be performed fault - tolerantly .",
    "this completes the proof of lemma 5 .",
    "in fact , what we have shown in the proof of lemma 5 is that if operations in @xmath101 and the cat - state - controlled-@xmath89 for @xmath299 can be performed fault - tolerantly , then the cat - state - controlled-@xmath13 for @xmath318 and operations in @xmath105 can be performed fault - tolerantly .",
    "this is because according to sec .",
    "[ sec : recursive ] , fault - tolerant construction of @xmath105 gates only require fault - tolerant @xmath101 gates and an ancilla @xmath103 for @xmath319 .",
    "since both the operations in @xmath320 and the cat - state - controlled-@xmath13 for @xmath321 can be performed fault - tolerantly , by induction , operations in @xmath105 and the cat - state - controlled-@xmath13 for @xmath322 can be constructed fault - tolerantly , with which we can fault - tolerantly prepare the encoded state @xmath103 for @xmath95 .",
    "in this section , we re - derive the remote cnot construction , given in  @xcite , using one - bit teleportation .",
    "a remote cnot between the states @xmath149 and @xmath150 belonging to alice and bob , respectively , can be performed by a four step procedure : ( 1 ) alice swaps her state @xmath149 with an ancilla @xmath3 , ( 2 ) alice sends the teleported @xmath149 to bob using @xmath6-teleportation , ( 3 ) bob applies cnot from @xmath149 to @xmath150 , and ( 4 ) bob teleports @xmath149 back to alice using @xmath7-teleportation .",
    "steps ( 2 ) and ( 4 ) involve prohibited operations .",
    "here is a circuit representation : @xmath323 the two prohibited cnots are labelled with asterisks .",
    "they can be commuted backwards to obtain the equivalent circuit : @xmath324 which again reduces prohibited operations to some specific shared entangled state .",
    "d. gottesman , _ group 22 : proc .",
    "xxii international colloquium on group theoretical methods in physics _ , eds . s. p. corney , r. delbourgo , and p. d. jarvis , 32 - 43 ( cambridge , ma , international press , 1999 ) ; e - print quant - ph/9807006 .",
    "note that the @xmath45 operators @xmath326 to be performed conditioned on the measurement outcomes are precisely the @xmath45 stabilizers of the ancilla state @xmath79 .",
    "this coincidence is due to the structure of the teleportation circuits .",
    "see also the examples in sec .",
    "[ sec:3examples ] ."
  ],
  "abstract_text": [
    "<S> we present a general method to construct fault - tolerant quantum logic gates with a simple primitive , which is an analog of quantum teleportation . </S>",
    "<S> the technique extends previous results based on traditional quantum teleportation ( gottesman and chuang , nature * 402 * , 390 , 1999 ) and leads to straightforward and systematic construction of many fault - tolerant encoded operations , including the @xmath0 and toffoli gates . </S>",
    "<S> the technique can also be applied to the construction of remote quantum operations that can not be directly performed . </S>"
  ]
}
{
  "article_text": [
    "modern machine learning and artificial intelligence methods are revolutionizing many fields of science today , such as medicine , biology , engineering , high - energy physics and sociology , where large amounts of data have been collected due to the emergence of new high - throughput computerized technologies .",
    "historically and methodologically speaking , many machine learning algorithms have been based on minimizing the mean squared error potential , which can be explained by tractable properties of normal distribution and existence of computationally efficient methods for quadratic optimization .",
    "however , most of the real - life datasets are characterized by strong noise , long - tailed distributions , presence of contaminating factors , large dimensions .",
    "using quadratic potentials can be drastically compromised by all these circumstances : therefore , a lot of practical and theoretical efforts have been made in order to exploit the properties of non - quadratic error potentials which can be more appropriate in certain contexts .",
    "for example , methods of regularized and sparse regression such as lasso and elastic net based on the properties of @xmath0 metrics @xcite found numerous applications in bioinformatics @xcite , and @xmath0 norm - based methods of dimension reduction are of great use in automated image analysis @xcite .",
    "not surprisingly , these approaches come with drastically increased computational cost , for example , connected with applying linear programming optimization techniques which are substantially more expensive compared to mean squared error - based methods .    in practical applications of machine learning",
    ", it would be very attractive to be able to deal with _ arbitrary error potentials _",
    ", including those based on @xmath0 or fractional quasinorms @xmath1 ( @xmath2 ) , in a computationally efficient and scalable way . there is a need in developing methods allowing to tune the _ computational cost / accuracy of optimization _ trade - off accordingly to various contexts .    in this paper , we suggest such a universal framework able to deal with a large family of error potentials .",
    "we exploit the fact that finding a minimum of a piece - wise quadratic function , or , in other words , a function which is the _ minorant of a set of quadratic functionals _ , can be almost as computationally efficient as optimizing the standard quadratic potential . therefore ,",
    "if a given arbitrary potential ( such as @xmath0-based or fractional quasinorm - based ) can be approximated by a piece - wise quadratic function , this should lead to relatively efficient and simple optimization algorithms .",
    "it appears that only potentials of quadratic or subquadratic growth are possible in this approach : however , these are the most usefull ones in data analysis .",
    "we introduce a rich family of piece - wise quadratic potentials of subquadratic growth ( pqsq - potentials ) , suggest general approach for their optimization and prove convergence of a simple iterative algorithm in the most general case .",
    "we focus on the most used methods of data dimension reduction and regularized regression : however , potential applications of the approach can be much wider .",
    "data dimension reduction by constructing explicit low - dimensional approximators of a finite set of vectors is one of the most fundamental approach in data analysis .",
    "starting from the classical data approximators such as @xmath3-means @xcite and linear principal components ( pca ) @xcite , multiple generalizations have been suggested in the last decades ( self - organizing maps , principal curves , principal manifolds , principal graphs , principal trees , etc.)@xcite in order to make the data approximators more flexible and suitable for complex data structures .",
    "we solve the problem of approximating a finite set of vectors @xmath4 ( data set ) by a simpler object @xmath5 embedded into the data space , such that for each point @xmath6 an approximation error @xmath7 function can be defined .",
    "we assume this function in the form    @xmath8    where the upper @xmath9 stands for the coordinate index , and @xmath10 is a monotonously growing symmetrical function , which we will be calling the error potential . by data approximation",
    "we mean that the embedment of @xmath5 in the data space minimizes the error    @xmath11    note that our definition of error function is coordinate - wise ( it is a sum of error potential over all coordinates ) .",
    "the simplest form of the error potential is quadratic @xmath12 , which leads to the most known data approximators : mean point ( @xmath5 is a point ) , principal points ( @xmath5 is a set of points ) @xcite , principal components ( @xmath5 is a line or a hyperplane ) @xcite . in more advanced cases ,",
    "@xmath5 can posses some regular properties leading to principal curves ( @xmath5 is a smooth line or spline ) @xcite , principal manifolds ( @xmath5 is a smooth low - dimensional surface ) and principal graphs ( eg . , @xmath5 is a pluri - harmonic graph embedment ) @xcite .",
    "there exist multiple advantages of using quadratic potential @xmath10 , because it leads to the most computationally efficient algorithms usually based on the splitting schema , a variant of expectation - minimization approach @xcite .",
    "for example , @xmath3-means algorithm solves the problem of finding the set of principal points and the standard iterative singular value decomposition finds principal components .",
    "however , quadratic potential is known to be sensitive to outliers in the data set .",
    "also , purely quadratic potentials can suffer from the curse of dimensionality , not being able to robustly discriminate ` close ' and ` distant ' point neighbours in a high - dimensional space @xcite .",
    "there exist several widely used ideas for increasing approximator s robustness in presence of strong noise in data such as : ( 1 ) using medians instead of mean values , ( 2 ) substituting quadratic norm by @xmath0 norm ( e.g. @xcite ) , ( 3 ) outliers exclusion or fixed weighting or iterative reweighting during optimizing the data approximators ( e.g. @xcite ) , and ( 4 ) regularizing the pca vectors by @xmath0 norm @xcite . in some works , it was suggested to utilize ` trimming ' averages , e.g. in the context of the @xmath3-means clustering or some generalizations of pca @xcite ) . in the context of regression , iterative reweighting",
    "is exploited to mimic the properties of @xmath0 norm @xcite .",
    "several algorithms for constructing pca with @xmath0 norm have been suggested @xcite and systematically benchmarked @xcite .",
    "some authors go even beyond linear metrics and suggests that fractional quasinorms @xmath1 ( @xmath2 ) can be more appropriate in high - dimensional data approximation @xcite .",
    "however , most of the suggested approaches exploiting properties of non - quadratic metrics either represent useful but still arbitrary heuristics or are not sufficiently scalable . the standard approach for minimizing @xmath0-based norm",
    "consists in solving a linear programming task . despite existence of many efficient linear programming optimizer implementations , by their nature",
    "these computations are much slower than the iterative methods used in the standard svd algorithm or @xmath3-means .    in this paper , we provide implementations of the standard data approximators ( mean point , @xmath3-means , principal components ) using a pqsq potential . as an other application of pqsq - based framework in machine learning ,",
    "we develop pqsq - based regularized and sparse regression ( imitating the properties of lasso and elastic net ) .",
    "let us split all non - negative numbers @xmath13 into @xmath14 non - intersecting intervals @xmath15 , for a set of thresholds @xmath16 . for convenience ,",
    "let us denote @xmath17 .",
    "piecewise quadratic potential is a continuous monotonously growing function @xmath10 constructed from pieces of centered at zero parabolas @xmath18 , defined on intervals @xmath19 , satisfying @xmath20 ( see figure  [ potential ] ) :    @xmath21    @xmath22    @xmath23    where @xmath24 is a majorating function , which is to be approximated ( imitated ) by @xmath10 .",
    "for example , in the simplest case @xmath24 can be a linear function : @xmath25 , in this case , @xmath26 will approximate the @xmath0-based error function .    note that accordingly to ( [ pqsq_acoeffs],[pqsq_bcoeffs ] ) , @xmath27 .",
    "therefore , the choice of @xmath28 can naturally create a ` trimmed ' version of error potential @xmath10 such that some data points ( outliers ) do not have any contribution to the gradient of @xmath10 , hence , will not affect the optimization procedure .",
    "however , this set of points can change during minimizaton of the potential .",
    "the condition of subquadratic growth consists in the requirement @xmath29 and @xmath30 . to guarantee this ,",
    "the following simple condition on @xmath24 should be satisfied :    @xmath31    therefore , @xmath24 is a monotonic concave function of @xmath32 : @xmath33 in particular , @xmath24 should grow not faster than any parabola @xmath34 , which is tangent to @xmath24 .",
    "( solid blue line ) defined for the majorating function @xmath24 ( red dashed line ) and several thresholds @xmath35 .",
    "dotted lines show the parabolas which fragments are used to construct @xmath10 .",
    "the last parabola is flat ( @xmath36 ) which corresponds to trimmed potential .",
    "[ potential ] ]      in order to use the pqsq potential in an algorithm , a set of @xmath37 interval thresholds @xmath38 for each coordinate @xmath39 should be provided .",
    "matrices of @xmath40 and @xmath41 coefficients defined by ( [ pqsq_acoeffs],[pqsq_bcoeffs ] ) based on interval definitions : @xmath42 , @xmath43 , @xmath39 are computed separately for each coordinate @xmath3 .",
    "minimization of pqsq - based functional consists in several basic steps which can be combined in an algorithm :    \\1 ) for each coordinate @xmath3 , split all data point indices into non - overlapping sets @xmath44 :    @xmath45    where @xmath46 is a matrix which depends on the nature of the algorithm .",
    "\\2 ) minimize pqsq - based functional where each set of points @xmath47 contributes to the functional quadratically with coefficient @xmath48 .",
    "this is a quadratic optimization task .",
    "\\3 ) repeat ( 1)-(2 ) till convergence .",
    "in order to deal in most general terms with the data approximation algorithms based on pqsq potentials , let us consider a general case where a potential can be constructed from a set of functions @xmath49 with only two requirements : 1 ) that each @xmath50 has a ( local ) minimum ; 2 ) that the whole set of all possible @xmath50s forms a cone . in this case , instead of the operational definition ( [ pqsq_f ] )",
    "it is convenient to define the potential @xmath10 as the minorant function for a set of functions as follows . for convenience , in this section",
    ", @xmath51 will notify a vector @xmath52 .",
    "let us consider _ a generating cone of functions _",
    "we remind that the definition of a cone implies that for any @xmath54 , we have @xmath55 , where @xmath56 .    for any finite set of functions @xmath57 we define the minorant function ( figure [ optimizationfigure ] ) : @xmath58    it is convinient to introduce a multiindex @xmath59 indicating which particular function(s ) @xmath60 corresponds to the value of @xmath10 , i.e. @xmath61    for a cone @xmath53 let us define a set of all possible minorant functions @xmath62",
    "@xmath63    [ misacone ] @xmath62 is a cone .    for any two minorant functions @xmath64 we have @xmath65    where @xmath66 is a set of all possible linear combinations of functions from @xmath67 and @xmath68 .",
    "[ mrestrictedisacone ] any restriction of @xmath62 onto a linear manifold @xmath5 is a cone .",
    "let us denote @xmath69 a restriction of @xmath70 function onto @xmath5 , i.e. @xmath71 .",
    "@xmath69 is a part of @xmath53 .",
    "set of all @xmath69 forms a restriction @xmath72 of @xmath53 onto @xmath5 .",
    "@xmath72 is a cone , hence , @xmath73 is a cone ( proposition [ misacone ] ) .    _",
    "splitting algorithm _ minimizing @xmath74 is defined as algorithm [ minorantminimum ] .",
    "@xmath75 _ repeat until stopping criterion has been met _ : @xmath76 * for all * @xmath77 @xmath78 * end for * @xmath79 @xmath80 @xmath81 @xmath82 check if the multiindex @xmath83 does not change compared to the previous iterationf    [ theoremconvergence ] splitting algorithm ( algorithm [ minorantminimum ] ) for minimizing @xmath84 converges in a finite number of steps .",
    "since the set of functions @xmath85 is finite then we only have to show that at each step the value of the function @xmath84 can not increase . for any @xmath51 and the value @xmath86 for @xmath77",
    "we can have only two cases :    \\(1 ) either @xmath87 ( convergence , and in this case @xmath88 for any @xmath89 ) ;    \\(2 ) or @xmath90 since , accordingly to the definition ( [ minorant ] ) , @xmath91 , for any @xmath92 ( see figure [ optimizationfigure ] ) .    note that in algorithm [ minorantminimum ] we do not specify exactly the way to find the local minimum of @xmath50 . to be practical , the cone @xmath53 should contain only functions for which finding a local minimum is fast and explicit .",
    "evident candidates for this role are positively defined quadratic functionals @xmath93 , where @xmath94 is a positively defined symmetric matrix . any minorant function ( [ minorant ] ) constructed from positively defined quadratic functions",
    "will automatically provide subquadratic growth , since the minorant can not grow faster than any of the quadratic forms by which it is defined .",
    "operational definition of pqsq given above ( [ pqsq_f ] ) , corresponds to a particular form of the quadratic functional , with @xmath94 being diagonal matrix .",
    "this choice corresponds to the coordinate - wise definition of data approximation error function ( [ distance_function ] ) which is particularly simple to minimize .",
    "this circumstance is used in algorithms [ pqsq_mean_algorithm],[pqsq_pc1 ] .    ,",
    "defined by three functions @xmath95 each of which has a local minimum .",
    "each optimization step consists in determining which @xmath96 and making a step into the local minimum of @xmath97 .",
    "[ optimizationfigure ] ]",
    "mean vector @xmath98 for a set of vectors @xmath99 , @xmath100 and an approximation error defined by potential @xmath24 can be defined as a point minimizing the mean error potential for all points in @xmath101 :    @xmath102    for euclidean metrics @xmath103 ( @xmath104 ) it is the usual arithmetric mean",
    ".    for @xmath0 metrics ( @xmath105 ) , ( [ meandef ] ) leads to the implicit equation @xmath106 , where @xmath107 stands for the number of points , which corresponds to the definition of median .",
    "this equation can have a non - unique solution in case of even number of points or when some data point coordinates coincide : therefore , definition of median is usually accompanied by heuristics used for breaking ties , i.e. to deal with non - uniquely defined rankings .",
    "this situation reflects the general situation of existence of multiple local minimuma and possible non - uniqueness of global minimum of ( [ meandef ] ) ( figure  [ meanvaluefigure ] ) .    for pqsq approximation measure ( [ pqsq_f ] )",
    "it is difficult to write down an explicit formula for computing the mean value corresponding to the global minimum of ( [ meandef ] ) . in order to find a point @xmath108 minimizing mean @xmath109 potential ,",
    "a simple iterative algorithm can be used ( algorithm  [ pqsq_mean_algorithm ] ) .",
    "the suggested algorithm converges to the local minimum which depends on the initial point approximation .",
    "@xmath110 @xmath111 @xmath112 _ repeat till convergence of @xmath108 _ : * for each * _ coordinate _ @xmath3 _ define sets of indices _ @xmath113 _ compute new approximation for _ @xmath108 : @xmath114 * end for * * goto * _ repeat till convergence _    based on the pqsq approximation measure and the algorithm for computing the pqsq mean value ( algorithm [ pqsq_mean_algorithm ] ) , one can construct the pqsq - based @xmath3-means clustering procedure in the usual way , splitting estimation of cluster centroids given partitioning of the data points into @xmath3 disjoint groups , and then re - calculating the partitioning using the pqsq - based proximity measure .          accordingly to the classical definition of the first principal component , it is a line best fit to the data set @xmath101 @xcite . let us define a line in the parametric form @xmath115 , where @xmath116 is the parameter .",
    "then the first principal component will be defined by vectors @xmath117 satisfying    @xmath118    where    @xmath119    the standard first principal component ( pc1 ) corresponds to @xmath12 when the vectors @xmath117 can be found by a simple iterative splitting algorithm for singular value decomposition ( svd ) . if @xmath101 does not contain missing values then @xmath120 is the vector of arithmetic mean values .",
    "by contrast , computing @xmath0-based principal components ( @xmath121 ) represents a much more challenging optimization problem @xcite .",
    "several approximative algorithms for computing @xmath0-norm pca have been recently suggested and benchmarked @xcite . to our knowledge , there have not been a general efficient algorithm suggested for computing pca in case of arbitrary approximation measure for some monotonous function @xmath10 .",
    "computing pca based on pqsq approximation error is only slightly more complicated than computing the standard @xmath103 pca by svd . here",
    "we provide a pseudo - code ( algorithm [ pqsq_pc1 ] ) of a simple iterative algorithm ( similar to algorithm [ pqsq_mean_algorithm ] ) with guaranteed convergence ( see section [ convergencesection ] ) .",
    "@xmath122 @xmath111 @xmath123 @xmath124 @xmath125@xmath126@xmath127 _ repeat till convergence of @xmath128 _ : @xmath129 * for each * _ coordinate _",
    "@xmath3 _ define sets of indices _ @xmath130",
    "* end for * * for each * _ data point _ @xmath131 and _ coordinate _ @xmath3 _ find all @xmath132 such that @xmath133 _ * if * _ all @xmath134 * then * @xmath135 _ * else * @xmath136 * end for * * for each * _ coordinate _",
    "@xmath137 * end for * * for each * @xmath131 : @xmath138 * end for * * goto * _ repeat till convergence _",
    "computation of second and further principal components follows the standard deflation approach : projections of data points onto the previously computed component are subtracted from the data set , and the algorithm is applied to the residues .",
    "however , as it is the case in any non - quadratic metrics , the resulting components can be non - orthogonal or even not invariant with respect to the dataset rotation . moreover , unlike @xmath103-based principal components",
    ", the algorithm [ pqsq_pc1 ] does not always converge to a unique global minimum ; the computed components can depend on the initial estimate of @xmath128 .",
    "the situation is somewhat similar to the standard @xmath3-means algorithm .",
    "therefore , in order to achieve the least possible approximation error to the linear subspace , @xmath128 can be initialized randomly or by data vectors @xmath6 many times and the deepest in pqsq approximation error ( [ distance_function ] ) minimum should be selected .",
    "how does the algorithm [ minorantminimum ] serve a more abstract version of the algorithms [ pqsq_mean_algorithm],[pqsq_pc1 ] ?",
    "for example , the ` variance ' function @xmath139 to be minimized in algorithm [ pqsq_mean_algorithm ] uses the generating functions in the form @xmath140 , where @xmath131 is the index of the interval in ( [ pqsq_f ] ) .",
    "hence , @xmath141 is a minorant function , belonging to the cone @xmath62 , and must converge ( to a local minimum ) in a finite number of steps accordingly to theorem [ theoremconvergence ] .      in a series of works ,",
    "the authors of this article introduced a family of methods for constructing principal objects based on graph approximations ( e.g. , principal curves , principal manifolds , principal trees ) , which allows constructing explicit non - linear data approximators ( and , more generally , approximators with non - trivial topologies , suitable for approximating , e.g. , datasets with branching or circular topology ) @xcite . the methodology is based on optimizing a piece - wise quadratic _ elastic energy _ functional ( see short description below ) .",
    "a convenient graphical user interface was developed with implementation of some of these methods @xcite .",
    "let @xmath142 be a simple undirected graph with set of vertices @xmath143 and set of edges @xmath144 .",
    "for @xmath145 a @xmath3-star in @xmath142 is a subgraph with @xmath146 vertices @xmath147 and @xmath3 edges @xmath148 .",
    "suppose for each @xmath149 , a family @xmath150 of @xmath3-stars in @xmath142 has been selected .",
    "we call a graph @xmath142 with selected families of @xmath3-stars @xmath150 an _ elastic graph _ if , for all @xmath151 and @xmath152 , the correspondent elasticity moduli @xmath153 and @xmath154 are defined .",
    "let @xmath155 be vertices of an edge @xmath156 and @xmath157 be vertices of a @xmath3-star @xmath158 ( among them , @xmath159 is the central vertex ) .",
    "for any map @xmath160 the _ energy of the graph _ is defined as    @xmath161    for a given map @xmath162 we divide the dataset @xmath163 into node neighborhoods @xmath164 .",
    "the set @xmath165 contains the data points for which the node @xmath166 is the closest one in @xmath166 .",
    "the _ energy of approximation _ is :    @xmath167    where @xmath168 are the point weights .",
    "simple and fast algorithm for minimization of the energy    @xmath169    is the splitting algorithm , in the spirit of the classical @xmath3-means clustering : for a given system of sets @xmath170 we minimize @xmath171 ( optimization step , it is the minimization of a positive quadratic functional ) , then for a given @xmath172 we find new @xmath173 ( re - partitioning ) , and so on ; stop when no change .",
    "application of pqsq - based potential is straightforward in this approach .",
    "it consists in replacing ( [ approximation_term ] ) with    @xmath174    where @xmath175 is a chosen pqsq - based error potential .",
    "partitioning of the dataset into @xmath173 can be also based on calculating the minimum pqsq - based error to @xmath176 , or can continue enjoying nice properties of @xmath103-based distance calculation .",
    "one of the major application of non - euclidean norm properties in machine learning is using non - quadratic terms for penalizing large absolute values of regression coefficients @xcite .",
    "depending on the chosen penalization term , it is possible to achieve various effects such as sparsity or grouping coefficients for redundant variables . in a general form ,",
    "regularized regression solves the following optimization problem    @xmath177    where @xmath178 is the number of observations , @xmath179 is the number of independent variables in the matrix @xmath180 , @xmath181 are dependent variables ( to be predicted ) , @xmath182 is an internal parameter controlling the strength of regularization ( penalty on the amplitude of regression coefficients @xmath183 ) , and @xmath184 is the regularizer function , which is @xmath185 for ridge regression , @xmath186 for lasso and @xmath187 for elastic net methods correspondingly .    here",
    "we suggest to imitate @xmath24 with a @xmath109 potential function , i.e. instead of ( [ regularizedregression ] ) solving the problem    @xmath188    where @xmath189 is a pqsq potential imitating _ arbitrary _ subquadratic regression regularization penalty .    solving ( [ regularizedregressionpqsq ] ) is equivalent to iteratively solving a system of linear equations    @xmath190    where @xmath191 constant ( where @xmath192 index is defined from @xmath193 ) is computed accordingly to the definition of @xmath10 function ( see ( [ pqsq_acoeffs ] ) ) , given the estimation of @xmath194 regression coefficients at the current iteration . in practice ,",
    "iterating ( [ regularizedregressionpqsqiterationequation ] ) converges in a few iterations , therefore , the algorithm can work very fast and outperform the widely used least angle regression algorithm for solving ( [ regularizedregression ] ) in case of @xmath0 penalties .",
    "any pqsq potential @xmath10 is characterized by zero derivative for @xmath195 by construction : @xmath196 , which means that the solution of ( [ regularizedregressionpqsq ] ) does not have to be sparse for any @xmath182 .",
    "unlike pure @xmath0-based penalty , the coefficients of regression diminish with increase of @xmath182 but there is nothing to shrink them to exact zero values , similar to the ridge regression . however , it is relatively straightforward to modify the algorithm , to achieve sparsity of the regression solution .",
    "the black hole trick consists in eliminating from regression training after each iteration ( [ regularizedregressionpqsqiterationequation ] ) all regression coefficients @xmath194 smaller by absolute value than a given parameter @xmath197 ( black hole radius ) . those regression coefficients which have passed the black hole radius are put to zero and do not have any chance to change their values in the next iterations .",
    "norm ( for illustration only three intervals are used to define pqsq function ) .",
    "black hole trick consists in introducing an @xmath197 zone ( hatched territory on the plot ) of the potential in the vicinity of zero such that any coefficient of regression falling down into this zone is set to zero and eliminated from further learning .",
    "it is convenient to define @xmath197 as the midst of the smallest interval as it is shown in this plot .",
    "[ explainingblackhole ] ]    the optimal choice of @xmath197 value requires a separate study . from general considerations , it is preferable that the derivative @xmath198 would not be very close to zero . as a pragmatic choice for the numerical examples in this article , we define @xmath197 as the midst of the smallest interval in the definition of pqsq potential ( see figure  [ explainingblackhole ] ) , i.e. @xmath199 , which guarantees far from zero @xmath198 .",
    "it might happen that this value of @xmath197 would collapse all @xmath194 to zero even without regularization ( i.e. , with @xmath200 ) . in this case",
    ", the black hole radius is divided by half @xmath201 and it is checked that for @xmath200 the iterations would leave at list half of the regression coefficients . if it is not the case then the process of diminishing the black hole radius repeated recursively till meeting the criterion of preserving the majority of regression coefficients . in practice",
    ", it requires only few ( very fast ) additional iterations of the algorithm .    as in the lasso methodology",
    ", the problem ( [ regularizedregressionpqsq ] ) is solved for a range of @xmath182 values , calibrated such that the minimal @xmath182 would select the maximum number of regression variables , while the maximum @xmath182 value would lead to the most sparse regression ( selecting only one single non - zero regression coefficient ) .",
    "the main parameters of pqsq are ( a ) majorating function @xmath24 and ( b ) decomposition of each coordinate range into @xmath14 non - overlapping intervals . depending on these parameters ,",
    "various approximation error properties can be exploited , including those providing robustness to outlier data points .",
    "when defining the intervals @xmath202 , it is desirable to achieve a small difference between @xmath203 and @xmath204 for expected argument values @xmath205 ( differences between an estimator and the data point ) , and choose the suitable value of the potential trimming threshold @xmath28 in order to achieve the desired robustness properties .",
    "if no trimming is needed , then @xmath28 should be made larger than the maximum expected difference between coordinate values ( maximum @xmath205 ) .    in our numerical experiments",
    "we used the following definition of intervals . for",
    "any data coordinate @xmath3 , we define a characteristic difference @xmath206 , for example    @xmath207    where @xmath208 is a scaling parameter , which can be put at 1 ( in this case , the approximating potential will not be trimmed ) . in case of existence of outliers , for defining @xmath206 , instead of amplitude one can use other measures such as the median absolute deviation ( mad ) :    @xmath209    in this case ,",
    "the scaling parameter should be made larger , i.e. @xmath210 , if no trimming is needed .",
    "after defining @xmath206 we use the following definition of intervals :    @xmath211    more sophisticated approaches are also possible to apply such as , given the number of intervals @xmath37 and the majorating function @xmath24 , choose @xmath212 in order to minimize the maximal difference @xmath213 the calculation of intervals is straightforward for a given value of @xmath214 and many smooth concave functions @xmath24 like @xmath215 ( @xmath216 ) or @xmath217 .",
    "we provide matlab implementation of pqsq approximators ( in particular , pca ) together with the matlab and r code used to generate the example figures in this article at ` pqsq - dataapproximators ' github repository and matlab implementation of pqsq - based regularized regression with build - in imitations of @xmath0 ( lasso - like ) and @xmath218 mixture ( elastic net - like ) penalties at ` pqsq - regularized - regression ' github repository .",
    "the java code implementing elastic graph - based non - linear approximator implementations is available from the authors on request .",
    "we demonstrate the value of pqsq - based computation of @xmath0-based pca by constructing a simple example of data distribution consisting of a dense two - cluster component superimposed with a sparse contaminating component with relatively large variance whose co - variance does not coincide with the dense signal ( figure  [ bimodal ] ) .",
    "we study the ability of pca to withstand certain level of sparse contamination and compare it with the standard @xmath103-based pca . in this example , without noise the first principal component coincides with the vector connecting the two cluster centers : hence , it perfectly separates them in the projected distribution .",
    "noise interferes with the ability of the first principal component to separate the clusters to the degree when the first principal component starts to match the principal variance direction of the contaminating distribution ( figure  [ bimodal]a , b ) . in higher dimensions , not only the first but also the first two principal components are not able to distinguish two clusters , which can hide an important data structure when applying the standard data visualization tools .    in the first test",
    "we study a switch of the first principal component from following the variance of the dense informative distribution ( abscissa ) to the sparse noise distribution ( ordinate ) as a function of the number of contaminating points , in @xmath219 ( figure  [ bimodal]a - c ) .",
    "we modeled two clusters as two 100-point samples from normal distribution centered in points @xmath220 $ ] and @xmath221 $ ] with isotropic variance with the standard deviation 0.1 .",
    "the sparse noise distribution was modeled as a @xmath3-point sample from the product of two laplace distributions of zero means with the standard deviations 2 along abscissa and 4 along ordinate .",
    "the intervals for computing the pqsq functional were defined by thresholds @xmath222 for each coordinate . increasing the number of points in the contaminating distribution diminishes the average value of the abscissa coordinate of pc1 , because the pc1 starts to be attracted by the contaminating distribution ( figure  [ bimodal]c ) .",
    "however , it is clear that on average pqsq @xmath0-based pca is able to withstand much larger amplitude of the contaminating signal ( very robust up to 20 - 30 points , i.e. 10 - 20% of strong noise contamination ) compared to the standard @xmath103-based pca ( which is robust to 2 - 3% of contamination ) .    in the second test",
    "we study the ability of the first two principal components to separate two clusters , in @xmath223 ( figure  [ bimodal]d - f ) . as in the first test , we modeled two clusters as two 100-point samples from normal distribution centered in points @xmath224 $ ] and @xmath225 $ ] with isotropic variance with the standard deviation 0.1 in all 100 dimensions .",
    "the sparse noise distribution is modeled as a @xmath3-point sample from the product of 100 laplace distributions of zero means with the standard deviations 1 along each coordinate besides the third coordinate ( standard deviation of noise is 2 ) and the forth coordinate ( standard deviation of noise is 4 ) .",
    "therefore , the first two principal component in the absence of noise are attracted by the dimensions 1 and 2 , while in the presence of strong noise they are be attracted by dimensions 3 and 4 , hiding the cluster structure of the dense part of the distribution .",
    "the definitions of the intervals were taken as in the first test .",
    "we measured the ability of the first two principal components to separate clusters by computing the @xmath226-test between the two clusters projected in the 2d - space spanned by the first principal components of the global distribution ( figure  [ bimodal]d - f ) .",
    "as one can see , the average ability of the first principal components to separate clusters is significantly stronger in the case of pqsq @xmath0-based pca which is able to separate robustly the clusters even in the presence of strong noise contamination ( up to 80 noise points , i.e. 40% contamination ) .          in order to compare the computation time and the robustness of pqsq - based pca algorithm for the case @xmath121 with existing r - based implementations of @xmath0-based pca methods ( pcal1 package )",
    ", we followed the benchmark described in @xcite .",
    "we compared performance of pqsq - based pca based on algorithm [ pqsq_pc1 ] with several @xmath0-based pca algorithms : l1-pca * @xcite ,",
    "l1-pca @xcite , pca - pp @xcite , pca - l1 @xcite . as a reference point",
    ", we used the standard pca algorithm based on quadratic norm and computed using the standard svd iterations .",
    "the idea of benchmarking is to generate a series of datasets of the same size ( @xmath227 objects in @xmath228 dimensions ) such that the first 5 dimensions would be sampled from a uniform distribution @xmath229 .",
    "therefore , the first 5 dimensions represent ` true manifold ' sampled by points .",
    "the values in the last 5 dimensions represent ` noise+outlier ' signal .",
    "the background noise is represented by laplacian distribution of zero mean and 0.1 variance .",
    "the outlier signal is characterized by mean value @xmath230 , dimension @xmath37 and frequency @xmath172 .",
    "then , for each data point with a probability @xmath172 , in the first @xmath37 outlier dimensions a value is drawn from @xmath231 .",
    "the rest of the values is drawn from background noise distribution .",
    "as in @xcite , we ve generated 1300 test sets corresponding to @xmath232 , with 100 examples for each combination of @xmath233 and @xmath234 .    for each test set 5 first principal components @xmath235 of unit length were computed , with corresponding point projection distributions @xmath236 and the mean vector @xmath237 .",
    "therefore , for each initial data point @xmath6 , we have the ` restored ' data point @xmath238    for computing the pqsq - based pca we used 5 intervals without trimming . changing",
    "the number of intervals did not significantly changed the benchmarking results .",
    "two characteristics were measured : ( 1 ) computation time measured as a ratio to the computation of 5 first principal components using the standard @xmath103-based pca and ( 2 ) the sum of absolute values of the restored point coordinates in the ` outlier ' dimensions normalized on the number of points :    -based pca , using synthetic datasets representing ` true ' five - dimensional linear manifold contaminated by noise and outliers ( located in other five dimensions ) .",
    "the abscissa is the error of detecti tnghe ` true ' manifold by a particular method and the ordinate is the computational time relative to the standard svd ( @xmath103-based pca ) computation , in logarithmic scale .",
    "the computational cost of application of linear programming methods instead of simpler iterative methods is approximately shown by an arrow .",
    "[ benchmark ] ]    @xmath239    formally speaking , @xmath240 is @xmath0-based distance from the point projection onto the first five principal components to the ` true ' subspace . in simplistic terms , larger values of @xmath240 correspond to the situation when the first five principal components do not represent well the first ` true ' dimensions having significant loadings into the ` outlier dimensions ' .",
    "@xmath241 if and only if the first five components do not have any non - zero loadings in the dimensions @xmath242 .",
    "the results of the comparison averaged over all 1300 test sets are shown in figure  [ benchmark ] .",
    "the pqsq - based computation of pca outperforms by accuracy the existing heuristics such as pca - l1 but remains computationally efficient .",
    "it is 100 times faster than l1-pca giving almost the same accuracy .",
    "it is almost 500 times faster than the l1-pca * algorithm , which is , however , better in accuracy ( due to being robust with respect to strong outliers )",
    ". one can see from figure  [ benchmark ] that pqsq - based approach is the best in accuracy among fast iterative methods .",
    "the detailed tables of comparison for all combinations of parameters are available on github .",
    "the scripts used to generate the datasets and compare the results can also be found there .",
    "we compared performance of pqsq - based regularized regression method imitating @xmath0 penalty with lasso implementation in matlab , using 8 datasets from uci machine learning repository @xcite , regression task section . in the selection of datasets we chose very different numbers of objects and variables for regression construction ( table  [ lassoperftable ] ) .",
    "all table rows containing missing values were eliminated for the tests .",
    "we observed up to two orders of magnitude acceleration of pqsq - based method compared to the lasso method implemented in matlab ( table  [ lassoperftable ] ) , with similar sparsity properties and approximation power as lasso ( figure  [ lassocomparisonmse ] ) .",
    "while comparing time performances of two methods , we ve noticed that lasso ( as it is implemented in matlab ) showed worse results when the number of objects in the dataset approaches the number of predictive variables ( see table  [ lassoperftable ] ) .",
    "in order to test this observation explicitly , we took a particular dataset ( crime ) containing 1994 observations and 100 variables and compared the performance of lasso in the case of complete table and a reduced table ( crime reduced ) containing only each 10th observation .",
    "paradoxically , lasso converges almost two times slower in the case of the smaller dataset , while the pqsq - based algorithm worked slightly faster in this case .",
    "it is necessary to stress that here we compare the basic algorithms without many latest technical improvements which can be applied both to @xmath0 penalty and its pqsq approximation ( such as fitting the whole lasso path ) .",
    "detailed comparison of all the existent modifications if far beyond the scope of this work .    for comparing approximation power of the pqsq - based regularized regression and lasso , we used two versions of pqsq potential for regression coefficients : with and without trimming . in order to represent the results",
    ", we used the ` number of non - zero parameters vs fraction of variance unexplained ( fvu ) ' plots ( see two representative examples at figure  [ lassocomparisonmse ] ) .",
    "we suggest that this type of plot is more informative in practical applications than the lasso plot used to calibrate the strength of regularization , since it is a more explicit representation for optimizing the accuracy vs complexity ratio of the resulting regression .    from our testing",
    ", we can conclude that pqsq - based regularized regression has similar properties of sparsity and approximation accuracy compared to lasso .",
    "it tends to slightly outperform lasso ( to give smaller fvu ) in case of @xmath243 .",
    "introducing trimming in most cases does not change the best fvu for a given number of selected variables , but tends to decrease its variance ( has a stabilization effect ) . in some cases",
    ", introducing trimming is the most advantageous method ( figure  [ lassocomparisonmse]b ) .",
    "the github ` pqsq - regularized - regression ' repository contains exact dataset references and more complete report on comparing approximation ability of pqsq - based regularized regression with lasso .",
    "in this paper we develop a new machine learning framework ( theory and application ) allowing one to deal with arbitrary error potentials of not - faster than quadratic growth , imitated by piece - wise quadratic function of subquadratic growth ( pqsq error potential ) .",
    "we develop methods for constructing the standard data approximators ( mean value , @xmath3-means clustering , principal components , principal graphs ) for arbitrary non - quadratic approximation error with subquadratic growth and regularized linear regression with arbitrary subquadratic penalty by using a piecewise - quadratic error functional ( pqsq potential ) .",
    "these problems can be solved by applying quasi - quadratic optimization procedures , which are organized as solutions of sequences of linear problems by standard and computationally efficient algorithms .",
    "the suggested methodology have several advantages over existing ones :    \\(a ) _ scalability _ : the algorithms are computationally efficient and can be applied to large data sets containing millions of numerical values .",
    "\\(b ) _ flexibility _ : the algorithms can be adapted to any type of data metrics with subquadratic growth , even if the metrics can not be expressed in explicit form .",
    "for example , the error potential can be chosen as adaptive metrics @xcite .",
    "\\(c ) _ built - in ( trimmed ) robustness _ :",
    "choice of intervals in pqsq can be done in the way to achieve a trimmed version of the standard data approximators , when points distant from the approximator do not affect the error minimization during the current optimization step .",
    "\\(d ) _ guaranteed convergence _ : the suggested algorithms converge to local or global minimum just as the corresponding predecessor algorithms based on quadratic optimization and expectation / minimization - based splitting approach .    in theoretical perspective , using pqsq - potentials in data mining is similar to existing applications of min - plus ( or , max - plus ) algebras in non - linear optimization theory , where complex non - linear functions are approximated by infimum ( or supremum ) of finitely many ` dictionary functions ' @xcite .",
    "we can claim that just as using polynomes is a natural framework for approximating in rings of functions , using min - plus algebra naturally leads to introduction of pqsq - based functions and the cones of minorants of quadratic dictionary functions .",
    "one of the application of the suggested methodology is approximating the popular in data mining @xmath0 metrics .",
    "we show by numerical simulations that pqsq - based approximators perform as fast as the fast heuristical algorithms for computing @xmath0-based pca but achieve better accuracy in a previously suggested benchmark test .",
    "pqsq - based approximators can be less accurate than the exact algorithms for optimizing @xmath0-based functions utilizing linear programming : however , they are several orders of magnitude faster .",
    "pqsq potential can be applied in the task of regression , replacing the classical least squares or @xmath0-based least absolute deviation methods . at the same time , pqsq - based approximators can imitate a variety of subquadratic error potentials ( not limited to @xmath0 or variations ) , including fractional quasinorms @xmath1 ( @xmath2 ) . we demonstrate that the pqsq potential can be easily adapted to the problems of sparse regularized regression with non - quadratic penalty on regression coefficients ( including imitations of lasso and elastic net ) . on several real - life dataset examples we show that pqsq - based regularized regression can perform two orders of magnitude faster than the lasso algorithm implemented in the same programming environment .    to conclude , in table  [ applicationtable ] we list possible applications of the pqsq - based framework in machine learning .",
    "this study was supported in part by big data paris science et lettre research university project ` psl institute for data science ' .",
    "39 natexlab#1#1[2]#2 , , ( ) .",
    ", , , ( ) . , , , , , , , .",
    ", , , , , , , ( ) . , , ( ) .",
    ", , ( ) . , , , ( ) .",
    ", , , ( eds . ) , , , . , , ( ) . , , ( ) . , , , , ( ) . , , , , in : , , , pp . . , , , , , ( ) . , , , , in : , , pp . . , , , ( ) . , , , , , in : , , pp . . , , springer series in information sciences , vol.30 , , . , , , , ( ) . , , , , , ( )",
    ", , , , ( ) . , , , et  al . , , ( ) . , , , , ( ) . , , , in : , volume  , , pp . .",
    ", , , , ( ) . , , , , .",
    ", , , , . , , , ( ) .",
    ", , , ( ) . , , , ( ) .",
    ", , , ( ) . , , , ( ) .",
    ", , , , ( ) . , , , , ( ) .",
    ", , , . , , , ( ) . , , , , , , in : , pp . . , , , , ( ) .",
    ", , , , , ( ) ."
  ],
  "abstract_text": [
    "<S> most of machine learning approaches have stemmed from the application of minimizing the mean squared distance principle , based on the computationally efficient quadratic optimization methods . however , when faced with high - dimensional and noisy data , the quadratic error functionals demonstrated many weaknesses including high sensitivity to contaminating factors and dimensionality curse . </S>",
    "<S> therefore , a lot of recent applications in machine learning exploited properties of non - quadratic error functionals based on @xmath0 norm or even sub - linear potentials corresponding to quasinorms @xmath1 ( @xmath2 ) . </S>",
    "<S> the back side of these approaches is increase in computational cost for optimization . till so far </S>",
    "<S> , no approaches have been suggested to deal with _ arbitrary _ error functionals , in a flexible and computationally efficient framework . in this paper </S>",
    "<S> , we develop a theory and basic universal data approximation algorithms ( @xmath3-means , principal components , principal manifolds and graphs , regularized and sparse regression ) , based on piece - wise quadratic error potentials of subquadratic growth ( pqsq potentials ) . </S>",
    "<S> we develop a new and universal framework to minimize _ arbitrary sub - quadratic error potentials _ using an algorithm with guaranteed fast convergence to the local or global error minimum . </S>",
    "<S> the theory of pqsq potentials is based on the notion of the cone of minorant functions , and represents a natural approximation formalism based on the application of min - plus algebra . </S>",
    "<S> the approach can be applied in most of existing machine learning methods , including methods of data approximation and regularized and sparse regression , leading to the improvement in the computational cost / accuracy trade - off . </S>",
    "<S> we demonstrate that on synthetic and real - life datasets pqsq - based machine learning methods achieve orders of magnitude faster computational performance than the corresponding state - of - the - art methods , having similar or better approximation accuracy .    </S>",
    "<S> data approximation , nonquadratic potential , principal components , clustering , regularized regression , sparse regression </S>"
  ]
}
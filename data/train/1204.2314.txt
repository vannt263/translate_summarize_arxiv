{
  "article_text": [
    "a polynomial is a mathematical expression involving a sum of powers in one or more variables multiplied by coefficients .",
    "a polynomial in one variable ( i.e. , a univariate polynomial ) with constant coefficients is given by @xmath4 the highest power in a univariate polynomial is called its order , or sometimes its degree , and for a polynomial with more than one variable , i.e. a multivariate polynomial , one needs to find the degree of each term by adding the exponents of each variable in the term , and the largest such degree is the degree of the multivariate polynomial . for a rational expression , i.e. an expression that is the ratio of two polynomials , we can work out its degree by taking the degree of the top ( numerator ) and subtracting the degree of the bottom ( denominator ) , for example , @xmath5    it is well known that there is a function in mathematica named which rewrites a rational expression of a univariate polynomial as a sum of terms with minimal denominators and gives the partial fraction decomposition of the rational expression , for example ,    @xmath6    @xmath7    there is no such similar function for bivariate polynomials yet ; for example , does not change the following form at all : @xmath8 we want to generalize this function to some specific rational expressions of n - variate polynomials ; for example , we expect @xmath9    first we introduce the notation .",
    "we consider the n - variate polynomial @xmath1 with degree less than or equal to 1 .",
    "the n variables are denoted as @xmath10 , and the linear space which is spanned by @xmath11 independent vectors @xmath12 over the coefficient field @xmath13 is denoted as @xmath14 .",
    "it is clear that @xmath15    we call the @xmath16 elements @xmath17 are linear independent if and only if their projective parts in @xmath14 , i.e. @xmath18 , are linear independent .",
    "now we consider the following special terms generated from the rational operations on the polynomial @xmath1 : @xmath19 where @xmath20 is the integer set , and @xmath21 are generally not linear independent , i.e. reducible .",
    "we want to decompose them into a summation of linear independent , i.e. irreducible , ones : @xmath22 where @xmath23 , @xmath24 and for any fixed @xmath25 , the @xmath26 elements @xmath27 are linear independent , i.e.  some elements in @xmath21 have been eliminated such that the remaining elements become linear independent .    to give a proof of the decomposition in eq .",
    "( [ decompostion ] ) , let us consider a special case : @xmath28 where any @xmath29 elements from @xmath30 are linear independent , but the @xmath0 elements @xmath30 are not , so there exists @xmath31 with all @xmath32 , such that @xmath33 note that the linear independency in @xmath1 is up to some constant @xmath34 in the field @xmath13 .",
    "we first look at eq .",
    "( [ special ] ) with all @xmath35 , i.e. , @xmath36    * if @xmath37 , we can write eq .",
    "( [ simple ] ) as @xmath38 since any @xmath29 elements from @xmath30 are linear independent , the final expression is irreducible , and the desired decomposition . *",
    "if @xmath39 , since all @xmath32 , without loss of generality , we take @xmath40 as an example : @xmath41 we know any @xmath42 elements from @xmath43 combined with @xmath44 are linear independent , so the final expression is also irreducible .",
    "so we get the decomposition for eq .",
    "( [ simple ] ) . now considering the expression of eq .",
    "( [ special ] ) with all exponents of @xmath45 negative , @xmath46 we can factorize out a term @xmath47 and perform the decomposition on it as follows :    * for the case when @xmath37 , we have @xmath48 where it is clear that we have decomposed the original term into @xmath0 terms , and furthermore that these terms have the same form as the original one except that one of the exponents @xmath49 decreases by @xmath50 in each term , i.e. , we get the following recursive relation : @xmath51 and we can repeat the decomposition until one of @xmath49 decreases to @xmath52 . *",
    "when @xmath39 , @xmath53 and this is similar as the case @xmath54 , the terms after decomposition have the same form as the original one , and one of the exponents @xmath49 decreases by @xmath50 in each term except @xmath44 whose exponent will increase by 1 ; the recursive relation is @xmath55 and we can repeat the decomposition until one of the @xmath49(@xmath56 ) decreases to @xmath52 .    so in each one of the two cases above , @xmath57 can be reduced to the summation of @xmath58 which can not be decomposed any more , i.e. it is irreducible and the desired result .    if at least one exponent @xmath59 in eq .",
    "( [ special ] ) , without loss of generality , taking @xmath60 and @xmath61 , then the element @xmath44 can be written as @xmath62 we can substitute eq .",
    "( [ subeq ] ) into eq .",
    "( [ special ] ) to eliminate @xmath44 :",
    "@xmath63 and now the final expression only involves @xmath64 which are linear independent , and it is irreducible .    to complete the proof , we will make the induction on @xmath0 , i.e.  the number of elements in @xmath45 .",
    "it is trivial that this is valid for @xmath65 , and now , assuming that it is also valid for @xmath66 , we want to prove that it is also valid for @xmath67 .",
    "if @xmath68 are linear independent , i.e.  irreducible , then there is no need for the decomposition ; otherwise , there will be @xmath69(@xmath70 ) elements from @xmath45 which are not linear independent , but any @xmath71 elements are linear independent . without loss of generality ,",
    "we take these elements as @xmath72 : @xmath73 then according to the special case we have considered in eq .",
    "( [ special ] ) , we have @xmath74 where all @xmath75 , so @xmath76 since @xmath77 , i.e. the number of elements in @xmath78 in the right hand side(rhs ) is less than @xmath79 , according to the assumptions , we have the following decomposition : @xmath80 with each term in the rhs irreducible , so we get the decomposition for @xmath79 : @xmath81 since each term in r.h.s .",
    "is irreducible , the proof is done .",
    "the procedure also gives us a method to perform the decomposition .",
    "we will give an implementation in mathematica , i.e. the generalized function : .",
    "the basic functions in the package are :    * ` $ apart[expr,{x , y , z , ... } ] ` + ` expr ` can be any form in eq .",
    "( [ general ] ) , ` { x , y , z , ... } ` are the corresponding n - variate polynomial variables , and ` $ apart[expr,{x , y , z , ... } ] ` will perform the decomposition on ` expr ` to give the irreducible forms , which are expressed with the function ` $ apartir `",
    ". + # 1#2@xmath82 * ` $ apartir[expr,{x , y , z , ... } , { , , ... , } , { , , ... , } ] ` + where ` expr ` is actually the product of @xmath83 , i.e. @xmath84 we preserve the \\ { , , ... , } and \\ { , , ... , } for later use , because they will be used as the input parameters for fire@xcite .",
    "the irreducible form will be displayed as @xmath85 , and ` $ removeapart ` can be used to remove @xmath86 in @xmath85 . * ` $ removeapart[expr ] ` + ` $ removeapart ` is used to remove the head in ` $ apart ` or ` $ apartir ` , and is defined as + ` $ removeapart[expr_]:=expr/.{$apart[x_,_]:>x,$apartir[x_,___]:>x } ` .",
    "we can take eq .",
    "( [ expect ] ) as the first concrete example : @xmath87    as another relatively complicated case , we take @xmath88 if we only take @xmath89 and @xmath90 as the only polynomial variables , there are only two elements which can appear in the same irreducible expression , and we get the output as @xmath91 } & \\rightarrow & -\\frac{(2 c -",
    "d ) \\left\\|\\frac{1}{(3 a+b+c ) ( a+2 b+d)^3}\\right\\|}{2 c-11 d+45 e } + \\frac{5 ( 4 c-9 e ) \\left\\|\\frac{1}{(3 a+b+c ) ( a+2 b+d)^2}\\right\\|}{(2 c-11 d+45 e)^2 } \\nn\\\\ & & -\\frac{55 ( 4 c-9 e ) \\left\\|\\frac{1}{(3 a+b+c ) ( a+2 b+d)}\\right\\|}{(2 c-11 d+45 e)^3 } + \\frac{121 ( 4 c-9 e ) \\left\\|\\frac{1}{(3 a+b+c ) ( a+4 b+9 e)}\\right\\|}{(2 c-11 d+45 e)^3 } \\nn\\\\ & & + \\frac{2 ( 2 d-9 e ) \\left\\|\\frac{1}{(a+2 b+d)^3 ( a+4 b+9 e)}\\right\\|}{-2 c+11 d-45 e } + \\frac{2 ( 4 c-9 e ) \\left\\|\\frac{1}{(a+2 b+d)^2 ( a+4 b+9 e)}\\right\\|}{(2 c-11 d+45 e)^2 } \\nn\\\\ & & -\\frac{22 ( 4 c-9 e ) \\left\\|\\frac{1}{(a+2 b+d ) ( a+4 b+9 e)}\\right\\|}{(2 c-11 d+45 e)^3 } \\;.\\end{aligned}\\ ] ] we can check the output with the original eq .",
    "( [ orginal ] ) using the code @xmath92 } \\nn\\\\ \\texttt{comp } & = & \\texttt{expr - ( dexpr//\\$removeapart)//simplify}\\end{aligned}\\ ] ] the fact that ` comp ` gives zero indicates that the output ` dexpr ` is indeed identical with the original ` expr ` .    if take @xmath93 as a variable as well , we have @xmath94 } & \\rightarrow & -\\left\\|\\frac{1}{(3",
    "a+b+c ) ( a+2 b+d)^3}\\right\\| \\nn\\\\ & & + ( 9 e-2 d ) \\left\\|\\frac{1}{(3 a+b+c ) ( a+2 b+d)^3 ( a+4 b+9 e)}\\right\\| \\nn\\\\ & & + 2 \\left\\|\\frac{1}{(3 a+b+c ) ( a+2 b+d)^2 ( a+4 b+9 e)}\\right\\|\\end{aligned}\\ ] ]    more complicated examples can be found in ` example / examples.nb ` in the source code .    [ fig1],scaledwidth=50.0% ]",
    "now , let us look at how to apply to a specific feynman diagram from the process : @xmath95 which is shown in the fig .",
    "[ fig1 ] . after projecting the spin singlet and triplet for the charmonium @xmath96 and @xmath97 respectively with the spin projectors@xcite and performing the diractrace on the fermion chains",
    ", we get the amplitude for this diagram as @xmath98 where @xmath99 and @xmath100 are the momenta of @xmath97 and @xmath96 respectively , @xmath101 and @xmath102 represent the polarizations of @xmath103 and @xmath97 respectively , @xmath16 is the loop momentum , @xmath104 is the mass of the charm quark , and @xmath105 is defined by @xmath106    if we take @xmath107 , @xmath108 and @xmath109 as the 3-variate polynomial variables , then the amplitude @xmath110 has the same form as eq .",
    "( [ general ] ) after expanding the numerator , so we can perform the operation on it : @xmath111}\\ ] ]    the output looks like :    @xmath112\\end{aligned}\\ ] ]    we can see that the 5-point integrals have been reduced to the 3-point or 2-point integrals , so the scalar integrals have been greatly simplified .",
    "details of this example can be found in ` process / fc-43.nb ` in the source code , where ` 43 ` is the sequence number of the corresponding diagram which has been generated by feynarts@xcite .",
    "the traditional method to compute cross sections for a physical process in perturbative quantum field theory involves generating the amplitudes via feynman diagrams and performing the dimensionally regularized loop integrals  @xcite .",
    "simplifications of the expressions are performed at the analytical level ; there , an essential part is the reduction of these loop integrals to a small number of standard integrals .",
    "this step can be performed at the amplitude level for tensor integrals or , after contraction of lorentz indices , at the level of interferences for scalar integrals .",
    "considering the case of scalar integrals , integration by parts ( ibp ) identities  @xcite and lorentz invariance ( li ) identities  @xcite may be used for a systematic reduction to a set of independent integrals , called master integrals ( mi ) .",
    "the standard reduction algorithm by laporta  @xcite defines an ordering for feynman integrals , generates identities and solves the resulting system of linear equations .",
    "alternative methods to exploit ibp and li identities for reductions have been proposed  @xcite ; see also @xcite and references therein .",
    "public implementations of different reduction algorithms are available with the computer programs air  @xcite , fire  @xcite and reduze  @xcite .",
    "as for the one - loop calculations , there are many automatic tools available to achieve the general one - loop amplitude , such as feyncalc@xcite and formcalc@xcite , which are based on the traditional passarino - veltman@xcite reduction of feynman graphs , which can be generated automatically(feynarts@xcite or qgraf@xcite ) . in order to produce numerical results ,",
    "tensor coefficient functions are calculated using looptools@xcite .",
    "see also refs .",
    "@xcite and the references therein .    in the last few years",
    ", several groups have been working on the problem of constructing efficient and automatized methods for the computation of one - loop corrections for multi - particle processes .",
    "many different interesting techniques have been proposed : these contain numerical and semi - numerical methods@xcite , as well as analytic approaches@xcite that make use of unitarity cuts to build next - to - leading order amplitudes by gluing on - shell tree amplitudes@xcite .",
    "for a recent review of existing methods , see refs .",
    "@xcite .    in this section ,",
    "we want to use the and the fire@xcite package combined with feynarts@xcite and feyncalc@xcite to perform the one - loop calculations ; here , feynarts@xcite and feyncalc@xcite are used to generate the feynman diagrams , and to perform the diractrace respectively , the rest , such as tensor or scalar integral reductions , etc",
    ".  will be handled by the and fire@xcite packages .",
    "we will concentrate on the next - to - leading - order corrections in @xmath113 to double quarkonium production in @xmath2 colliders , the basic procedure can be summarized as follows .    1 .   use the feynarts@xcite package to generate all feynman diagrams for the partonic process : @xmath114 .",
    "use feyncalc@xcite to perform the ` diractrace ` and ` su(n ) ` color matrix trace .",
    "3 .   make an expansion in the relative momentum of the quark and the anti - quark in corresponding quarkonium and project out ` s- ` , ` p- ` , ` d-`,@xmath115waves .",
    "4 .   use the ` $ apart ` to decompose the linear dependent propagators to independent ones .",
    "5 .   use the fire@xcite package to reduce the general loop integrals to master integrals ( mi ) .",
    "process the final results , e.g.  to asymptotically expand the amplitudes or calculate the cross section .    taking the process @xmath116 as an example , for which there are large discrepancy between the nrqcd leading - order predictions and experimental data , and the important key step to resolve the discrepancies is that a large k factor of about @xmath117 has been found in the next - to - leading - order corrections in @xmath113  @xcite",
    ".    the calculations at leading order can be found in the directory ` process / tree ` , and the next - to - leading - order calculations can be separated into several parts :    * ` process / tree / fc - rn.nb ` is used to calculate corrections from the counter - terms where the multiple renormalization is used .",
    "* ` process / fc.nb ` is used to calculate the general loop corrections . * `",
    "process / fc - nf.nb ` is used to calculate the corrections from the light quarks which are proportional to @xmath118 . * ` process / total.nb ` will process the results generated from the above to give the numerical predictions or plots .    to compare with the results which are already present in other references , let us list some results which can be found in ` process / total.nb ` .",
    "the asymptotically expanded amplitude at @xmath119 , with @xmath105 defined at eq .",
    "( [ sdef ] ) , is @xmath120 \\nn\\\\ & & + \\frac{i \\pi}{24 } ( -26 \\ln s+30 \\ln2 + 9 ) + \\mathcal{o}\\pa{\\frac{1}{s } } \\;.\\end{aligned}\\ ] ] this result agrees with eq .  ( 6.4 ) of ref .",
    "@xcite in which only the real part of asymptotic expansion is given , while our result also includes the imaginary part .",
    "we use the same input parameters as ref .",
    "@xcite to give the numerical results which are shown in fig .",
    "[ fig2 ] and table  [ table ] , these are consistent with refs .",
    "@xcite .     as function of the center - of - mass energy .",
    "the renormalization scale @xmath121 is set at half of the center - of - mass energy and @xmath122 gev , the vertical line corresponds to @xmath123 , solid line to @xmath124 and dashed to @xmath125.[fig2],scaledwidth=45.0% ]    .cross sections with different charm quark mass @xmath104 and renormalization scale @xmath121 , the input parameters are the same as ref .",
    "@xcite and @xmath126gev.[table ] [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the method can be also used for calculations involving p - waves  @xcite .",
    "we have introduced a generalized mathematica function , which will perform the decomposition on any linear dependent elements in @xmath1 to reduce them to the irreducible form .",
    "the elements in @xmath1 can be viewed as the corresponding propagators which involve loop momenta , and the decomposition will be useful when one tries to perform the loop calculations using the packages such as the fire and the reduze , which have implemented the integration by parts ( ibp ) identities and lorentz invariance ( li ) identities .",
    "a description of how to use this package , combined with fire , feynarts and feyncalc packages , to do the one - loop calculations in double quarkonium production in @xmath2 colliders is given , and the full source code for a specific process : @xmath127 , from generating feynman diagrams to the asymptotic expansion of amplitudes and numerical results , is also available .",
    "the author wants to thanks hai - rong dong , wen - long sang and prof .",
    "yu jia for many useful discussions .",
    "the research was partially supported by china postdoctoral science foundation .",
    "finally , the author would like to commemorate his beloved mother .",
    "g.  t hooft and m.  j.  g.  veltman , regularization and renormalization of gauge fields , nucl .",
    "b * 44 * ( 1972 ) 189 .",
    "f.  v.  tkachov , a theorem on analytical calculability of four loop renormalization group functions , phys .",
    "b * 100 * ( 1981 ) 65 .",
    "k.  g.  chetyrkin and f.  v.  tkachov , integration by parts : the algorithm to calculate beta functions in 4 loops , nucl .",
    "b * 192 * ( 1981 ) 159 .",
    "t.  gehrmann and e.  remiddi , differential equations for two - loop four - point functions , nucl .",
    "b * 580 * ( 2000 ) 485 [ arxiv : hep - ph/9912329 ] .",
    "s.  laporta , high - precision calculation of multi - loop feynman integrals by difference equations , int .",
    "j.  mod .",
    "a * 15 * ( 2000 ) 5087 [ arxiv : hep - ph/0102033 ] .",
    "a.  v.  smirnov and v.  a.  smirnov , applying grbner bases to solve reduction problems for feynman integrals , jhep * 0601 * ( 2006 ) 001 [ arxiv : hep - lat/0509187 ] .",
    "a.  v.  smirnov , an algorithm to construct grbner bases for solving integration by parts relations , jhep * 0604 * ( 2006 ) 026 [ arxiv : hep - ph/0602078 ] .",
    "j.  gluza , k.  kajda and d.  a.  kosower , towards a basis for planar two - loop integrals , phys .",
    "d * 83 * ( 2011 ) 045012 [ arxiv:1009.0472 [ hep - th ] ] .",
    "r.  m.  schabinger , a new algorithm for the generation of unitarity - compatible integration by parts relations , arxiv:1111.4220 [ hep - ph ] .",
    "r.  n.  lee , group structure of the integration - by - part identities and its application to the reduction of multiloop integrals , jhep * 0807 * ( 2008 ) 031 [ arxiv:0804.3008 [ hep - ph ] ] .",
    "a.  g.  grozin , integration by parts : an introduction , int .",
    "j.  mod .",
    "a * 26 * ( 2011 ) 2807 [ arxiv:1104.3993 [ hep - ph ] ] . c.  anastasiou and a.  lazopoulos , automatic integral reduction for higher order perturbative calculations , jhep * 0407 * ( 2004 ) 046 [ arxiv : hep - ph/0404258 ] .      c.  studerus , reduze - feynman integral reduction in c++ , comput .",
    "commun .",
    "* 181 * , 1293 ( 2010 ) [ arxiv:0912.2546 [ physics.comp-ph ] ] .",
    "e.  braaten and j.  lee , exclusive double charmonium production from @xmath128 annihilation into a virtual photon , phys .",
    "d  * 67 * , 054007 ( 2003 ) [ erratum - ibid .",
    "d  * 72 * , 099901 ( 2005 ) ] [ hep - ph/0211085 ] .",
    "j.  kublbeck , m.  bohm and a.  denner , feynarts : computer algebraic generation of feynman graphs and amplitudes , comput .  phys .",
    "commun .  * 60 * , 165 ( 1990 ) .",
    "t.  hahn , generating feynman diagrams and amplitudes with feynarts 3 , comput .",
    "commun .  * 140 * , 418 ( 2001 ) [ hep - ph/0012260 ] .",
    "r.  mertig , m.  bohm and a.  denner , feyncalc : computer algebraic calculation of feynman amplitudes , comput .",
    "commun .",
    "* 64 * ( 1991 ) 345 .",
    "t.  hahn and m.  perez - victoria , automatized one loop calculations in four - dimensions and d - dimensions , comput .",
    "commun .  * 118 * , 153 ( 1999 ) [ hep - ph/9807565 ] .",
    "g.  passarino and m.  j.  g.  veltman , one loop corrections for @xmath128 annihilation into @xmath129 in the weinberg model , nucl .",
    "b * 160 * ( 1979 ) 151 .",
    "a.  denner , techniques for calculation of electroweak radiative corrections at the one loop level and results for w physics at lep-200 , fortsch .",
    "* 41 * ( 1993 ) 307 [ arxiv:0709.1075 [ hep - ph ] ] .",
    "a.  denner and s.  dittmaier , reduction of one - loop tensor 5-point integrals , nucl .",
    "b * 658 * ( 2003 ) 175 [ arxiv : hep - ph/0212259 ] .",
    "a.  denner and s.  dittmaier , reduction schemes for one - loop tensor integrals , nucl .",
    "b * 734 * ( 2006 ) 62 [ arxiv : hep - ph/0509141 ] .",
    "p.  nogueira , automatic feynman graph generation , j.  comput .",
    "* 105 * ( 1993 ) 279 .",
    "z.  bern , l.  j.  dixon and d.  a.  kosower , progress in one loop qcd computations , ann .",
    "nucl .  part .",
    "sci .  * 46 * , 109 ( 1996 ) [ hep - ph/9602280 ] .",
    "a.  van hameren , c.  g.  papadopoulos and r.  pittau , automated one - loop calculations : a proof of concept , jhep  * 0909 * , 106 ( 2009 ) [ arxiv:0903.4665 [ hep - ph ] ] .",
    "w.  t.  giele and e.  w.  n.  glover , a calculational formalism for one loop integrals , jhep  * 0404 * , 029 ( 2004 ) [ hep - ph/0402152 ] .",
    "r.  k.  ellis , w.  t.  giele and g.  zanderighi , semi - numerical evaluation of one - loop corrections , phys .",
    "d  * 73 * , 014027 ( 2006 ) [ hep - ph/0508308 ] .",
    "d.  forde , direct extraction of one - loop integral coefficients , phys .  rev .",
    "d  * 75 * , 125019 ( 2007 ) [ arxiv:0704.1835 [ hep - ph ] ] .",
    "r.  k.  ellis , w.  t.  giele and z.  kunszt , a numerical unitarity formalism for evaluating one - loop amplitudes , jhep  * 0803 * , 003 ( 2008 ) [ arxiv:0708.2398 [ hep - ph ] ] .",
    "z.  bern , l.  j.  dixon , d.  c.  dunbar and d.  a.  kosower , fusing gauge theory tree amplitudes into loop amplitudes , nucl .",
    "b  * 435 * , 59 ( 1995 ) [ hep - ph/9409265 ] .",
    "z.  bern , l.  j.  dixon , d.  c.  dunbar and d.  a.  kosower , one loop n - point gauge theory amplitudes , unitarity and collinear limits , nucl .",
    "b  * 425 * , 217 ( 1994 ) [ hep - ph/9403226 ] .",
    "f.  cachazo , p.  svrcek and e.  witten , mhv vertices and tree amplitudes in gauge theory , jhep  * 0409 * , 006 ( 2004 ) [ hep - th/0403047 ] .",
    "f.  cachazo , p.  svrcek and e.  witten , twistor space structure of one - loop amplitudes in gauge theory , jhep  * 0410 * , 074 ( 2004 ) [ hep - th/0406177 ] .",
    "r.  britto , b.  feng and p.  mastrolia , the cut - constructible part of qcd amplitudes , phys .",
    "d  * 73 * , 105004 ( 2006 ) [ hep - ph/0602178 ] .",
    "p.  mastrolia , on triple - cut of scattering amplitudes , phys .",
    "lett .  b  * 644 * , 272 ( 2007 ) [ hep - th/0611091 ] .",
    "s.  weinzierl , automated calculations for multi - leg processes , posacat  * * , 005 ( 2007 ) [ arxiv:0707.3342 [ hep - ph ] ] .",
    "z.  bern , l.  j.  dixon and d.  a.  kosower , on - shell methods in perturbative qcd , annals phys .",
    "* 322 * , 1587 ( 2007 ) [ arxiv:0704.2798 [ hep - ph ] ] .",
    "y.  -j .",
    "zhang , y.  -j .",
    "gao and k.  -t .",
    "chao , next - to - leading order qcd correction to @xmath130 at @xmath131gev , phys .",
    "* 96 * , 092001 ( 2006 ) [ hep - ph/0506076 ] .",
    "b.  gong and j.  x.  wang , qcd corrections to @xmath132 production in @xmath133 annihilation at @xmath134 = 10.6  gev , phys .",
    "d * 77 * , 054028 ( 2008 ) [ arxiv:0712.4220 [ hep - ph ] ] .",
    "y.  jia , j.  -x .",
    "wang and d.  yang , bridging light - cone and nrqcd approaches : asymptotic behavior of @xmath135 electromagnetic form factor , jhep * 1110 * , 105 ( 2011 ) [ arxiv:1012.6007 [ hep - ph ] ] .",
    "h.  -r .",
    "dong , f.  feng and y.  jia , @xmath136 corrections to @xmath137 production at @xmath138 factories , jhep * 1110 * , 141 ( 2011 ) [ arxiv:1107.4351 [ hep - ph ] ] ."
  ],
  "abstract_text": [
    "<S> we have generalized the mathematica function from 1 to @xmath0 dimension , the generalized function can decompose any linear dependent elements in @xmath1 to irreducible ones . </S>",
    "<S> the elements in @xmath1 can be viewed as the corresponding propagators which involve loop momenta , and the decomposition will be useful when one tries to perform the loop calculations using the packages such as fire and reduze , which have implemented the integration by parts ( ibp ) identities and lorentz invariance ( li ) identities . </S>",
    "<S> a description on how to use this package , combined with fire , feynarts and feyncalc packages , to do the one - loop calculations in double quarkonium production in @xmath2 colliders is given , and the full source code for a specific process @xmath3 is also available .    * </S>",
    "<S> program summary *    * _ title of program : _ $ apart * _ programming language : _ mathematica * _ available from : _ ` http://power.itp.ac.cn/~fengfeng/apart/ ` * _ computer : _ any computer where the mathematica is running . * _ operating system : _ any capable of running mathematica . * </S>",
    "<S> _ external routines : _ feyncalc , feynarts , fire * _ keywords : _ next - to - leading order ( nlo ) , integrate by parts ( ibp ) , apart * _ classification : _ 11.1 * _ nature of physical problem : _ the traditional method to compute cross sections for a physical process in perturbative quantum field theory involves generating the amplitudes via feynman diagrams and performing the dimensionally regularized loop integrals  @xcite . simplifications of the expressions are performed at the analytical level ; there , an essential part is the reduction of these loop integrals to a small number of standard integrals . </S>",
    "<S> this step can be performed at the amplitude level for tensor integrals or , after contraction of lorentz indices , at the level of interferences for scalar integrals . </S>",
    "<S> considering the case of scalar integrals , integration by parts ( ibp ) identities  @xcite and lorentz invariance ( li ) identities  @xcite may be used for a systematic reduction to a set of independent integrals , called master integrals ( mi ) . </S>",
    "<S> the standard reduction algorithm by laporta  @xcite defines an ordering for feynman integrals , generates identities and solves the resulting system of linear equations . </S>",
    "<S> alternative methods to exploit ibp and li identities for reductions have been proposed  @xcite ; see also @xcite and references therein . </S>",
    "<S> public implementations of different reduction algorithms are available with the computer programs air  @xcite , fire  @xcite and reduze  @xcite . the usage of fire@xcite , reduze@xcite , etc .  </S>",
    "<S> requires that the propagators must be decomposed to independent ones , for 1 dimension , there is a mathematica function to do this , while for @xmath0 dimension there is no such package yet , so we want to generalize the mathematica function to in @xmath0 dimension . </S>",
    "<S> * _ method of solution : _ we first prove that any linear dependent elements in @xmath1 can be decomposed into the summation of linear independent ones , the procedure of the proof gives us a method to perform the decomposition , $ apart is such an mathematica package that implements this method and generalizes the mathematica ` apart ` function from 1 to @xmath0 dimension . * _ running time : _ depends on the complexity of the system . </S>"
  ]
}
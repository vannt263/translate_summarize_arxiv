{
  "article_text": [
    "[ [ games - over - hybrid - systems . ] ] games over hybrid systems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    hybrid systems are finite - state machines equipped with a continuous dynamics . in the last thirty years",
    ", formal verification of such systems has become a very active field of research in computer science , with numerous success stories . in this context , hybrid automata , an extension of timed automata  @xcite ,",
    "have been intensively studied  @xcite , and decidable subclasses of hybrid systems have been drawn like initialized rectangular hybrid automata  @xcite .",
    "more recently , games over hybrid systems have appeared as a new interesting and active field of research since , among others , they correspond to a formulation of control problems , the counterpart of model checking for open systems , _",
    "i.e. _ , systems embedded in a possibly reactive environment . in this context , many results have already been obtained , like the ( un)decidability of control problems for hybrid automata  @xcite , or ( semi-)algorithms for solving such problems  @xcite . given a system @xmath0 ( with controllable and uncontrollable actions ) and a property @xmath1 , controlling the system means building another system @xmath2 ( which can only enforce controllable actions ) , called the controller , such that @xmath3 ( the system @xmath0 guided by the controller @xmath2 ) satisfies the property @xmath1 . in our context , the property is a reachability property and our aim is to build a controller enforcing a given location of the system , whatever the environment does ( which plays with the uncontrollable actions ) .    [ [ o - minimal - hybrid - systems . ] ] o - minimal hybrid systems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    o - minimal hybrid systems have been first proposed in  @xcite as an interesting class of systems ( see  @xcite for an overview of properties of o - minimal structures ) .",
    "they have very rich continuous dynamics , but limited discrete steps ( at each discrete step , all variables have to be reset , independently from their initial values ) .",
    "this allows to decouple the continuous and discrete components of the hybrid system ( see @xcite ) .",
    "thus , properties of a global o - minimal system can be deduced directly from properties of the continuous parts of the system . since the introductory paper  @xcite ,",
    "several works have considered o - minimal hybrid systems  @xcite , mostly focusing on abstractions of such systems , on reachability properties , and on bisimulation properties .",
    "[ [ word - encoding . ] ] word encoding .",
    "+ + + + + + + + + + + + + +    in  @xcite , an encoding of trajectories with words has been proposed in order to prove the existence of finite bisimulations for o - minimal hybrid systems ( see also  @xcite ) .",
    "let us mention that this technique has been used in @xcite in order to provide an exponential bound on the size of the finite bisimulation in the case of pfaffian hybrid systems .",
    "let us also notice that similar techniques already appeared in the literature , see for instance the notion of signature in  @xcite .",
    "different word encoding techniques have been studied in a wider context in  @xcite . recently in  @xcite , the authors propose a new algorithm for counter - example guided abstraction and refinement on hybrid systems , based on use a word encoding approach . in this paper",
    "we use the so - called _ suffix encoding _ , which was shown to be in general too fine to provide the coarsest time - abstract bisimulation .",
    "however , based on this encoding , a semi - algorithm has been proposed in  @xcite for computing a time - abstract bisimulation , and it terminates in the case of o - minimal hybrid systems .",
    "[ [ contributions - of - this - paper . ] ] contributions of this paper . + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this paper , we focus on games over hybrid systems .",
    "we describe two rather natural frameworks for such games , one assuming a perfect observation of the dynamics of the system , and another one assuming a partial observation of the dynamics . for the first framework",
    ", we use the above - mentioned suffix word encoding of trajectories for giving sufficient computability conditions for the winning states of a game .",
    "time - abstract bisimulation is an equivalence relation which is correct with respect to reachability properties on hybrid systems  @xcite and with respect to control reachability properties on timed automata  @xcite . here",
    ", we show that the time - abstract bisimulation is not correct anymore for solving control problems on a general class of hybrid systems : we exhibit a system in which two states are time - abstract bisimilar , but one of the states is winning and the other is not . using the suffix encoding of trajectories of  @xcite , we prove that , in the perfect observation framework , two states having the same suffixes are equivalently winning or losing ( this is a stronger condition than the one for the time - abstract bisimulation ) .",
    "we then focus on o - minimal hybrid games and prove that , under the assumption that the theory of the underlying o - minimal structure is decidable , the control problem can be solved and that winning states and winning strategies can be computed . regarding the partial observation framework , we provide a new encoding technique , the so - called superword encoding , which turns out to be sound for the control under partial observation of the dynamics , and which allows to prove decidability and computability results similar to those in the perfect observation framework .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    the most relevant related works are those dealing with hybrid games  @xcite .",
    "however , the framework of these papers is pretty different from ours :    1 .   in their framework ,",
    "time is considered as a discrete action , and once action `` let time elapse '' has been chosen , it is not possible to bound the time elapsing , which is quite restrictive .",
    "for instance , the timed game of figure  [ fig : bete ] is winning from @xmath4 in our framework ( the strategy is to wait some amount of time @xmath5 $ ] and to take the controllable action @xmath6 ) , whereas it is not winning in their framework ( once @xmath7 is above @xmath8 , it is no more possible to take the transition and reach the winning location @xmath9 , and there is no way to impose a delay within @xmath10 $ ] ) .",
    "this yields significant differences in the properties : in their framework , game bisimulation is one of the tools for solving the games , and as stated by  ( * ? ? ?",
    "* prop .  1 ) , the classical bisimulation tool is then sufficient to solve games . on the contrary , in our framework ,",
    "the notion of bisimulation relevant to our model ( time - abstract bisimulation ) is not correct for solving games , as will be explored in this paper .",
    "+ ( 0,0 ) node [ draw , circle , inner sep=1.5pt ] ( a ) @xmath11 ; ( 3,0 ) node [ draw , circle , inner sep=1.5pt , fill = black!40!white ] ( b ) @xmath9 ; ( a )  + ( -.8,0 ) ; ( a )  ( b ) node [ midway , above ] @xmath12 ; 2 .",
    "our games are control games , they are thus asymmetric , which is not the case of the games in the above - mentioned works ; in our framework , the environment is more powerful than the controller in that it can outstrip the controller and do an action right before the controller decides to do a controllable action .",
    "let us also mention the paper  @xcite on control of linear hybrid automata . in  @xcite",
    "the author proposes a semidecision procedure for synthesizing controllers for such automata .",
    "no general decidability result is given in this paper .",
    "[ [ plan - of - the - paper . ] ] plan of the paper .",
    "+ + + + + + + + + + + + + + + + + +    in section  [ untimed ] , we recall results about finite games and bisimulation . in section  [ timed ] , we define the games over dynamical systems ( for both perfect information and partial observation ) , and we show that time - abstract bisimulation is not correct for solving them . the word encoding techniques are presented in section  [ section2 ] and used in section  [ mgame ] to present a general framework for solving games over dynamical systems .",
    "we apply and extend these results in section  [ omingames ] for computing winning states and winning strategies in o - minimal games . in the paper ,",
    "we often only develop technical details of the partial observation framework , which actually extends the perfect observation framework .",
    "part of the results presented in this paper have been published in  @xcite ( the decidability of the control reachability problem and the synthesis of strategies for o - minimal hybrid systems ) . in this paper , we give full proofs of those results , and extend them to a natural partial observation framework .",
    "in this section , we recall some basic definitions and results concerning bisimulations on a transition system ( see @xcite for general references ) and classical ( untimed ) games",
    ".      we present here the definitions of the problem of control on a finite graph ( also called finite game ) and the notion of strategy ( see  @xcite for an overview on games ) .",
    "these definitions are classical and will be extended to real - time systems in the next section .    a _",
    "finite automaton _ is a tuple @xmath13 where @xmath14 is a finite set of locations , @xmath15 is a subset of winning locations , @xmath16 is a finite set of actions , and @xmath17 consists of a finite number of transitions @xmath18 .",
    "[ trans syst def ] a _ transition system _ @xmath19 consists of a set of states @xmath14 ( which may be uncountable ) , @xmath16 an alphabet of events , and @xmath20 a transition relation .    a transition @xmath21 is also denoted by @xmath22 .",
    "a transition system is said finite if @xmath14 is finite .",
    "note that a finite automaton canonically defines a transition system @xmath23 .",
    "a _ run _ of @xmath24 is a finite or infinite sequence @xmath25 of the transition system @xmath23 .",
    "such a run is said _ winning _ if @xmath26 for some @xmath27 . if @xmath28 is a finite run @xmath29 we define @xmath30 .",
    "we note @xmath31 the set of finite runs in @xmath24 .",
    "a _ finite game _ is a finite automaton @xmath32 where @xmath16 is partitioned into two subsets @xmath33 and @xmath34 corresponding to controllable and uncontrollable actions .",
    "we will consider _ control games_. informally there are two players in such a game : the _ controller _ and the _ environment_. the actions of @xmath33 belong to the controller and the actions of @xmath34 belong to the environment .",
    "at each step , the controller proposes a controllable action which corresponds to the action he wants to perform ; then either this action or an uncontrollable action is done and the automaton goes into one of the next states . in the sequel , we will only consider reachability games : the controller wants to reach the @xmath35 states and the environment wants to prevent him from doing so .",
    "a _ strategy _ is a partial function @xmath36 from @xmath31 to @xmath33 such that for all runs @xmath37 , if @xmath38 is defined , then it is enabled in @xmath39 .",
    "let @xmath40 be a run , and set for every @xmath27 , @xmath41 the prefix of length @xmath27 of @xmath28 .",
    "the run @xmath28 is said _ compatible with a strategy @xmath36 _ when for all @xmath27 , @xmath42 or @xmath43 .",
    "a run @xmath28 is said _",
    "maximal w.r.t .",
    "a strategy @xmath36 _ if it is infinite or if @xmath38 is not defined .",
    "a strategy @xmath36 is _ winning from a state q",
    "_ if all maximal runs starting in @xmath44 compatible with @xmath36 are winning .",
    "we recall now the definition of bisimulation for transition systems :    given a transition system @xmath19 , a _",
    "bisimulation for @xmath45 _ is an equivalence relation @xmath46 such that @xmath47 , @xmath48 , @xmath49 moreover , if @xmath50 is a partition of @xmath14 and if @xmath51 respects @xmath50 ( _ i.e. _ , @xmath52 and @xmath53 with @xmath54 implies @xmath55 ) , we say that @xmath51 is _ compatible _ with @xmath50 .      in the untimed framework ,",
    "bisimulation is a commonly used technique to abstract games : bisimilar states can be identified in the control problem .",
    "this is stated in the next folklore theorem , for which we provide a proof .",
    "let @xmath13 be a finite game , @xmath56 and @xmath57 a bisimulation compatible with @xmath35 .",
    "then , there is a winning strategy from @xmath44 iff there is a winning strategy from @xmath58 .",
    "assume that @xmath51 is a bisimulation relation compatible with @xmath35 and such that @xmath59 .",
    "assume furthermore that @xmath36 is a winning strategy from @xmath44 .",
    "we will define a strategy @xmath60 that will be winning from @xmath58 . to do that we will map finite runs starting in @xmath58 to finite runs starting in @xmath44 , so that @xmath60 will mimick @xmath36 through this mapping .",
    "we note @xmath61 this mapping , and start by setting @xmath62 .",
    "we then proceed inductively as follows .",
    "if @xmath63 is defined , we set @xmath64 and for every run @xmath65 ( which is compatible with @xmath60 ) there is a run @xmath66 which is compatible with @xmath36 and such that @xmath67 .",
    "we then define @xmath68 .",
    "the strategy @xmath60 is winning from @xmath58 since @xmath57 is compatible with @xmath35 .",
    "this theorem remains true for infinite - state discrete games  @xcite and can be used to solve them : if an infinite - state game has a bisimulation of finite index , the control problem can be reduced to a control problem over a finite graph .",
    "real - time control problems can not be seen as classical infinite - state games because of the special nature of the time - elapsing action . which does not belong to one of the players .",
    "it seems nevertheless natural to try to adapt the bisimulation approach to solve real - time control problems .",
    "let @xmath69 be a structure .",
    "when we say that some relation , subset or function is _ definable _ , we mean it is first - order definable in the structure @xmath69 .",
    "a general reference for first - order logic is @xcite .",
    "we denote by @xmath70 the theory of @xmath69 . in this paper",
    "we only consider structures @xmath69 that are expansions of ordered groups , we also assume that the structure @xmath69 contains two symbols of constants , _",
    "i.e. _ , @xmath71 where @xmath72 is the group operation and w.l.o.g .",
    "we assume that @xmath73 .",
    "[ defi ds ] a _ dynamical system _ is a pair @xmath74 where :    * @xmath75 is an expansion of an ordered group , * @xmath76 is a function definable in @xmath69 ( where @xmath77 , @xmath78 and @xmath79 ) .",
    "the function @xmath80 is called the _ dynamics _ of the system .    classically , when @xmath81 is the field of the reals , we see @xmath82 as the time , @xmath83 as the input space , @xmath84 as the space - time and @xmath85 as the ( output ) space .",
    "we keep this terminology in the more general context of a structure @xmath69 .",
    "the definition of _ dynamical system _ encompasses a lot of different behaviors .",
    "let us first give a simple example , several others will be presented later .",
    "[ ex : at ] we can recover the continuous dynamics of _ timed automata _ ( see @xcite ) . in this case",
    ", we have that @xmath86 and the dynamics @xmath87 is defined by @xmath88 .",
    "[ trajectory ] if we fix a point @xmath89 , the set @xmath90 is called the _ trajectory _ determined by @xmath7 .",
    "we define a transition system associated with the dynamical system .",
    "this definition is an adaptation to our context of the classical _ continuous transition system _ in the case of hybrid systems ( see @xcite for example ) .",
    "[ tsds ] given @xmath91 a dynamical system , we define a _ transition system @xmath92 associated with the dynamical system _ by :    * the set @xmath14 of states is @xmath93 ; * the set @xmath16 of events is @xmath94 ; * the transition relation @xmath95 is defined by : @xmath96      in this subsection , we define @xmath69-automata , which are automata with guards , resets and continuous dynamics definable in the @xmath69-structure .",
    "we then introduce our model of dynamical game which is an @xmath69-automaton with two sets of actions , one for each player ; we finally express in terms of winning strategy the main problem we will be interested in , the control problem in a class @xmath97 of @xmath69-automata under perfect observation . the partial observation framework will be discussed in subsection  [ subsec - partial ] .",
    "an _ @xmath69-automaton _",
    "@xmath24 is a tuple @xmath98 where @xmath71 is an expansion of an ordered group , @xmath14 is a finite set of locations , @xmath15 is a subset of winning locations , @xmath16 is a finite set of actions , @xmath17 consists in a finite number of transitions @xmath99 where @xmath100 and @xmath101 are definable in @xmath69 , and @xmath80 maps every location @xmath102 to a dynamics @xmath103 .",
    "we use a general definition for resets : a reset @xmath101 is indeed a general function from @xmath93 to @xmath104 , which may correspond to a non - deterministic update .",
    "if the current state is @xmath105 the system will jump to some @xmath106 with @xmath107 .",
    "an @xmath69-automaton @xmath108 defines a",
    "_ mixed transition system _ @xmath109 where :    * the set @xmath0 of states is @xmath110 ; * the set @xmath111 of labels is @xmath112 , ( where @xmath113 ) ; * the transition relation @xmath114 is defined when : * * @xmath115 , and there exists @xmath116 with @xmath117 and @xmath107 , or * * @xmath118 , @xmath119 , and @xmath120 where @xmath121 is the dynamic in location @xmath44 .    in the sequel",
    ", we will focus on behaviors of @xmath69-automata which alternate between continuous transitions and discrete transitions .",
    "we will also need more precise notions of transitions .",
    "when @xmath122 with @xmath123 , this is due to some choice of @xmath124 such that @xmath125 .",
    "we say that @xmath126 if @xmath125 and @xmath127 . to ease the reading of the paper , we will sometimes write @xmath128 for @xmath126 .",
    "we say that an action @xmath129 is enabled in a state @xmath130 if there exists @xmath131 and @xmath132 such that @xmath133 .",
    "we then write @xmath134",
    ".    a _ run _ of @xmath24 is a finite or infinite sequence @xmath135 such a run is said _ winning _ if @xmath26 for some @xmath27 .",
    "we note @xmath31 the set of finite runs in @xmath24 . if @xmath28 is a finite run @xmath136 we define @xmath137 .",
    "an _ @xmath69-game _ is an @xmath69-automaton @xmath138 @xmath139 where @xmath16 is partitioned into two subsets @xmath33 and @xmath34 corresponding to controllable and uncontrollable actions .",
    "a _ strategy _ is a partial function @xmath36 from @xmath31 to @xmath140 such that for all runs @xmath28 in @xmath31 , if @xmath38 is defined , then it is enabled in @xmath39 .",
    "the strategy tells what is to be done at the current moment : at each instant it tells what delay we will wait and which controllable action will be taken after this delay .",
    "note that the environment may have to choose between several edges , each labeled by the action given by the strategy ( because the original game is not supposed to be deterministic ) .    a strategy @xmath36 is said _ memoryless _",
    "if for all finite runs @xmath28 and @xmath141 , @xmath142 implies @xmath143 .",
    "let @xmath144 be a run , and set for every @xmath27 , @xmath41 the prefix of length @xmath27 of @xmath28 .",
    "the run @xmath28 is said _ consistent with a strategy @xmath36 _ when for all @xmath27 , if @xmath145 then either @xmath146 and @xmath147 , or @xmath148 and @xmath149 .",
    "a run @xmath28 is said _",
    "maximal w.r.t .",
    "a strategy @xmath36 _ if it is infinite or if @xmath38 is not defined .",
    "a strategy @xmath36 is _ winning from a state ( q , y ) _",
    "if for all @xmath150",
    "such that @xmath151 , all maximal runs starting in @xmath130 compatible with @xmath36 are winning .",
    "the _ set of winning states _ is the set of states from which there is a winning strategy .",
    "we can now define the control problems we will study .    [ prob : controlperfect ] given an @xmath69-game @xmath152 , and a definable initial state @xmath105 , determine whether there exists a winning strategy in @xmath24 from @xmath105 .",
    "[ prob : synthperfect ] given an @xmath69-game @xmath152 , and a definable initial state @xmath105 , determine whether there exists a winning strategy , and compute such a strategy if possible .",
    "[ ex : spiraletot ] let us consider the @xmath69-game @xmath153 ( depicted in fig .",
    "[ fig : ex - spiraltot ] ) where @xmath154 , @xmath155 , @xmath156 , @xmath157 where @xmath158 ( resp .",
    "@xmath159 ) is the set of controllable ( resp .",
    "uncontrollable ) actions .",
    "the dynamics in @xmath160 , @xmath161 \\times    { { \\mathbb r}}\\to { { \\mathbb r}}^2 $ ] is defined as follows .",
    "+ @xmath162 we associate with this dynamical system the partition @xmath163 where @xmath164 , @xmath165 and @xmath166 .",
    "let us call piece @xmath167 _ the spiral _ ( see figure  [ fig : spirale ] ) .",
    "the guard @xmath168 corresponds to @xmath167-states ( _ i.e. _ , points on the spiral ) and the guard @xmath169 corresponds to @xmath2-states ( points not on the spiral and different from the origin ) .    in this example , the point @xmath170 is a winning state .",
    "indeed a winning strategy is given by @xmath171 where @xmath6 consists in taking the transition leading to state @xmath172 ( which is winning ) .",
    "subsection  [ subsec - perfect ] , we have assumed that from a given point , the environment chooses the continuous trajectory followed by the game , and the controller reacts accordingly . in this section ,",
    "we consider partial observation of the dynamics : the trajectory is not known by the controller , and its strategy may depend only on the current point . in particular , this framework naturally models drift of clocks where the slopes of the clocks lies within an interval  @xcite .",
    "note that our partial observation assumption concerns the dynamics of the system , not the actions which are performed .",
    "this has to be contrasted with the notion of partial observation studied in the framework of finite systems in  @xcite or in the context of timed systems in  @xcite where the partial observation assumption concerns actions which are done , and not the dynamics ( indeed , in these models , there is no real choice for the dynamics ; it is completely determined by the point in the state - space ) . in order to formalize our partial observation framework",
    ", we need to adapt notions such as strategy in this new setting .",
    "first , we define what we call _ observation _ of a given run .",
    "let @xmath173 be a finite run .",
    "the _ observation _ of @xmath28 , denoted @xmath174 is the sequence @xmath175 .",
    "a strategy @xmath36 is said _ under partial observation _ if for all finite runs @xmath176 , @xmath177 implies @xmath143 .",
    "all other notions , like memoryless strategies , consistency , winning strategies , winning states , _ etc ... _ naturally extend in this new context .",
    "in this setting , we will consider the two following problems .",
    "[ prob : contpartial ] given an @xmath69-game @xmath152 , and a definable initial state @xmath105 , determine whether there exists a winning strategy under partial observation in @xmath24 from @xmath105 .",
    "[ prob : synthpartial ] given an @xmath69-game @xmath152 , and a definable initial state @xmath105 , determine whether there exists a winning strategy under partial observation in @xmath24 from @xmath105 , and compute such a strategy if possible .",
    "we consider again the spiral example ( example  [ ex : spiraletot ] ) .",
    "we showed that under perfect observation this @xmath69-game has a winning strategy in @xmath170 given by @xmath178 .",
    "note that this strategy depends on the precise trajectory ( parameter @xmath179 ) .",
    "moreover , one can show that there is no winning strategy under partial observation for this game : such a strategy may only depend on the current point , and in this precise example , whatever action @xmath180 the controller proposes in @xmath170 , there is a trajectory which reaches a _ bad _ state ( _ i.e. _ , points on the spiral ) before @xmath181 .",
    "the previous example shows that some games can be winning under perfect observation whereas they are not winning under partial observation . nevertheless , considering a new dynamics which will roughly inform the controller of the current trajectory",
    ", we can see the perfect observation control problem as a special case of the partial observation framework .",
    "this is stated by the following proposition :    [ prop : casparticulier ] given an @xmath69-game @xmath182 and a state @xmath105 of @xmath182 , we can effectively construct an @xmath69-game @xmath183 and a state @xmath106 of @xmath183 such that there exists a winning strategy under perfect observation in @xmath182 from @xmath105 iff there exists a winning strategy under partial observation in @xmath183 from @xmath106 .",
    "let @xmath184 where @xmath185 .",
    "we define @xmath186 and for @xmath187 , @xmath188 such that @xmath189 .",
    "the dynamics @xmath190 behaves exactly like @xmath80 but `` gives '' to the controller the current trajectory as this information is stored in the state space @xmath191 .",
    "we then use @xmath192 , where @xmath193 is the transition relation @xmath17 adapted to the new states @xmath191 : if @xmath194 then @xmath195 where @xmath196 and for all @xmath124 , @xmath197 .",
    "we can suppose that there exists a unique @xmath198 such that @xmath199 ( if necessary , we add a location with constant continuous dynamics pointing to the actual location of @xmath200 ) .",
    "then there exists a winning strategy under perfect observation in @xmath182 from @xmath105 iff there exists a winning strategy under partial observation in @xmath183 from @xmath201 .    from the above proposition we get that any definability , decidability",
    ", _ etc _ result in the partial observation framework will hold in the perfect observation framework .",
    "time - abstract bisimulation @xcite is a sufficient behavioral relation to check reachability properties of hybrid systems , and in particular of @xmath69-automata  @xcite .",
    "moreover , it has been shown that it is also a sufficient behavioral relation in order to solve control problems in the framework of timed automata  @xcite . however , when considering wider classes of hybrid systems , we will see that this tool is not sufficient anymore for solving control problems in the perfect observation framework .",
    "given a mixed transition system @xmath202 , a _ time - abstract bisimulation for @xmath45 _ is an equivalence relation @xmath203 such that @xmath204 , the two following conditions are satisfied : @xmath205      \\forall \\tau \\in m^+,\\ \\left ( q_1 \\sim q'_1\\ \\text{and}\\ q_1        \\xrightarrow{\\tau } q_2 \\right ) \\rightarrow\\\\      \\qquad \\left ( \\exists \\tau ' \\in m^+,\\ \\exists        q'_2 \\in s\\ \\text{s.t.}\\ q_2 \\sim q'_2\\ \\text{and}\\ q'_1        \\xrightarrow{\\tau ' } q'_2",
    "\\right )    \\end{array}\\ ] ]    [ bisimnotgood ] in this example , we assume a perfect observation framework .",
    "let us consider the @xmath69-game @xmath206 where @xmath207 ( @xmath208 denotes the `` modulo @xmath209 '' relation ) , @xmath155 , @xmath156 , @xmath157 where @xmath158 ( resp .",
    "@xmath159 ) is the set of controllable ( resp .",
    "uncontrollable ) actions .",
    "the dynamics in @xmath160 , @xmath210 is defined as @xmath211 .",
    "we consider the partition depicted on figure [ fig : cexbisim ] .",
    "the guard @xmath169 is satisfied on @xmath2-states and the guard @xmath168 is satisfied on @xmath167-states . note that this partition is compatible with @xmath35 and w.r.t . discrete transitions .    in this game , the controller can win when it enters a @xmath2-state by performing action @xmath6 and it loses when entering a @xmath167-state because it can not prevent the environment from performing a @xmath212 and going in the losing state @xmath213 .",
    "it follows that the state @xmath214 is losing , whereas the state @xmath215 is winning",
    ". however , the equivalence relation induced by the partition @xmath216 is a time - abstract bisimulation : the two states @xmath217 and @xmath218 are thus time - abstract bisimilar , but not equivalent for the game .",
    "it follows that time - abstract bisimulation is not correct for solving control problems , in the sense that a time - abstract bisimulation can not always distinguish between winning and losing states .",
    "[ prop : incorrect ] let @xmath69 be a structure and @xmath24 an @xmath69-game .",
    "a partition respecting @xmath35 and inducing a time - abstract bisimulation on @xmath219 does not necessarily respect the set of winning states of @xmath24 .",
    "in this section we explain how to encode symbolically trajectories of dynamical systems with `` words '' . we will present two different encodings ( or abstractions ) depending on the observation framework ( perfect or partial ) we assume .      in this subsection ,",
    "we review the word encoding technique introduced in  @xcite in order to study o - minimal hybrid systems .",
    "we focus on the _ suffix partition _ introduced in @xcite",
    ". this encoding will be suitable in order to study control reachability problem in the perfect observation framework ( see  subsection  [ subsec - aboutperfect ] ) .",
    "we first explain how to build words associated with trajectories . given a dynamical system @xmath91 and a finite partition @xmath50 of @xmath93 , given @xmath89 we associate a word with the trajectory @xmath220 in the following way .",
    "we consider the sets @xmath221 for @xmath54 .",
    "this gives a partition of the time @xmath82 . in order to define a word on @xmath50 associated with the trajectory determined by @xmath7",
    ", we need to define the set of intervals @xmath222 . for each @xmath7 , the set @xmath223 is totally ordered by the order induced from @xmath81 .",
    "this allows us to define _ the word on @xmath50 associated with the trajectory @xmath224 _ denoted @xmath225 .",
    "[ def : wordgx ] given @xmath89 , _ the word associated with @xmath224 _ is given by the function @xmath226 defined by @xmath227 , where @xmath228 is such that @xmath229 , @xmath230 .",
    "the set of words associated with @xmath91 over @xmath50 gives in some sense a complete _ static _ description of the dynamical system @xmath91 through the partition @xmath50 . in order to recover the _ dynamics _",
    ", we need further information .    given a point @xmath7 of the input space @xmath231 , we have associated with @xmath7 a trajectory @xmath224 and a word @xmath225 . if we consider @xmath150 a point of the space - time @xmath232 , it corresponds to a point @xmath233 lying on @xmath224 . to recover in some sense the position of @xmath233 on @xmath224 from @xmath225 ,",
    "we associate with @xmath150 a suffix of the word @xmath225 denoted @xmath234 .",
    "the construction of @xmath234 is similar to the construction of @xmath225 , we only need to consider the sets of intervals @xmath235    let us notice that given @xmath150 a point of the space - time @xmath232 there is a unique suffix @xmath234 of @xmath225 associated with @xmath150 . given a point @xmath236 it may have several @xmath150 such that @xmath151 and so several suffixes are associated with @xmath200 . in other words , given @xmath236 ,",
    "the _ future _ of @xmath200 is non - deterministic , and a single suffix @xmath234 is thus not sufficient to recover the dynamics of the transition system through the partition @xmath50 . to encode the dynamical behavior of a point @xmath200 of the output space @xmath93 through the partition @xmath50",
    ", we introduce the notion of suffix abstraction ( called suffix dynamical type in  @xcite ) of a point @xmath200 w.r.t . @xmath50 .",
    "[ suf ] given a dynamical system @xmath91 , a finite partition @xmath50 of @xmath93 , a point @xmath236 , the _ suffix abstraction _ of @xmath200 w.r.t .",
    "@xmath50 is denoted @xmath237 and defined by @xmath238 .",
    "this allows us to define an equivalence relation on @xmath93 .",
    "given @xmath239 , @xmath240 , we say that they are _ suffix - equivalent _ if and only if @xmath241 .",
    "we denote @xmath242 the partition induced by this equivalence , which we call the _ suffix partition _ w.r.t .",
    "we say that a partition @xmath50 is _ suffix - stable _ if @xmath243 ( it implies that if @xmath239 and @xmath244 belong to the same piece of @xmath50 then @xmath245 ) .    to understand the suffix abstraction technique , we provide several examples .",
    "we start with example  [ ex : spiraletot ] .",
    "the suffix abstraction in @xmath246 is composed of a unique suffix @xmath247 because any trajectory leaving @xmath246 crosses exactly once the spiral at some point . by looking at fig .",
    "[ fig : ex - spiraltot ] one can convince oneself that the suffixes associated with the other points of the plane are given by suffixes of @xmath247 ; for instance , the points lying on the spiral ( the piece @xmath167 ) have suffix @xmath248 .",
    "[ ex - ta ] we first consider a two dimensional timed automata dynamics ( see example  [ ex : at ] ) . in this case",
    "we have that @xmath249 .",
    "we associate with this dynamics the partition @xmath250 where @xmath251 ^ 2 $ ] and @xmath252 . in this example",
    "the suffix partition is made of three pieces , which are depicted in figure  [ figautempo ] .",
    "( 0,2.5 ) ",
    "( 0,0 ) node [ pos=0,left ] @xmath253 node [ pos=1,below , left ] @xmath254  ( 2.5,0 ) node [ pos=1,below ] @xmath255 ; ( 1,1 )  ( 2,1 ) ",
    "( 2,2 )  ( 1,2 ) cycle ; ( 1,0 )  ( 2,1 ) ; ( 0,1 ) ",
    "( 1,2 ) ; ( 1.5,1.5 ) node @xmath256 ; ( 2.5,2.5 ) node @xmath257 ; ( .5,.5 ) node @xmath258 ;    the suffix abstraction allows to encode more sophisticated continuous dynamics than the previous suffix encoding of a trajectory . in the next example",
    "we recover in some sense the continuous dynamics of _ rectangular automata _",
    "@xcite , which requires to use the suffix abstraction ( some of the points do not have a unique suffix ) .    [ ex - rect ] we consider the dynamical system @xmath259 where @xmath260 and @xmath261    \\times { { \\mathbb r}}^+ \\to { { \\mathbb r}}^2 $ ] is defined by @xmath262 . we associate with this dynamical system the partition @xmath163 where @xmath263 \\times [ 3,4]$ ] , @xmath264\\times[1,2]$ ] and @xmath265 ( see figure  [ fig rect ] ) .",
    "let us focus on the suffix abstractions of the two points @xmath266 and @xmath267 .",
    "we have that @xmath268 and @xmath269 .",
    "though several points have several possible suffixes , the partition induced by the suffix abstraction is finite and illustrated in figure  [ fig rect1 ] .",
    "the suffix - partition proposed in subsection  [ subsec - suffix ] is not suitable for the partial observation framework .",
    "we will intuitively convince the reader of this fact .",
    "let @xmath259 be a dynamical system , @xmath200 be a point of @xmath85 and @xmath50 be a partition of @xmath85 .",
    "since several trajectories cross the point @xmath200 , there exist several @xmath270 such that @xmath271 , for some @xmath272 . in the partial observation framework ,",
    "the controller does not know which trajectory will be chosen by the environment and have to choose a pair @xmath273 independently . in particular , starting from @xmath200 , one can potentially be in several different pieces of @xmath50 after @xmath181 time units .",
    "the notion of suffix abstraction is not sufficient in order to capture these behaviors , that is why we now associate a word @xmath274 on @xmath275 with a given @xmath276 .",
    "we will see in  subsection  [ subsec - partial2 ] that this new encoding is suitable in order to study control reachability problem in the partial observation framework . in order to define the word on @xmath275 associated with @xmath276 , we need to introduce further definitions .",
    "let @xmath200 be a point of @xmath85 and @xmath181 be a time in @xmath277 .",
    "@xmath278 the set @xmath279 represents the set of pieces that we have potentially reached after @xmath181 time units when starting from @xmath200 .",
    "let @xmath200 be a point of @xmath85 .",
    "@xmath280    for each @xmath276 , the set @xmath281 exactly consists of the connected components of the sets @xmath282 , for @xmath283 .",
    "we can now define the superword @xmath284 associated with a given @xmath276 .",
    "let @xmath259 be a dynamical system , @xmath200 be a point of @xmath85 , and @xmath285 be a partition of @xmath85 . _",
    "the superword associated with @xmath200 _ is given by the function @xmath286 defined by : @xmath287    let us notice that given @xmath74 a dynamical system , @xmath50 a partition of @xmath85 , and @xmath200 a point of @xmath85 , there exists a unique superword @xmath284 associated with @xmath200 . if @xmath74 is a dynamical system and @xmath50 a finite partition of @xmath85 , we write @xmath288 for the partition induced by superwords .",
    "we say that a partition @xmath50 is _ superword - stable _ if @xmath289 .",
    "let us illustrate this new notion on examples .",
    "[ ex : supword ] let us consider the three dynamical systems depicted on figures  [ sufsup ] .",
    "in the three cases , the dynamical system consists of two trajectories exiting the point @xmath290 .",
    "what differs in the three systems is the way the partition @xmath163 is crossed .",
    "we are interested in the superword associated with @xmath290 .",
    "for the two first dynamical systems we have that @xmath291 , and for the last one we have that @xmath292 .",
    "let us notice that the notions of _ suffix abstraction _ and _ superword abstraction _ are incomparable .",
    "to illustrate this fact , let us consider again the three dynamical systems of figure  [ sufsup ] .",
    "we have that @xmath293 .",
    "let us now consider the suffix abstractions of these points : @xmath294 this shows that the superword abstraction can distinguish between @xmath239 and @xmath295 , but can not distinguish between @xmath239 and @xmath244 , although the suffix abstraction can distinguish between @xmath239 and @xmath244 , but can not distinguish between @xmath239 and @xmath295 .",
    "in this section we first present a general procedure to compute the set of winning states for an @xmath69-game under partial observation .",
    "we then show that if a partition is superword - stable , the procedure can be performed symbolically on pieces of the partition .",
    "the procedure described is not always effective and we will later point out specific @xmath69-structures for which each step of the procedure is computable . by proposition  [ prop : casparticulier ] , we know that the perfect observation control problem can be seen as a special case of the partial observation framework ; however at the end of this section , we explain how the suffix partition can be used in order to directly solve the perfect observation control problem .      as for classical reachability games  @xcite ,",
    "one way of computing winning states is to compute the _ attractor _ of goal states by iterating a _ controllable predecessor _ operator .",
    "let @xmath108 be an @xmath69-game . for @xmath296 , @xmath297 and @xmath298 we first define the notion of controllable discrete predecessors .",
    "for every @xmath299 , we have @xmath300 \\mid \\\\[-0.2 cm ] \\mid\\\\[-0.2 cm ] \\mid \\\\[-0.2 cm ] \\mid    \\end{array}\\     \\begin{array}{l } a\\ \\text{is enabled in}\\ ( q , y ) ,   \\\\      \\text{and}\\ \\forall ( q',y ' ) \\in q \\times v_2,\\ \\\\",
    "\\left((q , y ) \\xrightarrow{a } ( q',y ' ) \\rightarrow ( q',y ' ) \\in",
    "w\\right ) \\end{array}\\right\\}.\\ ] ] the intuition of this operator is the following : a state is in @xmath301 if action @xmath302 can be done from @xmath105 , and whichever transition is taken leads to a state in @xmath303 ( action @xmath302 ensures @xmath303 in one step ) .",
    "we also define @xmath304 and @xmath305 .    as for timed and hybrid games  @xcite",
    ", we also define a _ safe time predecessor _ of a set @xmath303 w.r.t . a set @xmath306 , that is specific to the partial observation framework : a state @xmath105 is in @xmath307 if a delay @xmath181 can be chosen such that for all trajectories starting from @xmath105 , one can let @xmath181 time units pass avoiding @xmath306 and then reach @xmath308 .",
    "formally the operator @xmath309 is defined as follows : @xmath310 \\mid \\\\[-0.2 cm ] \\mid\\\\[-0.2 cm ] \\mid \\\\[-0.2 cm ] \\mid    \\end{array}\\!\\ !",
    "\\begin{array}{l } \\!\\!\\exists \\tau \\in m^+,\\ \\forall ( x , t ) \\in",
    "v_1 \\times      v\\ \\text{s.t.}\\\\ \\!\\!\\gamma_q(x , t)=y,\\ \\text{and}\\ ( q , y )      \\xrightarrow{\\tau}_{x , t } ( q',y')\\\\ \\!\\!\\text{implies } \\left((q',y')\\in w\\      \\text{and}\\ { \\text{\\sffamily\\upshape{post}}}_{[t , t+\\tau]}^{q , x } \\subseteq      \\overline{w'}\\right)\\!\\!\\end{array}\\right\\}.\\ ] ] where @xmath311}^{q , x } = \\{\\gamma_q(x , t')\\ \\mid\\ t \\le t ' \\le",
    "t+\\tau \\}$ ] .    the _ controllable predecessor _ operator under partial observation @xmath312 is then defined as : @xmath313    note that the operator @xmath312 is definable in any expansion of an ordered group . hence , if @xmath303 is definable , so is @xmath314 .",
    "we first illustrate the computation of the operator @xmath312 on example  [ ex : spiraletot ] ( see page  ) . in this case , @xmath312 does not induce a winning strategy from @xmath170 under partial observation . setting @xmath315",
    ", we have that @xmath314 does not contain the point @xmath170 because there is no uniform choice for a positive delay @xmath181 before taking action @xmath6 so that the spiral ( area @xmath167 ) can be avoided .",
    "notice however that @xmath314 is not empty because it includes all points different from @xmath170 ( from which there is a unique trajectory ) .",
    "[ rk : partial ] note also that due to the partial observation assumption , in the definition of @xmath312 , the action @xmath302 for controlling the system has to be chosen before choosing the delay @xmath181 . indeed",
    ", the controller does not know which precise trajectory will be chosen by the environment , in particular , action @xmath302 should be available after time @xmath181 independently of the choice of trajectory made by the environment .",
    "this is illustrated in the next example .",
    "[ ex : ab ] let us consider the @xmath69-game @xmath24 depicted on figure  [ fig : mgamebis ] where @xmath316 and where @xmath317 are distinct controllable actions .",
    "the dynamics in @xmath160 is depicted on figure  [ fig : dynqun ] , roughly speaking , it consists of of two trajectories exiting the point @xmath200 . perfect observation from @xmath200 ; indeed depending on the trajectory we are following , we will either play @xmath318 or @xmath319 , for some well - chosen @xmath320 . however , there is no winning strategy under partial observation from @xmath200 .",
    "although we can find @xmath320 such that a controllable action will be ( safely ) available ( from @xmath200 ) after @xmath181 time units , we are unable to tell which controllable action will be taken .",
    "in fact if @xmath321 we have that @xmath322 . indeed if @xmath323 , the controller can deduce the trajectory from the current state and choose its action accordingly .",
    "the next proposition states the soundness of this operator for computing winning states in the games under a partial observation hypothesis .",
    "[ proppi2 ] let @xmath108 be an @xmath69-game .",
    "if there exists @xmath324 s.t .",
    "@xmath325 then @xmath326 is the set of winning states of  @xmath24 under partial observation .",
    "we first prove that if @xmath327 then there exists a winning strategy under partial observation from @xmath105 . to this aim",
    ", we define a memoryless winning strategy from any @xmath328 . by notation misuse",
    ", we define the strategy @xmath36 on states @xmath105 instead of executions .",
    "we define a strategy @xmath36 on all sets @xmath329 by induction on @xmath330 , and prove that it is a winning strategy . if @xmath331 , we assume @xmath36 is defined nowhere , it is thus winning from all states in @xmath35 .",
    "suppose now that @xmath36 is already defined on @xmath332 and is winning on these states .",
    "we now define @xmath36 on @xmath333 . let @xmath334 : if @xmath335 , @xmath36 is already defined ; if @xmath336 , then we know that there exists @xmath337 with @xmath338 .",
    "there exists @xmath123 with @xmath180 enabled is enabled in @xmath105 if there exists @xmath124 such that @xmath151 and @xmath180 is enabled in @xmath130 . ] in @xmath105 such that for every @xmath150 if @xmath125 , then @xmath339 , @xmath308 and @xmath311}^{q , x } \\subseteq    \\overline{{\\text{\\sffamily\\upshape{upred}}}{(\\overline{w}})}$ ] .",
    "we set @xmath340 and show that this is a winning choice .",
    "we show by induction on @xmath330 that @xmath36 is winning for each state of @xmath341 .",
    "this is immediate for @xmath331 .",
    "suppose now that the result is true for @xmath330 and let @xmath342 .",
    "let @xmath343 be an execution compatible with @xmath36 .",
    "we have that either @xmath344 and @xmath345 , in which case @xmath346 , or @xmath347 and @xmath348 , in which case @xmath349 with @xmath350 so @xmath351 . in both cases , @xmath352 so by induction hypothesis , @xmath28 is winning .",
    "we now show that if there exists a strategy under partial observation @xmath36 winning from @xmath105 then @xmath328 . set @xmath353 , by contradiction suppose that @xmath354 , we will construct a non - winning execution compatible with @xmath36 . by hypothesis @xmath355 so @xmath356 , it follows that for all @xmath357 , for all @xmath123 there exists @xmath358 such that @xmath125 , and @xmath359 implies @xmath360 or @xmath311}^{q , x } \\cap    { \\text{\\sffamily\\upshape{upred}}}(\\overline{w } ) \\ne \\emptyset$ ] .",
    "let @xmath361 ( as @xmath36 is a strategy under partial observation it does not depend of @xmath7 and @xmath362 ) and let @xmath363 be as in the previous statement .",
    "there exists @xmath364 with @xmath365 such that either @xmath366 or there exists @xmath367 and @xmath298 with @xmath368 . in both cases , the constructed execution is compatible with @xmath36 . as @xmath369",
    "we can repeat the same argument and construct inductively an execution @xmath370 compatible with @xmath36 and such that for every @xmath27 , @xmath371 . by definition of @xmath303 , for every @xmath27 , @xmath372 , which contradicts the assumption that @xmath36 is a winning strategy .",
    "@xmath373 , but this does not imply that we can compute this set , as some @xmath69-structures have an undecidable theory .",
    "the following corollary states that if some conditions on the structure and on @xmath374 are satisfied , then this procedure provides an algorithmic solution to the control problem .",
    "[ cor : etatsgagnants ] let @xmath69 be a structure such that @xmath70 is decidable .",
    "is decidable iff there is an algorithm which can determine whether or not any sentence ( _ i.e. _ , a formula with no free variable . ) is a member of the theory ( _ i.e. _ , is true ) .",
    "we suggest to readers interested in general decidability issues on o - minimal hybrid systems to refer to section  5 of  @xcite . ]",
    "let @xmath97 be a class of @xmath69-games such that for every @xmath24 in @xmath97 , there exists a finite partition @xmath50 of @xmath375 definable in @xmath69 , respecting @xmath35 is a union of pieces of @xmath50 .",
    "] , and stable under @xmath376 . is a piece of @xmath50 then @xmath377 is a union of pieces of @xmath50 . ]",
    "then the control problem under partial observation in the class @xmath97 is decidable .",
    "moreover if @xmath152 , the set of winning states under partial observation of @xmath24 is computable .",
    "let @xmath69 be a structure and @xmath97 a class of automata satisfying the hypotheses and take @xmath152 .",
    "as @xmath50 is stable under @xmath374 , @xmath378 is a finite union of pieces of @xmath50 .",
    "hence there exists @xmath379 such that @xmath380 . thus proposition [ proppi2 ]",
    "shows that the set of winning states is @xmath378 .    as @xmath374 and @xmath35",
    "are definable , we have that @xmath381 is definable and as @xmath70 is decidable we can test if @xmath382 , we can thus effectively find a representation of @xmath373 .    as @xmath70 is decidable , if a state @xmath105 is definable we can test if @xmath383 .",
    "it follows that the control problem in an @xmath69-structure is decidable .",
    "we now present a sufficient condition for a partition to be stable under the operator @xmath374 : we require that the partition is stable under @xmath384 ( for all @xmath385 ) to handle the discrete part of the automaton and we show that the stability by superwords is fine enough to be correct for solving control problems under partial observation .",
    "[ prop : supwordstable ] let @xmath24 be an @xmath69-game and @xmath50 be a partition of @xmath386 .",
    "if @xmath50 respects @xmath35 , is stable under @xmath384 ( for all @xmath385 ) and superword - stable , then @xmath50 is stable under the operator @xmath374 .",
    "we fix a location @xmath44 of the automaton and we take @xmath387 such that there exists @xmath388 with @xmath389 .",
    "we now show that if @xmath390 , for some @xmath391 then @xmath392 . in case @xmath393 then @xmath394 and @xmath395 .",
    "we assume @xmath396 .",
    "there exists @xmath297 and @xmath397 such that for all @xmath124 with @xmath398 and for all @xmath399 such that @xmath400 , we have that @xmath401 , and @xmath402}^{q , x } \\subseteq    \\overline{{\\text{\\sffamily\\upshape{upred}}}{(\\overline{x}})}$ ] .",
    "let us now express the previous condition in term of superword .",
    "assume that @xmath403 the previous condition means that @xmath404 contains a prefix @xmath405 is such that :    * for all @xmath406 , we have that @xmath407 ( this condition makes sense since @xmath285 is stable under @xmath384 ; indeed , _ a priori _ we only have that there exists @xmath408 such that @xmath409 , the stability of @xmath285 under @xmath384 implies that @xmath410 ) , * for all @xmath411 , for all @xmath412 , we have that @xmath413 ( again this condition makes sense since @xmath285 is stable under @xmath384 ) .",
    "since @xmath414 and both @xmath239 and @xmath244 belong to the same piece of @xmath50 , we have that @xmath415 . in particular",
    ", we can find @xmath416 such that if @xmath417 , we have that @xmath418 corresponds to the letter @xmath419 .",
    "thus we have that @xmath420 and @xmath421}^{q , x } \\subseteq    \\overline{{\\text{\\sffamily\\upshape{upred}}}{(\\overline{x}})}$ ] , _ i.e. _ @xmath422 .    as an immediate corollary of this proposition and of corollary  [ cor : etatsgagnants ] , we get the following general decidability result .",
    "[ corta ] let @xmath69 be a structure such that @xmath70 is decidable .",
    "let @xmath97 be a class of @xmath69-games such that for every @xmath24 in @xmath97 , there exists a finite partition @xmath50 of @xmath375 definable in @xmath69 , respecting @xmath35 , superword - stable , and stable under @xmath384 for every action @xmath385 .",
    "then the control problem under partial observation ( problem  [ prob : contpartial ] ) in the class @xmath97 is decidable , and if @xmath152 , the set of winning states under partial observation of @xmath24 is computable .",
    "we briefly discuss the perfect observation framework .",
    "we have already seen that it is a special case of the partial observation framework ( see proposition  [ prop : casparticulier ] ) .",
    "hence , we can reuse the previous results and get decidability and computability results . however , we can also define an appropriate controllable predecessor operator @xmath423 that will be correct in the perfect observation framework .",
    "the new operator @xmath423 is just a twist of the previous operator , which we define as : @xmath424 where @xmath425 existentially quantifies on pairs @xmath150 such that @xmath426 ( instead of universally quantifying on those pairs , as in @xmath309 ) .    in the perfect observation framework ,",
    "the controller is aware of the precise trajectory that will be followed , hence his choice of action can be done after his choice of delay contrarily to the partial observation case ( remember remark  [ rk : partial ] ) .",
    "that is why the union over actions is put within the scope of the safe time predecessor in @xmath423 .",
    "applying similar reasoning as in the previous sections , we can prove that @xmath427 corresponds to the set of winning states of @xmath24 , and that a partition , which is both stable under @xmath384 ( for every @xmath385 ) and suffix - stable , is actually correct for solving control problems in the perfect observation framework .",
    "we can thus state the following theorem .",
    "[ thmta ] let @xmath69 be a structure such that @xmath70 is decidable .",
    "let @xmath97 be a class of @xmath69-games such that for every @xmath24 in @xmath97 , there exists a finite partition @xmath50 of @xmath375 definable in @xmath69 , respecting @xmath35 , suffix - stable , and stable under @xmath384 for every action @xmath428 .",
    "then the control problem under perfect observation ( problem  [ prob : controlperfect ] ) in the class @xmath97 is decidable , and if @xmath152 , the set of winning states under perfect observation of @xmath24 is computable .",
    "note that being suffix - stable is a stronger condition than being a time - abstract bisimulation  @xcite , and we see here that this is one of the right tools to solve control problems .",
    "for instance in example  [ bisimnotgood ] the partition @xmath285 is a time - abstract bisimulation but is not suffix - stable . indeed @xmath429 but @xmath430 .    [",
    "remark : ta ] using the results of this section , we recover the results of @xcite about control of timed automata .",
    "note that for the timed automata dynamics ( remember example  [ ex : at ] ) partial or perfect observation do not make a difference ( the dynamics is deterministic ) . indeed we consider the classical finite partition of timed automata that induces the region graph ( see  @xcite ) .",
    "let us call @xmath431 this partition , and notice that @xmath431 is definable in @xmath432 .",
    "@xmath431 is stable under the action of @xmath384 for every action @xmath385 . by example",
    "[ ex : at ] the continuous dynamics of timed automata is definable in @xmath432 .",
    "hence it makes sense to encode continuous trajectories of timed automata as words .",
    "then one can easily verify that @xmath433 . by theorem  [ thmta ]",
    "we get the decidability and computability of winning states under perfect information in timed games @xcite as a side result .",
    "the control problem under perfect information in the class of timed automata is decidable .",
    "moreover the set of winning states under perfect observation is computable .",
    "in this section , we focus on the particular case of o - minimal games ( _ i.e. _ , @xmath69-games where @xmath69 is an o - minimal structure and in which extra assumptions are made on the resets ) .",
    "we first briefly recall definitions and results related to o - minimality  @xcite .",
    "we show that existence of finite partitions which are stable w.r.t . the controllable predecessor operator can be guaranteed for o - minimal games .",
    "more precisely , we first show that , in this framework , a partition stable under the controllable predecessor operator can easily be obtained _ via _ the superword abstraction ( this is due to the assumptions on the resets ) .",
    "then , we use properties of o - minimality to prove the finiteness of the previously obtained partition .",
    "finally we focus on o - minimal structures with a decidable theory in order to obtain full decidability and computability results . as in the previous section ,",
    "we mostly focus on the partial observation framework , but also mention results in the perfect observation framework .",
    "we recall here the definition of o - minimality and the `` _ _ uniform finiteness theorem _ _ '' that will be applied later in this section .",
    "the reader interested in o - minimality should refer to  @xcite for further results and an extensive bibliography on this subject .",
    "[ o - minimal ] an extension of an ordered structure @xmath434 is _ o - minimal _ if every definable subset of @xmath81 is a finite union of points and open intervals ( possibly unbounded ) .",
    "in other words the definable subsets of @xmath81 are the simplest possible : the ones which are definable in @xmath435 .",
    "this assumption implies that definable subsets of @xmath436 ( in the sense of @xmath437 ) admit very nice structure theorems ( like the _ cell decomposition _",
    "@xcite ) or theorem  [ uf ] below . the following are examples of o - minimal structures : the ordered group of rationals @xmath438 , the ordered field of reals @xmath439 , the field of reals with exponential function , the field of reals expanded by restricted pfaffian functions and the exponential function , and many more interesting structures ( see  @xcite ) .",
    "an example of non o - minimal structure is given by @xmath440 , since the definable set @xmath441 is not a finite union of points and open intervals .",
    "however , let us mention that the structure}}$ ] and @xmath442}}$ ] correspond to the sinus and cosinus functions restricted to the segment @xmath443 $ ] . ]",
    "@xmath444 } } , \\cos_{|_{[0,2\\pi ] } } \\rangle$ ] is o - minimal ( see  @xcite ) .",
    "[ uf ] let @xmath445 be an o - minimal structure .",
    "let @xmath446 be definable ( in @xmath447 ) , we denote by @xmath448 the fiber @xmath449 .",
    "then there is a number @xmath450 such that for each @xmath451 the set @xmath452 has at most @xmath453 definably connected components .",
    "given @xmath24 an @xmath69-game , we say that @xmath24 is an _ o - minimal game _ if the structure @xmath69 is o - minimal and if all transitions @xmath454 of @xmath455 belong to - game where we consider only constant functions for resets .",
    "] @xmath456 .",
    "[ pa ] let us notice that the previous definition implies that given @xmath24 an o - minimal game , the guards , the resets and the dynamics are definable in the underlying o - minimal structure .",
    "we denote by @xmath457 the coarsest partition of the state space @xmath458 which respects @xmath35 , and all guards and resets in @xmath24 .",
    "note that @xmath457 is a finite definable partition of @xmath0 .    due to the strong reset condition",
    "we have that @xmath457 is stable under the action of @xmath384 for every action @xmath302 .",
    "this holds by the same argument that allows to decouple the continuous and discrete components of a hybrid system in  @xcite .",
    "let us also notice that , in the framework of o - minimal games , any refinement of @xmath457 is stable under the action of @xmath384 for every @xmath385 .",
    "the continuous dynamics of timed automata ( see example  [ ex - ta ] ) is definable in the o - minimal structure @xmath459 .",
    "the continuous dynamics of rectangular automata ( see example  [ ex - rect ] ) is definable in the o - minimal structure @xmath460 .",
    "hence games on timed ( resp .",
    "rectangular ) automata with strong resets are particular cases of o - minimal games .",
    "the @xmath461-game of example  [ ex : spiraletot ] is in fact an o - minimal game ; indeed one can see that it can be defined in the structure @xmath462 } } , \\cos_{|_{[0,2\\pi ] } } \\rangle$ ] which is o - minimal ( see  @xcite ) .      in this subsection",
    ", we will see how we can ( easily ) build a partition which is stable under the actions of the controllable predecessor operator .",
    "the key ingredients to build this partition will be @xmath463 the strong resets conditions and @xmath464 the superword abstraction .",
    "the finiteness of the obtained partition will be discussed in subsection  [ subsec - defina ] .",
    "[ prop - subwordpart ] let @xmath24 be an o - minimal game , and @xmath457 the partition corresponding to its guards and resets .",
    "the superword ( resp .",
    "suffix ) partition @xmath465 ( resp .",
    "@xmath466 ) is stable under the action of @xmath374 ( resp .",
    "@xmath467 ) .",
    "this proposition is not a corollary of proposition  [ prop : supwordstable ] , as @xmath465 _ is not _ superword - stable .",
    "however , the proof of proposition  [ prop : supwordstable ] only relied on the fact that in a superword - stable partition , two points in a piece of the partition have the same superword abstraction , which is precisely what we have in the current case .",
    "hence the previous proof can be mimicked , and we do not write all details . it is worth noting also that we do not use all properties of o - minimal games , but only the strong reset property , which ensures that the partition is stable under @xmath384 for every action @xmath428 .",
    "in the previous subsection , we have proved that , given @xmath24 an o - minimal game , the partition @xmath465 ( resp .",
    "@xmath466 ) is stable under the action of the controllable predecessor operator under the partial ( resp .",
    "perfect ) observation framework .",
    "we will now show that this partition is finite .",
    "for this we will exploit the finiteness property of o - minimality and in order to do so , we first need to prove that our encodings are definable .",
    "let @xmath74 be a dynamical system and @xmath50 be a finite partition of @xmath85 .",
    "we now would like to show that in the case of _ o - minimal dynamical system _ the superword encoding previously discussed can be done in a _ definable _ way .",
    "the approach closely follows the one used in  ( * ? ? ?",
    "* section  12.2 ) for the suffix abstraction ( called suffix dynamical type in this paper ) .",
    "let @xmath74 be an o - minimal dynamical system and @xmath50 be a finite definable partition of @xmath85 .",
    "first let us notice that , since @xmath50 is finite and definable , given @xmath468 one can easily write a first - order formula @xmath469 which is true if and only if @xmath470 ( where @xmath281 is defined similarly to @xmath471    see page ) . let us give this formula , assuming that @xmath472 : @xmath473 thus , for each @xmath276 , the set @xmath281 exactly consists of the connected components of the sets @xmath474 , for @xmath468 ; _ i.e. _ @xmath281 is a set of intervals . in order to show that @xmath281 is first - order definable we need to encode each interval @xmath475 as a point in some cartesian power of @xmath81 .",
    "an interval @xmath475 is entirely characterized by _ ( i )",
    "_ its end - points and _ ( ii ) _ the fact of being right ( resp . left ) open or closed . for _",
    "( i ) _ we formally need a couple to represent a single end point in order to recover @xmath476 and @xmath477 ( as in the projective line case ) . for _ ( ii )",
    "_ we can use a binary encoding , let us say @xmath254 means open and @xmath478 closed .",
    "thus any interval @xmath475 will be encoded by an element @xmath479 .",
    "for instance , the interval @xmath480 is encoded by @xmath481 .",
    "thanks to this `` trick '' , one can find a first - order formula @xmath482 defining @xmath281 .",
    "the writing of the formula @xmath482 is not difficult but rather tedious : different cases have to be considered ( depending on whether the interval @xmath483 , encoded by an element of @xmath484 , is left ( resp .",
    "right ) bounded and left ( resp .",
    "right ) open or closed ) .",
    "further details of the construction of the formula can be found in  ( * ? ? ?",
    "* section  12.2 ) .",
    "we will now prove that when considering o - minimal dynamical systems , only finitely many finite superwords are needed to encode all possible trajectories .",
    "let @xmath259 be an o - minimal dynamical system and @xmath50 be a finite definable partition of @xmath85 .",
    "there exists finitely many finite superwords associated with @xmath74 w.r.t . @xmath50 .",
    "given @xmath468 let us first consider the set @xmath485 by the above discussion , the set @xmath486 is a definable subset of @xmath81 .",
    "hence by o - minimality it is a finite union of points and open intervals , in particular , it has only finitely many connected components . by definition of @xmath281",
    "we have the following equality . @xmath487",
    "since @xmath50 is finite we can conclude that @xmath281 is finite .    using the uniform finiteness theorem ( theorem  [ uf ] )",
    "we obtain that there exists @xmath488 such that for all @xmath276 we have that @xmath489 .    in terms of word encoding",
    ", this means that there are only finitely many superwords associated with the points of the ( output ) space @xmath85 .",
    "more precisely , the superwords @xmath284 have lengths uniformly bounded by @xmath490 . since the superwords @xmath284 are words on the _ finite _ alphabet @xmath491 , this completes the proof .",
    "the previous proposition directly implies the finiteness of the partition @xmath288 .",
    "moreover we have that this partition is definable , as stated in the following proposition .",
    "[ tpfinidefinable ] let @xmath492 be an o - minimal dynamical system , @xmath50 be a finite definable partition of the output space @xmath85 .",
    "the partition @xmath288 is finite and definable .",
    "since there are only finitely many superwords , it suffices to show that given @xmath276 and @xmath493 a superword on @xmath50 ( i.e. a word on @xmath491 ) , we can define ( by a first - order formula ) that @xmath494 .",
    "suppose that @xmath495 , where @xmath496 .",
    "we have that @xmath494 if and only if the following formula holds .",
    "@xmath497 notice that the above formula is first - order since @xmath281 is first - order definable and testing whether @xmath498 is also first - order definable .",
    "we now prove that given @xmath24 an o - minimal game definable in @xmath461 , we can construct a _",
    "strategy ( in the same structure @xmath461 ) for the winning states under partial observation .",
    "the effectiveness of this construction will be discussed later .",
    "[ synthesis ] given @xmath24 an o - minimal game , there exists a definable memoryless winning strategy under partial ( resp .",
    "perfect ) observation for each @xmath383 ( resp .",
    "@xmath499 ) .    by proposition  [ prop - subwordpart ] ,",
    "the partition @xmath465 is finite , definable and stable under @xmath376 . in particular",
    ", there exists thus @xmath379 such that @xmath500 .",
    "hence , by proposition  [ proppi2 ] , @xmath501 is the set of winning states .",
    "given @xmath502 , we know that there exists a winning strategy from @xmath105 .",
    "we now have to point out a definable winning strategy from @xmath105 .",
    "following the proof of proposition  [ proppi2 ] , we build the definable strategy by induction on the number of iterations of @xmath376 .",
    "let us suppose we have already built a strategy on each piece of @xmath503 , let us now consider @xmath504 .    by proposition  [ prop - subwordpart ] , we know that @xmath504 is a finite union of pieces of @xmath465 .",
    "let @xmath505 be one of these pieces .",
    "we know that @xmath505 corresponds to a finite superword on @xmath457 .",
    "thus given @xmath506 we have that @xmath507    since @xmath508 , the superword @xmath509 contains a prefix @xmath405 such that there is @xmath297 with :    * for all @xmath406 , @xmath510 , * for all @xmath411 , for all @xmath412 , @xmath511 .",
    "since for all @xmath406 , we have that @xmath512 , the controllable action @xmath297 is such that given any @xmath513 a transition labelled by @xmath302 is enabled and all such transitions lead to @xmath303 . the strategy for @xmath105 will be to perform action @xmath302 after some delay .",
    "we now explain how to choose this delay .",
    "let @xmath105 be such that @xmath506 .",
    "let us consider @xmath514 the subset of @xmath277 defined as follows : @xmath515 this set is definable since @xmath419 is definable .    by o - minimality , we have that @xmath514 is a finite union of points and open intervals .",
    "let us denote by @xmath483 the leftmost point or interval .",
    "let us notice that @xmath483 is definable . if @xmath483 has a minimum @xmath516 , we define @xmath517 . otherwise two cases may occur .",
    "if @xmath483 is bounded then it is of the form @xmath518 or @xmath519 $ ] in this case we define satisfying @xmath520 , which we note @xmath521 . ] @xmath522 .",
    "finally if @xmath483 has no minimum and is unbounded it is of the form @xmath523 and in this case we define @xmath524 .",
    "we summarize is nothing more than the _ curve selection _ for o - minimal expansions of ordered abelian groups , see  @xcite . ] the definition of @xmath36 on @xmath419 as follows : @xmath525 where @xmath526 is a formula which is true if and only if @xmath483 ( or @xmath514 ) has a minimum and @xmath527 is a formula which is true if and only if @xmath483 has no minimum and is bounded .",
    "thus clearly @xmath36 is definable .",
    "since there are finitely many @xmath528 , we can conclude that @xmath36 is definable .",
    "note that the memoryless strategy given by theorem  [ synthesis ] is computable if @xmath373 is .",
    "let us notice that in the case of timed automata dynamics ( described in example  [ ex : at ] ) , our definable strategies correspond to the realizable strategies computed in  @xcite .",
    "theorem  [ synthesis ] is an existential result .",
    "it claims that given an o - minimal game , there exists a definable memoryless strategy for each @xmath529 , and by theorem  [ prop - subwordpart ] we know that @xmath530 is finite .",
    "the conclusion of the previous subsection is that given an o - minimal game there exists a definable memoryless winning strategy for each @xmath531 .    in general , theorem  [ synthesis ]",
    "does not allow to conclude that the control problem in an @xmath69-structure is decidable .",
    "indeed it depends on the decidability of @xmath70 .",
    "we can state the following theorem :    [ decidability ] let @xmath69 be an o - minimal structure such that @xmath70 is decidable and @xmath97 a class of @xmath69-automata .",
    "then the control problem under partial ( resp .",
    "perfect ) observation in class @xmath97 is decidable .",
    "moreover if @xmath152 , the set of winning states @xmath373 ( resp .",
    "@xmath499 ) under partial ( resp .",
    "perfect ) observation is computable and a memoryless winning strategy can be effectively computed for each @xmath328 ( resp .",
    "@xmath499 ) .    by proposition  [ tpfinidefinable ] , for each @xmath152 , @xmath465 is a definable finite partition respecting @xmath35 .",
    "moreover by proposition  [ prop - subwordpart ] , @xmath465 is stable under @xmath376 .",
    "hypothesis of corollary  [ cor : etatsgagnants ] are thus satisfied and we get that the control problem in class @xmath97 is decidable and that the winning states of a game @xmath152 are computable .",
    "moreover theorem  [ synthesis ] ensures that a memoryless strategy can be effectively defined from such winning states .",
    "@xmath532 and @xmath533 are examples of o - minimal structures with decidable theory and so o - minimal games based on theses structures can be solved by theorem  [ decidability ] .    in this paper",
    "we did not distinguish zeno behaviours .",
    "in particular , in our framework , if the environment has a strategy that prevents the game to reach the @xmath35 locations by blocking time , we say that the controller loses the game . in the framework of timed automata ,",
    "an _ ad - hoc _ solution to this _ problem of zenoness _ has been proposed in  @xcite . however , due to the strong reset conditions of o - minimal hybrid systems , the method of  @xcite can not be easily applied to our framework , but this problem is somehow orthogonal to ours .",
    "in this paper we have studied games based on dynamical systems with general dynamics , both under a prefect and a partial observation of the dynamics . under the first hypothesis ,",
    "we have shown that time - abstract bisimulation is not fine enough to solve these games , which is a major difference with the case of timed automata . by means of an encoding of trajectories by words , we have obtained a good abstraction for control problems ( with reachability winning conditions , but it applies also to basic safety winning conditions ) . we have finally provided decidability and computability results for o - minimal games under both perfect and partial observation hypothesis .",
    "our technique applies to timed automata , and we recover decidability of timed games  @xcite , as well as the construction of winning strategies  @xcite as side results .",
    "the two first authors have been partly supported by the esf project gasics . the first author has been partly supported by the project dots ( anr-06-seti-003 ) and by the eu project quasimodo .",
    "the second author has been partly supported by a grant from the national bank of belgium and by a frfc grant : 2.4530.02 .",
    "rajeev alur and david dill .",
    "automata for modeling real - time systems . in _ proc .",
    "17th international colloquium on automata , languages and programming ( icalp90 ) _ , volume 443 of _ lecture notes in computer science _ , pages 322335 .",
    "springer , 1990 .",
    "luca  de alfaro , marco faella , thomas  a. henzinger , rapuk majumdar , and marilla stoelinga .",
    "the element of surprise in timed games . in _ proc .",
    "14th international conference on concurrency theory ( concur03 ) _ , volume 2761 of _ lecture notes in computer science _ , pages 142156 .",
    "springer , 2003 .",
    "rajeev alur , salvatore la torre , and p.  madhusudan .",
    "perturbed timed automata . in _ proc .",
    "8th international workshop on hybrid systems : computation and control ( hscc05 ) _ , volume 3414 of _ lecture notes in computer science _ , pages 7085 .",
    "springer , 2005 .",
    "eugene asarin , gerardo schneider , and sergio yovine . on the decidability of the reachability problem for planar differential inclusions . in _ proc .",
    "4th international workshop on hybrid systems : computation and control ( hscc01 ) _ , volume 2034 of _ lecture notes in computer science _ ,",
    "pages 89104 .",
    "springer , 2001 .",
    "patricia bouyer , thomas brihaye , and fabrice chevalier .",
    "control in o - minimal hybrid systems . in _ proc .",
    "21st annual ieee symposium on logic in computer science ( lics06 ) _ , pages 367378 .",
    "ieee computer society press , 2006 .",
    "patricia bouyer , franck cassez , emmanuel fleury , and kim  g. larsen .",
    "optimal strategies in priced timed game automata . in _ proc .",
    "24th conference on foundations of software technology and theoretical computer science ( fst&tcs04 ) _ , volume 3328 of _ lecture notes in computer science _ , pages 148160 .",
    "springer , 2004 .",
    "patricia bouyer , deepak dsouza , p.  madhusudan , and antoine petit . timed control with partial observability . in _ proc .",
    "15th international conference on computer aided verification ( cav03 ) _ , volume 2725 of _ lecture notes in computer science _ , pages 180192 .",
    "springer , 2003 .",
    "omas brihaye , christian michaux , cdric rivire , and christophe troestler . on o - minimal hybrid systems . in _ proc .",
    "7th international workshop on hybrid systems : computation and control ( hscc04 ) _ , volume 2993 of _ lecture notes in computer science _ ,",
    "pages 219233 .",
    "springer , 2004 .",
    "luca de  alfaro , thomas  a. henzinger , and rupak majumdar .",
    "symbolic algorithms for infinite - state games . in _ proc .",
    "12th international conference on concurrency theory ( concur01 ) _ , volume 2154 of _ lecture notes in computer science _ , pages 536550 .",
    "springer , 2001 .",
    "omas  a. henzinger .",
    "hybrid automata with finite bisimulations . in _ proc .",
    "22nd international colloquium on automata , languages and programming ( icalp95 ) _ , volume 944 of _ lecture notes in computer science _ , pages 324335 .",
    "springer , 1995 .",
    "omas  a. henzinger , benjamin horowitz , and rupak majumdar .",
    "rectangular hybrid games . in _ proc .",
    "10th international conference on concurrency theory ( concur99 ) _ , volume 1664 of _ lecture notes in computer science _ , pages 320335 . springer , 1999 .",
    "felix klaedtke , stefan ratschan , and zhikun she",
    ". language - based abstraction refinement for hybrid system verification . in _ proc .",
    "8th international conference on verification , model checking , and abstract interpretation _ ,",
    "volume 4349 of _ lecture notes in computer science _ ,",
    "pages 151155 .",
    "springer - verlag , 2007 .",
    "margarita  v. korovina and nicolai vorobjov .",
    "pfaffian hybrid systems . in _ proc .",
    "18th international workshop on computer science logic ( csl04 ) _ , volume 3210 of _ lecture notes in computer science _ , pages 430441 .",
    "springer , 2004 .",
    "margarita  v. korovina and nicolai vorobjov .",
    "upper and lower bounds on sizes of finite bisimulations of pfaffian hybrid systems . in _",
    "volume 3988 of _ lecture notes in computer science _ , pages 267276 .",
    "springer , 2006 .",
    "anuj puri .",
    "dynamical properties of timed automata . in _ proc .",
    "5th international symposium on formal techniques in real - time and fault - tolerant systems ( ftrtft98 ) _ , volume 1486 of _ lecture notes in computer science _ , pages 210227 .",
    "springer , 1998 ."
  ],
  "abstract_text": [
    "<S> in this paper , we consider reachability games over general hybrid systems , and distinguish between two possible observation frameworks for those games : either the precise dynamics of the system is seen by the players ( this is the perfect observation framework ) , or only the starting point and the delays are known by the players ( this is the partial observation framework ) . in the first more classical framework , we show that time - abstract bisimulation is not adequate for solving this problem , although it is sufficient in the case of timed automata . </S>",
    "<S> that is why we consider an other equivalence , namely the suffix equivalence based on the encoding of trajectories through words . </S>",
    "<S> we show that this suffix equivalence is in general a correct abstraction for games . </S>",
    "<S> we apply this result to o - minimal hybrid systems , and get decidability and computability results in this framework . for the second framework which assumes a partial observation of the dynamics of the system </S>",
    "<S> , we propose another abstraction , called the superword encoding , which is suitable to solve the games under that assumption . in that framework </S>",
    "<S> , we also provide decidability and computability results . </S>"
  ]
}
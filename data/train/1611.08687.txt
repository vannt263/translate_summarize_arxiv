{
  "article_text": [
    "the increasing popularity and proliferation of large online social networks , together with the availability of enormous amounts of data about customer bases , has contributed to the rise of _ viral marketing _ as an effective strategy in promoting new products or ideas .",
    "this strategy relies on the insight that once a certain fraction of a social network adopts a product , a larger cascade of further adoptions is predictable due to the _ word - of - mouth _ network effect @xcite .",
    "inspired by social networks and viral marketing , domingos and richardson @xcite were the first to raise the following important algorithmic problem in the context of social network analysis : if a company can turn a subset of customers in a given network into early adopters , and the goal is to trigger a large cascade of further adoptions , which set of customers should they target ?",
    "we use the well - known threshold model to study the influence diffusion process in social networks from an algorithmic perspective .",
    "the social network is modelled by a node - weighted graph * @xmath6 * with @xmath7 representing individuals in the social network , @xmath8 denoting the social connections , and @xmath9 an integer - valued _ threshold function_. starting with a _ target set _ , that is , a subset @xmath10 of nodes in the graph , that are _ activated _ by some external incentive , influence propagates deterministically in discrete time steps , and _ activates _ nodes .    for any unactivated node @xmath0 ,",
    "if the number of its activated neighbors at time step @xmath11 is at least @xmath1 , then node @xmath0 will be activated in step @xmath9 .",
    "a node once activated stays activated .",
    "it is easy to see that if @xmath12 is non - empty , then the process terminates after at most @xmath13 steps .",
    "we call the set of nodes that are activated when the process terminates as the _ activated set_. the problem proposed by domingo and richardson @xcite can now be formulated as follows : given a social network @xmath14 , and an integer @xmath15 , find a subset @xmath16 of size @xmath15 so that the resulting activated set is as large as possible . in the context of viral marketing",
    ", the parameter @xmath15 corresponds to the budget , and @xmath12 is a target set that maximizes the size of the activated set .",
    "one question of interest is to find the cheapest way to activate the _ entire network _",
    ", when possible .",
    "the optimization problem that results has been called the _ target set selection problem _ , and has been widely studied ( see for eg .",
    "@xcite ) : the goal is to find a minimum - sized set @xmath10 that activates the entire network ( if such a set exists ) .",
    "in a certain sense , the elements of this minimum target set @xmath12 are the most influential people in the network ; if they are activated , the entire network will eventually be activated .",
    "there are , however , two hidden flaws in the formulation of the target set problem .",
    "first , the nodes in the target set are assumed to be activated immediately by external incentives , _ regardless of their own thresholds of activation_. this is not a realistic assumption ; in the context of viral marketing , it is possible , perhaps even likely , that highly influential nodes have high thresholds , and can not be activated by external incentives alone .",
    "secondly , there is no possibility of giving _ partial _ external incentives ; indeed the target set is activated _ only _ by external incentives , and the remaining nodes _ only _ by the internal network effect .    in this paper",
    ", we address the flaws mentioned above .",
    "we study a related but different problem .",
    "suppose alice wants to join a new social network , whom should she befriend if her goal is to influence the entire social network ?",
    "in other words , to whom should alice create links , so that she can activate the entire network ?",
    "if alice creates a link to a node @xmath0 , the threshold of @xmath0 is only effectively reduced by one , and so @xmath0 in turn is activated only if its threshold is one .",
    "the problem can be generalized to any set of @xmath15 external influencers that wish to collectively `` take over '' a network .",
    "we call our problem the _ minimum links _ problem ( min - links ) .",
    "the min - links problem provides a new way to model a viral marketing strategy , which addresses the flaws described in the target set problem formulation .",
    "the links added from the external nodes correspond to the external incentive given to the endpoints of these links .",
    "the nodes that are the endpoints of these new links may not be immediately completely activated , but their thresholds are effectively reduced ; this corresponds to their receiving partial incentives .",
    "one way of seeing this is that every individual to whom we link is given a $ 10 coupon ; for some people this may be enough for them to buy the product , for others , it reduces their resistance to buying it .",
    "individuals with high thresholds can not be activated only by external incentives .",
    "the min - links problem also has important applications in epidemiology or the spread of epidemics : in the spread of a new disease , where an infected person or a set of infected people arrives from _ outside _ a community , the min - links problem corresponds to identifying the smallest set of people such that if the infected external people have contact with this set , the entire community could potentially be infected .",
    "observe that the solution to the min - links problem can be quite different from the solution to the target set selection problem for a given network . for example , consider a star network , where the leaves all have threshold 1 , while the central node has degree @xmath13 and has threshold @xmath17 .",
    "the optimal target set is the central node , while the only solution to the min - links problem with a single influencer is to create links to all nodes in the network .",
    "thus , a solution to the min - links problem can be arbitrarily larger than one to the target set selection problem for the same social network .",
    "however , any solution to the min - links problem is clearly also a feasible solution to the target set selection problem .",
    "we prove that there exists a ( gap - preserving ) reduction from the classical target set selection problem to the min - links problem . using the important results by @xcite",
    ", this implies that the min - links problem , even in presence of a single external influencer , can not be approximated to within a ratio of @xmath2 , for any fixed @xmath3 , unless @xmath4 , where @xmath5 is the number of nodes in the graph . in light of this hardness result , we study the complexity of the problem for networks that can be represented as trees , cycles , and cliques . in each case , we give a necessary and sufficient condition for the feasibility of the min - links problem , based on the structural properties and an observation of the threshold function .",
    "we then give @xmath18 algorithms to solve the min - links problem for all the studied graph topologies .",
    "we also give exact bounds on the number of links needed to activate the entire network for all the above specific topologies , as a function of the threshold values . finally , we present a polynomial time algorithm that , given an arbitrary network @xmath19 and a number of influencers equal to the maximum node threshold , computes a `` small '' set of links sufficient to activate the whole network .",
    "our polynomial time algorithm always returns a solution for @xmath19 of size at most @xmath20 , where @xmath21 is the degree of the vertex @xmath0 .",
    "the problem of identifying the most influential nodes in a social network has received a tremendous amount of attention @xcite .",
    "the algorithmic question of choosing the target set of size @xmath15 that activates the most number of nodes in the context of viral marketing was first posed by domingos and richardson @xcite .",
    "@xcite started the study of this problem as a discrete optimization problem , and studied it in both the probabilistic independent cascade model and the threshold model of the influence diffusion process .",
    "they showed the np - hardness of the problem in both models , and showed that a natural greedy strategy has a @xmath22-approximation guarantee in both models ; these results were generalized to a more general cascade model in @xcite .    in the target",
    "set selection problem , the size of the target set is not specified in advance , but the goal is to activate the entire network .",
    "namely , given a graph @xmath19 and fixed arbitrary thresholds @xmath1 , @xmath23 , find a target set of minimum size that eventually activates all ( or a fixed fraction of ) nodes of @xmath19 .",
    "chen @xcite proved a strong inapproximability result for the target set selection problem that makes unlikely the existence of an algorithm with approximation factor better than @xmath24 .",
    "a polynomial - time algorithm for trees was given in the same paper .",
    "chen s inapproximability result stimulated a series of papers ( see for instance @xcite and references therein quoted ) that isolated many interesting scenarios in which the problem and variants thereof become tractable .",
    "ben - zwi et al .",
    "@xcite generalized chen s result on trees to show that target set selection can be solved in @xmath25 time where @xmath26 is the treewidth of the input graph .",
    "the effect of several parameters , such as diameter and vertex cover number , of the input graph on the complexity of the problem are studied in @xcite .",
    "the minimum target set has also been studied from the point of view of the spread of disease or epidemics .",
    "for example , in @xcite , the case when all nodes have a threshold @xmath15 is studied ; the authors showed that the problem is np - complete for fixed @xmath27 .    maximizing",
    "the number of nodes activated within a specified number of rounds has also been studied @xcite .",
    "the problem of dynamos or dynamic monopolies in graphs ( eg .",
    "@xcite ) is essentially the target set problem restricted to the case when every node s threshold is half its degree .",
    "the recent monograph @xcite contains an excellent overview of the area .",
    "the paper closest to our work is @xcite , in which demaine _ et al . _",
    "introduce a model to _ partially incentivize _ nodes to maximize the spread of influence .",
    "our work differs from theirs in several ways .",
    "first , they study the maximization of influence given a fixed budget , while we study in a sense the budget ( number of links ) needed to activate the entire network .",
    "second , they consider thresholds chosen uniformly at random , while we study arbitrary thresholds . finally , they allow arbitrary fractional influence to be applied externally on any node , while in our model , every node that receives a link has its threshold reduced by the same amount .",
    "given a social network represented by an undirected graph @xmath28 , we introduce a set of external nodes @xmath29 that are assumed to be already activated .",
    "we assume that all edges have unit weight ; this is generally called the _ uniform weight assumption _ , and has previously been considered in many papers @xcite .",
    "link set _ for @xmath30 is a set @xmath12 of links between nodes in @xmath29 and nodes in @xmath31 , i.e @xmath32 . for a link set @xmath12 , we define @xmath33 , that is , @xmath34 is the set of @xmath31-endpoints of links in @xmath12 . for a node @xmath0 ,",
    "define @xmath35 to be the number of links in @xmath12 for which @xmath0 is an endpoint .",
    "since the set of external nodes @xmath29 is already activated , observe that adding the link set @xmath12 to @xmath19 is equivalent to reducing the threshold of the node @xmath0 by @xmath35 . in the viral marketing scenario ,",
    "the link set @xmath12 represents giving @xmath0 a partial incentive of @xmath35 @xcite .",
    "given a link set @xmath12 for a graph @xmath19 , we define @xmath36 to be the set of nodes in @xmath19 that are eventually activated as a result of adding the link set @xmath12 , that is , by reducing the threshold of each node @xmath37 by @xmath38 , and then running the influence diffusion process .",
    "see figure  [ link - set - example ] for an illustration .",
    "observe that in the target set formulation , this is the same as the set of nodes activated by using @xmath29 as the target set in the graph @xmath39 , the graph obtained from @xmath19 by adding the set @xmath29 to the node set and the set @xmath12 to the set of edges .",
    "is the only external influencer and is assumed to be activated .",
    "links in the link set are shown with dashed edges .",
    "the given link set activates the entire network and is an optimal pervading link set.,height=192 ]    a link set @xmath12 such that @xmath40 , that is , @xmath12 activates the entire network , is called a _ pervading link set_. a pervading link set of minimum size is called an _",
    "optimal pervading link set .",
    "_    * minimum links ( min - links ) problem : * given a social network @xmath41 , where @xmath9 is the threshold function on @xmath31 , and a set of external nodes @xmath29 , find an optimal pervading link set for @xmath30 .    for each node @xmath37",
    ", we say we _ give _",
    "@xmath0 a link , or that @xmath0 _ receives _ a link .",
    "in our algorithms , we express a link set as a _ link vector _ , @xmath42 , where @xmath35 , as defined earlier , is an integer representing the number of links between external nodes in @xmath29 and the vertex @xmath43 .",
    "the external influencer - endpoints of these links are understood to be distinct , but otherwise can be chosen arbitrarily within @xmath29 .",
    "if activating @xmath44 activates , directly or indirectly , the set of vertices @xmath45 , we write @xmath46 ( note that there may be vertices outside @xmath45 that @xmath47 activates ) .",
    "we write @xmath48 instead of @xmath49 .",
    "the minimum cardinality of a link set for a min - links instance @xmath19 is denoted @xmath50 .",
    "observe that for some graphs , and some sizes of the external influencer set , a pervading link set may not exist .",
    "for example , consider a singleton node of threshold greater than 1 , and a single influencer .",
    "the existence of a feasible solution can be verified in @xmath51 time by giving @xmath15 links to every node in @xmath31 , and simulating the influence diffusion process .",
    "in this section , we consider the complexity of the min - links problem .",
    "we prove the following result .    in networks with @xmath5 nodes min - links problem",
    "can not be approximated to within a ratio of @xmath2 for any fixed @xmath3 , unless @xmath4 , even if the network has bounded degree , and all thresholds are at most 2 .",
    "we construct a gap - preserving reduction from the target set selection ( tss ) problem .",
    "we recall that , given an input graph @xmath19 and a threshold function @xmath9 , the tss problem asks for a minimum size subset of vertices of @xmath19 that can activate all the other vertices .",
    "the inapproximability claim of the theorem follows from the inapproximability result of tss proved in @xcite , which holds even for graphs with bounded degree , when the thresholds are at most 2 .",
    "starting from an input instance of the tss problem , that is , a bounded - degree graph @xmath52 with threshold function @xmath9 , such that @xmath53 for all vertices @xmath54 , we build an instance of the min - links problem with a single influencer .",
    "define the graph @xmath55 as follows :    * @xmath56 where @xmath57 .",
    "in particular , * * we replace each @xmath54 by the gadget @xmath58 ( cf .",
    "[ fig : gadget ] ) in which the node set is @xmath59 and @xmath60 and @xmath61 are connected by the disjoint paths ( @xmath62 ) for @xmath63 ; * * the threshold of @xmath60 in @xmath39 is equal to the threshold @xmath1 of @xmath0 in @xmath19 , while each other node in @xmath59 has threshold equal to 1 .",
    "+ @xmath64 @xmath65 .    summarizing ,",
    "@xmath39 is constructed in such a way that for each gadget @xmath58 , the node @xmath60 plays the role of @xmath0 and is connected to all the gadgets representing neighbors of @xmath0 in @xmath66 hence , @xmath19 corresponds to the subgraph of @xmath39 induced by the set @xmath67 it is worth mentioning that during an influence diffusion process if any node that belongs to a gadget @xmath58 is active , then all the vertices in @xmath58 will be activated within the next @xmath68 steps .",
    "moreover , there is only one influencer and the influencer set is @xmath69 .",
    "observe that all thresholds in @xmath39 are at most @xmath70 , and @xmath39 remains of bounded degree .",
    "we claim that there is a target set @xmath71 for @xmath19 of cardinality @xmath72 _ if and only _ if there is a pervading link set for @xmath73 of size @xmath15 .",
    "assume that @xmath74 is a target set for @xmath19 , we consider the set of links @xmath75 , with @xmath76 , defined as @xmath77 to see that @xmath75 is a pervading link set , we notice that @xmath78 within three steps .",
    "consequently , recalling that @xmath79 is a target set and that @xmath19 is isomorphic to the subgraph of @xmath39 induced by @xmath80 , all the vertices @xmath81 will be activated , that is @xmath82 .",
    "on the other hand , assume that @xmath75 is a pervading link set for @xmath73 and @xmath76 , we can easily build a target set @xmath83 by construction @xmath84 .",
    "we show now that @xmath79 is a target set for @xmath19 . to this aim , for each @xmath54 we consider two cases according to how the node @xmath85 associated with @xmath0 is activated in @xmath39 :    * if there exists @xmath86 such that @xmath87 then , by construction @xmath88 .",
    "* suppose otherwise that for each @xmath86 it holds that @xmath89 . in order to activate @xmath60 ( and afterwards any other node in @xmath58 ) , there must exist a step @xmath90 when at least @xmath1 of the neighbors of @xmath60 in @xmath91 are active .",
    "now we recall that @xmath19 is the subgraph of @xmath39 induced by the set @xmath92 .",
    "hence , for each step @xmath93 and for each @xmath60 which is active in @xmath39 at step @xmath90 ( with link set @xmath75 ) , we conclude that the corresponding node @xmath0 must be active in @xmath19 by step @xmath90 ( with target set @xmath79 ) .",
    "consequently any node @xmath0 will be activated in @xmath19 .",
    ": ( left ) a generic node @xmath43 having degree @xmath21 and threshold @xmath94 ; ( right ) the gadget @xmath58 , having @xmath95 vertices , associated to @xmath0 . [",
    "fig : gadget ] ]    in the case of very small degree bound , it has been proved in @xcite that the min - links problem is np - hard ; in fact , it is almost as hard as set - cover to approximate , even if @xmath19 has degree bounded by @xmath68 and thresholds bounded by @xmath70 .",
    "@xcite the decision version of min - links is np - complete , even when restricted to instances with maximum degree @xmath68 and maximum threshold @xmath70 .",
    "moreover , there exists a constant @xmath96 such that the optimization version of min - links , under the same restrictions , is np - hard to approximate within a @xmath97 factor , where @xmath5 is the number of nodes of the given graph .",
    "in this section , we give linear time algorithms to solve the minlinks problem for trees , cycles , and cliques , for any given set of @xmath15 external influencers ( i.e. a single node is able to receive up to @xmath15 links ) .",
    "hereafter , the external influencers are @xmath98 and a solution @xmath12 for a graph @xmath19 consists in a set of distinct links @xmath99 where @xmath100 and @xmath101 .",
    "we start with the following simple observation :    [ impossible ] a graph @xmath19 does not have a pervading link set if it has a node @xmath0 such that @xmath102 , or if every node has threshold strictly greater than @xmath15 .      in contrast to the np - completeness of the min - links problem shown in the previous section , we now show that there is a linear time algorithm to solve the problem in trees .",
    "we start with a necessary and sufficient condition for a tree @xmath79 to have a valid pervading link set .",
    "let @xmath79 be a tree and let @xmath0 be a leaf in @xmath79 .",
    "let @xmath103 and @xmath104 be the same as @xmath105 except that the threshold of @xmath26 , the neighbor of @xmath0 in @xmath79 , is reduced by 1",
    ". then @xmath79 has a pervading link set if and only if ( a ) either @xmath106 and @xmath104 has a pervading link set or ( b ) @xmath107 and @xmath105 has a pervading link set .",
    "[ necc - suff - tree ]    we now prove a critical lemma that shows that for any node @xmath0 in the tree , there is an optimal solution that gives @xmath108 links to @xmath0 .",
    "[ lemma : tree ] let @xmath79 be a tree with @xmath5 nodes that has a pervading link set , and let @xmath0 be a node in @xmath79 .",
    "then there exists an optimal solution for min - links@xmath109 in which @xmath0 gets @xmath110 links .",
    "we prove the lemma by induction on the number of nodes @xmath5 in the tree .",
    "clearly it is true if @xmath111 .",
    "suppose @xmath112 , and let @xmath12 be an optimal pervading link set for @xmath79 .",
    "moreover , choose @xmath12 such that @xmath0 receives a maximum number of links among all optimal solutions .",
    "if @xmath0 gets @xmath110 links , we are done .",
    "if not , then @xmath0 can not be activated by external influence alone , and so @xmath0 must have a neighbor @xmath26 that is activated before it , and that contributes to the activation of @xmath0 .",
    "let @xmath113 and @xmath114 be the two trees created by removing the edge between @xmath0 and @xmath26 , with @xmath113 containing @xmath26 , and let @xmath115 ( respectively @xmath116 ) be the links of @xmath12 with an endpoint in @xmath113 ( respectively @xmath114 ) . since @xmath79 is a tree , and @xmath0 is activated after @xmath26 by @xmath12 , none of the links in @xmath116 can contribute to the activation of nodes in @xmath113 .",
    "it follows that @xmath115 is a pervading link set for @xmath113 , and in fact is optimal , as a smaller solution for @xmath113 could be combined with @xmath116 to yield a better solution for @xmath79 , contradicting the optimality of @xmath12 . by the inductive hypothesis , there is an optimal solution @xmath75 for @xmath113 that gives @xmath117 links to @xmath26 .",
    "note that @xmath118 , and @xmath119 must also be an optimal solution for @xmath79 .",
    "let @xmath120 be an external influencer not giving a link to @xmath0 in @xmath119 , and let @xmath121 be an external influencer giving a link to @xmath26 in @xmath119 ( note that @xmath120 and @xmath121 must exist ) .",
    "clearly @xmath122 also activates the entire tree @xmath79 ( because the @xmath26 influence on @xmath0 is replaced by @xmath99 , and so @xmath0 still activates , and the @xmath123 influence on @xmath26 is replaced by @xmath0 s activation ) .",
    "moreover since @xmath124 , we conclude that @xmath125 is an optimal solution for @xmath79 .",
    "but @xmath125 gives more links to @xmath0 than @xmath12 , contradicting our choice of @xmath12 .",
    "we deduce that there is an optimal pervading link set that gives @xmath110 links to @xmath0 , as needed to complete the proof by induction .",
    "the above lemma suggests a simple way to break up the min - links problem for a tree into subproblems that can be solved independently , which yields a linear - time greedy algorithm .",
    "the min - links problem can be solved for trees in linear time .",
    "[ tree - algo ]    given a tree @xmath79 , let @xmath0 be an arbitrary leaf in the tree . by lemma  [ lemma : tree ] , there is an optimal solution , say @xmath12 , to the min - links problem for @xmath79 that gives @xmath110 links to @xmath0 .",
    "let @xmath126 be the set of links given to @xmath0 .",
    "suppose @xmath127 , then the links given to @xmath0 are not enough to activate @xmath0 , and therefore @xmath0 s neighbor @xmath26 must contribute to the activation of @xmath0 .",
    "also , @xmath0 s activation can not help in activating any other nodes in @xmath79 .",
    "thus @xmath128 must be an optimal solution to @xmath129 .",
    "suppose instead that @xmath106 .",
    "then the links given to @xmath0 activate it immediately .",
    "consider the induced subgraph @xmath130 of @xmath79 that contains @xmath0 , plus every node of @xmath79 of threshold 1 .",
    "let @xmath131 be the connected component ( subtree ) of @xmath130 that contains @xmath0 ( note that @xmath131 might have only @xmath0 ) . then clearly @xmath132 .",
    "since @xmath12 is optimal , @xmath12 can not contain any link to a node in @xmath131 except for @xmath0 .",
    "construct @xmath105 by removing @xmath131 from @xmath79 , and subtracting 1 from the threshold of any node @xmath133 who is a neighbor of a node in @xmath131 .",
    "observe that any such node @xmath133 can be a neighbor of exactly one node in @xmath131 , since @xmath79 is a tree",
    ". then @xmath128 must be an optimal solution to @xmath105 ; if instead there is a smaller - sized solution to @xmath105 , we can add the links from @xmath126 to @xmath0 to that solution to obtain a smaller solution for @xmath79 than @xmath12 , contradicting the optimality of @xmath12 .",
    "the above argument justifies the correctness of the following simple greedy algorithm .",
    "initialize @xmath134 .",
    "take a leaf @xmath0 in the tree . if @xmath135 then there is no solution by observation  [ impossible ] . if @xmath107 , then give @xmath15 links to @xmath0 in @xmath12 , remove @xmath0 from the tree , and recursively solve the remaining tree .",
    "if @xmath106 , then give @xmath1 links to @xmath0 ( from arbitrary influencers ) , remove the subtree of @xmath79 that is connected to @xmath0 consisting only of nodes of degree 1 , reduce the thresholds of all neighbors of the nodes in this subtree by 1 , and recursively solve the resulting trees .",
    "it is easy to see that the algorithm can be implemented in linear time .    for the network in figure  [ link - set - example ] , assuming that leaves in the tree are always processed in alphabetical order , the greedy algorithm given in theorem  [ tree - algo ] first picks node @xmath136 and adds a link to it .",
    "we then remove nodes @xmath136 and @xmath137 , and reduce the threshold of @xmath138 by 1 .",
    "next we pick @xmath139 , give it a link , remove it from the tree , and decrement @xmath140 to 2 . the next leaf that is picked and given",
    "a link is @xmath138 ; since @xmath138 s threshold now is 1 , we remove @xmath138 and @xmath141 from the tree , and reduce @xmath142 s threshold to 1 . proceeding in this way , we arrive at the link set shown .    we now give an exact bound on @xmath143 , the number of links required to activate the entire tree @xmath79 :    let @xmath79 be a tree that has a pervading link set . then @xmath144 [ tree - ml ]    we give a proof by induction on the number of nodes @xmath5 in the tree .",
    "clearly if the tree consists of a single node @xmath133 , there is a solution if and only if @xmath145 , and the number of links needed is @xmath146 which is equal to @xmath147 as needed . now consider a tree @xmath79 with @xmath148 nodes and let @xmath133 be a leaf in the tree . then by lemma  [ lemma : tree ] , there is an optimal solution @xmath12 in which @xmath133 gets a set @xmath149 of @xmath150 links . by observation  [ impossible ] , there is a solution only if @xmath151 .",
    "let @xmath152 ( all nodes keep the same thresholds as in @xmath79 ) and let @xmath104 be the tree derived from @xmath79 by removing @xmath133 and reducing the threshold of @xmath26 , the neighbor of @xmath133 in @xmath79 by 1 .",
    "first we consider the case when @xmath153 .",
    "then giving @xmath15 links to @xmath133 from @xmath149 is not sufficient to activate it . by the usual cut - and - paste argument",
    ", @xmath154 must be an optimal solution for tree @xmath105 .",
    "@xmath155    next we consider the case when @xmath145 , and @xmath156 .",
    "then @xmath133 is immediately activated by the @xmath146 links it receives in @xmath12 , and the activation of @xmath133 effectively reduces the threshold of @xmath26 .",
    "therefore , @xmath154 must be an optimal solution for the tree @xmath104 in which the threshold of @xmath26 is @xmath157 .",
    "it follows that    @xmath158    finally suppose @xmath145 and @xmath159 .",
    "then it is impossible that @xmath12 contains a link to @xmath26 , as this would contradict the optimality of @xmath12 .",
    "therefore , we can move one link from node @xmath0 to node @xmath26 , to get a new optimal pervading link set @xmath75 for @xmath79 . furthermore",
    ", @xmath160 must also be an optimal pervading link set for @xmath105 .",
    "it follows that    @xmath161    we remark that in contrast to the intuition for the optimal target set problem , where we would choose nodes of high degree or threshold to be in the target set , in the min - links problem , our algorithm gives links to leaves initially , though eventually nodes that were internal nodes in the tree may also receive links .",
    "that is , the best nodes to befriend might be the nodes with a single connection to other nodes in the tree !      in this section , we give a solution for the min - links problem on cycles .",
    "let @xmath162 be a cycle with @xmath5 nodes , @xmath163 , @xmath164 , and @xmath165 .",
    "we define @xmath166 @xmath167 to be the sub - path of @xmath168 consisting of all nodes in @xmath169 in the clockwise direction .",
    "we may use the @xmath170 $ ] notation to denote the vertices of @xmath166 . by _ consecutive vertices of threshold @xmath171 _ , we mean two vertices @xmath172 such that the only two vertices in @xmath173 with threshold @xmath171 are @xmath90 and @xmath174 .",
    "a cycle has a pervading link set if and only if the following conditions hold : + ( 1 ) there is at least one node of threshold at most @xmath15 , + ( 2 ) every node is of threshold at most @xmath171 , + ( 3 ) between any two consecutive nodes of threshold @xmath171 , there is at least one node of threshold at most @xmath15 .",
    "[ necc - suff - cycle ]    the necessity of the first two conditions follows from observation  [ impossible ] .",
    "as for the third condition , suppose there are two consecutive nodes @xmath90 and @xmath174 of threshold @xmath171 , such that all nodes between them have threshold @xmath175 . then both nodes @xmath90 and @xmath174 needs both their neighbors to be activated before them ( even if they receive @xmath15 links ) , but meanwhile , since there is no node of threshold @xmath15 or less in @xmath176 $ ] , no node in the sub - path @xmath177 can be activated .",
    "therefore none of the nodes in the sub - path @xmath166 can be activated .",
    "conversely , if all three conditions listed in the statement are met , it is easy to see that by giving @xmath15 links to every node in the cycle , all the nodes in the cycle can be activated .",
    "we note that a similar condition can be stated for paths , with the additional restriction that there must be a node of threshold at most @xmath15 before ( after ) the first ( last resp . ) node of threshold @xmath171 , if any .",
    "we give a linear time algorithm for finding a minimum - sized link set for problem min - links@xmath178 .",
    "essentially we reduce the problem to finding an optimal solution for an appropriate path .",
    "the min - links problem for a cycle @xmath168 can be solved in linear time .",
    "[ cycle - algo ]    if all nodes are of threshold 1 , or if there is a single node with threshold @xmath70 , and the remaining nodes all have threshold 1 , then by giving a link to _ any _ of the nodes with threshold 1 , we can activate the entire cycle , and this is clearly optimal .",
    "therefore , in what follows , we assume that one of the following cases holds :    a.   the minimum threshold is greater than 1 , b.   the minimum threshold is 1 , and there are at least two nodes with threshold @xmath179 , or c.   the minimum threshold is 1 and there is exactly one node with threshold @xmath180 .",
    "fix an arbitrary node @xmath90 of minimum threshold in @xmath168 .",
    "we define @xmath181 and @xmath182 to be the first node with threshold @xmath183 in @xmath90 s clockwise direction and counter clockwise direction respectively .",
    "observe that in cases ( a ) and ( b ) , @xmath184 ( see figure [ fig : cycle1 ] ) , and in case ( c ) above , @xmath185 .",
    "we also define @xmath186 to be the path from @xmath181 to @xmath182 , except that in cases ( a ) and ( b ) , we decrement @xmath187 and @xmath188 by 1 ; and in case ( c ) , the path contains a single node @xmath181 , and we decrement the threshold of @xmath181 by 2 .",
    "we now prove that an optimal solution to minlinks(@xmath168 ) can be constructed by giving @xmath189 links to @xmath90 and combining them with an optimal solution to @xmath186 .",
    "we first claim that there exists an optimal solution that gives @xmath189 links to @xmath90 . to see this ,",
    "let @xmath12 be an optimal solution that gives @xmath190 links to node @xmath90 .",
    "observe that @xmath191 , as otherwise it is impossible for @xmath90 to be activated .",
    "first suppose @xmath192 .",
    "this means one of @xmath90 s neighbours must activate @xmath90 .",
    "we follow the chain of activation to @xmath90 , which must start at some node @xmath174 which is activated entirely by external influence .",
    "that is , @xmath12 must give @xmath193 links to @xmath174 . without loss of generality , we assume @xmath194 .",
    "let @xmath195 be such that @xmath196 and @xmath197 .",
    "such a @xmath195 must exist since @xmath174 received @xmath193 links and @xmath198 as @xmath90 was a node of minimum threshold in @xmath168 while @xmath90 received @xmath199 links by assumption .",
    "we now construct a new solution @xmath200 by moving a link from @xmath174 to @xmath90 .",
    "since @xmath90 receives @xmath189 links in @xmath75 , the node @xmath90 is immediately activated .",
    "furthermore , @xmath201 .",
    "finally , since @xmath174 receives @xmath202 links in @xmath75 , and @xmath203 is activated , node @xmath174 is activated in the next step .",
    "thus @xmath75 is a solution of the same size as @xmath12 , that gives @xmath189 links to @xmath90 as needed .",
    "next suppose @xmath204 .",
    "then both neighbours of @xmath90 must be activated by @xmath12 before @xmath90 , and both serve to activate @xmath90 .",
    "we then follow the chain of activation in both directions from @xmath90 and find nodes @xmath205 and @xmath206 that were activated entirely by external influence ( it is possible that @xmath207 ) .",
    "we then move a link from each of @xmath205 and @xmath206 to @xmath90 .",
    "now @xmath90 is activated entirely by external influence and eventually activates @xmath205 and @xmath206 .",
    "this completes the proof of the claim that there exists an optimal solution that gives @xmath189 links to @xmath90 .",
    "consider therefore an optimal solution @xmath12 that gives @xmath189 links to the node @xmath90 ; let us call this set of links @xmath208 .",
    "it is not hard to see that that @xmath209 must be an optimal solution to min - links@xmath210 , since activating @xmath90 activates @xmath211 $ ] and lowers the threshold of @xmath182 and @xmath181 by 1 each in cases ( a ) and ( b ) above and lowers the threshold of @xmath181 by 2 in case ( c ) above .",
    "finally , since the min - links problem for a path can be solved in linear time according to theorem [ tree - algo ] , we can construct an optimal solution for a cycle in linear time as well .",
    "has minimum threshold @xmath9 , while @xmath182 and @xmath181 are the nodes closest to @xmath90 that have threshold higher than @xmath212 . ]",
    "we give an exact bound on the number of links required to fully activate a cycle .    given a cycle @xmath162",
    "which has a pervading link set , then @xmath213 [ cycle - ml ]    if all nodes have threshold 1 , then @xmath214 . if one node has threshold 2 , and all the remaining nodes have threshold 1 , then @xmath215 . finally , for all remaining cases , it follows from the optimality of our algorithm that @xmath216 where @xmath90 is a node of minimum threshold in @xmath168 , and the value of @xmath217 is 2 less in @xmath218 than in @xmath168 . by theorem  [ tree - ml ] , we have @xmath219}(t(j ) -1)$ ] . therefore @xmath220}(t(j ) -1 ) = \\sum_{j=1}^n ( t(j ) - 1)$ ] .",
    "in this section , we give an algorithm to solve the min - links problem on cliques .",
    "let @xmath221 be a clique with @xmath5 nodes , @xmath222 and @xmath223 and @xmath224 .",
    "we first show a necessary and sufficient condition for the min - links problem to have a feasible solution :    let @xmath225 be a clique with @xmath226 , for all @xmath227 .",
    "then @xmath225 has a pervading link set if and only if @xmath228 for all @xmath229 .",
    "[ necc - suff - clique ]    if @xmath230 for all @xmath231 , it is easy to see that there exists a solution @xmath12 by giving @xmath15 links to every node @xmath90 ; we claim that node @xmath90 is activated in or before round @xmath90 .",
    "since @xmath232 , node 1 is activated in round 1 .",
    "inductively , node 1 to @xmath233 are already activated in round @xmath233 , the effective threshold of node @xmath90 has been reduced to at most @xmath15 .",
    "node @xmath90 receives @xmath15 links , therefore , node @xmath90 must be activated in the @xmath234 round , if it is not already activated .",
    "conversely , suppose there exist nodes @xmath174 such that @xmath235 and there exists a solution @xmath12 to the min - links problem ; let @xmath205 be the smallest such node with @xmath236 . in order to activate any node @xmath237",
    ", at least @xmath205 nodes have to be activated before @xmath206 , since @xmath238 .",
    "however , there are only @xmath239 nodes that can be activated before any such node @xmath237 .",
    "thus no node @xmath206 with @xmath237 can be activated , a contradiction .",
    "we now give a greedy algorithm to solve the min - links problem on a clique .",
    "the min - links problem for a clique @xmath225 can be solved in time @xmath240 .",
    "[ clique - algo ]    first sort the nodes in order of threshold . by observation",
    "[ impossible ] , there is no solution if any node has a threshold greater than @xmath241 , therefore , we can use counting sort and complete the sorting in @xmath240 time . clearly , the condition given in proposition  [ necc - suff - clique ] can easily be checked in linear time .",
    "we now give the following greedy linear time algorithm for a clique which has a feasible solution : give @xmath242 links to node 1 in order to activate it , and let @xmath243 be the smallest value such that node @xmath174 is not activated after activating node @xmath212 . remove all nodes in @xmath244 , decrement by @xmath245 the thresholds of all nodes @xmath246 , and solve the resulting graph recursively .",
    "it is easy to see that this algorithm can be implemented in linear time , in an iterative fashion as follows : we examine the nodes in order .",
    "when we process node @xmath90 , if @xmath247 , we simply increment @xmath90 and continue ; if @xmath248 , we give @xmath249 links to node @xmath90 ( note that we assume @xmath230 , and so @xmath250 ) .",
    "we now show that the link set produced by this greedy algorithm is optimal .",
    "first we show that there must be an optimal solution that gives @xmath242 links to the node @xmath212 .",
    "consider an optimal solution @xmath12 in which node @xmath212 gets @xmath251 links .",
    "we follow the chain of activations by @xmath12 to node @xmath212 .",
    "let @xmath252 be the set of nodes that is activated by external influence alone according to solution @xmath12 , and suppose @xmath253 .",
    "then @xmath254 .",
    "we construct a new solution @xmath75 by moving @xmath255 links from some node @xmath256 to node 1 .",
    "observe that @xmath90 received @xmath257 links in @xmath12 , and so there are enough links to move .",
    "furthermore , the nodes in @xmath258 are activated entirely by external influence in @xmath75 . also since @xmath259 , and",
    "all nodes are connected , @xmath260 .",
    "finally , together with the @xmath261 links that @xmath75 gives to @xmath90 , we have @xmath262 . the rest of the activation proceeds in the same way in @xmath12 and @xmath75 .",
    "since @xmath75 is a solution of the same size as @xmath12 that gives @xmath242 links to node @xmath212 , the claim is proved .",
    "let @xmath263 be the links given to node @xmath212 in @xmath12 .",
    "next we claim that @xmath264 is an optimal solution to the clique @xmath265 which is the induced sub - graph on the nodes @xmath266 where @xmath267 is the smallest index with @xmath268 , and with thresholds of all nodes reduced by @xmath245 .",
    "suppose there is a smaller solution @xmath75 to @xmath265 .",
    "we claim that @xmath269 activates all nodes in the clique @xmath225 .",
    "since for any node @xmath270 , we have @xmath271 , it can be seen inductively that @xmath115 suffices to activate node @xmath15 .",
    "thus , all nodes in @xmath272 are activated .",
    "furthermore , the thresholds of all nodes in @xmath266 are effectively reduced by @xmath245 .",
    "thus using the links in @xmath75 suffices to activate them .",
    "finally , since @xmath273 , @xmath269 is a smaller solution than @xmath12 to the clique @xmath225 , contradicting the optimality of @xmath12 for @xmath225 .",
    "we conclude that the greedy algorithm described above produces a minimum sized solution to the min - links problem",
    ".    the following tight bound on the minimum number of links to activate an entire clique is immediate :    given a clique @xmath225 which has a feasible solution , let @xmath274 .",
    "then @xmath275 [ clique - ml ]",
    "in this section we design an algorithm , that works for arbitrary graphs @xmath276 , to efficiently allocate links to nodes in @xmath31 from a set of external nodes @xmath29 in such a way that , assuming that the nodes in @xmath29 are already activated , they trigger an influence diffusion process that activates the whole network .",
    "we assume @xmath277 , where @xmath278 is the maximum threshold of nodes in @xmath31 so that there is always an feasible solution for the min - links problem .",
    "our procedure is formally presented in algorithm [ alg2 ] .",
    "the algorithm works by computing a link vector @xmath42 , where @xmath35 is an integer representing the number of links between external nodes in @xmath29 and the vertex @xmath43 .",
    "as observed in section [ notation ] , the @xmath35 links to @xmath0 can be seen as a partial incentive to node @xmath0 . from any link vector @xmath279",
    ", one can get link sets @xmath12 between nodes in @xmath29 and nodes in @xmath31 . in the following",
    "we say that a link vector @xmath279 is a pervading link vector when any corresponding set @xmath12 is a _ pervading link set_.    the algorithm proceeds by iteratively deleting nodes from the graph @xmath19 , and at each iteration the node to be deleted is chosen to maximize a certain parameter ( case 2 ) .",
    "if , during the deletion process , a node @xmath0 in the surviving graph remains with less neighbors than its current threshold ( case 1 ) , then a set of links ( or equivalently a partial incentive ) is added to @xmath0 so that @xmath0 s new threshold is equal to the number of neighbours of @xmath0 in the surviving graph .    in the sequel ,",
    "we denote by @xmath280 the set of nodes that are active at step @xmath174 of the influence diffusion process on the network @xmath19 augmented with a set of links determined by the link vector @xmath279 .",
    "namely , let @xmath281 denote the neighborhood of @xmath282 in @xmath19 , we have @xmath283 and @xmath284 , for all @xmath285 . the pseudocode for our algorithm",
    "is given in algorithm tpi(@xmath19 ) .    .",
    "the number inside each circle is the node threshold.[fig : k ] ]    @xmath286 ; + ( ) @xmath287 ( . )",
    "@xmath288 s.t .",
    "@xmath289 @xmath290 ; + @xmath291 ; + ( ) k(v)=0@xmath292 ( ) @xmath293 ; + @xmath292 @xmath279    [ ex-4a ] consider a complete graph on 7 nodes with thresholds @xmath294 , @xmath295 ( cf .",
    "[ fig : k ] ) . a possible execution of the algorithm",
    "is summarized below . at each iteration of the while loop , the algorithm considers the nodes in the order shown in the table below , where we also indicate for each node whether cases 1 or 2 applies and the updated value of the number of links for the selected node :    [ cols=\"<,<,<,<,<,<,<,<,<\",options=\"header \" , ]     the algorithm @xmath296 outputs the link vector @xmath279 having non zero elements @xmath297 , for which we have @xmath298    we first prove the correctness and complexity of the algorithm .",
    "subsequently , we compute an upper bound on the number of links in the pervarding link set , that is , an upper bound on @xmath299 . to this end , we define the following notation .",
    "let @xmath300 be the number of iterations of the while loop in tpi(@xmath19 ) .",
    "for each iteration @xmath174 of the while loop , with @xmath301 , we denote    * by @xmath302 the set @xmath303 at the beginning of the @xmath174-th iteration ( cf .",
    "line 7 of @xmath296 ) , in particular @xmath304 and @xmath305 ; * by @xmath306 the subgraph of @xmath19 induced by the vertices in @xmath302 ; * by @xmath307 the node selected during the @xmath174-th iteration . ] ; * by @xmath308 the degree of node @xmath0 in @xmath306 ; * by @xmath309 the value of the threshold of node @xmath0 in @xmath306 , that is , as it is updated at the beginning of the @xmath174-th iteration , in particular @xmath310 for each @xmath54 ; * by @xmath311 the number of links to @xmath0 that are computed by the algorithm from the @xmath174-th iteration until and including the @xmath300-th iteration , in particular observe that @xmath312 and @xmath313 for each @xmath54 ; * by @xmath314 the number of links assigned _ during _ the @xmath174-th iteration , that is , @xmath315    according to the above notation , we have that if node @xmath0 is selected during the iterations @xmath316 of the while loop in tpi(@xmath19 ) , where the last value @xmath317 is the iteration when @xmath0 has been eliminated from the graph , then @xmath318 in particular observe that for @xmath319 , we have @xmath320 .",
    "the following result is immediate .",
    "[ prop1 ] consider the node @xmath307 that is selected during iteration @xmath174 , for @xmath301 , of the while loop in the algorithm tpi(@xmath19 ) :    * if case 1 of the algorithm tpi(@xmath19 ) holds and @xmath321 , then @xmath322 and the isolated node @xmath307 is eliminated from @xmath306 .",
    "moreover , + @xmath323 and , for each @xmath324 @xmath325 * if case 1 of tpi(@xmath19 ) holds with @xmath326 , then @xmath327 and no node is deleted from @xmath306 , that is , @xmath328 .",
    "moreover , @xmath329 and , for each @xmath330 @xmath331 * if case 2 of tpi(@xmath19 ) holds then @xmath332 and @xmath307 is pruned from @xmath306 . hence , @xmath333 and , for each @xmath330 it holds @xmath334    [ d=0 ] for each iteration @xmath335 , of the while loop in the algorithm tpi(@xmath19 ) ,    *  if @xmath336 then @xmath337 ; *  if @xmath338 then @xmath339 .    first , we prove ( 1 ) . at the beginning of the algorithm , @xmath340 for all @xmath341 .",
    "afterwards , the value of @xmath342 is decreased by at most one unit for each iteration ( cf .",
    "line 16 of _",
    "tpi_(@xmath19 ) ) .",
    "moreover , the first time the condition of case 1 holds for some node @xmath343 , one has @xmath344 . hence ,",
    "if the selected node is @xmath345 then ( 1 ) holds ; otherwise , some @xmath346 , satisfying the condition of case 1 is selected and @xmath347 and @xmath348 hold . hence , when at some subsequent iteration @xmath349 the algorithm selects @xmath350 , we have @xmath351 .",
    "+ to show ( 2 ) , it is sufficient to notice that at the iteration @xmath174 when node @xmath352 is eliminated from the graph , @xmath353 .",
    "we are now ready to prove the correctness and complexity of the algorithm tpi(@xmath19 ) :    [ teo - att - par ] for any graph @xmath354 and a set @xmath29 of external influencers such that @xmath355 , the algorithm tpi(@xmath19 ) outputs a pervading link vector for @xmath19 in time @xmath356 .",
    "we show that for each iteration @xmath174 , with @xmath301 , the assignment of @xmath311 links for each @xmath357 activates all the nodes of the graph @xmath306 when the distribution of thresholds to its nodes is @xmath358 .",
    "the proof is by induction on @xmath174 .    if @xmath359 then the unique node @xmath360 in @xmath361 has degree @xmath362 and @xmath363 ( see lemma [ d=0 ] ) .",
    "consider now @xmath364 and suppose the algorithm is correct on @xmath365 that is , the assignment of @xmath366 links to each @xmath330 , activates all the nodes of the graph @xmath367 when the distribution of thresholds to its nodes is @xmath368 .",
    "+ recall that @xmath369 denotes the node the algorithm selects from @xmath302 ( thus obtaining @xmath370 , the node set of @xmath365 ) . in order to prove the theorem we analyze three cases according to the current degree and threshold of the selected node @xmath369 .",
    "* @xmath322 : by lemma [ d=0 ] , we have @xmath371",
    ". then the correctness of the algorithm on @xmath306 follows from part ( 1.1 ) of proposition [ prop1 ] and the inductive hypothesis on @xmath365 .",
    "* @xmath372 : from ( 1.2 ) of proposition [ prop1 ] , we observe that @xmath373 , for each node @xmath357 . indeed , for each @xmath374 we have @xmath375 and @xmath376 .",
    "moreover , @xmath377 hence the nodes that can be activated in @xmath365 can be activated in @xmath306 with thresholds @xmath378 and @xmath379 links .",
    "so , the correctness of the algorithm on @xmath306 follows from the inductive hypothesis on @xmath365 .",
    "* @xmath332 : from part ( 2 ) of proposition [ prop1 ] , and by the inductive hypothesis on @xmath365 , we have that all the neighbors of @xmath307 in @xmath306 that are nodes in @xmath370 gets activated ; since @xmath380 , we conclude that @xmath307 also gets activated in @xmath306 .",
    "this completes the proof by induction . to prove the time complexity",
    ", we first notice that the algorithm ends within @xmath381 iterations of the _ while _ loop .",
    "indeed , each time a vertex @xmath0 is selected in case 1 of the algorithm , its current threshold @xmath382 is decreased to the current node degree @xmath383 . moreover ,",
    "if @xmath382 reaches 0 then @xmath0 is deleted .",
    "this implies that each vertex v can be selected up to @xmath384 times before being deleted ( because its threshold gets down to 0 or because case 2 is applied to @xmath0 ) .",
    "hence , the algorithm executes at most @xmath381 iterations of the while loop .",
    "when case 2 applies , one has to select the node @xmath343 in the current node set that maximizes the quantity @xmath385 .",
    "suppose that the nodes are initially sorted in a max - heap according to the priorites @xmath385 .",
    "each time the node priority @xmath385 changes , we can update the heap in @xmath386 time .",
    "for each iteration , if @xmath0 is the processed node then the update involves only the neighbors of @xmath0 if case 2 applies , and only the node @xmath0 itself if case 1 applies .",
    "overall , case 1 requires at most @xmath387 time and case 2 requires at most @xmath388 times .",
    "hence , the algorithm can be implemented in such a way to run in @xmath356 time .",
    "we now compute an upper bound on the number of links that the link vector returned by the algorithm tpi assigns to the vertices in @xmath31 .",
    "[ teo3 ] for any graph @xmath19 the algorithm tpi(@xmath19 ) returns a link vector @xmath279 for @xmath19 such that @xmath389    define @xmath390 , for each @xmath391 . by definition of @xmath300",
    ", we have @xmath392 is the empty graph ; we then define @xmath393 .",
    "we prove now by induction on @xmath174 that @xmath394 by using ( [ s ] ) we will have the bound on @xmath395 .",
    "indeed , @xmath396 + in order to prove ( [ s ] ) , we analyze three cases depending on the relation between @xmath397 and @xmath398 .",
    "+ @xmath64 assume first @xmath322 .",
    "we get @xmath399    @xmath64 let now @xmath372 .",
    "we have @xmath400    @xmath64 finally , let @xmath401 .",
    "in this case , by the algorithm we know that    @xmath402    for each @xmath403 .",
    "hence , we get @xmath404    experimental data showing the effectiveness of algorithm tpi@xmath405 on real - life networks are given in @xcite , as well as proofs of its optimality in case of cliques and trees .",
    "however , the time complexity does not becomes linear as for the algorithms given in section [ sec4 ] .",
    "in this paper , we introduced and studied the min - links problem : given a social network @xmath19 where every node @xmath0 has a threshold @xmath1 to be activated , which minimum - sized set of nodes should an already activated set of external influencers @xmath12 befriend , so as to influence the entire network ?",
    "we showed that the problem can not be approximated to within a ratio of @xmath2 , for any fixed @xmath3 , unless @xmath4 .",
    "in contrast , we gave exact linear time algorithms that solve the problem in trees , cycles , and cliques , for any given set of @xmath15 external influencers .",
    "we also gave an exact bound ( as a function of the thresholds ) on the number of links needed for such graphs .",
    "moreover , we gave a polynomial time algorithm that solves the problem in general graphs and derived an upper bound on the number of links used by the algorithm .",
    "it would be interesting to generalize these algorithms to find the minimum number of links required to influence a specified fraction of the nodes .",
    "other directions include studying the case with non - uniform weights on the edges .",
    "clearly , the problem remains np - complete in general , but the complexity for special classes of graphs remains open .",
    "another interesting question is that of maximizing the number of activated nodes , given a fixed budget of @xmath300 links .                                        and u. vaccaro , optimizing spread of influence in social networks via partial incentives , proc . of _",
    "22nd international colloquium on structural information and communication complexity _ ,",
    "lecture notes in computer science , volume 9439 , 119134 , 2015 .            and s. sadeghabad .",
    "on the non - progressive spread of influence through social networks . in _",
    "latin american theoretical informatics symposium , latin 12 _ , volume 7256 of _ lecture notes in computer science _",
    ", 315326 , 2012 .",
    "d. freund , m. poloczek and d. reichman .",
    "contagious sets in dense graphs in : _ proceedings of 26th intl workshop on combinatorial algorithms ( iwoca2015 ) _ , volume 9538 of _ lecture notes in computer science _ , 185196 , 2016 .            and l. lakshmanan .",
    "celf++ : optimizing the greedy algorithm for influence maximization in social networks . in _ proceedings of the 20th international conference companion on world wide web _ , www 11 , 4748 , 2011 .      and z. cai .",
    "minimum - sized influential node set selection for social networks under the independent cascade model . in _ proceedings of the 15th acm international symposium on mobile ad hoc networking and computing _ , mobihoc 14 , 93102 , 2014 .    and",
    "tardos . maximizing the spread of influence through a social network . in _ proceedings of",
    "the ninth acm sigkdd international conference on knowledge discovery and data mining _ , kdd 03 , 137146 , 2003 .            and l. lakshmanan . the bang for the buck : fair competitive viral marketing from the host perspective . in _ proceedings of the 19th acm sigkdd international conference on knowledge discovery and data mining _ , kdd 13 , 928936 , 2013 .    and l.  pan",
    ". influence maximization in independent cascade model with limited propagation distance . in _ web technologies and applications _ ,",
    "volume 8710 of _ lecture notes in computer science _",
    ", 2334 , 2014 ."
  ],
  "abstract_text": [
    "<S> alice wants to join a new social network , and influence its members to adopt a new product or idea . </S>",
    "<S> each person @xmath0 in the network has a certain threshold @xmath1 for _ activation _ , i.e adoption of the product or idea . </S>",
    "<S> if @xmath0 has at least @xmath1 activated neighbors , then @xmath0 will also become activated . if alice wants to activate the entire social network , </S>",
    "<S> whom should she befriend ? </S>",
    "<S> more generally , we study the problem of finding the minimum number of links that a set of external influencers should form to people in the network , in order to activate the entire social network . </S>",
    "<S> this _ minimum links _ problem has applications in viral marketing and the study of epidemics </S>",
    "<S> . its solution can be quite different from the related and widely studied target set selection problem . </S>",
    "<S> we prove that the minimum links problem can not be approximated to within a ratio of @xmath2 , for any fixed @xmath3 , unless @xmath4 , where @xmath5 is the number of nodes in the network . on the positive side , </S>",
    "<S> we give linear time algorithms to solve the problem for trees , cycles , and cliques , for any given set of external influencers , and give precise bounds on the number of links needed . for general graphs , </S>",
    "<S> we design a polynomial time algorithm to compute size - efficient link sets that can activate the entire graph . </S>"
  ]
}
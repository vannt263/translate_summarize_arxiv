{
  "article_text": [
    "network research @xcite has experienced an explosive growth in the last two decades , as it has proven itself to be an informative and useful methodology to study complex systems , ranging from social sciences through biology to communication infrastructures .",
    "both the natural and man made world is abundant with networked structures that transport various entities , such as information , forces , energy , material goods , etc .",
    "as many of these networks are the result of evolutionary processes , it is important to understand how the graph structure of these systems determines their transport performance , structural stability and behavior as a whole . a rather useful concept in addressing such questions is the notion of centrality , which describes the positioning `` importance '' of a structure of interest such as a node , edge or subgraph with respect to the whole network .",
    "although the notion of centrality in graph theory dates back to the mathematician camille jordan ( 1869 ) , centrality measures were expanded , refined and applied to a great extent for the first time in social sciences @xcite , and today they play a fundamental role in studies involving a large variety of complex networks across many fields .",
    "probably the most frequently used centrality measure is betweenness centrality ( bc ) @xcite , introduced by anthonisse @xcite and freeman @xcite defined as the fraction of all network geodesics ( shortest paths ) passing through a node ( edge or subgraph ) .",
    "since transport tends to minimize the cost / time of the route from source to destination , it expectedly happens along geodesics , and therefore centrality measures are typically defined as a function of these , however generalizations to arbitrary distributions of transport paths have also been introduced and studied @xcite .",
    "geodesics are important for structural connectivity as well : removing nodes ( edges ) with high bc , one obtains a rapid increase in diameter , and eventually the structural breakup of the graph .    in general , centrality measures are defined in the context of the assumptions ( sometimes made implicitly ) regarding the type of network flow @xcite .",
    "these are assumptions regarding the _ nature of the paths _ such as being shortest , or arbitrary length paths , weighted / valued paths , walks ( repeated nodes and edges ) @xcite etc . ; and the _ nature of the flow _ , such as transport of indivisible units ( packets ) , or spreading / broadcasting processes ( infection , information ) .",
    "besides betweenness centrality , many other centrality measures have been introduced @xcite , depending on the context in which network flows are considered ; for a partial compilation see the paper by brandes @xcite , here we only review a limited list .",
    "in particular , _ stress _ centrality @xcite , simply counts the number of all - pair shortest paths passing through a node ( edge ) without taking into account the degeneracy of the geodesics ( there can be several geodesics running between the same pair of nodes ) . _ closeness _ centrality @xcite and its variants are simple functions of the mean geodesic distance ( hop - count ) of a node from all other nodes . _",
    "load _ centrality @xcite is generated by the total amount of load passing through a node when unit commodities are passed between all source - destination pairs using an algorithm in which the commodity packet is equally divided amongst the neighbors of a node that are at the same geodesic distance from the destination .",
    "_ group _ betweeness centrality @xcite computes the betweenness associated with a set of nodes restricted to all - pair geodesics that traverse at least one of the nodes in the group .",
    "_ ego _ network betweenness @xcite is a local betweenness measure computed only from the immediate neighborhood of a node ( ego ) .",
    "_ eigenvector _ centrality @xcite represents a positive score associated to a node , proportional to the sum of the scores of the node s neighbors , solved consistently across the graph .",
    "the corresponding score vector is the eigenvector associated with the largest eigenvalue of the adjacency matrix . _",
    "random walk _",
    "centrality @xcite is a measure of the accessibility of a node via random walks in the network .",
    "other centrality measures include _ information _ centrality of stephenson and zelen @xcite ; and _ induced endogenous and exogenous _ centrality by everett and borgatti @xcite .",
    "_ bounded - distance _ betweenness was introduced by borgatti and everett @xcite as betweenness centrality resulting from all - pair shortest paths not longer than a given length ( hop - count ) .",
    "it is this measure that we expand and investigate in detail in the present paper .",
    "a condensed version for unweighted networks has been presented in ref .",
    "since we are also generalizing the measure and the corresponding algorithm to weighted ( valued ) networks , we are referring to it as _ range - limited _ centrality . note that range - limitation can be imposed on all centrality measures that depend on paths , and",
    "therefore the analysis and algorithm presented here can be extended to all these centrality measures .",
    "centrality measures have received numerous applications in several areas . in social sciences",
    "they have been extensively used to quantify the position of individuals with respect to the rest of the network in various social network data sets @xcite . in physics and computer science",
    "they have seen widespread applications related to routing algorithms in packet switched communication networks and transport problems in general @xcite .",
    "the connection of generalized betweenness centrality based on arbitrary path distributions ( not just shortest ) to routing that minimizes congestion has been investigated by sreenivasan _",
    "et al _ @xcite using minimum sparsity vertex separators .",
    "this makes a direct connection to max - flow min - cut theorems of multicommodity flows , extensively studied in the computer science literature @xcite .",
    "other works that use essentially edge betweenness type quantities to quantify congestion in internet - like graphs include refs @xcite .",
    "dallasta et.al .",
    "connect node and edge detection probabilities in traceroute - based sampling of networks to their betweenness centrality values @xcite .",
    "other applications include detection of network vulnerabilities in face of attacks @xcite , cascading failures @xcite or epidemics @xcite , all involving betweenness - related calculations .    an important extension of centrality is to weighted , or valued networks @xcite . in this case the edges ( and also the nodes ) carry an associated weight , which may represent a measure of social relationship in social networks @xcite , channel capacity in the case of communication networks , transport capacity ( e.g. , nr of lanes ) in roadway networks or seats on flights @xcite .    from a theory point of view",
    ", there have been fewer results , as producing analytic expressions for centralities in networks is difficult in general . however , for scale - free trees , szab et.al . @xcite",
    "developed a mean - field approach for computing node betweenness , which later was made rigorous by bollobs and riordan @xcite .",
    "fekete et.al .",
    "provide a calculation of the distribution of edge betweeness on scale - free trees conditional on node in - degrees @xcite , and kitsak et.al .",
    "@xcite have derived scaling results on betweenness centrality for fractal and non - fractal scale - free networks .",
    "unfortunately , computation of betweenness can be costly ( @xmath6 , where @xmath3 is the number of nodes and @xmath7 is the number of edges , thus @xmath8 worst case ) @xcite , especially for large networks with millions of nodes , hence approximation methods are needed .",
    "existing approximations @xcite , however , are sampling based , and not well controlled .",
    "additionally , transport in real networks does not occur with uniform probability between arbitrary pairs of nodes , as transport incurs a cost , and therefore shorter - range transport is expectedly more frequent than long - range .",
    "accordingly , the _ usage _ of network paths is non - uniform , which should be taken into account if we want to connect centrality properties with real transport .        in order to address some of the limitations of existing centrality measures , we recently focused on range - limited centrality @xcite .",
    "we have shown that when geodesics are restricted to a maximum length @xmath9 , the corresponding range - limited @xmath9-betweenness for large graphs assumes a characteristic scaling form as function of @xmath9 .",
    "this scaling can then be used to predict the betweenness distribution in the ( difficult to attain ) diameter limit , and with good approximation , to predict the ranking of nodes / edges by betweenness , saving considerable computational costs .",
    "additionally , the range - limited method generates @xmath10-betweenness values _ for all _ nodes and edges and _ for all _ @xmath11 , providing systematic information on geodesics on all length - scales .    in this paper",
    "we give a detailed derivation of the algorithm and the analytical approximations presented in @xcite and we demonstrate the efficiency of the method on a social network ( socnet ) inferred from mobile phone trace - logs @xcite .",
    "this network has a giant cluster with @xmath12 nodes and @xmath13 directed edges .",
    "the diameter of the underlying undirected network is approximately @xmath14 and the calculation of the traditional ( diameter - range based ) bc values ( using brandes algorithm ) on this network took @xmath15 days on @xmath16 computers .",
    "in addition , we present the derivations for an algorithm that efficiently computes range - limited centralities on _ weighted _ networks .",
    "we then apply these concepts and algorithms to the network vulnerability backbone detection problem , and show the differences between the backbones obtained with both hop - count based centralities and weighted centralities .",
    "the paper is organized as follows .",
    "section [ rlcnw ] introduces the notations and provides the algorithm for unweighted graphs ; section [ scaa ] gives an analytical treatment that derives the existence of a scaling behavior for centrality measures in large graphs ; it gives a method on how to estimate the largest typical node - to - node distance ( a lower - bound to the diameter ) ; discusses the complexity of the algorithm and the fast freezing phenomenon of ranking by betweenness of nodes and edges .",
    "section [ rlcsn ] illustrates the power of the range - limited approach ( by showing how well can one predict betwenness centralities and ranking of individual nodes and edges ) using the social - network data described above .",
    "section [ rlcwn ] describes the algorithm for weighted graphs and section [ vbb ] uses the range - limited betwenness measure to define a vulnerability backbone for networks and illustrates the differences in identification of the backbone obtained with and without weights on the links .",
    "let us consider a directed simple graph @xmath17 , which consists of a set @xmath18 of vertices ( or nodes ) and a set @xmath19 of directed edges ( or links ) .",
    "we will denote by @xmath20 an edge directed from node @xmath21 to node @xmath22 .",
    "the graph has @xmath3 nodes and @xmath23 edges .",
    "the algorithm below can easily be modified for undirected graphs , we will not treat that case separately .",
    "a directed path @xmath24 from some node @xmath25 to a node @xmath26 is defined as an ordered sequence of nodes and links @xmath27 without repeated nodes .",
    "the `` distance '' @xmath28 is the length of the shortest _ directed _ path going from node @xmath25 to node @xmath26 .",
    "we give a definition of distance ( path weight ) for weighted networks in section [ rlcwn ] . in non - weighted networks",
    "the directed path length is simply the number of edges (  hop - count \" ) along the directed path from @xmath25 to @xmath26 .",
    "there can be multiple shortest paths ( same length ) , and we will denote by @xmath29 the total number of shortest directed paths from node @xmath25 to @xmath26 .",
    "@xmath30 will represent the number of shortest paths from node @xmath25 to node @xmath26 _ going through _ node @xmath31 .",
    "as convention we set @xmath32    the total number of all - pair shortest paths running through a node @xmath31 is called the stress centrality ( sc ) of node @xmath31 , @xmath33 .",
    "betweenness centrality ( bc ) @xcite normalizes the number of paths through a node by the total number of paths ( @xmath29 ) for a given source - destination pair @xmath34 : @xmath35 similar quantities can be defined for an edge @xmath36 : @xmath37    in order to define range - limited betweenness centralities , let @xmath38 denote the bc of a node @xmath39 for all - pair shortest directed paths of _ fixed , exact _ length @xmath10",
    ". then @xmath40 represents the betweenness centrality obtained from paths _ not longer _ than @xmath9 . for edges ,",
    "we introduce @xmath41 and @xmath42 using the same definitions . for simplicity , here we include the start- and end - points of the paths in the centrality measures , however , our algorithm can easily be changed to exclude them , as described later .",
    "similar to other algorithms , our method first calculates these bcs for a node @xmath39 ( or edge @xmath43 ) from shortest directed paths all emanating from a `` root '' node @xmath31 , then it sums the obtained values for all @xmath44 to get the final centralities for node @xmath39 ( or edge @xmath43 ) . this can be done because the set of _ all _ shortest paths can be uniquely decomposed into subsets of shortest paths distinguished by their starting node .",
    "thus it makes sense to perform a shell decomposition of the graph around a root node @xmath31 .",
    "let us denote by @xmath45 the @xmath9-range subgraph of node @xmath31 containing all nodes which can be reached in at most @xmath9 steps from @xmath31 ( fig .",
    "[ fig1]a ) . only links which are part of the shortest paths starting from the root @xmath31 to these nodes are included in @xmath46 .",
    "we decompose @xmath46 into shells @xmath47 containing all the nodes at shortest path distance @xmath10 from the root , and all incoming edges from shell @xmath48 , fig .",
    "[ fig1]b ) .",
    "the root @xmath31 itself is considered to be shell @xmath49 ( @xmath50 ) .",
    "let @xmath51 denote the fixed-@xmath10 betweenness centrality of node @xmath52 , and edge @xmath43 , respectively , based only on shortest paths all starting from the root @xmath31 . here",
    "@xmath53 is _ not _ an independent variable :",
    "given @xmath31 and @xmath52 ( or @xmath43 ) , @xmath53 is the radius of shell @xmath54 containing @xmath52 ( or @xmath43 ) , that is @xmath55 and @xmath56 .",
    "note that @xmath57 ( or @xmath58 ) if @xmath52 ( or @xmath43 ) do not belong to at least one shortest path from @xmath31 to @xmath26 , and thus there is no contribution from those points @xmath26 from the @xmath10-th shell .",
    "the condition for @xmath52 ( or @xmath43 ) to belong to at least one shortest path from @xmath31 to @xmath26 can alternatively be written in the case of ( [ blr ] ) as @xmath59 a notation , which we will use later .",
    "for simplicity of writing , we refer to the fixed-@xmath10 betweenness centralities ( the @xmath60-s ) as  @xmath10-bcs \" and to the cumulative betweenness centralities ( the @xmath61-s obtained from summing the @xmath10-bcs , see ( [ bl ] ) ) as @xmath62$]-bcs .",
    "while the basics of our algorithm are similar to brandes @xcite , we derive recursions that simultaneously compute the @xmath63$]-bcs for _ all _ nodes and _ all _ edges and for all values @xmath64 .",
    "the algorithm thus generates detailed and systematic information ( an @xmath9-component _ vector _ for every node and every edge ) about shortest paths on all length - scales and thus , providing a tool for multiscale network analysis .",
    "first we give the algorithm , then we derive the specific recursions used in it . for the root node @xmath31 we set the initial condition : @xmath65 .",
    "for other nodes , @xmath66 , we set @xmath67 .",
    "the following steps are repeated for every @xmath68 :    1 .   build @xmath47 , using breadth - first search .",
    "2 .   calculate @xmath69 for all nodes @xmath70 , using : @xmath71 and set @xmath72 3 .   proceeding _ backwards _ , through @xmath73 : + \\a ) calculate the @xmath10-bcs of links @xmath74 ( thus @xmath75 , @xmath76 )",
    "recursively : @xmath77 b ) and of nodes @xmath75 using ( [ 3a ] ) and : @xmath78 4 .",
    "finally , return to step 1 ) until the last shell @xmath79 is reached .    in the end ,",
    "the cumulative @xmath63$]-bcs , that is the @xmath80-s can be calculated using ( [ bl ] ) .",
    "1 shows a concrete example .",
    "the subgraph of node @xmath31 has three layers .",
    "each layer @xmath47 and the corresponding @xmath10-bcs are marked with different colors : @xmath81 ( red ) , @xmath82 ( blue ) , and @xmath83 ( green ) .",
    "as described above , the first step creates the next layer @xmath47 , then in step 2 .",
    ", for every node @xmath70 we calculate the total number of shortest paths @xmath69 from the root to node @xmath52 . these are indicated by numbers within the circles representing the nodes in fig",
    ".  [ fig1 ] ( e.g. , @xmath84 , @xmath85 , @xmath86 ) .",
    "as given by ( [ sigma ] ) , @xmath69 is calculated by summing the number of shortest paths that end in the predecessors of node @xmath52 located in @xmath87 .",
    "for example node @xmath88 in fig .",
    "[ fig1 ] is connected to nodes @xmath52 and @xmath25 in shell @xmath89 , and thus : @xmath90 .",
    "( [ bllequal1 ] ) states that the @xmath10-bc of nodes located in @xmath47 is always @xmath91 .",
    "this follows from eq .",
    "( [ blr ] ) for @xmath92 and using the convention @xmath93 . knowing these values",
    ", we proceed backwards ( step 3 . ) and calculate the @xmath10-bcs of all edges and nodes in all the previous layers .",
    "recursion ( [ 3a ] ) is obtained from a well known recursion for shortest paths . if @xmath52 ( or @xmath43 ) belongs to at least one shortest path going from @xmath31 to @xmath26 , then @xmath94 and @xmath95 . inserting these in eq .",
    "( [ blr ] ) for @xmath96 we obtain : @xmath97 where @xmath98 expresses the condition that the sum is restricted to those @xmath26 from @xmath47 , which have at least one shortest path ( from @xmath31 ) , going through @xmath52 or @xmath43 . dividing these equations",
    "we obtain ( [ 3a ] ) . for e.g. , in fig  [ fig1 ] : @xmath99 .",
    "having determined the @xmath10-bcs of all edges in layer @xmath100 , we can now compute the @xmath10-bc of a given node in @xmath54 by summing the @xmath10-bcs of its outgoing links , that is using ( [ 3b ] ) ( e.g. , on fig  [ fig1 ] : @xmath101 ) .    this algorithm can be easily modified to compute other centrality measures .",
    "for example , to compute all the range - limited stress centralities , we have to replace eq .",
    "( [ bllequal1 ] ) with : @xmath102 .",
    "all other recursions will have exactly the same form , we just need to replace the @xmath10-bcs ( @xmath103 , @xmath104 ) with the @xmath10-scs ( @xmath105 , @xmath106 ) .",
    "if we want to exclude start- and end - points when computing bcs or scs , we first let the above algorithm finish , then we do the following steps : a ) set the @xmath10-bc of the root node @xmath31 to @xmath49 , @xmath107 for all @xmath108 , and b ) for every node @xmath70 reset @xmath109 , for all @xmath108 , ( for e.g. , on fig  [ fig1 ] @xmath52 is in the second shell , @xmath89 , so its @xmath110-bc will become @xmath49 instead of @xmath91 ) .",
    "then via ( [ bl ] ) , the @xmath63$]-bcs and the corresponding @xmath63$]-scs are easily obtained .",
    "in @xcite we have shown that the @xmath63$]-bc obeys a scaling behavior as function of @xmath10 .",
    "this was found to hold for all sufficiently large random networks that we studied ( erds - rnyi ( er ) , barabsi - albert ( ba ) scale - free , random geometric graphs ( rgg ) , etc . ) including the social network inferred from mobile phone trace - log data ( socnet ) @xcite .",
    "here we detail the analytical arguments that indeed show that the existence of this scaling behavior for large networks is a general property , by exploiting the scaling of shell sizes .",
    "the scaling of shell sizes was already studied previously , for e.g. , in random graphs with arbitrary degree distributions @xcite . for simplicity of the notations",
    ", we only show the derivations for undirected graphs .",
    "let us define @xmath111 as an average over all root nodes @xmath31 in the graph , and denote by @xmath112 the number of nodes on shell @xmath113 .",
    "we define the branching factor as : @xmath114 and model the growth of shell sizes as a branching process @xmath115\\;.",
    "\\label{zbranching}\\ ] ] here @xmath116 is a _ per - node _ , shell occupancy noise term , encoding the relative deviations , or fluctuations from the ( @xmath31-independent ) functional form of @xmath117 .",
    "typically , @xmath118 , it obeys @xmath119 and @xmath120 , with @xmath121 decreasing with @xmath10 . in undirected graphs",
    "if @xmath122 then it implies that @xmath123 , and vice - versa .",
    "hence , in this case : @xmath124 the @xmath125 factor comes from the fact that any given path will be included twice in the sum ( once in both directions ) . in case of @xmath126",
    "the only node in @xmath127 is @xmath39 itself , and the inner sum is equal with @xmath128 . due to convention ( [ conv ] ) @xmath129 and hence from ( [ blr ] )",
    "we obtain @xmath130 . for @xmath131 , @xmath132 ( see eq .",
    "( [ bllequal1 ] ) ) and the inner sum is again @xmath133 .",
    "thus we can write : @xmath134 note that the number of terms in the inner sum @xmath135 is @xmath136 , which is rapidly increasing with @xmath25 , and thus is expected to have a weak dependence on @xmath39 .",
    "accordingly , we make the approximation : @xmath137 where we replaced @xmath138 by @xmath139 , which is an _ average _ @xmath140-bc computed over the shell of radius @xmath25 , _ centered on node _ @xmath31 : @xmath141 however , the sum of ( @xmath142)-bcs in any @xmath143 layer is equal with the number of nodes in shell @xmath144 : @xmath145 .",
    "we can convince ourselves about this last statement by using ( [ blr ] ) and observing that @xmath146 as all paths from @xmath31 to @xmath26 ( @xmath147 ) must  pierce \" every shell @xmath148 in between .",
    "[ fig1 ] shows an example : there are @xmath149 nodes in @xmath150 and the sum of @xmath149-betweenness values ( green ) in layer @xmath151 is @xmath152 .",
    "therefore , we may write : @xmath153}{z_m(i)}\\ ; , \\label{vapprox}\\ ] ] where we used the recursion defined above for @xmath154 as a branching process ( [ zbranching ] ) . inserting this in ( [ ulplus1 ] ) we obtain : @xmath155}{z_{m}(i ) }   \\simeq \\nonumber \\\\ & \\simeq & \\alpha_l \\sum_{m=1}^{l }   \\sum_{i\\in g_m(j ) }   \\frac{z_{l}(i)}{z_{m}(i ) }   \\simeq \\nonumber \\\\ & \\simeq & \\alpha_l   \\left [ z_{l}(j)+ \\sum_{m=1}^{l-1 }    \\sum_{i\\in g_m(j ) } \\frac{z_{l}(i)}{z_{m}(i)}\\right ]    \\label{ukifejtve}\\end{aligned}\\ ] ] where we neglected the small noise term due to the large number of terms in the inner sum , and we used the fact that for @xmath156 the leading term of the inner sum is just @xmath157 . from eqs .",
    "( [ ulplus1 ] ) and ( [ vapprox ] ) , however , the double sum in ( [ ukifejtve ] ) equals @xmath158 and we obtain the following recursion : @xmath159 . \\label{urekurzio}\\ ] ] eqs ( [ zbranching ] ) , ( [ buszerint ] ) and ( [ urekurzio ] ) lead to a recursion for @xmath160 : @xmath161,\\ ] ] which can be iterated down to @xmath81 , where @xmath162 is the degree of @xmath39 : @xmath163 with @xmath164 in many networks , the average shell - size @xmath165 grows exponentially with the shell-`radius ' @xmath10 ( for e.g. , er , ba , socnet ) , implying a constant average branching factor larger than one : @xmath166 the exponential growth holds until @xmath10 reaches the typical largest shortest path distance @xmath167 , beyond which finite - size effects appear .",
    "accordingly , @xmath168 and @xmath60 grows exponentially with @xmath10 . in this case , since @xmath60 is rapidly increasing with @xmath10 , the cumulative @xmath169 will be dominated by @xmath170 , and thus @xmath61 obeys the same exponential scaling as @xmath60 , confirmed by numerical simulations ( fig .",
    "3c in @xcite shows this scaling for socnet )",
    ".    however , not all large networks have exponentially growing shell - sizes .",
    "for example , in spatially embedded networks without shortcuts such as random geometric graphs , roadways , etc . , average shell - size grows as a _ power law _",
    "@xmath171 , where @xmath172 is the embedding dimension of the metric space . in this case @xmath173 and @xmath174 and @xmath175 .",
    "fig 3d in @xcite shows this scaling for rgg graphs embedded in @xmath176 dimensions .",
    "eq ( [ nice ] ) allows to relate the statistics of fixed-@xmath10 betweenness to the statistics of shell occupancies for networks that are uncorrelated , or short - range correlated .",
    "since the noise term ( obtained from _ per - node _ occupancy deviations on a shell ) is independent on the root s degree in this case , the distribution of fixed-@xmath10 betweenness can be expressed as : @xmath177 where @xmath178 is the dirac - delta function , @xmath179 is the degree distribution and @xmath180 is the distribution for the noise @xmath181 , peaked at @xmath182 , with fast decaying tails and @xmath183 .",
    "performing the integral over the noise @xmath184 , one obtains the distribution for @xmath10-bc , in form of a convolution : @xmath185 from ( [ bd ] ) follows that the natural scaling variable for betweenness distribution is @xmath186 .",
    "the noise distribution @xmath187 ( for @xmath188 ) may introduce an extra @xmath10-dependence through its width @xmath189 , which can be accounted for via the rescaling @xmath190 , @xmath191 , thus collapsing the distributions for different @xmath10-values onto the same functional form , directly supporting our numerical observations presented in ref @xcite .",
    "as @xmath187 is typically sharply peaked around 0 , the most significant contribution to the integral ( [ bd ] ) for a given @xmath192 comes from degrees @xmath193 . since @xmath194 , we have a rapid decay of @xmath195 in the range @xmath196 , a maximum at @xmath197 where @xmath198 is the degree at which @xmath179 is maximum , and a sharp decay for @xmath199 .",
    "the scaling law on its own does not provide information about the typical largest node - to - node distance , which is always a manifestation of the finiteness of the graph .",
    "however , knowing the size of the network in terms of the number of nodes @xmath3 , one can exploit our formulas to find the average largest node - to - node distance as the radius @xmath167 of the _ typical largest shell _ beyond which finite - size effects become strong , that is where network edge effects appear .",
    "this can be estimated as the point where the sum of the average shell sizes reaches @xmath3 . hence : @xmath200 providing an _ implicit equation _ for @xmath167 .",
    "the @xmath201-s are determined numerically for @xmath202 and a corresponding functional form fitting its scaling with @xmath10 can be extrapolated for larger @xmath10 values up to @xmath167 , when the sum in ( [ fit ] ) hits @xmath3 . for our social network data one obtains @xmath203 ( fig .  [ lcsillag ] ) . here",
    "@xmath167 is not necessarily an integer , because it is obtained from the scaling behavior of the average shell sizes , and represents the _ typical _ radius of the largest shell .",
    ", of the average shell sizes grows exponentially as function of @xmath10 .",
    "extrapolating , we can predict that it reaches the @xmath12 mark at @xmath204.,scaledwidth=40.0% ]    expression ( [ fit ] ) can be easily specialized for the two classes of networks discussed above namely , for those having exponential average shell - size growth @xmath205 and for those having a power - law average shell - size growth as @xmath206 .",
    "for the exponential growth case we obtain : @xmath207 resulting in the @xmath208 behavior for large @xmath3 .    for the power - law growth case",
    "there is no easily invertible expression for the sum , however , if we replace the summation with an integral , we find the approximate @xmath209 expression , with the expected asymptotic behavior @xmath210 as @xmath211 .",
    "we are now in position to estimate the average - case complexity of the range - limited centrality algorithm . for every root @xmath31",
    ", we sequentially build its @xmath212 shells . when going from shell @xmath87 to building shell @xmath113 , we consider all the @xmath213 nodes on @xmath87 . for every such node @xmath39",
    "we add all its links that do not connect to already tagged nodes ( a tag labels a node that belongs to @xmath87 or @xmath214 ) to @xmath113 , and add the corresponding nodes as well .",
    "this requires on the order of @xmath215 operations for every node @xmath39 , hence on the order of @xmath216 operations for creating shell @xmath113 .",
    "next is eq ( [ sigma ] ) , which involves @xmath217 steps , where @xmath218 is the number of edges connecting nodes in shell @xmath87 to nodes in shell @xmath113 . eq ( [ bllequal1 ] ) involves @xmath219 steps . eqs ( [ 3a ] ) and ( [ 3b ] ) generate a total of @xmath220 operations .",
    "hence , for a given @xmath10 there are a total of @xmath221 operations on average .",
    "thus the average complexity of the algorithm @xmath222 can be estimated as : @xmath223 note that the set of edges in the shells @xmath224 and @xmath225 are all fanning out from nodes in @xmath224 , and thus we can approximate @xmath226 with @xmath227 .",
    "thus , the estimate becomes : @xmath228 from ( [ complex2 ] ) it follows that @xmath229 for _ fixed _",
    "@xmath9 , the complexity grows _ linearly _ with @xmath3 as @xmath211 .",
    "for @xmath230 we can use ( [ fit ] ) to conclude that @xmath231 where @xmath232 denotes the total number of edges in the network . recall that the brandes or newman algorithm has a complexity of @xmath233 for obtaining the traditional betweenness centralities . specializing the expression ( [ complex2 ] ) to networks with exponentially growing shells one finds the same @xmath233 complexity ( that is the upper bound @xmath234 in ( [ upb ] ) is _ not _ realized ) ; for networks with power - law growth shells , however , we find @xmath235 , as in the upper bound of ( [ upb ] ) .",
    "the extra computational cost is due to the fact that instead of a single value , our algorithm produces a set of @xmath9 numbers ( the @xmath10-bcs ) , providing multiscale information on betweenness centrality for all nodes and all edges in the network .      in ref",
    "@xcite we have provided numerical evidence that the ranking of the nodes ( same holds for edges ) by their @xmath62$]-bc values freezes at relatively small values of @xmath9 . here",
    "we show how this freezing phenomenon emerges .",
    "consider two arbitrary nodes @xmath31 and @xmath39 , with degrees @xmath236 and @xmath237 .",
    "using eq ( [ nice ] ) we can write @xmath238 based on ( [ xi ] ) : @xmath239 where @xmath240 . by definition , @xmath241 is the _ per node _ variation of shell - occupancy from its root - independent value , for the @xmath26-th shell centered on root node @xmath39 .",
    "expectedly , for larger shells ( larger @xmath26 ) , the size of the shells becomes less dependent on the local graph structure surrounding the root node , and for this reason this noise term has a decaying magnitude @xmath242 with @xmath26 .",
    "thus , the @xmath243 can be considered as random variables centered around zero , with a magnitude that is decaying with increasing @xmath26 . the contributions of the noise terms coming from larger radius shells in the sum ( [ ixen ] ) is decreasing not only because the corresponding @xmath243-s are decreasing in absolute value , but also because their weight in the sum is decreasing ( as @xmath244 ) , and therefore when moving from @xmath10 to @xmath142 in ( [ ixen ] ) the change ( the fluctuation ) in @xmath245 _ decreases _ for larger @xmath10 .",
    "this effectively means that the rhs of ( [ d ] ) _ saturates _ , and thus , accordingly , the lhs saturates as well , freezing the ordering of betweenness values .",
    "if the two nodes have largely different degrees ( @xmath246 is relatively large ) , the noise term @xmath245 will not be able to change the sign on the rhs of ( [ d ] ) , even for small @xmath10 values , and thus , the ordering between nodes with very different degrees will freeze the fastest , followed by nodes with degrees that are close to each other .",
    "clearly , the freezing of ordering between nodes with identical degrees ( @xmath247 ) will happen last .",
    "the probability for the ordering to flip when increasing the range from @xmath10 to @xmath142 can be calculated for specific network models , however , it will not be discussed here .",
    "in this section we illustrate the power of the range - limited approach on a real - world social network inferred from cell - phone call - logs ( socnet ) .",
    "we show that computing the @xmath62$]-bcs up to a relatively small limit length can already be used to predict the full , diameter - based betweenness centralities of individual nodes ( and edges ) , their distribution and the top list of nodes with highest centralities .",
    "this social network was constructed from @xmath248 million anonymized phone - calls between @xmath249 million callers generated in a period of @xmath250 days . restricting ourselves to pairs of individuals between which phone - calls have been observed in both directions in this period as a definition of an edge , we found that the giant component of this network has about @xmath251 million nodes and @xmath252 million edges .",
    "the @xmath250 days is long enough to guarantee that individuals with strong social bonds have called each other at least once during this interval , and therefore will be linked by an edge in our graph .    to test and validate our predictions using the range - limited method",
    ", we actually performed the computation of the full , diameter - based betweenness centralities of all the nodes in socnet . to deploy the computation",
    ", we used a distributed computing utility called work queue , developed in the cooperative computing lab at notre dame .",
    "the utility consists of a single management server that sends tasks out to a collection of heterogeneous workers / processors .",
    "specifically , our workers consisted of @xmath253 sun grid engine cores , @xmath254 condor cores , and @xmath255 local workstation cores , for a total of @xmath16 cores . this allowed us to finish thousands of days of computation in the course of @xmath15 days .",
    "each worker received a request to compute the contribution of shortest paths starting from @xmath256 vertices to the betweenness centrality of every vertex in the network , summed the @xmath256 results , and sent them back to the management server . each time the management server received a contribution , it summed the contribution with all the others and provided another @xmath256 vertices for the worker .",
    "we also determined the network diameter from the data using a similar distributed computing method , obtaining @xmath257 . at first sight",
    "this value seems to be at odds with the famous six - degrees of separation phenomenon , which implies a much smaller diameter . however , there are two observations that one can make here .",
    "1 ) the social network has a dense core with protruding branches (  tentacles \" ) , which mathematically speaking , can generate a large diameter .",
    "however , the experimentally determined six degrees of separation _ does not probe _ all the branches , it actually relies on the denser core for information flow .",
    "hence it should be rather similar to the average node - to - node distance , rather than the rigorously defined network diameter .",
    "indeed , the value of @xmath258 that we obtained is rather close to the six - degrees observation .",
    "2 ) the social network constructed based on cell - phone communications gives only _ a sample subgraph _ of the true social network , where communications happen also face - to - face and through land - line phone calls .",
    "hence , one would likely measure an even smaller @xmath167 would such data be available .      in large networks , where measuring the full betweenness centralities ( i.e. , based on all - pair shortest paths ) is too costly , we can use the scaling behavior of range - limited bc values to obtain an estimate for the full bc value of a given node . plotting the @xmath63$]-bc values measured up to a limit @xmath9 as function of @xmath10",
    ", we can extrapolate to ranges beyond @xmath9 . in any finite network",
    "the @xmath63$]-bc values will saturate , and thus we expect the appearance of finite size effects for large enough @xmath10 , that is in the range @xmath259 , where @xmath167 is the _ typical radius _ of the largest shell and can be estimated as described in subsection [ l * ] .",
    "$ ] -bc values , @xmath80 , of @xmath260 individual nodes in the socnet as fucntion of @xmath10 .",
    "range - limited measurements were made for @xmath261 , the exact bc value of each node is indicated by a horizontal dashed line . extrapolating the range - limited values for larger @xmath10 , the real bc value is reached at around @xmath262 for nodes @xmath263 and @xmath264 for node @xmath25 .",
    ", scaledwidth=34.0% ]    in fig .",
    "[ individb ] we plot the @xmath63$]-bc values ( @xmath265 ) for @xmath266 for four nodes of socnet .",
    "the four nodes were chosen to have very different @xmath80 values .",
    "ranking the nodes by their @xmath267$]-bc values , node @xmath31 ranked the highest , and nodes @xmath39 , @xmath52 and @xmath25 ranked @xmath268 , @xmath269 and @xmath270 , respectively .",
    "the horizontal dashed lines represent the full @xmath271 values of the nodes obtained from the exact , diameter - length based measurements ( as described above ) . fitting the five values and extrapolating the range - limited bcs , we can see that for nodes @xmath31 , @xmath39 , and @xmath52 , the curves reach their corresponding full bc at around @xmath272 agreeing well with the typical length @xmath203 estimated in subsection [ l * ] .",
    "for low ranking nodes ( small full bc ) finite size effects should appear at lengths larger than @xmath167 , because they are situated towards the periphery of the graph .",
    "indeed , one can see from fig .",
    "[ individb ] that node @xmath25 reaches its full bc at @xmath273 , still fairly close to the estimated @xmath167 .",
    "thus , once we determined @xmath167 as described in [ l * ] , then by simply extrapolating the fitting curve to the @xmath63$]-bcs of a given node up to @xmath274 , we obtain an estimate / lower bound for its full betweenness centrality .",
    "in socnet the @xmath80 values have a lognormal distribution @xcite , thus @xmath275 can be well fitted by a gaussian ( fig .",
    "[ distrib]a ) .",
    "the parameters of the distribution also show a scaling behavior , and extrapolating up to @xmath276 we obtain @xmath277 for the average ( fig .",
    "[ distrib]b ) and @xmath278 ( fig .",
    "[ distrib]c ) for the standard deviation of the gaussian .     of the @xmath279 values in the socnet for @xmath280 , where @xmath281 is the diameter , and the predicted distribution for @xmath167 .",
    "the distributions can be fitted with a gaussian .",
    "b)the average @xmath282 and c ) standard deviation @xmath283 as function of @xmath10 . extrapolating to @xmath276 we",
    "obtain @xmath277 and @xmath278.,scaledwidth=34.0% ]    this predicted distribution is shown as a dashed line on fig .",
    "[ distrib]a . comparing it with the distribution of the full bc values ( @xmath284 )",
    "we can see that while the averages agree , the width of the distribution is , however , smaller than the predicted value .",
    "this is caused by the fact , that the @xmath63$]-bcs do not saturate at the same @xmath10 value : for low centrality nodes saturation occurs at larger @xmath10 , as also shown in fig .",
    "[ individb ] .      efficiently identifying high betweenness centrality nodes and edges is rather important in many applications , as these nodes and edges both handle large - amounts of traffic ( thus they can be bottlenecks or congestion hotspots ) , and form high - vulnerability subsets ( their removal may lead to major failures ) .",
    "fortunately , due to the freezing phenomenon described in subsection [ sec : freezing ] , one does not need to compute accurately the full bc - s in order to identify the top ranking nodes and edges . at already modest @xmath10 values",
    "we obtain top - lists that have a strong overlap with the ultimate , @xmath285$]-bc top - list . here",
    "we illustrate this for the case of socnet .",
    "[ cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]     table [ ranking ] lists the @xmath63$]-bc ( for @xmath261 and @xmath286 ) of the top @xmath287 nodes from the @xmath288$]-bc list in socnet . the overlap between the top lists at consecutive @xmath10 values increases with @xmath10 .",
    "given two lists , we define the overlap between their first ( top - ranking ) @xmath53 elements by the percentage of common elements in both @xmath53-element lists .",
    "table [ rankcorr ] shows the overlap between the top list based on @xmath289$]-bc and the one based on the ultimate @xmath288$]-bc values . at @xmath290",
    "the top @xmath260 nodes are already exactly in the same order as in the @xmath288$]-bc list , the overlap is @xmath291 between the lists of the top @xmath287 nodes , and even for the top @xmath268 node lists we have an overlap of @xmath292 .",
    "in unweighted graphs the length of the shortest path between two nodes is defined as the number of edges included in the shortest path . in weighted networks",
    "each edge has a weight or `` length '' : @xmath293 .",
    "depending on the nature of the network this length can be an actual physical distance ( e.g. , in road networks ) , or a cost or a resistance value .",
    "we define the `` shortest '' ( or lowest - weight ) path between nodes @xmath31 and @xmath39 as the network path along which the sum of the weights of the edges included is minimal",
    ". we will call this sum as the `` shortest distance '' @xmath294 from node @xmath31 to node @xmath39 ( note that we allow for directed links , which implies that @xmath294 is not necessarily the same as @xmath295 ) .    in order to define a range - limited quantity ,",
    "let @xmath38 denote the ( fixed ) @xmath10-bc of node @xmath39 from all - pair shortest directed paths of length @xmath296 , where @xmath297 are a series of predefined weight values or `` distances '' .",
    "the simplest way to define these @xmath298 distances is to take them uniformly @xmath299 , however depending on the application these may be redefined in any suitable way .",
    "@xmath61 will again denote the cumulative @xmath9-betweenness , which represents centralities from paths not longer than @xmath300 .",
    "note that we are still counting paths when computing centralities , that is @xmath30 still means the number of shortest paths from @xmath25 to @xmath26 passing through @xmath31 , except for the meaning of  shortest \" , which is now generalized to lowest - cost .",
    "the algorithm is similar to the one presented above for unweighted networks .",
    "we again build the subgraph of a node @xmath31 , but now a shell @xmath47 will contain all the nodes @xmath52 at shortest path distance @xmath301 from the root node @xmath31 .",
    "an edge @xmath302 is considered to be part of the layer in which node @xmath52 is included . in unweighted graphs",
    "a connection @xmath302 can be part of the subgraph only if the two nodes are in two consecutive layers : if @xmath303 then @xmath304 .",
    "in weighted networks the situation is different ( fig .",
    "[ figweighted]a ) ) . in principle",
    "we may have edges connecting nodes which are not in two consecutive layers , but possibly further away from each other ( the links @xmath305 , @xmath306 in fig .  [ figweighted]a ) ) , or even in the same layer ( the link @xmath307 in the same figure ) .",
    "when building the subgraph using breadth - first search , we need to save the exact order in which the nodes and edges are discovered and included in the subgraph ( fig .",
    "[ figweighted]b , c ) .",
    "let us denote with @xmath308 the index of the node which is included at position @xmath309 in this node s list ( fig .  [ figweighted]b ) .",
    "this means that the following conditions hold : @xmath310 .",
    "similarly we have a list of edges , where @xmath311 is the edge in position @xmath309 of the list , and @xmath312 , @xmath313 denote the indexes of the two nodes connected by the edge ( fig .  [",
    "figweighted]c ) .",
    "this implies the conditions : @xmath314 ( note that every edge @xmath311 is included in the edge - list when node @xmath315 is discovered ) .",
    "subgraph of node @xmath31 ( black ) are colored red , blue , green .",
    "distances defining the shells are : @xmath316 , @xmath317 , @xmath318 . the weight or length is shown next to each edge . given a node @xmath39 , the number inside its circle is the total number of shortest paths coming from the root @xmath31 : @xmath319 .",
    "b ) the list of nodes @xmath308 and c ) list of edges @xmath311 are shown together with their @xmath91- , @xmath110- , and @xmath149- betweenness values.,scaledwidth=47.0% ]    again , we calculate @xmath320 for a node @xmath52 , and @xmath104 for an edge @xmath302 .",
    "as defined above , these values take into account only the shortest paths starting from node @xmath31 , and @xmath53 denotes the shell containing the corresponding node or edge .",
    "one uses the same initial conditions @xmath65 , and @xmath67 for all @xmath66 , as before .",
    "the algorithm has the following main steps .",
    "for every @xmath108 :    \\1 ) we build the next layer @xmath47 using breadth first search . during this search",
    "we build the list of indexes @xmath321 , @xmath312 , @xmath313 as defined above .",
    "we denote the total number of nodes included in the list ( from all shells @xmath322 up to @xmath47 ) as @xmath323 and the number of edges included as @xmath324 . during this breadth - first search",
    "we also calculate the @xmath69 of the discovered nodes . every time a new edge @xmath302",
    "is added to the list we update @xmath69 by adding to it @xmath319 ( using algorithmic notation , @xmath325 ) .",
    "recall that @xmath69 denotes the total _",
    "number _ of shortest paths from @xmath31 to @xmath52 .",
    "if the edge @xmath302 is included in the subgraph ( meaning that it is part of a shortest path ) the number of shortest paths ending in @xmath39 has to be added to the number of shortest paths ending in @xmath52 .",
    "\\2 ) the @xmath10-betweenness of all nodes included in the new layer is set to @xmath326 , similarly to eq .",
    "( [ bllequal1 ] ) .",
    "\\3 ) going backwards through the list of edges we calculate the fixed-@xmath10 bc of all nodes and edges . for @xmath327 ,",
    "we perform the following recursions :    \\a ) for the edge @xmath311 : @xmath328 b ) _ immediately after _ the bc of an edge is calculated , the betweenness of node @xmath329 must also be updated .",
    "we have to add to its previous value the @xmath10-bc of the edge @xmath311 : @xmath330    \\4 ) we return to step 1 ) until the last shell @xmath79 is reached .    as we have seen , the algorithm and the recursions are very similar to the one presented for unweighted graphs .",
    "the crucial difference is that the exact order of the discovered nodes and edges has to be saved , because the bc values of edges and nodes in a shell can not be updated in an arbitrary order . as an example , fig .  [",
    "figweighted ] shows a small subgraph and the list of nodes and edges together with their @xmath91- , @xmath110- and @xmath149-betweenness values .    ,",
    "@xmath331 and @xmath332 .",
    "the top @xmath333 of nodes are colored from red to yellow according to their @xmath63$]-bc ranking ( see color bar ) .",
    "the vb based on the @xmath63$]-bc is shown for different values : @xmath334 .",
    ", scaledwidth=48.0% ]",
    "an important problem in network research is identifying the most vulnerable parts of a network . here",
    "we define the vulnerability backbone ( vb ) of a graph as the smallest fraction of the highest betweenness nodes _ forming a percolating cluster _ through the network .",
    "removing simultaneously all elements of this backbone will efficiently shatter the network into many disconnected pieces .",
    "although the shattering performance can be improved by sequentially removing and _ recomputing _ the top - ranking nodes @xcite , here we focus only on the simultaneous removal of the one - time computed vb of a graph , the generalization being straightforward .",
    "next we illustrate that range - limited bcs can be used to efficiently detect this backbone by performing calculations up to a length much smaller than the diameter .",
    "this is of course expected in networks that have a small diameter ( @xmath335 or smaller ) , however , it is less obvious for networks with large diameter ( @xmath336 , @xmath337 ) . for this reason , in the following we consider random geometric ( rg ) graphs @xcite in the plane .",
    "the graphs are obtained by sprinkling at random @xmath3 points into the unit square and connecting all pairs of points that are found within a given distance @xmath338 of each other .",
    "we will use the average degree @xmath339 @xcite instead of @xmath338 to parametrize the graphs . in fig .",
    "[ backbone ] we present measurements on a random geometric graph with @xmath340 nodes , average degree @xmath341 .",
    "the hop - count diameter of this graph is @xmath332 .",
    "the weights of connections are considered to be the physical ( euclidean ) distances .",
    "clearly , since the links of the graph are built based on a rule involving the euclidean distances , the weight structure and the topology of the graph should be tightly correlated .",
    "thus , we do expect strong correlations between the @xmath63$]-bc values measured both from the unweighted and the weighted graph .",
    "the weight ranges @xmath298 defining the layers during the algorithm were chosen as @xmath342 , @xmath343 , so that @xmath344 is close to the diagonal length of the unit square @xmath345 .",
    "the nodes and connections are colored according to their @xmath63-bc$ ] ranking for different @xmath10 values ( see the color bar in fig [ backbone ] ) .",
    "the backbone is already clearly formed at @xmath346 .",
    "nodes , and average degrees @xmath341 and @xmath347 , respectively .",
    "the rankings were calculated both on the unweighted graph ( left column ) and weighted one ( right column ) .",
    ", scaledwidth=48.0% ]    fig .",
    "[ backbonecomp ] compares the vbs of the graphs obtained with and without considering the connection weights ( distances ) .",
    "two rgs with densities @xmath341 and @xmath347 are presented . in the case of the denser graph",
    "the backbone is concentrated towards the center of unit square , as periphery effects in this case are stronger ( we do not use periodic boundary conditions ) .    .",
    "colors indicate the @xmath348 values , where @xmath349 is the rank of a node obtained using the non - weighted algorithm and @xmath350 is obtained with the weighted graph ( see the color bar ) . in denser graphs the differences become more significant.,scaledwidth=48.0% ]    although qualitatively the two vbs are similar , the vb is sharper and clearer in the weighted case . there can be actually significant differences between the two backbones , in spite the fact that one would expect a strong overlap . in fig .",
    "[ rankdiff ] we show these differences by coloring the nodes of the two graphs from fig [ backbonecomp ] according to the @xmath348 values , where @xmath349 is the rank of a node obtained using the non - weighted algorithm and @xmath350 is obtained using the weighted graph .",
    "the nodes are colored from blue to red , blue corresponding to the case when the unweighted algorithm strongly underestimates the weighted ranking of a node and red is used when it overestimates it .",
    "although it is of no surprise that weighted and unweighted backbones differ in networks where the graph topology and the weights are weakly correlated , the fact that there are considerable differences also for the strongly correlated case of random geometric graphs ( the blue and red colored parts in the right panel of fig [ rankdiff ] ) is rather unexpected , underlining the importance of using weigh - based centrality measures in weighted networks .",
    "in this paper we have introduced a systematic approach to network centrality measures decomposed by graph distances for both unweighted and weighted directed networks .",
    "there are several advantages to such range - based decompositions .",
    "first , they provide much finer grained information on the positioning importance of a node ( or edge ) with respect to the network , than the traditional ( diameter - based ) centrality measures .",
    "traditional centrality values are dominated by the large number of long - distance network paths , even though most of these paths might not actually be used frequently by the transport processes occurring on the network . due to the fast growth of the number of paths with distance in large complex networks",
    ", one expects that the distribution of the centrality measures ( which incorporate these paths ) to obey scaling laws as the range is increased .",
    "we have shown both numerically and via analytic arguments ( identifying the scaling form ) that this is indeed the case , for unweighted networks ; for the same reasons , however , we expect the existence of scaling laws for weighted networks as well .",
    "we have shown that these scaling laws can be used to predict or estimate efficiently several quantities of interest , that are otherwise costly to compute on large networks .",
    "in particular , the largest typical node - to - node distance @xmath167 , the traditional individual node and edge centralities ( diameter range ) and the ranking of nodes and edges by their centrality values . the latter is made possible by the existence of the phenomenon of fast freezing of the rank ordering by distance , which we demonstrated both numerically and via analytic arguments .",
    "we have also introduced efficient algorithms for range - limited centrality measures for both unweighted and weighted networks .",
    "although they have been presented for betweenness centrality , they can be modified to obtain all the other centrality measure variants .",
    "finally , we presented an application of these concepts in identifying the vulnerability backbone of a network , and have shown that it can be identified efficiently using range - limited betweenness centralities .",
    "we have also illustrated the importance of taking into account link - weights @xcite when computing centralities , even in networks where graph topology and weights are strongly correlated .",
    "this work was supported in part by nsf bcs-0826958 , hdtra 1 - 09 - 1 - 0039 and by the army research laboratory under cooperative agreement number w911nf-09 - 2 - 0053 and mer in part by pn - ii - ru - te-2011 - 3 - 0121 . the views and conclusions contained in this document",
    "are those of the authors and should not be interpreted as representing the official policies , either expressed or implied , of the army research laboratory or the u.s .",
    "government is authorized to reproduce and distribute reprints for government purposes notwithstanding any copyright notation here on ."
  ],
  "abstract_text": [
    "<S> here we present a range - limited approach to centrality measures in both non - weighted and weighted directed complex networks . </S>",
    "<S> we introduce an efficient method that generates for every node and every edge its betweenness centrality based on shortest paths of lengths not longer than @xmath0 in case of non - weighted networks , and for weighted networks the corresponding quantities based on minimum weight paths with path weights not larger than @xmath1 , @xmath2 . </S>",
    "<S> these measures provide a systematic description on the positioning importance of a node ( edge ) with respect to its network neighborhoods 1-step out , 2-steps out , etc . up to including the whole network . </S>",
    "<S> they are more informative than traditional centrality measures , as network transport typically happens on all length - scales , from transport to nearest neighbors to the farthest reaches of the network . </S>",
    "<S> we show that range - limited centralities obey universal scaling laws for large non - weighted networks . </S>",
    "<S> as the computation of traditional centrality measures is costly , this scaling behavior can be exploited to efficiently estimate centralities of nodes and edges for all ranges , including the traditional ones . </S>",
    "<S> the scaling behavior can also be exploited to show that the ranking top - list of nodes ( edges ) based on their range - limited centralities quickly freezes as function of the range , and hence the diameter - range top - list can be efficiently predicted . </S>",
    "<S> we also show how to estimate the typical largest node - to - node distance for a network of @xmath3 nodes , exploiting the afore - mentioned scaling behavior . </S>",
    "<S> these observations are illustrated on model networks and on a large social network inferred from cell - phone trace logs ( @xmath4 nodes and @xmath5 edges ) . </S>",
    "<S> finally , we apply these concepts to efficiently detect the vulnerability backbone of a network ( defined as the smallest percolating cluster of the highest betweenness nodes and edges ) and illustrate the importance of weight - based centrality measures in weighted networks in detecting such backbones . </S>"
  ]
}
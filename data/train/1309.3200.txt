{
  "article_text": [
    "ad - hoc wireless networks are composed of a set of nodes that exchange data with each other through wireless links without relying on any pre - existing infrastructure @xcite .",
    "typically , the network topology follows a nearest neighbor criterion to allow for low - power communications .",
    "the diffusion of information through a network presumes connectivity of the network .",
    "furthermore , many distributed algorithms running over a graph , such as consensus , diffusion , or swarming algorithms , have a convergence time strictly dependent on the graph connectivity @xcite-@xcite . for example",
    ", highly connected networks generally have significantly faster convergence thanks to a more efficient in - network information diffusion . in many practical examples",
    ", connectivity can only be assumed to hold in probability because the links among the nodes may be on or off depending on channel conditions . in most applications ,",
    "channel variability may depend on several factors , such as mobility of the nodes , as in vehicular networks , channel fading due to propagation over multipath channels , or packet collisions due to random mac strategies working on a collision avoidance regime .",
    "it is then of interest to look at distributed mechanisms to estimate and control the network connectivity in the presence of realistic channel models .",
    "spectral graph theory @xcite has been demonstrated to be a very powerful tool for topology inference .",
    "the eigenvalues and/or eigenvectors of the laplacian matrix of the graph have been exploited , e.g. , to estimate the connectivity of the network @xcite-@xcite , to find densely connected clusters of nodes @xcite-@xcite , and to search for potential links that would greatly improve the connectivity if they were established @xcite . a recent tutorial work that gives an excellent view of this topic is @xcite . in all these works",
    ", it was shown that the connectivity properties of a graph can be assessed by looking at the second smallest eigenvalue of the laplacian matrix , also known as the _ algebraic connectivity _ , whereas a significant role in graph partitioning is plaid by the eigenvector associated to the algebraic connectivity , also known as _",
    "fiedler vector _",
    "it is then important to find efficient algorithms to compute these connectivity parameters .",
    "the problem of distributed estimation of the eigenvalues of the laplacian matrix has been considered in several previous works , e.g. , @xcite-@xcite . in @xcite",
    "a distributed algorithm is proposed to find the @xmath0 eigenvectors corresponding to the @xmath0 largest eigenvalues of the laplacian matrix or the ( weighted ) adjacency matrix , based on power iteration and random walk techniques .",
    "the work in @xcite evaluates the eigenstructure of the laplacian matrix by letting the nodes oscillate at the eigenfrequencies corresponding to the network topology . a distributed algorithm that computes",
    "the fiedler vector and the algebraic connectivity , with application to topology inference in ad hoc networks , has been also proposed in @xcite-@xcite .",
    "the algorithms in @xcite-@xcite allow to estimate the algebraic connectivity and the fiedler vector without the need for nested consensus iterations , thus significantly reducing the communication burden .",
    "distributed methods aimed at controlling the algebraic connectivity for flocking maintenance have also been proposed in @xcite-@xcite . in @xcite ,",
    "the authors propose a distributed algorithm that allows each node to estimate and track the algebraic connectivity of the graph in mobile wireless sensor networks .",
    "then , based on this estimator , a decentralized gradient controller for each agent helps maintain global connectivity during motion .",
    "the work in @xcite enforces network connectivity by means of distributed topology control that decides on both deletion and creation of communication links between agents . with this protocol ensuring network connectivity",
    ", a decentralized motion controller aligns agent velocity vectors and regulates inter - agent distances to maintain existing network links . in @xcite , a theoretical framework for controlling graph connectivity in mobile robot networks",
    "is given , thus providing centralized and distributed algorithms to maintain , increase , and control connectivity .",
    "finally , references @xcite-@xcite propose distributed methods for estimating the algebraic connectivity with the aim of optimizing the performance of average consensus algorithms . in @xcite a consensus method using chebyshev polynomials",
    "is considered and the authors proposed a distributed algorithm to compute the parameters that enable the method to maximize the convergence rate .",
    "then , the work in @xcite proposes a distributed algorithm to estimate the algebraic connectivity of a graph , thus applying this method to an event - triggered consensus scenario , where the most recent estimate of the algebraic connectivity is used for adapting the behavior of the average consensus algorithm . finally , in @xcite the authors proposed a topology - aware distributed algorithm for on - line adaptation of the laplacian weighting rule , when applied in an in - network averaging procedure .",
    "all these previous works assumed ideal communications among the network nodes .",
    "however , in a realistic scenario , the wireless channels are affected by random fading and additive noise , which induce errors in the received packets .",
    "furthermore , realistic random mac protocols may determine packet collisions during the exchange of data among the nodes .",
    "in such a case , the receiving node could request the retransmission of the erroneous packets , but this would imply random delays in the communication among the nodes and it would be complicated to implement over a totally decentralized system .",
    "it is then of interest to analyze networks where the erroneous packets are simply dropped , without requiring a retransmission .",
    "random packet dropping can be modeled as having random switching graph topologies .",
    "the effect of random graphs on distributed algorithms has been thoroughly studied in a series of works , mainly focused on the convergence of consensus algorithms , e.g. , @xcite-@xcite , and of swarming algorithms for radio resource allocation @xcite .    in this work ,",
    "we propose a distributed algorithm , based on a stochastic power iteration method , whose aim is to estimate the algebraic connectivity and the related fiedler vector of the expected laplacian matrix of a random graph , incorporating random impairments in the exchange of data among the nodes .",
    "the basic contributions of this paper are the following : 1 ) a novel algorithm to estimate in a distributed fashion the spectral connectivity parameters of the expected laplacian matrix of a random graph ; 2 ) the derivation of the convergence properties of the proposed algorithm in the presence of random link failures in the communications among nodes ; 3 ) the control of the expected connectivity through the adaptation of the power transmitted by each node , in order to maximize the network connectivity in the presence of realistic mac protocols or simply to drive it toward a desired target value .",
    "the paper is organized as follows . in section",
    "ii we first recall some basic concepts from algebraic graph theory that will be used throughout the paper .",
    "then , we describe the proposed stochastic power iteration method for estimating the connectivity of a random graph , thus illustrating the distributed implementation based on consensus algorithms to decentralize the computation .",
    "the convergence properties of the proposed algorithm in the presence of random link failures are also investigated . in section iii , exploiting the proposed strategy for connectivity estimation , we propose a simple power control method aimed at controlling the expected connectivity of a network .",
    "section iv then shows the effect of collisions , which are induced by a realistic random medium access control protocol , on the network connectivity .",
    "in particular , it is shown how , by choosing a too large transmission power , the network connectivity may be heavily degraded due to an increase in the collision probability .",
    "then , we propose a distributed algorithm to evaluate the optimal transmission power that maximizes the connectivity in the presence of realistic mac protocols . finally , section v draws some conclusions .",
    "we consider a network composed of @xmath1 nodes interacting according to a communication topology . the interaction among the nodes",
    "is modeled as an undirected graph @xmath2 , where @xmath3 denotes the set of nodes and @xmath4 is the edge set .",
    "the structure of the graph is described by a symmetric @xmath5 adjacency matrix @xmath6 , whose entries @xmath7 are either positive or zero , depending on wether there is a link between nodes @xmath8 and @xmath9 or not , i.e. , if the distance between nodes @xmath8 and @xmath9 is less than a coverage radius , which is dictated by nodes transmit power and the channel between them .",
    "the set of neighbors of a node @xmath8 is @xmath10 , defined as @xmath11 .",
    "node @xmath8 communicates with node @xmath9 if @xmath9 is a neighbor of @xmath8 ( or @xmath12 ) .",
    "the graph has no self loops , i.e. , @xmath13 for all @xmath8 .",
    "denoting by @xmath14 the degree of node @xmath8 , the degree matrix @xmath15 is a diagonal matrix with entries @xmath16 that are the row sums of the adjacency matrix @xmath17 .",
    "the graph laplacian @xmath18 is an @xmath5 matrix defined as @xmath19 the spectral properties of @xmath18 have been shown to be critical in many multiagent applications , such as formation control @xcite , consensus seeking @xcite and direction alignment @xcite .",
    "we denote by @xmath20 , @xmath21 , the eigenvalues of @xmath18 , ordered in increasing sense .",
    "the matrix @xmath18 always has , by construction , a null eigenvalue @xmath22 , with associated eigenvector @xmath23 composed of all ones . for a connected graph",
    ", the nullspace of @xmath18 has dimension @xmath24 and it is spanned by the vector @xmath23 .",
    "the second smallest eigenvalue @xmath25 is known as the _ algebraic connectivity _ of the graph .",
    "this eigenvalue is greater than 0 if and only if @xmath26 is a connected graph .",
    "the magnitude of this value reflects how well connected the overall graph is .",
    "for this reason , it has been used for example in analysing the synchronizability of networks @xcite-@xcite , @xcite-@xcite , in maintaining stable flocking @xcite , and for routing optimization in cognitive radio ad - hoc networks @xcite .    _ random link failures : _ in a realistic communication scenario , the packets exchanged among the nodes may be received with errors , because of collisions , channel fading or noise .",
    "the retransmission of erroneous packets can be incorporated into the system , but packet retransmission introduces a nontrivial additional complexity in decentralized implementations and , more importantly , it also introduces an unknown delay and delay jitter .",
    "it is then of interest to examine protocols where erroneous packets are simply dropped .",
    "we take into account random packet dropping by modeling the coefficient @xmath7 describing the network topology as statistically independent random variables . then , the laplacian of the graph varies with time as a sequence of i.i.d .",
    "matrices @xmath27\\}$ ] , which can be written , without any loss of generality , as @xmath28 = \\bar{\\bl } + \\tilde{\\bl}[k]\\ ] ] where @xmath29 denotes the expected matrix and @xmath30=\\{\\tilde{l}_{ij}[k]\\}$ ] are i.i.d .",
    "perturbations around the mean . the i.i.d .",
    "fluctuations @xmath31 $ ] affect only the active links , i.e. the links for which @xmath32 ; for all other inactive links , the perturbations are equal to zero .",
    "we do not make any assumptions of symmetry of the failures , i.e. @xmath31 $ ] may be not equal to @xmath33 $ ] , or about the link failure model . although the link failures are independent over time , during the same iteration , the link failures can still be spatially correlated .",
    "it is important to remark that , in the ensuing analysis and derivations , we do not require the random instantiations @xmath34 $ ] of the graph be connected for all @xmath35 .",
    "we only require the graph to be connected on average .",
    "this condition is captured by requiring @xmath36 .      in this section",
    ", we propose a novel algorithm aimed at assessing the connectivity of a random graph by estimating the second smallest eigenvalue of the expected laplacian matrix @xmath37 .",
    "since in our setting the network graph is random due to the presence of link failures , we introduce a stochastic power iteration method to handle the randomness introduced by the graph fluctuation .",
    "let us introduce the matrix @xmath38 $ ] given at time @xmath35 by : @xmath39=\\bi-\\bar{\\varepsilon}\\bl[k]=\\bar{\\bw}+\\tilde{\\bw}[k]\\ ] ] where @xmath40 is a positive parameter , @xmath41 is the mean matrix , and @xmath42=-\\bar{\\varepsilon}\\tilde{\\bl}[k]$ ] are i.i.d .",
    "fluctuations around the mean .",
    "the matrix @xmath38 $ ] in ( [ consensus_matrix ] ) was used , for example , as the iteration matrix of consensus algorithms over random graphs , see e.g. @xcite-@xcite , @xcite-@xcite . from ( [ consensus_matrix ] ) , the eigenvalues of the expected laplacian matrix @xmath37",
    "are directly related to those of the expected matrix @xmath43 in ( [ consensus_matrix ] ) through the relation @xmath44 in particular , the algebraic connectivity is given by @xmath45 .",
    "furthermore , the eigenvector @xmath46 associated to the second largest eigenvalue of the expected matrix @xmath43 coincides with @xmath47 , which is the one associated to the second smallest eigenvalue of the expected laplacian matrix @xmath37 , also known as the fiedler vector .",
    "the coefficient @xmath40 in ( [ consensus_matrix ] ) satisfies @xmath48 which , combined with the condition @xmath36 , ensures that the mean matrix @xmath43 is a perron matrix having a single unitary eigenvalue @xcite .",
    "since we want to track the second largest eigenvalue of the mean matrix @xmath43 , we deflate the original matrix @xmath38 $ ] by removing its largest eigenvalue , thus obtaining the matrix @xmath49 $ ] given by : @xmath50 = \\bw[k]-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t:=\\bar{\\bb}+\\tilde{\\bb}[k]\\end{aligned}\\ ] ] where @xmath51 and @xmath52=\\tilde{\\bw}[k]=-\\bar{\\varepsilon}\\tilde{\\bl}[k]$ ] . in this way , the maximum eigenvalue of the deflated expected matrix @xmath53 coincides with the second largest eigenvalue of @xmath43 . to handle the randomness of the graph , we introduce also the deflated matrix @xmath54=\\bi-\\varepsilon[k]\\bl[k]-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t=\\bw_2[k]-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t,\\end{aligned}\\ ] ] where @xmath55=\\bi-\\varepsilon[k]\\bl[k]$ ] , with @xmath56 $ ] denoting a positive diminishing sequence that we will choose in the sequel .",
    "the matrices @xmath57 $ ] and @xmath49 $ ] have exactly the same eigenvectors , but different eigenvalues , at each time @xmath35 , due to the time - varying sequence @xmath56 $ ] .",
    "we consider first a centralized implementation of the stochastic power iteration algorithm , whose main steps are listed in table 1 .",
    "a distributed implementation of the algorithm will be illustrated later on .",
    "initialize @xmath58 $ ] , @xmath59 $ ] , and @xmath60 $ ] randomly .",
    "then , set @xmath61 and perform the following steps :    1 .",
    "build the deflated matrices @xmath62&=\\bi-\\bar{\\varepsilon}\\bl[k]-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t\\\\                 \\bb_2[k]&=\\bi-\\varepsilon[k]\\bl[k]-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t          \\end{aligned}\\ ] ] where @xmath40 and @xmath56 $ ] satisfy ( [ condition ] ) and ( [ epsilonk ] ) , respectively ; 2 .",
    "evaluate the estimate @xmath63 $ ] of @xmath64 as : @xmath65&=\\frac{\\bx^t[k]\\bb[k]\\bx[k]}{\\bx^t[k]\\bx[k]}\\label{lambdan-1_2}\\\\                 y[k+1]&=y[k]+\\alpha[k]\\left(y_0[k]-y[k]\\right)\\label{lambdan-1 }          \\end{aligned}\\ ] ] where @xmath66 $ ] is a time varying step - size satisfying ( [ step_size ] ) ; 3 .",
    "compute the estimate @xmath67 $ ] of @xmath68 as : @xmath69=\\frac{1-y[k+1]}{\\bar{\\varepsilon}};\\ ] ] 4 .",
    "perform the power iteration step @xmath70=\\frac{\\bb_2[k]\\bx[k]}{\\|\\bb_2[k]\\bx[k]\\|};\\ ] ] 5 .   if convergence is achieved stop , otherwise set @xmath71 and go to step 1 .",
    "the aim of the stochastic power iteration steps in ( [ lambdan-1_2])-([pow_iter ] ) is to estimate the largest eigenvalue of the expected matrix @xmath53 ( i.e. @xmath64 ) , which is directly related to the second eigenvalue @xmath68 of the expected laplacian through ( [ lambda2_est ] ) . to achieve this goal",
    ", the power iteration in ( [ pow_iter ] ) runs over the matrix @xmath57 $ ] , thus providing an estimate @xmath72 $ ] of the eigenvector @xmath73 associated to the largest eigenvalue of the expected matrix @xmath53 ( remember that @xmath57 $ ] and @xmath49 $ ] have the same eigenvectors ) .",
    "the eigenvector estimate @xmath72 $ ] is then used in the rayleigh ratio ( [ lambdan-1_2 ] ) to provide an estimate @xmath74 $ ] for @xmath64 . in both adaptations ,",
    "it is fundamental to choose the step sizes @xmath56 $ ] in ( [ defl_matrix3 ] ) and @xmath66 $ ] in ( [ lambdan-1 ] ) . in particular , we make the following assumptions , which are standard in stochastic approximation and adaptive signal processing @xcite-@xcite :    _ assumption a.1 _ : ( _ persistence _ ) the sequence @xmath56 $ ] in ( [ defl_matrix3 ] ) and the step - size sequence @xmath66 $ ] in ( [ lambdan-1 ] ) satisfy the conditions @xmath75>0 , \\hspace{.4 cm }   \\sum_{k=0}^{\\infty}\\varepsilon[k]=\\infty , \\hspace{.4 cm }    \\sum_{k=0}^{\\infty}\\varepsilon^2[k]<\\infty,\\label{epsilonk}\\\\ & \\alpha[k]>0 , \\hspace{.4 cm }   \\sum_{k=0}^{\\infty}\\alpha[k]=\\infty , \\hspace{.4 cm }    \\sum_{k=0}^{\\infty}\\alpha^2[k]<\\infty.\\label{step_size}\\end{aligned}\\ ] ] conditions ( [ epsilonk])-([step_size ] ) ensure that the step size sequences decay to zero , but not too fast .",
    "an example of sequences satisfying ( [ epsilonk])-([step_size ] ) is @xmath76=\\frac{\\varepsilon_0}{(k+1)^{\\gamma } } , \\quad\\quad \\alpha[k]=\\frac{\\alpha_0}{(k+1)^{\\beta}},\\end{aligned}\\ ] ] @xmath77    we are now able to state the main theorem on the convergence of the proposed stochastic power iteration method .",
    "_ theorem 1 _ : let @xmath78 $ ] and @xmath72 $ ] be the sequences generated in ( [ lambda2_est ] ) and ( [ pow_iter ] ) by the stochastic power iteration .",
    "if @xmath79 , and condition ( [ condition ] ) and assumption a.1 hold , we have @xmath80=\\lambda_{2}(\\bar{\\bl } ) , \\quad\\hbox{and}\\quad \\lim_{k\\rightarrow\\infty } \\bx[k]=\\hat{\\bu}_{2}(\\bar{\\bl}),\\end{aligned}\\ ] ] almost surely ( w.p.1 ) , where @xmath81 denotes the normalized fiedler vector of the expected laplacian matrix @xmath37 .",
    "see appendix b.    theorem 1 establishes the almost sure convergence of the stochastic power iteration method to the fiedler vector @xmath81 and to the algebraic connectivity @xmath68 .",
    "as shown in appendix c , an upper bound on the slowest ( undesired ) decaying mode @xmath82 $ ] of the algorithm is given by @xmath83&\\leq \\exp \\left(-\\big(\\lambda_3(\\bar{\\bl})-\\lambda_2(\\bar{\\bl})\\big)\\sum_{l=0}^k\\varepsilon[l]\\right).\\end{aligned}\\ ] ] from ( [ conv_mean_part2 ] ) , we see how the convergence rate depends on the difference between the third and the second eigenvalues of the expected laplacian @xmath37 , and on the sequence @xmath56 $ ] .",
    "in particular , ( [ conv_mean_part2 ] ) makes clear that , because of ( [ epsilonk ] ) , the slowest decaying mode goes to zero as @xmath84 .",
    "_ remark : _ as mentioned in the introduction , the eigenvectors of the laplacian matrix give useful information about how the network can be partitioned , i.e. , how to find clusters of nodes in the network .",
    "it has been shown in several works , e.g. , @xcite-@xcite , that spectral clustering can infer more topological properties of the graph if more eigenvectors of the laplacian matrix , besides the one associated to the algebraic connectivity , are known . up to now",
    ", it was shown how the proposed stochastic power iteration can compute only the second smallest eigenvalue and the corresponding eigenvector of the expected laplacian matrix of the graph .",
    "however , the trick of deflating the matrix @xmath38 $ ] in ( [ defl_matrix2 ] ) can be sequentially iterated in order to estimate the third order eigenvalue and the associated eigenvector . as an example , once the algebraic connectivity @xmath85 and the fiedler vector @xmath47 have been estimated through a first stage power iteration , the third order eigenparameters can be estimated by applying again power iteration using the pair of deflated matrices @xmath86&=\\bb[k]-(1-\\bar{\\varepsilon } \\lambda_{2}(\\bar{\\bl}))\\bu_{2}(\\bar{\\bl})\\bu^t_{2}(\\bar{\\bl}),\\nonumber\\\\ \\bc_2[k]&=\\bb_2[k]-(1-\\varepsilon[k ] \\lambda_{2}(\\bar{\\bl}))\\bu_{2}(\\bar{\\bl})\\bu^t_{2}(\\bar{\\bl } ) , \\nonumber\\end{aligned}\\ ] ] which take the role of @xmath49 $ ] and @xmath57 $ ] in table 1 , respectively . in a similar way",
    ", we can estimate also the higher order eigen - parameters by sequential deflation and power iteration .",
    "_ distributed implementation : _ the stochastic power iteration method described before requires a centralized implementation . in the following , we propose a decentralized implementation based on average consensus @xcite,@xcite .",
    "the two operations to be distributed are the rayleigh ratio in ( [ lambdan-1_2 ] ) and the power iteration in ( [ pow_iter ] ) , whereas all other computations can be performed locally . setting @xmath87=\\bb[k]\\bx[k]$ ] and @xmath88=\\bb_2[k]\\bx[k]$ ] ,",
    "the @xmath8-th components @xmath89 $ ] and @xmath90 $ ] of the vectors @xmath87 $ ] and @xmath88 $ ] can be evaluated locally .",
    "in fact , exploiting the structure of the matrices in ( [ defl_matrix2 ] ) and ( [ defl_matrix3 ] ) , we have @xmath91=x_i[k]+\\bar{\\varepsilon}\\sum_{j=1}^na_{ij}[k](x_j[k]-x_i[k])-m[k]\\label{b_i}\\\\      b_{2,i}[k]=x_i[k]+\\varepsilon[k]\\sum_{j=1}^na_{ij}[k](x_j[k]-x_i[k])-m[k]\\label{b_i2}\\end{aligned}\\ ] ] where @xmath92=\\frac{1}{n}\\mathbf{1}^t\\bx[k]$ ] is a global parameter .",
    "the value @xmath93 $ ] is given by the average of the values @xmath94 $ ] stored locally at each node , and can be computed in a decentralized fashion using a round of average consensus protocol .",
    "the next step is to evaluate the rayleigh ratio in ( [ lambdan-1_2 ] ) in a distributed fashion . to this end",
    ", we notice that expression ( [ lambdan-1_2 ] ) can be recast as @xmath95\\bb[k]\\bx[k]}{\\bx^t[k]\\bx[k ] } = \\frac{\\sum_{i=1}^n x_i[k]b_i[k]}{\\sum_{i=1}^n x^2_i[k]},\\end{aligned}\\ ] ] where both numerator and denominator are written as inner products .",
    "this notation is convenient because it enables us to compute this expression through a step of weighted average consensus @xcite,@xcite , which evaluates in a distributed manner the ratio in ( [ lambdan-1_3 ] ) .",
    "thus , at this stage , each node is able to compute ( [ lambdan-1_2 ] ) and ( [ lambdan-1 ] ) locally . to complete the series of operations of the stochastic power iteration algorithm ,",
    "node @xmath8 still needs to evaluate ( [ pow_iter ] ) in a distributed fashion .",
    "then , each node @xmath8 computes the @xmath8th component of vector @xmath96 $ ] in ( [ pow_iter ] ) as : @xmath97=\\frac{b_{2,i}[k]}{\\|\\bb_2[k]\\|}.\\ ] ] since the numerator has been already computed through ( [ b_i2 ] ) , we only need to compute the denominator of ( [ pow_iter3 ] ) .",
    "in particular , we consider the evaluation of @xmath98\\|=\\sqrt{\\frac{1}{n}\\sum_{i=1}^n b^2_{2,i}[k]},\\ ] ] which is a scaled version of @xmath99\\|$ ] , and can be computed in a distributed fashion by taking the square root of the output of an average consensus step .",
    "each node then computes @xmath100=\\sqrt{n}\\frac{b_{2,i}[k]}{\\|\\bb_2[k]\\|}$ ] , which is a scaled version of the true value @xmath94 $ ] that the algorithm should compute in ( [ pow_iter3 ] ) .",
    "however , even in the presence of such update , the method still works correctly because , at time @xmath101 , the step in ( [ lambdan-1_2 ] ) is a rayleigh ratio , whose result is not affected by the scaling @xmath102 , thus leading to the correct update of the algorithm .",
    "the main steps of the decentralized implementation are summarized in table 2 .",
    "we also define @xmath103-convergence of a sequence @xmath104 $ ] the event @xmath105-c[k]|}{|c[k]|}\\leq\\delta$ ] .",
    "each node initializes @xmath106 $ ] , @xmath59 $ ] , and @xmath60 $ ] randomly",
    ". then , set @xmath61 and performs the following steps :    1 .",
    "run a consensus round to get @xmath92=\\mathbf{1}^t\\bx[k]/n$ ] until @xmath107-convergence ; 2 .   evaluate @xmath89 $ ] and @xmath90 $ ] , @xmath108 , using ( [ b_i])-([b_i2 ] ) ; 3 .   run a consensus round to compute the rayleigh ratio in ( [ lambdan-1_3 ] ) ( i.e. @xmath74 $ ] in ( [ lambdan-1_2 ] ) ) and the scaled norm in ( [ scaled_norm ] ) until @xmath109-convergence ; 4 .   compute the estimate @xmath63 $ ] of @xmath64 using ( [ lambdan-1 ] ) ; 5 .",
    "compute the estimate @xmath67 $ ] of @xmath85 using ( [ lambda2_est ] ) ; 6 .",
    "perform the power iteration in ( [ pow_iter3 ] ) , @xmath108 .",
    "if convergence is achieved stop , otherwise set @xmath71 and go to step 1 .",
    "_ remark 2 : _ the distributed implementation of the stochastic power iteration proposed in table 2 is based on the use of two rounds of average consensus algorithm @xcite,@xcite , which allow the computation of the global quantities in the steps 1 and 3 in table 2 .",
    "of course , also the consensus algorithm will be affected by the presence of random link failures .",
    "however , if the expected graph is connected ( i.e. , @xmath36 ) and the matrices @xmath38 $ ] in ( [ consensus_matrix ] ) are doubly stochastic for every @xmath35 , it is well known that consensus algorithm is robust to the presence of link failures @xcite-@xcite , thus guaranteing convergence to the desired average value .",
    "thus , differently from the centralized case in table 1 , where no symmetry assumptions are required on the link failures , in the distributed implementation the network graph must be balanced at every iteration . regarding the communication demands of the proposed distributed implementation , in the first consensus round",
    "each node must broadcast a scalar value to its neighbors , whereas in the second round it is necessary to transmit two scalar values .",
    "thus , letting @xmath110 be the cost associated to the transmission of a scalar value , the communication cost per iteration @xmath35 of the power iteration algorithm is equal to @xmath111 , where @xmath112 and @xmath113 are the number of iterations needed by the first and second consensus rounds to converge within prescribed accuracies @xmath107 and @xmath109 , respectively .",
    "the communication demand is then determined by the convergence rate of the consensus algorithm , which depends on the value of @xmath68 , as shown in several previous works , see , e.g. , @xcite , @xcite .",
    "in particular , the more connected is the expected graph ( i.e. , larger values of @xmath68 ) the faster is convergence of consensus , as illustrated in the following numerical examples .",
    "_ numerical example - convergence : _ the aim of this example is to corroborate the theoretical results in theorem 1 , which establishes the almost sure convergence of the stochastic power iteration method in table 1 .",
    "we consider a connected network composed of 20 nodes , whose ideal topology ( in the absence of link failures ) is shown in fig .",
    "the communication among nodes is impaired by random link failures so that each link in fig .",
    "[ net ] is on with a certain probability @xmath114 , which is here assumed to be constant over all links . in fig .",
    "[ fiedler ] , we report the behavior of the estimate of five components of the fiedler vector @xmath73 versus the iteration index , obtained setting @xmath115 . the theoretical value of each component is also reported as a horizontal dashed line .",
    "the sequences @xmath66 $ ] and @xmath56 $ ] are chosen as in ( [ step_size2 ] ) , with @xmath116 , @xmath117 , @xmath118 , @xmath119 , in order to satisfy ( [ step_size ] ) . as we can notice from fig .",
    "[ fiedler ] , the algorithm asymptotically converges to the theoretical value of fiedler vector , thus confirming the theoretical results obtained in theorem 1 .",
    "moreover , in fig . [ lambda2 ] , we report the behavior of the estimate of @xmath68 versus the iteration index , considering different probabilities to establish a communication link .",
    "the theoretical values of @xmath68 are also reported as horizontal dashed lines .",
    "the parameters are the same as in the previous simulation . as we can notice from fig .",
    "[ lambda2 ] , the algorithm converges to the theoretical value of the algebraic connectivity . to validate the almost sure convergence claimed in theorem 1 numerically , in fig .",
    "[ mse_lambda2 ] , we report the behavior of the mean square error ( mse ) on the estimate of @xmath68 , i.e. @xmath120-\\lambda_2(\\bar{\\bl}))^2\\}$ ] , considering different probabilities to establish a communication link . the results are averaged over 100 independent realizations .",
    "the parameters are chosen as @xmath116 , @xmath121 , @xmath122 , @xmath123 .",
    "the ideal case , corresponding to @xmath124 , is also reported as a benchmark . from fig .",
    "[ mse_lambda2 ] , we notice how the mse goes to zero as @xmath84 , for any value of the probability @xmath114 to establish a link .",
    "as expected , we can also see how , reducing the probability to establish a communication link , the convergence rate of the algorithm decreases .         versus iteration index , for different probabilities to establish a communication link.,width=321 ]         versus iteration index.,width=306 ]    _ numerical example - adaptation to time - varying scenarios : _ in many practical applications , the connectivity may change over time due to many factors like , e.g. , nodes mobility , nodes failures , variation of channel conditions , etc .",
    "it is then of interest to devise adaptive techniques that are able to track the temporal variation of the expected graph s connectivity .",
    "the stochastic power iteration in ( [ lambdan-1_2])-([pow_iter ] ) converges to the desired eigenvalue almost surely thanks to the effect of the diminishing sequences in ( [ step_size])-([step_size2 ] ) , which asymptotically drives to zero the noise variance . however , this method is not adaptive since the use of a diminishing step - size would make impossible a short - term adaptation to temporal variations of the expected graph connectivity .",
    "it is then of interest to check the tracking capabilities of the algorithm , assuming constant step sizes , i.e. @xmath66=\\alpha_0 $ ] in ( [ lambdan-1 ] ) and @xmath56=\\bar{\\varepsilon}$ ] in ( [ defl_matrix3 ] ) . to assess the adaptation capability of the proposed method to temporal changes in the algebraic connectivity of the network expected graph",
    ", we consider a scenario where the ideal connectivity of the graph varies with time between three different values .",
    "the probability to establish a communication link is kept fixed at @xmath125 , and @xmath126 . in fig .",
    "[ tracking ] we illustrate the behavior of the estimate of @xmath68 versus the iteration index , considering the adaptive stochastic power iteration method with two different constant step - size values @xmath127 .",
    "the theoretical value of @xmath68 is also reported to illustrate the convergence properties . as we can see from fig .",
    "[ tracking ] , the adaptive implementation allows online tracking of the algebraic connectivity of the expected graph . in particular , we can notice from fig .",
    "[ tracking ] how a larger step - size leads to a better adaptation capability , at the cost of larger variance of the estimation error .",
    ".,width=313 ]    _ numerical example - performance of the distributed implementation : _ the distributed implementation of the stochastic power iteration method in table 2 relies on two nested consensus loops per iteration .",
    "each of them runs until it reaches a certain precision determined by the parameters @xmath107 and @xmath109 .",
    "since this premature stop inevitably introduces an approximation error in the evolution of the stochastic power iteration , it is of interest to evaluate the effect of such an error on the performance of the algorithm .",
    "then , in fig",
    ". [ mse_delta ] , we illustrate the behavior of the mse on the estimate of @xmath68 versus the iteration index , achieved by the distributed stochastic power iteration algorithm in table 2 , considering different values of the approximation parameter @xmath109 . the results are averaged over 100 independent simulations .",
    "the network topology is achieved from the one in fig .",
    "[ net ] by increasing the algebraic connectivity of the ideal graph ( with no failures ) to @xmath128 .",
    "the link failure probability is set to @xmath129 , and the approximation parameter @xmath130 .",
    "the sequences @xmath66 $ ] and @xmath56 $ ] are chosen as in ( [ step_size2 ] ) , where @xmath131 , @xmath132 , @xmath133 , @xmath119 . from fig .",
    "[ mse_delta ] , we notice how the mse converges to a finite value due to the presence of a bias introduced by the approximation errors in the estimate of @xmath68 .",
    "as expected , we can see how , using a smaller value of @xmath109 ( higher precision in the final consensus value ) , the bias is reduced and the algorithm shows better performance in terms of mse .",
    "however , this benefit does not come without a price as , reducing the value of the approximation parameter @xmath109 , the inner consensus loops will require more iterations to converge with the desired accuracy . to give an example of the overall communication burden , in fig .",
    "[ iter_delta ] we report the number of communication rounds , needed by the proposed distributed algorithm to converge , versus the approximation parameter @xmath109 .",
    "we consider different values of the algebraic connectivity of the expected graph , which are obtained by varying the connectivity of the underlying ideal graph while keeping fixed the link failure probability to @xmath129 .",
    "the behaviors are averaged over 200 independent simulations . to obtain these results ,",
    "we have defined a convergence criterion also for the sequence @xmath78 $ ] in ( [ lambda2_est ] ) . in particular ,",
    "we consider a @xmath134-convergence criterion , with @xmath135 . as we can notice from fig .",
    "[ iter_delta ] , reducing the value of @xmath109 , the algorithm requires a larger communication burden to converge within the desired accuracy .",
    "furthermore , increasing the algebraic connectivity of the expected graph , the overall number of communication decreases due to the improved convergence rate of the power iteration and the inner consensus loops . in summary , the choice of the precision parameters @xmath107 , @xmath109 , and @xmath134 introduces a tradeoff between achievable performance at convergence and communication burden of the algorithm .    , for different values of @xmath68.,width=302 ]",
    "the proposed algorithm can be applied to estimate the connectivity of all kinds of random networks . assuming the nodes are deployed according to a random geometric graph ( rgg ) @xcite , the stochastic power iteration method can be used to adapt the power transmitted by each node in order to drive the network connectivity toward a desired value .",
    "this can be obtained through a power control step , where each node updates its transmission power as : @xmath136=p_t[k]+\\mu\\left(\\lambda^*-z[k+1]\\right)\\ ] ] for @xmath137 , where @xmath138 is a positive constant used to enforce a desired connectivity value , @xmath139 is a positive step - size , and @xmath67 $ ] is the estimate of @xmath68 , at time @xmath101 , carried out by the stochastic power iteration method in ( [ lambda2_est ] ) .",
    "intuitively , the proposed controller increases the power transmitted by each node if the current estimated value of @xmath68 is lower than the desired value , whereas it reduces the transmitted power in the opposite case . the power update in ( [ power_update ] ) can be inserted as fifth step of the stochastic power iteration in ( [ lambdan-1_2])-([pow_iter ] ) , thus leading to a dynamic change of the network topology toward a desired connectivity value .",
    "_ numerical example : _ in this example we combine the stochastic power iteration step in ( [ lambdan-1_2])-([pow_iter ] ) with the power control step in ( [ power_update ] ) , thus illustrating the capability of the resulting strategy to control the connectivity of the network random graph . as a starting point",
    ", we consider a network composed of 25 nodes deployed over a geographic area of 1600 @xmath140 according to a certain initial topology having an initial value of algebraic connectivity @xmath141 .",
    "the initial power transmitted by each node is @xmath142=1 $ ] mw , whereas the minimum received power needed to establish a communication link among two nodes is @xmath143 mw .",
    "we assume a free - space path loss as a propagation environment , i.e. @xmath144 . our goal is to use the proposed algorithm to drive the connectivity of the expected graph toward a desired value @xmath145 , considering two different values of probability to establish a link , e.g. , @xmath124 , and @xmath125 . in fig .",
    "[ lambda2pc ] , we report the behavior of the estimate of @xmath68 in ( [ lambda2_est ] ) versus the iteration index . the continuous curve illustrates the case @xmath124 , whereas the dashed curve the case @xmath125 .",
    "the step - sizes are chosen as in ( [ step_size2 ] ) , where @xmath131 , @xmath146 , @xmath147 , @xmath148 , and @xmath149 . as we can notice from fig .",
    "[ lambda2pc ] , the value of the algebraic connectivity of the expected graph converges very close to the desired value @xmath138 for both values of @xmath114 .     versus iteration index.,width=302 ]        in fig .",
    "[ sum_power ] , we illustrate the temporal behavior of the power transmitted by each node . form fig .",
    "[ sum_power ] , we can see how the power converges to a fixed value , which depends on the probability to establish a communication link .",
    "in particular , reducing the probability to establish a communication link with respect to the ideal case , the algorithm will increase the number of links of the resulting network in order to counteract the effect of failures and reach the target value of connectivity .",
    "then , each node will transmit more power to enlarge its own subset of neighbors .",
    "in a realistic communication scenario , nodes communicate with each other by accessing to a shared channel according to a specified mac protocol .",
    "let us assume that , in the considered wireless ad - hoc scenario , each node has @xmath150 wireless channels that are dedicated to the exchange of data with its own neighbors . to establish a communication , a node randomly selects one of these channels independently of the choices of its neighbors .",
    "let us further assume that the nodes are deployed according to an rgg .",
    "it is well known that asymptotically , as the number of nodes goes to infinity , rgg networks tend to satisfy a regularity condition , i.e. , each node has the same number @xmath151 of neighbors on average @xcite .",
    "the average number @xmath151 of neighbors depends on the covering radius of each node , which is dictated by the transmitted power and the channel conditions .",
    "let us assume a simple free - space propagation model so that the power received by a node is related to the transmitted power as @xmath152 , where @xmath153 is the covered distance .",
    "now , setting a minimum threshold value @xmath154 for the power at the receiver node , the covering radius is just obtained by inverting the previous expression as @xmath155 .",
    "the average number @xmath151 of neighbors is then related to the covering radius and , consequently , to the transmitted power @xmath156 , as @xmath157 where @xmath158 is the spatial density of nodes inside a circle of area @xmath159 . in this",
    "setting , it is clear that the number @xmath150 of channels used to establish a communication must be designed with respect to the average number @xmath151 of neighbors , in order to keep the probability to have a collision among the communications of two nodes sufficiently small . assuming independence among the channel selections of different nodes and exploiting ( [ node_degree ] ) , the probability that a packet is correctly exchanged over the selected channel is given by @xmath160 where @xmath161 . as expected , the probability to establish correctly a communication link in ( [ p_c ] ) gets worse by increasing the transmitted power @xmath162 , because it translates in having more neighbors to communicate with , whereas , for a fixed transmitted power , it of course improves by taking a larger number of channels @xmath150 .     versus the power transmitted by each node , for different number @xmath150 of available channels.,width=302 ]    in an ideal communication case where no collisions occur",
    ", the increment of the power transmitted by each node leads to a monotonic increment of the network connectivity .",
    "thus , in an ideal case , it is always convenient to increase the power in order to increase the connectivity of the network , until full connectivity is reached .",
    "nevertheless , in a real communication case , the presence of collisions due to the adoption of a random medium access protocol , e.g. the one introduced before , makes the graph describing the network a random graph , where each link is on with a probability given by ( [ p_c ] ) .",
    "it is then of interest to check the effect of collisions on the connectivity of the expected graph , which is actually the effective connectivity of the network .",
    "an example is given in fig .",
    "[ mean_lambda_power ] , where we show the behavior of the algebraic connectivity of the expected graph @xmath68 versus the power transmitted by each node , for different number @xmath150 of available channels .",
    "the simulation considers a network composed of @xmath163 nodes randomly deployed over a geographic area of @xmath164 m@xmath165 . the threshold power value at the receiver node is given by @xmath143 mw .",
    "as we can notice from fig .",
    "[ mean_lambda_power ] , @xmath68 shows approximatively a quasi - concave behavior with respect to the transmitted power @xmath162 .",
    "in fact , at low power values , the algebraic connectivity of the expected graph increases due to an increment of the links among neighbor nodes , whereas , at high power values , the number of neighbors becomes too large and the probability of having a collision increases , thus leading to a reduction of the overall connectivity of the network . from fig .",
    "[ mean_lambda_power ] , as expected , we also notice how , increasing the number of available channels @xmath150 for a fixed transmitted power , the connectivity of the expected graph improves .",
    "the behavior of @xmath68 shows that there is an optimal transmitted power that nodes should use to maximize the connectivity of the expected graph .",
    "an increment of the power with respect to this threshold value would lead to a waste of energy due to the effect of collisions , which becomes the dominant effect that drives to zero the connectivity . in summary , while in an ideal communication scenario nodes would always improve the network connectivity by increasing their transmitted power , considering a realistic random mac , a too large transmission power may degrade the connectivity due to an increase in the collision probability .",
    "_ distributed connectivity maximization : _ in the previous section , we have shown that , for a sufficiently large number of nodes composing the network , the behavior of the algebraic connectivity of the expected graph @xmath68 versus the power @xmath162 transmitted by each node is unimodal , thus leading to the presence of a unique maximum point ( see fig .",
    "[ mean_lambda_power ] ) .",
    "the goal of this section is to find the optimal power value @xmath166 that maximizes the connectivity of the expected graph , without assuming knowledge of the analytical relation between @xmath68 and @xmath162 .",
    "the method is based on a stochastic algorithm that approximates the derivative of the function on the basis of noisy measurements of @xmath68 . for a given power value @xmath162 , using the stochastic power iteration method in ( [ lambdan-1_2])-([lambda2_est ] ) ,",
    "it is possible to get an estimate @xmath167 of the second smallest eigenvalue of the expected laplacian matrix in a totally distributed fashion . in practice",
    ", stopping the iterative method in ( [ lambdan-1_2])-([pow_iter ] ) at a finite number of iterations , induces an inevitable estimation error , so that we can write @xmath168 where @xmath169 is a realization of a zero - mean random variable with bounded variance @xmath170 .",
    "now , exploiting the noisy measurements in ( [ noisy_measurements ] ) , we can use a kiefer - wolfowitz ( kw ) stochastic approximation method @xcite to find the maximum of the function @xmath171 .",
    "the algorithm runs in parallel over each node , which updates its own transmitted power according to the recursive rule : @xmath172=p_t[t]+q[t]\\frac{\\hat{z}(p_t[t]+c[t])-\\hat{z}(p_t[t]-c[t])}{2c[t]}\\end{aligned}\\ ] ] @xmath173 , where @xmath174 $ ] is chosen at random , and @xmath175 $ ] and @xmath176 $ ] are two positive sequences that satisfy ( [ step_size ] ) and the further conditions @xmath176\\rightarrow 0 $ ] , and @xmath177}{c^2[t]}<\\infty$ ] . for any @xmath178 , the stochastic power iteration method in ( [ lambdan-1_2])-([lambda2_est ] )",
    "must be run twice in order to get @xmath179+c[t])$ ] and @xmath179-c[t])$ ] .",
    "the procedure in ( [ kiefer_wolfowitz ] ) is then repeated until convergence .     versus iteration index , for different number @xmath1 of nodes.,width=302 ]    a numerical example",
    "is shown in fig .",
    "[ max_conv ] , where we illustrate the behavior of the algebraic connectivity of the expected graph @xmath68 versus iteration index , for different values of the number of network nodes @xmath1 , obtained by using the kw method in ( [ kiefer_wolfowitz ] ) .",
    "the maximum values of the algebraic connectivity are also reported for comparison purposes .",
    "the simulation considers a network composed of @xmath1 nodes randomly deployed over a geographic area of @xmath164 m@xmath165 . the threshold power value at the receiver node is given by @xmath143 mw .",
    "the number of channels is set to @xmath180 .",
    "the step - size sequences are chosen as @xmath175=1/t$ ] , and @xmath176=1/\\sqrt[3]{t}$ ] . as we can notice from fig .",
    "[ max_conv ] , when the number of nodes is sufficiently large , the kw method in ( [ kiefer_wolfowitz ] ) is able to find the maximum of @xmath171 in a few iterations . at the same time , reducing the number of nodes in the network , the behavior of @xmath171 looses its unimodality .",
    "this implies that the algorithm in ( [ kiefer_wolfowitz ] ) can get stuck in some local maximum , thus explaining the gap between the maximum connectivity value and the kw method in fig .",
    "[ max_conv ] , at low number of nodes @xmath1 .",
    "in this paper we have proposed a stochastic power iteration algorithm aimed at estimating the algebraic connectivity of an ad - hoc network in the case the communication among nodes is affected by random link failures .",
    "we have proved that the algorithm converges almost surely to the second smallest eigenvalue of the expected laplacian of the network graph and to its related eigenvector .",
    "several numerical results confirm our theoretical findings .",
    "a distributed implementation of the proposed algorithm based on nested consensus loops is also proposed , and its performance is analyzed through several numerical simulations . the proposed estimation method is then coupled with a power adaptation mechanism to implement a network connectivity control used to drive connectivity to a desired value . finally , the behavior of the connectivity of the expected communication graph over a realistic mac has been investigated .",
    "an interesting result is that , contrarily to what happens in the absence of packet collisions , in a realistic scenario the nodes should not increase too much their transmission power , because this might heavily degrade the network connectivity due to an increase of collisions .",
    "building on such a result , we have proposed a distributed kw stochastic approximation algorithm to find the transmit power that maximizes the connectivity in the presence of collisions .",
    "in this section we report two theorems from stochastic approximation theory @xcite,@xcite , concerning the convergence properties of stochastic recursive procedures .",
    "we start introducing the notation from @xcite , which is instrumental for the definition of the theorems .",
    "let @xmath181\\}$ ] be a markov process on @xmath182 . given a nonnegative function @xmath183 , the generating operator @xmath184 is defined as @xmath185 ) |",
    "\\bw[k]=\\bw \\right]-v(k,\\bw)\\end{aligned}\\ ] ] @xmath186 , @xmath187 , provided the conditional expectation exists .",
    "we say that @xmath188 in a domain @xmath189 , if @xmath184 is finite for all @xmath190 . denoting the euclidean distance between two points @xmath191 and @xmath192 by @xmath193 , the @xmath194-neighborhood of a set @xmath195 and its complement",
    "are defined as @xmath196    we recall next two theorems from @xcite that will be useful in the sequel .    _ theorem 2 _ : let @xmath197 be a markov process with generating operator @xmath198 .",
    "let there exist a nonnegative function @xmath188 in the domain @xmath186 , @xmath187 , with the following properties : @xmath199(1+v(k,\\bw))-\\beta[k]\\phi(k,\\bw ) \\label{lv}\\end{aligned}\\ ] ] where @xmath200>0 , \\quad \\sum_{k\\geq 0 } \\beta[k]=\\infty \\\\ & \\hspace{-1 cm } g[k]>0 , \\quad \\sum_{k\\geq 0 } g[k]<\\infty\\end{aligned}\\ ] ] then , the markov process @xmath181\\}_{k\\geq 0}$ ] with arbitrary initial distribution converges a.s .",
    "to @xmath195 as @xmath84 , i.e. @xmath201,s)=0\\right)=1,\\end{aligned}\\ ] ] with @xmath202 denoting the probability of the event @xmath203 .",
    "the proof can be found in @xcite,@xcite .    _ theorem 3 _ : let @xmath204\\}_{k\\geq0}$ ] be a random vector generated by a markov process defined by the difference equation @xmath205=\\bz[k]+\\alpha[k]\\big[\\bh(\\bz[k])+\\boldsymbol{\\varphi}(k,\\bz[k],\\omega)\\big]\\end{aligned}\\ ] ] with initial condition @xmath206=\\bz_0 $ ] , where @xmath207 is borel - measurable , @xmath208,\\omega)$ ] is a family of zero - mean random vectors in @xmath182 , defined on some probability space @xmath209 , and @xmath210 is a canonical element of @xmath211 . consider the following set of conditions :    _ condition c.1 _ : there exists a nonnegative function @xmath212 with bounded second - order partial derivatives and a point @xmath213 satisfying the conditions @xmath214 where @xmath215 denotes the inner product operator . + _ condition c.2 _ : there exist two constants @xmath216 such that @xmath217 _",
    "condition c.3 _ : the step - size sequence @xmath218\\}_{k\\geq0}$ ] satisfies the persistence conditions in ( [ step_size ] ) .",
    "let the conditions _ c.1_-_c.3 _",
    "hold for the process @xmath204\\}_{k\\geq0}$ ] given by ( [ stoch_recursion ] ) .",
    "then , @xmath204\\}_{k\\geq0}$ ] is a markov process and , starting from an arbitrary initial condition @xmath219 , it converges almost surely to @xmath220 as @xmath221",
    ".    the proof can be found in @xcite .",
    "the first part of the proof shows that the sequence @xmath72 $ ] in ( [ pow_iter ] ) converges a.s . to the normalized fiedler vector @xmath222 .",
    "the power iteration in ( [ pow_iter ] ) can be cast as : @xmath223=\\frac{\\prod_{l=0}^k\\bb_2[l]\\bx_0}{\\left\\|\\prod_{l=0}^k\\bb_2[l]\\bx_0\\right\\|}\\ ] ] where @xmath224 is the initialization and @xmath57 $ ] is given by ( [ defl_matrix3 ] ) .",
    "let us focus on the numerator of ( [ pow_iter2 ] ) , which can be rewritten as : @xmath225=\\prod_{l=0}^k\\left(\\bw_2[l]-\\frac{1}{n}\\mathbf{11}^t\\right)\\bx_0.\\end{aligned}\\ ] ] we first prove the boundness of the sequence @xmath226 $ ] in ( [ numer ] ) .",
    "exploiting the fact that @xmath55 $ ] is a sequence of right stochastic matrices , we have @xmath227=\\left(\\bw_2[0]-\\frac{1}{n}\\mathbf{11}^t\\right)\\left(\\prod_{l=1}^k\\bw_2[l]\\right)\\bx_0.\\end{aligned}\\ ] ] since @xmath55 $ ] is a sequence of finite , primitive , ( right ) stochastic matrices , the sequence @xmath228 $ ] in ( [ numer2 ] ) has a finite limit as @xmath84 , @xcite,@xcite .",
    "thus , assuming a finite initial value @xmath224 , from ( [ numer2 ] ) we have @xmath229\\|\\leq c , \\quad\\quad \\forall k,\\end{aligned}\\ ] ] where @xmath230 is a positive , finite constant .",
    "let us now introduce the notation @xmath231 .",
    "the proof follows by showing that the sequence @xmath226 $ ] in ( [ numer ] ) converges a.s . to @xmath232 , as @xmath84 , thus guaranteeing the a.s .",
    "convergence of the sequence @xmath72 $ ] in ( [ pow_iter2 ] ) to the normalized fiedler vector @xmath233 , thanks to the presence of the normalization in ( [ pow_iter2 ] ) .",
    "the sequence @xmath234 $ ] in ( [ numer ] ) can be equivalently recast as the following recursive rule : @xmath235=\\left(\\bi-\\varepsilon[k]\\bar{\\bl}-\\frac{1}{n}\\mathbf{11}^t-\\varepsilon[k]\\tilde{\\bl}[k]\\right)\\bw[k],\\end{aligned}\\ ] ] with @xmath236=\\bx_0 $ ] .",
    "we will now use theorem 2 to prove that the sequence in ( [ sequence2 ] ) converges to @xmath232 . to avoid overcrowding of formulas , in what follows we use the notation @xmath237 and @xmath238 , @xmath239 , for the eigenparameters of the expected laplacian , whereas the dependency is explicitly written in the case of other matrices . under the assumption of temporal independence of the sequence",
    "@xmath30 $ ] , the sequence @xmath226 $ ] in ( [ sequence2 ] ) is a markov process . let us define the potential function ( independent of @xmath35 ) : @xmath240 where @xmath241 is a positive semi - definite matrix such that its nullspace satisfies @xmath242 .",
    "let us then introduce the set @xmath243 .",
    "the potential function @xmath244 is non - negative . since @xmath245",
    ", we have @xmath246 the second condition in ( [ cond1 ] ) comes from the continuity of the potential @xmath247 .",
    "let us consider the orthogonal decomposition @xmath248 .",
    "then , @xmath249 . by the definitions in ( [ neigh1 ] )",
    ", we have that @xmath250 implies @xmath251 .",
    "hence , we obtain @xmath252 with @xmath253 .",
    "now , consider @xmath254 in ( [ gen_operator ] ) . exploiting ( [ sequence2 ] ) and ( [ potential_v2 ] ) in ( [ gen_operator ] ) , and since @xmath255\\}=\\mathbf{0}$ ] , we obtain @xmath256 ) | \\bw[k]=\\bw \\right]-v(\\bw ) \\nonumber\\\\ & = \\bw^t\\left(\\bi-\\varepsilon[k]\\bar{\\bl}-\\frac{1}{n}\\mathbf{11}^t\\right)\\bf\\left(\\bi-\\varepsilon[k]\\bar{\\bl}-\\frac{1}{n}\\mathbf{11}^t\\right)\\bw \\nonumber\\\\ & \\quad+ \\varepsilon^2[k]\\bw^t\\bp\\bw -\\bw^t\\bf\\bw\\end{aligned}\\ ] ] with @xmath257\\bf\\tilde{\\bl}[k ] \\right\\}$ ] .",
    "let us now consider the following relations @xmath258\\frac{1}{n}\\mathbf{11}^t .",
    "\\label{ineq_5}\\end{aligned}\\ ] ] the relation in ( [ ineq_4 ] ) holds true by the gershgorin theorem @xcite , because the elements of the matrix @xmath30 $ ] ( thus , @xmath259 ) are taken from a finite set . under assumption a.1 , the sequence @xmath56 $ ] is positive and diminishing , and the inequality in ( [ ineq_5 ] ) holds true , for all @xmath35 , if @xmath260\\leq1 $ ] .",
    "otherwise , even if @xmath260>1 $ ] , it exists a finite instant @xmath261 such that , for @xmath262 , the inequality in ( [ ineq_5 ] ) is satisfied .",
    "then , exploiting ( [ boundw ] ) and ( [ eq_1])-([ineq_5 ] ) in ( [ gen_operator2 ] ) , we get @xmath263(\\bw^t\\bf_3\\bw+\\eta\\cdot c)-2\\varepsilon[k ] \\bw^t\\bf_2\\bw,\\end{aligned}\\ ] ] where @xmath264 are positive semidefinite matrices . considering the orthogonal decomposition @xmath248 and since @xmath265",
    ", we have @xmath266 thus , exploiting ( [ ineqf3f ] ) , the inequality in ( [ gen_operator3 ] ) can be recast in the form of ( [ lv ] ) , where @xmath267=\\varepsilon[k]$ ] , and @xmath268&=\\varepsilon^2[k]\\max\\left(\\frac{\\lambda^3_n}{\\lambda_2(\\bf)},\\eta\\cdot c\\right).\\end{aligned}\\ ] ] it is easy to see how the conditions of theorem 2 on the sequences @xmath267 $ ] and @xmath269 $ ] are guaranteed by the choice of the sequence @xmath56 $ ] in ( [ epsilonk ] ) made in assumption a.1 . finally ,",
    "since @xmath250 implies @xmath270 , we obtain @xmath271 with @xmath272 .",
    "all the conditions of theorem 2 are then satisfied , thus guaranteing that the sequence @xmath226 $ ] in ( [ sequence2 ] ) converges almost surely to @xmath243 as @xmath84 .",
    "this result , combined with ( [ pow_iter2 ] ) , ensures that @xmath273=\\hat{\\bu}_{2},\\end{aligned}\\ ] ] almost surely ( w.p.1 ) , where @xmath274 denotes the normalized fiedler vector of the expected laplacian matrix @xmath37 .",
    "this completes the first part of the proof .",
    "the second part of the proof aims to show the convergence of the sequence of estimates @xmath78 $ ] in ( [ lambda2_est ] ) to the algebraic connectivity @xmath275 . to prove it",
    ", we notice that , since @xmath276=\\hat{\\bu}_2 $ ] , and further we have @xmath277 , the behavior of ( [ lambdan-1_2 ] ) at time @xmath35 can be written w.l.o.g . as @xmath278=\\frac{\\bx^t[k]\\bb[k]\\bx[k]}{\\bx^t[k]\\bx[k]}= \\hat{\\bu}_2\\bb[k]\\hat{\\bu}_2+e[k]\\ ] ] where @xmath279 $ ] , such that latexmath:[\\[\\label{eps_properties }    is a random error due to the fact that , at time @xmath35 , the power iteration in ( [ pow_iter ] ) has not converged yet . now , since @xmath281=\\bar{\\bw}-\\frac{1}{n}\\mathbf{1}\\mathbf{1}^t-\\bar{\\varepsilon}\\tilde{\\bl}[k]$ ] and @xmath282 , from ( [ conv_y ] ) we have @xmath283=\\ ; & \\hat{\\bu}_2^t\\bar{\\bw}\\hat{\\bu}_2-\\bar{\\varepsilon}\\cdot\\hat{\\bu}_2^t\\tilde{\\bl}[k]\\hat{\\bu}_2+e[k ] \\nonumber\\\\ = \\ ; & \\lambda_{n-1}(\\bar{\\bw})+e[k]-\\bar{\\varepsilon}\\cdot\\hat{\\bu}_2^t\\tilde{\\bl}[k]\\hat{\\bu}_2\\end{aligned}\\ ] ] then , letting @xmath284=-\\hat{\\bu}_2^t\\tilde{\\bl}[k]\\hat{\\bu}_2 $ ] , the a.s .",
    "behavior of the recursion in ( [ lambdan-1 ] ) is given by @xmath285=y[k]+\\alpha[k]\\big(\\lambda_{n-1}(\\bar{\\bw})-y[k]+e[k]-\\bar{\\varepsilon}\\tilde{n}[k]\\big)\\end{aligned}\\ ] ] from ( [ asymptotic_recursion ] ) , exploiting expression ( [ lambda2_est ] ) , it is possible to derive the recursion for the sequence @xmath78 $ ] as : @xmath286= \\hspace{.1cm}z[k]+&\\alpha[k]\\left(\\lambda_{2}-z[k]+\\tilde{n}[k]+e_{\\varepsilon}[k]\\right)\\end{aligned}\\ ] ] where @xmath287=e[k]/\\bar{\\varepsilon}$ ] .",
    "since @xmath287 $ ] is a random quantity , it can be written w.l.o.g .",
    "as @xmath287=\\bar{e}_{\\varepsilon}[k]+\\tilde{e}_{\\varepsilon}[k]$ ] , where @xmath288 $ ] is the mean part and @xmath289 $ ] is a zero - mean random fluctuation .",
    "thus , ( [ asymptotic_recursion2 ] ) can be recast in the notation of theorem 3 , where : @xmath290)&=\\lambda_{2}-z[k]+\\bar{e}_{\\varepsilon}[k ] \\\\",
    "\\varphi(k , z[k],\\omega)&=\\tilde{n}[k]+\\tilde{e}_{\\varepsilon}[k ] \\label{gamma_function}\\end{aligned}\\ ] ] the proof follows by showing that the process @xmath291\\}_{k\\geq0}$ ] , generated by the recursion in ( [ asymptotic_recursion ] ) , satisfies the conditions _",
    "c.1_-_c.3 _ of theorem 3 .",
    "consider the filtration of the @xmath292-algebra generated by the initial point @xmath60 $ ] and the stochastic error sequence @xmath293\\}$ ] , for @xmath294 , i.e. , @xmath295,\\{\\tilde{\\bl}[l]\\}_{0\\leq l < k}\\right)$ ] . the random family @xmath296 in ( [ gamma_function ] ) is @xmath297 measurable , zero mean and independent of @xmath298 , thus making the random process @xmath291,\\mathcal{f}_k\\}_{k\\geq0}$ ] a markov process .",
    "we will show now the existence of a potential function @xmath299)$ ] such that the recursion in ( [ asymptotic_recursion ] ) satisfies the conditions _",
    "c.1_-_c.3_. to this end , we define @xmath300)=\\left(\\lambda_{2}-z[k]\\right)^2.\\end{aligned}\\ ] ] it is easy to see how @xmath299)\\in c_2 $ ] and is non - negative .",
    "furthermore , setting @xmath301 , we have @xmath302 , @xmath299)>0 $ ] for @xmath78\\ne z^*$ ] , @xmath303|\\rightarrow \\infty}v(z[k])=\\infty$ ] , and @xmath304-z^*|<1/\\mu}\\left(h(z[k]),\\frac{dv(z[k])}{dz}\\right ) \\label{lyap_cond}\\\\ & = \\sup_{\\mu<|z[k]-z^*|<1/\\mu}-2(z^*-z[k])^2 - 2\\bar{e}_{\\varepsilon}[k](z^*-z[k ] ) \\nonumber\\\\ & < -2\\mu^2+\\frac{2}{\\mu}\\bar{e}_{\\varepsilon}[k ]   \\nonumber\\end{aligned}\\ ] ] since @xmath305=\\lim_{k\\rightarrow\\infty}\\bar{e}[k]/\\bar{\\varepsilon}=0 $ ] due to ( [ eps_properties ] ) , it exists a finite time instant @xmath306 such that , for @xmath307 , the lyapunov condition in ( [ lyap_cond ] ) is always satisfied , for any choice of the positive parameter @xmath139 . to check condition _",
    "c.2 _ , we note that @xmath308\\right|^2 + 2\\mathbb{e}\\left|\\tilde{e}_{\\varepsilon}[k]\\right|^2\\end{aligned}\\ ] ] from ( [ eps_properties ] ) , the error sequence @xmath309|^2=|\\tilde{e}[k]|^2/\\bar{\\varepsilon}^2 $ ] is upper bounded by a finite constant .",
    "furthermore , the matrix @xmath30 $ ] takes values from a finite set , thus implying that its eigenvalues are finite @xcite .",
    "thus , the variance in ( [ gamma ] ) can be upper bounded by a positive constant @xmath310 , i.e. , @xmath311 . then , we have @xmath312(z^*-z[k])+c_2 \\nonumber\\\\ & \\hspace{-1cm}=c_2+\\bar{e}^2_{\\varepsilon}[k ] + \\frac{1}{2}(z^*-z[k])^2+\\frac{1}{2}(z^*-z[k])^2 \\nonumber\\\\ & \\hspace{1cm}+2\\bar{e}_{\\varepsilon}[k](z^*-z[k ] )   \\nonumber\\\\ & \\hspace{-1 cm } \\leq k_1(1+v(z[k]))-k_2\\left(h(z[k]),\\frac{dv(z[k])}{dz}\\right)\\end{aligned}\\ ] ] where @xmath313 and @xmath314 .",
    "this verifies also condition _",
    "c.2 _ of theorem 3 and condition _",
    "c.3 _ is satisfied by the choice of @xmath218\\}_{k\\geq0}$ ] in ( [ step_size ] ) made in assumption a.1 .",
    "the previous analysis shows that there exists a finite time instant @xmath306 such that , for @xmath307 , all the conditions of theorem 3 are satisfied , thus ensuring the convergence result @xmath80= z^*=\\lambda_{2 } \\quad \\hbox{a.s.}\\end{aligned}\\ ] ] this concludes the proof of theorem 1 .",
    "let us consider the behavior of @xmath315 $ ] in ( [ numer ] ) : @xmath316=\\prod_{l=0}^k\\bar{\\bb}_2[l]\\bx_0=\\prod_{l=0}^k\\left(\\bar{\\bw}_2[l]-\\frac{1}{n}\\mathbf{11}^t\\right)\\bx_0\\ ] ] now , since we have @xmath317-\\frac{1}{n}\\mathbf{11}^t=\\sigma_{n-1}[l]\\bu_{n-1}\\bu_{n-1}+\\sum_{i=1}^{n-2}\\sigma_i[l]\\bu_i\\bu_i^t \\nonumber\\ ] ] where @xmath318=\\lambda_{i}(\\bar{\\bw}_2[l])=1-\\varepsilon[l]\\lambda_{n - i+1}$ ] and @xmath319)=\\bu_{n - i+1}$ ] is the corresponding eigenvector , the expression in ( [ exp_numer ] ) can be recast as @xmath320=\\left(\\prod_{l=0}^k\\sigma_{n-1}[l]\\right)\\cdot\\bigg(\\bu_{2}\\bu_{2}^t \\nonumber\\\\ & \\quad\\quad\\quad+\\sum_{i=1}^{n-2}\\prod_{l=0}^k\\left(\\frac{\\sigma_i[l]}{\\sigma_{n-1}[l]}\\right)\\bu_{n - i+1}\\bu_{n - i+1}^t\\bigg)\\bx_0\\end{aligned}\\ ] ] from ( [ exp_numer2 ] ) , neglecting the shrinking factor @xmath321\\right)$ ] that is canceled by the normalization of the power iteration , the slowest mode in ( [ exp_numer2 ] ) is given by @xmath322=\\prod_{l=0}^k\\left(\\frac{\\sigma_{n-2}[l]}{\\sigma_{n-1}[l]}\\right)=\\prod_{l=0}^k\\left(\\frac{1-\\varepsilon[l]\\lambda_3}{1-\\varepsilon[l]\\lambda_2}\\right).\\end{aligned}\\ ] ] since @xmath323 , for @xmath324 and @xmath325 , the slowest mode @xmath82 $ ] is bounded as : @xmath326&\\leq\\prod_{l=0}^k\\exp\\big(-(\\lambda_3-\\lambda_2)\\varepsilon[l]\\big ) \\nonumber\\\\ & = \\exp \\left(-(\\lambda_3-\\lambda_2)\\sum_{l=0}^k\\varepsilon[l]\\right)\\end{aligned}\\ ] ]",
    "the authors thank the anonymous reviewers for the detailed suggestions and corrections that improved the manuscript .",
    "s. barbarossa , s. sardellitti , and p. di lorenzo , `` distributed detection and estimation in wireless sensor networks , '' e - reference signal processing , r. chellapa and s. theodoridis , eds . ,",
    "elsevier , 2013 .",
    "g. scutari , s. barbarossa , and l. pescosolido , `` distributed decision through self - synchronizing sensor networks in the presence of propagation delays and asymmetric channels , '' _ ieee transactions on signal processing _ , vol .",
    "4 , pp . 16671684 , 2008 .",
    "g. mateos , i. d. schizas , and g. b. giannakis , `` performance analysis of the consensus - based distributed lms algorithm , '' _ eurasip journ . on adv . in signal processing _ , vol .",
    "57 , no . 6 , pp . 23652382 , june 2009 .",
    "p. di lorenzo , s. barbarossa , and ali h. sayed , `` bio - inspired decentralized radio access based on swarming mechanisms over adaptive networks , '' _ ieee transactions on signal processing _",
    "31833197 , 15 june 2013 .",
    "m. franceschelli , a. gasparri , a. giua , and c. seatzu , `` decentralized laplacian eigenvalues estimation for networked multi - agent systems , '' in _ proc .",
    "ieee conf . on decision and control",
    "2009 , pp .",
    "27172722 .",
    "p. yang , r. a. freeman , g. j. gordon , k. m. lynch , s. s. srinivasa , r. sukthankar , `` decentralized estimation and control of graph connectivity in mobile sensor networks , '' _ proc .",
    "american control conference _",
    ", pp . 2678 - 2683 , 1113 june 2008 , evanston , il .",
    "a. simonetto , t. keviczky , r. babuska , `` on distributed maximization of algebraic connectivity in robotic networks , '' _ proc .",
    "of american control conference _ , pp . 21802185 , june - july 2011 , san francisco , california .",
    "e. montijano , j.i .",
    "montijano , c. sagues , `` adaptive consensus and algebraic connectivity estimation in sensor networks with chebyshev polynomials , '' _ ieee conference on decision and control and european control conference _ , pp . 42964301 , orlando , florida , dec .",
    "r. aragues , g. shi , d. v. dimarogonas , c. sagues , and k. h. johansson , `` distributed algebraic connectivity estimation for adaptive event - triggered consensus , '' in _ proc . of the american control conference _ , pp .",
    "3237 , montreal , canada , june 2012 .",
    "a. bertrand and m. moonen , `` topology - aware distributed adaptation of laplacian weights for in - network averaging , '' _ proc . of the european signal processing conference ( eusipco )",
    "_ , marrakech , morocco , sept . 2013 .",
    "l. hagen and a. kahng , `` new spectral methods for ratio cut partitioning and clustering , '' _ ieee trans . on computer - aided design of integrated circuits and systems _ , vol .",
    "9 , pp . 10741085 , sep 1992 .",
    "a. jadbabaie , j. lin , and a. s. morse , `` coordination of groups of mobile autonomous agents using nearest neighbor rules , '' _ ieee transactions on automatic control _ ,",
    "48 , no . 6 , pp .",
    "9881001 , june 2003 .",
    "y. hatano , a. k. das , and m. mesbahi , `` agreement in presence of noise : pseudogradients on random geometric networks , '' in _ proc .",
    "ieee conf . on decision and control",
    "_ , seville , pp . 63826387 , december 2005 .    e. oja and j. karhunen , `` on stochastic approximation of the eigenvecotrs and eigenvalues of the expectation of a random matrix , '' _ journal of mathematical analysis and applications _ , vol .",
    "1 , feb . 1985 .",
    "s. kar and j.m.f .",
    "moura , `` distributed consensus algorithms in sensor networks with imperfect communication : link failures and channel noise , '' _ ieee trans . on signal processing _ vol .",
    "5 , pp . 355369 , jan .",
    "s. kar and j.m.f .",
    "moura , `` distributed consensus algorithms in sensor networks : quantized data and random link failures , '' _ ieee transactions on signal processing _ , vol .",
    "13831400 , march 2010 .",
    "p. di lorenzo , s. barbarossa , and ali h. sayed , `` decentralized resource assignment in cognitive networks based on swarming mechanisms over random graphs , '' _ ieee transactions on signal processing _",
    "37553769 , july 2012 .",
    "p. di lorenzo and s. barbarossa , `` decentralized estimation and control of algebraic connectivity of random ad - hoc networks , '' _ proc . of the ieee international conference on acoustics , speech , and signal processing ( icassp ) _ , pp .",
    "44744478 , vancouver , may 2013 ."
  ],
  "abstract_text": [
    "<S> in this paper we propose a distributed algorithm for the estimation and control of the connectivity of ad - hoc networks in the presence of a random topology . </S>",
    "<S> first , given a generic random graph , we introduce a novel stochastic power iteration method that allows each node to estimate and track the algebraic connectivity of the underlying expected graph . using results from stochastic approximation theory , </S>",
    "<S> we prove that the proposed method converges almost surely ( a.s . ) to the desired value of connectivity even in the presence of imperfect communication scenarios . </S>",
    "<S> the estimation strategy is then used as a basic tool to adapt the power transmitted by each node of a wireless network , in order to maximize the network connectivity in the presence of realistic medium access control ( mac ) protocols or simply to drive the connectivity toward a desired target value . </S>",
    "<S> numerical results corroborate our theoretical findings , thus illustrating the main features of the algorithm and its robustness to fluctuations of the network graph due to the presence of random link failures .    </S>",
    "<S> spectral graph theory , random graph , stochastic power iteration , algebraic connectivity , fiedler vector , topology control , stochastic approximation , distributed computation . </S>"
  ]
}
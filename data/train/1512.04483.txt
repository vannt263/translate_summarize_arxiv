{
  "article_text": [
    "link prediction is one of the fundamental problems of network analysis , as pointed out in @xcite , _ `` a network model is useful to the extent that it can support meaningful inferences from observed network data . ''",
    "_ given a graph @xmath0 together with its adjacency matrix @xmath1 , the set of nodes @xmath2 , and the set of edges @xmath3 , link prediction can be considered as a matrix completion problem on @xmath4 .",
    "the problem is challenging because @xmath4 is often large and sparse , which means that only a small fraction of the links are observed . as a result ,",
    "a good model should have enough capacity to accommodate the complex connectivity pattern between all @xmath5 pairs of nodes , as well as strong generalization ability to make accurate predictions on unobserved pairs .    among the large number of models proposed over the decade , matrix factorization ( mf ) is one of the most popular ones in network modeling and relational learning in general @xcite .",
    "in its simplest form , mf directly models the interaction between a pair of nodes as the inner product of two latent factors , one for each node .",
    "this assumes that the large square adjacency matrix @xmath4 can be factorized into the product of a tall , thin matrix and a short , wide matrix as @xmath6 , where @xmath7 .",
    "each row of @xmath8 and each column of @xmath8 are often called a latent factor , as they often capture the community membership information of the nodes .",
    "training of such a model is usually conducted with stochastic gradient descent , which makes it easily scalable to large datasets @xcite .",
    "bayesian models , such as mmsb @xcite are another family of latent factor models for studying network structures . compared with mf which directly learns the latent factors as free parameters by solving an optimization problem , bayesian models treat the latent factors as random variables and model the stochastic process of the creation of a link . as a result , they can be considered as a stochastic version of mf . by putting various priors on the latent factors ,",
    "link prediction is reduced to the inference problem of the posterior distribution of the link status .",
    "while bayesian models can often significantly reduce overfitting compared with their deterministic counterparts , the inference processes such as mcmc and variational inference are usually much slower to run than direct optimization . as a result",
    ", their application has been limited to only moderate sized datasets .    autoencoder ( ae ) together with its variants such as restricted boltzman machine ( rbm ) has recently achieved great success in various machine learning applications , and is well recognized as the building block of deep learning @xcite .",
    "ae learns useful representations by learning a mapping from an input to itself , which makes it different from the above mentioned approaches .",
    "surprisingly , it is not until recently that ae finds its application to modeling graphs @xcite . in this paper",
    "we investigate the effectiveness of ae on the link prediction problem .",
    "in particular , we show that ae is closely connected to mf when unified in the same architecture .",
    "motivated by this observation , we argue that mf and ae are indeed two complementary views of the same problem , and propose a novel model mf+ae where mf and ae are jointly trained with shared parameters .",
    "to prevent overfitting , we train the model with dropout @xcite combined with stochastic gradient descent .",
    "we highlight the effect of dropout training to mf+ae , and show that when approximated by the second order taylor expansion , the dropout training effectively penalizes a scaled @xmath9 norm of ( the combination of ) the rows or columns of the weight matrices .",
    "we evaluate mf+ae on six real world sparse graphs and show that dropout significantly mitigates overfitting on both mf and ae , and that mf+ae outperforms the competing methods on all the datasets .",
    "* matrix factorization : * given an undirected graph @xmath0 with @xmath10 nodes and @xmath11 edges , mf approximates its adjacency matrix @xmath1 with the product of two low rank matrices @xmath12 and @xmath8 by solving the optimization problem : @xmath13 where @xmath14 ; @xmath15 are the biases , @xmath16 is the @xmath17 column of @xmath8 , @xmath18 is the @xmath19 row of @xmath12 , @xmath20 is the link function , @xmath21 is the loss function defined on each pair of nodes , and @xmath22 is the dimension of the latent factor . since @xmath4 is symmetric for undirected graph , it is sometimes useful to adopt tied weights , i.e. , @xmath23 .",
    "we refer to the model with tied weights as the symmetric version of mf in this paper .",
    "* autoencoder : * ae is originally proposed as an unsupervised representation learning method .",
    "given an example represented by a feature vector @xmath24 , an ae learns a reconstruction of itself by a function @xmath25 .",
    "the typical form of @xmath26 can be characterized by a neural network with one hidden layer , where @xmath24 is first mapped to a hidden layer representation @xmath27 , then a reconstruction @xmath28 is obtained by mapping @xmath27 to the original feature space :    @xmath29    with @xmath30 .",
    "the parameters are learned by solving the following optimization problem : @xmath31 here we have slightly overloaded the loss function @xmath21 by defining it on the column vector @xmath32 . the natural way of applying ae to modeling graphs is to represent each node as the set of its neighbors ; in other words , set @xmath33 .",
    "this is analogous to the bag of words representation prevalent in the document modeling community , and we call it the bag of nodes representation . note that this representation is sufficient since when only the topological structure is available , we can learn an unseen node if we know all its neighbors .    * the joint model : * to better see the connection and difference between mf and ae , we now rewrite by substituting @xmath32 with @xmath34 :    @xmath35    and we rewrite by omitting the @xmath36term :    @xmath37    where @xmath38 is the indicator vector of node @xmath39 , which is a binary vector with @xmath40 at the @xmath17 entry and @xmath41 for all the rest .",
    "we deliberately organize and in such a way that in the high level , they share the same architecture .",
    "both models first learn a hidden representation @xmath42 , which is then fed through a classifier with link function @xmath20 and loss function @xmath21 .",
    "the main difference is only in the form of the hidden representation . for each node @xmath39 ,",
    "mf only looks at its i d , and the hidden layer representation is learned by simply extracting the @xmath17 column of @xmath8 . for ae",
    ", we first sum up the columns of @xmath8 indicated by @xmath39 s neighbors , and then pass the sum through an activation function @xmath43 . as a result , in mf , two nodes propagate `` positive '' information to each other only if they are directly connected ; in ae , however , two nodes can do so as long as they appear in the same neighborhood of some other node , even if they are not directly connected .",
    "the different ways of the information propagation between that two models indicates that mf and ae are complementary to each other to model different aspects of the same topological structure .",
    "we can also interpret the distinction between mf and ae as two different views of the same entity : mf uses @xmath44 , and ae uses @xmath34 .",
    "we note that the two views are disjoint and sufficient : they do not overlap with each other , but each of them can sufficiently represent a node .",
    "this perspective motivates us to build a unified architecture where we train the two models jointly , and require both of them to be able to uncover the graph structure .",
    "the idea is similar to co - training @xcite in the semisupervised learning setting , where one trains two classifiers on two sufficient views such that the two views can `` teach '' each other on unlabeled data . while in our problem",
    ", there is no `` unlabeled data '' available , we argue that the model can still benefit from the co - training idea by requiring the two views to `` agree with '' each other .",
    "we then formulate our model , which we call mf+ae , as follows :    @xmath45    in , the objective function is composed of two parts , one for ae and the other for mf .",
    "@xmath46 and @xmath47 are the hidden representation learned by the ae and mf part , respectively , and the `` agreement '' is achieved by using the same set of weights @xmath8 and @xmath12 for both ae and mf .",
    "we modify the architecture of the mf objective by adding the same activation function @xmath43 and a corresponding bias term @xmath48 .",
    "@xmath49 is a positive real number which could be simply set to @xmath40 in practice .",
    "we show the architecture of mf+ae in figure [ fig : composite ] .",
    "( 0,0 ) grid + ( 1,5 ) ; ( 0,6 ) grid + ( 1,5 ) ; ( 0 , 1 ) rectangle + ( 1,1 ) ; ( 0 , 3 ) rectangle + ( 1 , 1 ) ; ( 0 , 8) rectangle + ( 1 , 1 ) ;    ( 4 , 1 ) grid + ( 1,3 ) ; ( 4 , 7 ) grid + ( 1 , 3 ) ; ( 4 , 1 ) rectangle + ( 1,3 ) ; ( 4 , 7 ) rectangle + ( 1,3 ) ;    ( 8,0 ) grid + ( 1,5 ) ; ( 8 , 6 ) grid + ( 1,5 ) ;    ( 8 , 1 ) rectangle + ( 1,1 ) ; ( 8 , 3 ) rectangle + ( 1 , 1 ) ; ( 8 , 0 ) rectangle + ( 1 , 1 ) ; ( 8 , 2 ) rectangle + ( 1 , 1 ) ; ( 8 , 4 ) rectangle + ( 1 , 1 ) ;    ( 8 , 7 ) rectangle + ( 1,1 ) ; ( 8 , 9 ) rectangle + ( 1 , 1 ) ; ( 8 , 6 ) rectangle + ( 1 , 1 ) ; ( 8 , 8) rectangle + ( 1 , 1 ) ; ( 8 , 10 ) rectangle + ( 1 , 1 ) ;    ( 1 , 8.5 ) ",
    "( 4 , 8.5 ) ; ( 1 , 2.5 )  ( 4 , 2.5 ) ; ( 5 , 8.5 )  ( 8 , 8.5 ) ; ( 5 , 2.5 )  ( 8 , 2.5 ) ;    ( w1 ) at ( 2.5 , 5.5 ) @xmath8 ; ( w2 ) at ( 6.5,5.5 ) @xmath12 ; ( b3 ) at ( 2.5 , 9.5 ) @xmath48 ; ( b1 ) at(2.5 , 1.5 ) @xmath36 ; ( b2 ) at(6.5 , 1.5 ) @xmath50 ; ( b4 ) at(6.5 , 9.5 ) @xmath51 ;    ( w1 )  ( b3 ) ; ( w1 )  ( b1 ) ; ( w2 )  ( b2 ) ; ( w2 ) ",
    "( b4 ) ;    at ( -0.5 , 8.5 ) @xmath44 ; at ( -0.5 , 2.5 ) @xmath34 ; at ( 4.5 , 8.5 ) @xmath52 ; at ( 4.5 , 2.5 ) @xmath53 ; at ( 10 , 2.5 ) @xmath54 ; at(10 , 8.5 ) @xmath55 ;    in figure [ fig : composite ] , the bottom part and top part correspond to the first and second line of , respectively .",
    "the color of each entry of the vector indicates its value , with white for @xmath41 and black for @xmath40 .",
    "we see that the mf module is trained to reconstruct the neighborhood structure based on @xmath44 , while the ae module learns to reconstruct @xmath34 from itself .",
    "the reconstructions from ae and mf are denoted as @xmath54 and @xmath55 , respectively .",
    "note that although the @xmath56 node does not appear in the neighbor of @xmath39 ( @xmath57 ) , the reconstruction is close to @xmath40 ( dark gray ) .",
    "this means that we can make a confident prediction of the link of @xmath39 to node @xmath58 .",
    "after the two reconstructions are obtained , the final prediction is calculated as the geometric mean of the two : @xmath59{\\tilde{a}^{(1)}_{i }   \\odot ( \\tilde{a}^{(2)}_{i})^{\\rho}}\\ ] ] where @xmath60 denotes the element - wise product of two vectors .",
    "* activation function and loss function : * for the activation function @xmath43 , we choose the rectified linear units ( @xmath61 ) , which is defined as : @xmath62 @xmath61 provides nonlinearity by zeroing out all the negative inputs and keeping positive ones intact .",
    "we choose @xmath61 over other popular choices such as @xmath63 or @xmath64 for two reasons .",
    "first , it does not squash the output to a fixed interval as @xmath63 or @xmath65 does . as a result , it is closest to our intuition of approximating the behavior of mf .",
    "in fact , from the point of view of mf , the effect of @xmath61 can be considered as putting a non - negativity constraint on @xmath27 , which is closely related to the idea of non - negative matrix factorization .",
    "secondly , @xmath61 is fast to compute compared with its alternatives , and still provides enough nonlinearity to significantly improve the model capacity over linear structures .    for @xmath20 and @xmath21",
    ", we choose the @xmath63 function combined with cross entropy loss : @xmath66 @xmath67    the saturating property of the @xmath63 function endows the model much flexibility since @xmath68 and @xmath47 need only to have similar activation patterns to both achieve good reconstructions ; cross entropy is naturally a more appropriate choice than square loss for binary matrix .",
    "moreover , as a is often extremely sparse , reconstructing the whole matrix incurs the class imbalance problem , which means that the loss of the positive entries is dominated by the negative entries . as a result , it is important to reweight the cost of the positive and negative classes by utilizing the cost sensitive strategy .",
    "consequently , our final form of the loss function becomes :    @xmath69    where @xmath70 is the reconstruction of @xmath34 ; @xmath71 if @xmath72 , otherwise @xmath73 .",
    "in practice , it is sufficient to approximate the second part of @xmath21 by a few samples ; that is to say that at each training iteration we only need to sample part of the non - links for each node .",
    "doing this may greatly speed up the training process on large graphs without sacrificing the performance .",
    "@xmath74 is the weight for the loss of the negative entries , which can be simply set as @xmath75 .    *",
    "dropout as regularization : * regularization is critical for most machine learning models to generalize well to unseen data . instead of putting explicit constraints on the parameters or hidden units , we use dropout training @xcite as an implicit regularization .",
    "dropout is a technique originally proposed for training feed forward neural networks to avoid overfitting .",
    "it works as follows : in the stochastic gradient training , we randomly drop out half of the hidden units ( for both ae and mf ) and half of the feature units ( for ae ) for each node in the current iteration .",
    "mathematically , the effect of dropping out can be simulated as applying an element - wise random dropout mask as follows :    @xmath76    here @xmath77 and @xmath78 are the dropout masks for the hidden and input units , respectively ; each element of them is an iid draw from the bernoulli distribution .",
    "and @xmath60 is the element - wise product of two vectors .",
    "note that we use the same dropout mask @xmath79 for both the ae and mf modules .",
    "this is to ensure that dropout does not cause any difference in the architecture between the two views .    for the ae module , randomly dropping out the input",
    "can be considered as a `` denoising '' technique , which was exploited by the previous work @xcite , and also was applied to link prediction @xcite .",
    "the motivation is that a model should be able to make a good reconstruction under a noisy or partial input .",
    "this property is particularly interesting to our problem because this is exactly the same link prediction problem : prediction of the whole based on parts .",
    "while theoretically explaining the effect of dropout is difficult for complex models , we can still gain an insight by looking at an approximate surrogate .",
    "previously , @xcite used the second order taylor expansion to explain the effect of feature noising in generalized linear models and ae , respectively .",
    "we can borrow the same tool to showcase a simplified version of mf+ae .",
    "* dropout for matrix factorization : * we consider the effect of dropout training on . for a concise articulation",
    "we ignore the bias terms ; the resulting model is described as the following objective function :    @xmath80    when @xmath63 activation function with the cross entropy loss is used , we compute the second order approximation of in a closed form as :    @xmath81    where @xmath82 is a column vector of all @xmath40s , and @xmath83 and @xmath84 are the element - wise square of the row and column vectors , respectively ; @xmath85 is short for @xmath86 .",
    "the first equality of is the result of the second order taylor expansion ; the second equality performs the expectation over the random variable @xmath87 whose @xmath22 entries are iid bernoulli variables ; the third equality is just a reorganization .",
    "we see that with the second order approximation , the dropout effect can be split into two factors .",
    "the first term is equivalent to the original objective except that the activation of each pair is scaled down by a half .",
    "the second part is more interesting ; it can be considered as the product of a row vector @xmath88 and the square of the column vector of @xmath8 .",
    "note that if we set @xmath89 , the second term is reduced to the ordinary @xmath9 regularization on each column of @xmath8 . in the case of dropout , however , @xmath88 is equivalent to a weighted sum of the square of the rows of @xmath12 , where the weight of each row of @xmath12 is determined by the degree of uncertainty of the prediction @xmath85 .",
    "the overall effect of this regularization is two folds .",
    "first , it encourages the model to make confident predictions everywhere by minimizing @xmath90 ; secondly , it performs a scaled version of @xmath9 regularization on the columns of @xmath8 : coordinates that are highly active in the rows of @xmath12 are less penalized in the columns of @xmath8 , and vice versa . in other words , the penalization on the column vectors of @xmath8 is adapted both to the structure of @xmath12 and the uncertainty of the predictions .",
    "this is in stark contrast to @xmath9 regularization where the penalization is uniformly put on each column of @xmath8 .",
    "finally , note that since the roles of @xmath8 and @xmath12 are exchangeable , the discussion of the regularization on the columns of @xmath8 also applies to the rows of @xmath12 by symmetry .",
    "* dropout for autoencoder : * the nonlinear and nonsmooth nature of the relu activation function makes it difficult to analyze the behavior of dropout . we thus only show the case when @xmath43 is set as the identity function .",
    "unsurprisingly , the effect of dropping out the hidden layer is similar to that of mf ; the only difference is that we replace @xmath91 in with @xmath92 .",
    "following similar reasoning , it is obvious to see that dropping out the hidden layer in ae again penalizes the scaled @xmath9 norm of rows of @xmath12 in the same way .",
    "its effect on @xmath8 is more subtle : instead of penalizing the norms of the columns of @xmath8 directly , the regularization is performed on the linear combinations of them .",
    "next we proceed to study the effect of dropping out the input .",
    "let us now denote @xmath93 , and we have the dropout version of objective function : @xmath94 the second order approximation immediately follows as : @xmath95 where @xmath96 is the @xmath19 row of @xmath97 , @xmath85 is short for @xmath98 . recall that dropping out the hidden units in both mf and ae performs a scaled @xmath9 norm regularization on ( the linear combinations of ) * columns * of @xmath8 ; dropping out the input performs a scaled @xmath9 regularization on the linear combinations of * rows * of @xmath8 .",
    "the regularization on @xmath12 is also very different from the case of dropping out the hidden units , but in a less clear way .    to summarize ,",
    "we show that in the simplified case , dropping out the hidden units and inputs can be both interpreted as an adaptive regularization .",
    "they both push the model to make confident predictions by minimizing the factor @xmath99 , while they penalize different aspects of the parameter matrices .",
    "when combined in the joint training architecture , they provide complementary regularization to prevent mf+ae from overfitting .",
    "we conduct the experiments on six real world datasets : dblp , facebook , youtube , twitter , googleplus , and livejournal , all of which are available to download at _ snap.stanford.edu / data_. we summarize the statistics of the six datasets in table [ tb : dataset ] . except for dblp which is an author collaboration network , all the rest are online social networks .",
    "in particular , youtube , twitter , gplus , and livejournal are all originally directed network ; we convert them to undirected graphs by ignoring the direction of the links .",
    ".statistics of the datasets where n : number of nodes , e : number of links , d : average degree . [ cols=\"<,<,<,<\",options=\"header \" , ]     * mf+ae achieves best performance * we first list the results of the experiments in table [ tb : res ] for a comparison .",
    "overall , we see that mf+ae has the best average performance .",
    "in particular , it achieves the best performance on all the six datasets evaluated by @xmath100 , and on all but the livejournal dataset evaluated by auc .",
    "this shows that the joint training of mf and ae consistently boosts the generalization ability without increasing the model size .",
    "aed achieves the second best average performance evaluated by both metrics .",
    "mdm , as a variant of ae , achieves the third best performance on @xmath100 and fourth on auc .",
    "this is reasonable since on the one hand , the utilization of feature noising improves the generalization ability , and on the other hand , the linear nature limits its ability to model complex graph structures , and also due to the use of the square loss and ignorance of the class imbalance , the performance further deteriorates in sparse graphs .",
    "one seemingly surprising result is that rw performs pretty well despite of its simplicity .",
    "* dropout improves generalization * we note that for both ae and mf , the dropout version significantly outperforms their @xmath9 counterparts on both @xmath100 and auc",
    ". evaluated by the average performance , aed outperforms ae2 by @xmath101 on @xmath100 , @xmath102 on auc ; mfd also outperforms mf2 by @xmath103 on @xmath100 and @xmath104 on auc .",
    "this verifies that dropout as an adaptive regularization performs much better than @xmath9 norm regularization , especially with ae whose objective function is highly nonconvex . to better understand this",
    ", we visualize the full graph , the training graph of the facebook dataset together with the predictions made by each model in figure [ fg : facebook ] .",
    "we do not visualize the results of rw and aa since they do not output direct reconstructions .",
    "for each of the other six models , we convert the predictions to binary by a threshold at @xmath105 . also for a better visualization , we down sample all the graphs by @xmath106 .    in figure [ fg : facebook ] we see that ae2 and mf2 fit the training graph very well , but fail to uncover the much densely connected full graph .",
    "however , with dropout training , the predictions of aed and mfd look much closer to the full graph than ae2 and mf2 .",
    "this suggests that models trained with dropout generalize much better than their @xmath9 regularized counterparts .",
    "we then compare the predictions of mf+ae , aed , mfd , mdm , respectively , which all use ( different variants of ) dropout training .",
    "it is not difficult to see that mf+ae s prediction resembles the full graph the most .",
    "aed and mfd make a lot of `` false positive '' predictions which are clearly shown by the pepper salt like pixels off the diagonal .",
    "mdm makes more `` false negative '' predictions , such as the missing of the small cluster near the right top corner .",
    "we note that the quality of the predictions shown by the visualization is also consistent with the results in table [ tb : res ] .        * modeling non - cohesive graphs *    among all the six datasets we have tested , youtube and gplus datasets demonstrate least cohesive structures , i.e. , they consist of more follower - followee relationships than the other datasets .",
    "the cohesive vs. non - cohesive distinction of graph structure has previously been investigated in @xcite . to show this ,",
    "we have trained the symmetric and asymmetric versions of mfd and mf2 , respectively , on all the six datasets .",
    "we then report the averaged performances of the symmetric mf and asymmetric mf in figure [ fig : sym ] .",
    "we see that the symmetric version works better on facebook , twitter , dblp , livejournal , and the asymmetric version works better on youtube and gplus .",
    "this experiment shows that youtube and gplus demonstrate more non - cohesive structure which can not be symmetrically modeled by the inner product of two vectors .    with this in mind ,",
    "let us look at the performances of different models on these two datasets .",
    "it is clear that mf+ae and aed as the best and second best models outperform the other methods by much larger margins than on the other four datasets .",
    "note that aed and mf+ae still use the tied weights on these two datasets , as we found little difference in performance when switched to untied weights .",
    "also note that even though mdm uses feature dropout , it still fails to model the non - cohesive structures properly .",
    "we argue that it is the nonlinear activation function that gives the mf+ae and aed more modeling power than linear models .",
    "the link prediction problem can be considered as a special case of relational learning and recommender systems @xcite , and a lot of techniques proposed are directly applicable to link prediction as well .",
    "salakhutdinov et al .",
    "@xcite first apply rbm to movie recommendation .",
    "recently , chen and zhang @xcite propose a variant of linear ae with marginalized feature noise for link prediction , and li et al .",
    "@xcite apply rbm to link prediction in dynamic graphs .",
    "mf+ae is also related to the supervised learning based methods @xcite .",
    "while these approaches directly train a classifier on manually collected features , mf+ae directly learns the appropriate features from the adjacency matrix .",
    "the utilization of dropout training as an implicit regularization also contrasts with bayesian models @xcite .",
    "while both dropout and bayesian inference are designed to reduce overfitting , their approaches are essentially orthogonal to each other .",
    "it would be an interesting future work to investigate whether they can be combined to further increase the generalization ability .",
    "dropout has also been applied to training generalized linear models @xcite , log linear models with structured output @xcite , and distance metric learning @xcite .",
    "this work is also related to graph representation learning .",
    "recently , perozzi et al .",
    "@xcite propose to learn node embeddings by predicting the path of a random walk , and they show that the learned representation can boost the performance of the classification task on graph data .",
    "it would also be interesting to evaluate the effectiveness of mf+ae in the same setting .",
    "we propose a novel model mf+ae which jointly trains mf and ae with shared parameters .",
    "we show that dropout can significantly improve the generalization ability of both mf and ae by acting as an adaptive regularization on the weight matrices .",
    "we conduct experiments on six real world sparse graphs , and show that mf+ae outperforms all the competing methods , especially on datasets with strong non - cohesive structures .",
    "this work is supported in part by nsf ccf-1017828 , the national basic research program of china ( 2012cb316400 ) , and zhejiang provincial engineering center on media data cloud processing and analysis in china .",
    "p. vincent , h. larochelle , i. lajoie , y. bengio , and p.  a manzagol .",
    "stacked denoising autoencoders : learning useful representations in a deep network with a local denoising criterion .",
    ", 11:33713408 , 2010 ."
  ],
  "abstract_text": [
    "<S> matrix factorization ( mf ) and autoencoder ( ae ) are among the most successful approaches of unsupervised learning . </S>",
    "<S> while mf based models have been extensively exploited in the graph modeling and link prediction literature , the ae family has not gained much attention . in this paper </S>",
    "<S> we investigate both mf and ae s application to the link prediction problem in sparse graphs . </S>",
    "<S> we show the connection between ae and mf from the perspective of multiview learning , and further propose mf+ae : a model training mf and ae jointly with shared parameters . we apply dropout to training both the mf and ae parts , and </S>",
    "<S> show that it can significantly prevent overfitting by acting as an adaptive regularization . </S>",
    "<S> we conduct experiments on six real world sparse graph datasets , and show that mf+ae consistently outperforms the competing methods , especially on datasets that demonstrate strong non - cohesive structures . </S>"
  ]
}
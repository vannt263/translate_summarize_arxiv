{
  "article_text": [
    "the  represents knowledge from a textbook used for advanced high school and introductory college biology courses @xcite .",
    "the kb was developed by sri as part of their work for project halo and contains a concept taxonomy for the whole textbook and detailed rules for 20 chapters of the textbook .",
    "sri has tested the educational usefulness of this kb in the context of an intelligent textbook called _",
    "inquire_.    the kb_bio_101 was originally developed using a knowledge representation and reasoning system called knowledge machine ( km ) @xcite . to express kb_bio_101 in answer set programming ( asp ) required us to define a conceptual modeling layer called _ object oriented knowledge base _ or ookb @xcite .",
    "the goal of this paper is not to introduce ookb as a more complete specification and analysis of formal properties of ookbs are available elsewhere  @xcite .",
    "ookb is of more general interest as it supports conceptual modeling primitives that are commonly found in description logic ( dl ) family of languages such as a facility to define classes and organize them into a hierarchy , define partitions , ability to define relations ( also known as slots ) and organize them into a relation hierarchy , support for domain , range and qualified number constraints , support for defining sufficient conditions of a class , and support for descriptive rules .",
    "the features in ookb also overlap with the features of logic programming ( lp ) languages such as  @xcite ,  @xcite , and  @xcite in its support for function symbols .",
    "it differs from these previous lp languages as well as from the dl systems in that the functions can be used to specify graph - structured objects which can not be done in these other languages .",
    "the reasoning with ookbs has been proven to be undecidable @xcite .",
    "the approach taken in this paper fosters work on multi - paradigm problem solving in the following ways .",
    "first , it aims to give a declarative formalization of reasoning tasks that were originally implemented in km which is a very different paradigm for reasoning as compared to asp .",
    "second , the conceptual modeling primitives considered here directly overlap with many description logics , thus , providing another example of integration between asp with dls .",
    "the primary objective of this paper is to introduceas a valuable and data set and four queries of practical interest on this kb .",
    "these queries have been found extremely useful in the context of _ inquire_. this dataset presents an excellent opportunity for further development of asp solvers for the following reasons .",
    "@xmath0    recent developments in asp suggest that it could potentially provide an ideal tool for large scale kbs . yet , most of the kbs described in the literature are fairly small .",
    "provides a real - world asp program that fits this bill .",
    "we note that  contains rules with function symbols for which the grounding is infinite .",
    "a simple example is a kb consisting of a single class person , and a single relation has - parent , and a statement of the form `` for each person there exists an instance of the has - parent relation between this person with another individual who is also a person '' .",
    "the skolemized versions of these statements require function symbols .",
    "an obvious first challenge that must be addressed is to develop suitable grounding techniques .",
    "even though rules in  follow a small number of axiom templates , the size of this kb indicates that this could be a non - trivial task for asp solvers .",
    "the  can not be expressed in commonly available decidable dls because it contains graph structured descriptions .",
    "efficient reasoning with graph structures is an area of active recent research @xcite , and since there exists an export of  for dl systems also @xcite , it provides an ideal usecase to explore the relative effectiveness of dl reasoners vs asp solvers on a common problem .",
    "the reasoning tasks of computing differences between two concepts and finding relationships between two individuals are computationally intensive tasks .",
    "the implementations of these tasks in _ inquire _ rely on graph algorithms and trade completeness for efficiency .",
    "these tasks will present a tough challenges to asp solvers .",
    "last but not the least , we believe that the kb could entice the development and/or experimentation with new solvers for extended classes of logic programs ( e.g. , language with existential quantifiers or function symbols ) .",
    "in addition to the challenges listed above , it will be possible to define multiple new challenges of increasing difficulty that can be used to motivate further research and development of asp solvers .",
    "a logic program @xmath1 is a set of rules of the form @xmath2 where @xmath3 , each @xmath4 is a literal of a first order language and @xmath5 , @xmath6 , is called a negation as failure literal ( or naf - literal ) .",
    "@xmath7 can be a literal or omitted .",
    "a rule ( program ) is non - ground if it contains some variable ; otherwise , it is a ground rule ( program ) . when @xmath8 , the rule is called a _",
    "fact_. when @xmath7 is omitted , the rule is a _ constraint_. well - known notions such as substitution , the herbrand universe @xmath9 , and herbrand base @xmath10 of a program @xmath1 are defined as usual .",
    "the herbrand universe of a program @xmath1 is the set @xmath9 of terms constructable from constants and function symbols in @xmath1 .",
    "the herbrand base of @xmath1 , @xmath10 , is the set of ground atoms constructable using the predicate symbols in @xmath1 and the terms in @xmath9 .",
    "a substitution @xmath11 is given by a set @xmath12 where @xmath13 s are distinctive variables and @xmath14 s are terms .",
    "@xmath11 is a ground substitution if @xmath15 for every @xmath16 . for a literal @xmath17 , @xmath18 $ ]",
    "is the literal obtained from @xmath17 by simultaneously replacing every occurrence of @xmath13 by @xmath14 for every @xmath16 .",
    "the semantics of a program is defined over ground programs . for a ground rule @xmath19 of the form ( [ lprule1 ] ) , let @xmath20 and @xmath21 .",
    "a set of ground literals @xmath22 is consistent if there exists no atom @xmath23 s.t .",
    "a ground rule @xmath19 is _ satisfied _ by @xmath22 if ( _ i _ ) @xmath25 ; ( _ ii _ ) @xmath26 ; or ( _ iii _ ) @xmath27 .    let @xmath1 be a ground program . for a consistent set of ground literals @xmath28 , the _ reduct _ of @xmath1 w.r.t .",
    "@xmath28 , denoted by @xmath29 , is the program obtained from the set of all rules of @xmath1 by deleting ( * i * ) each rule that has a naf - literal _ not _ @xmath23 in its body with @xmath30 , and ( * ii * ) all naf - literals in the bodies of the remaining rules .",
    "@xmath28 is an _ answer set _ of @xmath1 @xcite if it satisfies the following conditions : ( * i * ) if @xmath1 does not contain any naf - literal then @xmath28 is the minimal set of ground literals satisfying all rules in @xmath1 ; and ( * ii * ) if @xmath1 contains some naf - literal then @xmath28 is an answer set of @xmath1 if @xmath28 is the answer set of @xmath29 .    for a non - ground program @xmath1 , a set of literals in @xmath10 is an answer set of @xmath1 if it is an answer set of @xmath31 that is the set of all possible ground rules obtained from instantiating variables with terms in @xmath9 .",
    "@xmath1 is _ consistent _ if it has an answer set .",
    "@xmath1 _ entails _ a ground literal @xmath23 , @xmath32 , if @xmath23 belongs to every answer set of @xmath1 . for convenience in notation , we will make use of choice atoms as defined in @xcite that can occur in a rule wherever a literal can .",
    "answer sets of logic programs can be computed using answer set solvers ( e.g. , clasp @xcite , * dlv * @xcite ) .",
    "a choice atom is of the form @xmath33 where @xmath28 is a set of literals and @xmath34 are non - negative integers ; @xmath33 is true in a set of literals @xmath22 if @xmath35 . when @xmath36 or @xmath37 , they will be omitted .",
    "the set @xmath28 in a choice atom @xmath33 can occur in various forms ( see , e.g. , @xcite ) ; e.g. , it can be explicitly listed as @xmath38 where @xmath39 s are literals ; or written in the form @xmath40 where @xmath41 , @xmath42 are atoms .",
    "given a set of ground literal @xmath22 , @xmath43 is the set of atoms @xmath44 \\mid $ ] there exists a ground instantiation @xmath11 such that @xmath45 \\in x\\}$ ] .",
    "answer sets of logic programs can be computed using answer set solvers ( e.g. , clasp @xcite , * dlv * @xcite ) .",
    "we will now review the notion of an ookb @xcite .",
    "we note that an ookb could be viewed as a logic program with function symbols and the language of ookbs contains features that can not be represented in previous investigated classes of function symbols such as  @xcite ,  @xcite , or  @xcite . in essense ,",
    "an ookbs is a logic program consisting of the following components :    @xmath0    _ taxonomic knowledge : _ this group of facts encodes the class hierarchy , the relation hierarchy , individual constants and their class membership .",
    "it contains asp - atoms of the following form : +    @xmath46    @xmath47    the predicate names are self - explanatory .    _",
    "descriptive statements : _ relationships between individuals are encoded in ookb by descriptive statements of the form : @xmath48 where @xmath49 and @xmath50 are unary functions , called _ skolem functions _",
    ", such that @xmath51 and @xmath7 is a class .",
    "axiom  [ eqslot1 ] ( or [ eqslot2 ] ) describes a relation value of individuals belonging to class @xmath7 , encoded by the atom @xmath52 ( or @xmath53 ) .",
    "it states that for each individual @xmath22 in @xmath7 , @xmath54 ( or @xmath22 ) is related to @xmath55 via the relation @xmath19 .",
    "an example use of axiom  [ eqslot2 ] is : every eukaryotic cell has part a nucleus , where _ eukaryotic cell",
    "_ and _ nucleus _ are individuals from these two classes , and _ has part _ is a relationship between those individuals .",
    "it is required that if @xmath49 ( or @xmath50 ) appears in or , then the ookb also contains the following rule    @xmath56 which specify the class of which @xmath54 ( resp .",
    "@xmath55 ) is a member .",
    "for example , if @xmath54 represents a nucleus individual , then @xmath57 will be the class nucleus .    _ cardinality constraints on relations : _ ookb allows cardinality constraints on relations to be specified by statements of the following form : @xmath58 where @xmath19 is a relation , @xmath59 is a non - negative integer , @xmath60 and @xmath7 are classes , and @xmath61 can either be _ min _ , _ max _ , or _",
    "exact_. this constraint states that for each instance @xmath22 of the class @xmath7 , the set of values of relation @xmath19 restricted on @xmath54which must occur in a relation value literal @xmath62 of @xmath7has minimal ( resp .",
    "maximal , exactly ) @xmath59 values belonging to the class @xmath60 .",
    "the head of is called a constraint literal of @xmath7 .    _ sufficient conditions : _ a _ sufficient condition _ of a class @xmath7 defines sufficient conditions for membership of that class based on the relation values and constraints applicable to an instance : @xmath63 where @xmath64 is a conjunction of relation value literals , instance - of literals , constraint - literals of @xmath7 , and @xmath22 is a variable occurring in the body of the rule .    _",
    "( in)equality between individual terms : _ the rules in this group specify in / equality between terms , which are constructable from skolem functions and the variable @xmath22 ( @xmath65 and @xmath66 ) , and have the followimg form : @xmath67    _ domain - independent axioms : _ an ookb also contains a set of domain - independent axioms @xmath68 for inheritance reasoning , reasoning about the relation values of individuals ( rules  ) , in / equality between terms ( rules  ) , and enforcing constraints ( rules  ) .",
    "@xmath69    for a detailed explanation of the above rules , please refer to @xcite .",
    "oo - domain _ is a collection of rules of the form .",
    "> from now on , whenever we refer to an ookb , we mean the prorgram @xmath70 , denoted by @xmath71 , where @xmath72 is the oo - domain of the ookb .",
    "the  is an instance of ookb and is available in asp format .",
    "the kb is based on an upper ontology called the component library @xcite .",
    "the biologists used a knowledge authoring system called aura to represent knowledge from a biology textbook . as an example , in figure [ fig : cmap ] , we show an example aura graph . the white node labeled as is the root node and represents the universally quantified variable @xmath22 , whereas the other nodes shown in gray represent existentials , or the skolem functions @xmath73 .",
    "the nodes labeled as and represent the relation names .",
    "the authoring process in aura can be abstractly characterized as involving three steps : _ inherit , specialize and extend .",
    "_ for example , the biologist creates the class eukaryoticcell as a subclass of cell .",
    "while doing so , the system would first inherit the relation values defined for cell which in this case is a chromosome , and show it in the graphical editor .",
    "the biologist then uses a gesture in the editor to specialize the inherited chromosome to a eukaryotic - chromosome , and then introduces a new nucleus and relates it to the eukaryotic - chromosome , via an isinside relationship .",
    "the inherited chromosome value for the haspart relationship , is thus , specialized to eukaryoticchromosome and extended by connecting it to the nucleus by using an isinside relationship .",
    "the statistics about the size of the exported ookb are summarized in table [ table - asp ] . in total",
    "has more than 300,000 non - ground rules .",
    "it contains 746 individuals which are members of classes which represent constants of measurements , colors , shapes , quantity , priority , etc .",
    "the kb does not contain individuals of biology classes such as cell , ribosome , etc .",
    "for computing properties of an individual or comparing individuals , the input needs to introduce the individuals .",
    ".statistics on [ table - asp ] [ cols= \" < , > , < , > \" , ]     reasoning with  is generally undecidable as it can contain cyclic representation .",
    "consider that we wish to represent the statement : every biomembrane has a part peripheral protein .",
    "this will be stated as : @xmath74 next , suppose we wish to represent `` every peripheral protein is found at the outside surface of a biomembrane '' .",
    "this will be stated as : @xmath75 this example leads to a cycle in the representation .",
    "the biologists have been unwilling to give up expressiveness needed to model such an example .",
    "the current  has 8604 cycles .    * a taxonomical knowledge base over a signature with more than 6000 classes , 450 relations , 800 relation hierarchy statements , 6000 subclass_of statements ; * about 107000 rules for speficying the relation values of instances of the 6000 classes ; and * about 115000 equality specifications ; * about ....",
    "we will now describe the queries given an ookb , say @xmath71 .",
    "these queries play a central role in the educational application inquire @xcite which employs the knowledge encoded in .",
    "these queries were developed by extensive analysis of the questions from an exam , the questions at the back of the book , and the questions that are educationally useful  @xcite .",
    "we divide these queries into four groups . the first type of queries which includes the first two queries asks about facts and relatiolnships .",
    "the second type of queries asks about the taxonomic information .",
    "these first two question types are usually referred to as the _ wh-_questions .",
    "the third type is about the differences and similarities between individuals from different classes .",
    "this type of query has been traditionally studied as an example of analogical reasoning  @xcite .",
    "the fourth type of queries that includes the last two questions query for relationships between concepts and are unique to our work .",
    "@xmath0    what is a eukaryotic cell ?    what process provides raw materials for the citric acic cycle during _",
    "cellular respiration _ ?",
    "is oocyte a subclass of a eukaryotic cell ?",
    "describe the differences and similarities between mitochondrions and chloroplasts    what is the relationship between a mitochondrion and a chloroplast    in the absence of oxygen , yeast cells can obtain energy by_which process _ ?",
    "let @xmath76 be a set of literals of @xmath71 , @xmath19 be a relation , and @xmath16 be an individual from a class @xmath7 .",
    "@xmath77 denotes the set of terms constructable from skolem functions and the individual @xmath16 .",
    "we characterize the set of pairs in the relation @xmath19 w.r.t .",
    "@xmath76 in @xmath71 by the set @xmath78 if @xmath79 ; otherwise , @xmath80 .",
    "[ value set of an individual ] [ def - sv ] let @xmath71 be an ookb .",
    "for an answer set @xmath81 of @xmath71 , the _ value set of an individual @xmath16 at a class @xmath7 _ w.r.t .",
    "@xmath81 , @xmath82 , is defined by @xmath83 .",
    "observe that the rules  indicate that @xmath71 can have multiple answer sets .",
    "nevertheless , the structure of @xmath71 allows us to prove the following important property of answer sets of @xmath71 .",
    "[ prop1 ] let @xmath71 be an ookb .",
    "for every two answer sets @xmath84 and @xmath85 of @xmath71 , every literal in @xmath86 has one of the following forms : ( _ i _ ) @xmath87 ; ( _ ii _ ) @xmath88 ; or ( _ iii _ ) @xmath89 .",
    "the above proposition indicates that @xmath90 for arbitrary individual @xmath16 and class @xmath7 and answer sets @xmath84 and @xmath85 of @xmath71 .",
    "the relationship between atoms of the form @xmath91 and @xmath92 is as follows .",
    "let @xmath71 be an ookb , @xmath16 an individual , and @xmath7 a class .",
    "for every answer sets @xmath81 of @xmath71 , we have that @xmath93 iff there exists @xmath94 such that ( _ i _ ) @xmath81 contains the following atoms @xmath95 , @xmath96 , @xmath97 , and @xmath98 ; and ( _ ii _ ) @xmath99 .",
    "the significance of these two propositions is that cautious reasoning about values of individuals at classes can be accomplished by computing _",
    "one _ answer set of @xmath71 .",
    "as we will see , the majority of queries is related to this type of reasoning .",
    "we next describe , for each query @xmath100 , an input program @xmath101 and a set @xmath102 of rules for computing the answer of @xmath100 . throughout the section",
    ", @xmath103 denotes an arbitrary but fixed ookb @xmath71 and @xmath104 .",
    "subsumption requires us to compute whether a class @xmath106 is subsumed by a class @xmath107 , i.e. , whether for each answer set @xmath81 of @xmath108 , we have for each @xmath109 also @xmath110 . we can answer this question by introducing a fresh constant @xmath16 in the ookb and set @xmath111 . @xmath112",
    "consists of a rule : @xmath113 indeed , we then have that a class @xmath106 is subsumbed by @xmath107 iff for each answer set @xmath81 of @xmath108 , @xmath114 .",
    "this conclusion comes from the following observations : ( _ a _ )",
    "if @xmath115 can be proved without then the subsumption is specified by the class hierarchy of the oo - domain ; ( _ b _ ) if @xmath115 can not be proved without , it requires that @xmath116 , i.e. , each instance @xmath16 of @xmath106 is also an instance of @xmath107 .",
    "proposition  [ prop1 ] can be extended to @xmath108 and thus we only need to compute one answer set of @xmath108 .",
    "note that this shows how , as in description logics , subsumption can be reduced to entailment in the ookb framework .",
    "we can show that    if @xmath108 has an answer set @xmath81 and @xmath117 then @xmath106 is subsumed by @xmath107 .",
    "we note that computing answer sets of @xmath108 is not a simple task ( see @xcite ) .",
    "in particular , the problem for  is quite challenging due to its size and the potential infiniteness of the grounding program of @xmath108 .",
    "one can define many more taxonomic queries than what we have considered here .",
    "some examples of such queries are as follows . given a class @xmath118 , compute all its super classes or subclasses ? given a class , return only most specific superclass ?",
    "given two classes , return there nearest common superclass ?",
    "some of the taxonomic queries can require a higher order representation .",
    "for example , given two classes , compute a class description that is their union or intersection .",
    "such queries are straightforward in a dl system , and are examples of capabilities that are challenging for the current asp systems .      queries about the description of an individual ask for a description of an individual of a class @xmath7 , represented by a fresh constant @xmath16 in the language of @xmath71 .",
    "this query can be represented by the program @xmath120 where @xmath121 encodes the query of `` inquiring about values of @xmath16 at the class @xmath7 . ''",
    "we will now discuss the answer to this query .",
    "intuitively , a complete description of @xmath16 should contain the following information :    @xmath0    @xmath122 , the classes from which @xmath16 inherits its relation values ; and    its relation values , i.e. , the triples in @xmath123 where @xmath81 is a given answer set of @xmath124 .    computing a complete description of @xmath16",
    "could be achieved by the following rules : @xmath125 where @xmath126 defines a term ( @xmath22 ) that is constructable from skolem functions and an individual ( @xmath127 ) , @xmath128 indicates that @xmath16 is an instance of the class @xmath60 ( i.e. , @xmath129 ) , and @xmath130 says that @xmath131 .",
    "this answer is correct but may contain _ too much _",
    "information for users of an ookb who have knowledge about the class hierarchy .",
    "this is because the above description could also include values that @xmath16 can inherit from the superclasses of @xmath7 .",
    "this can be seen in the next example .",
    "[ ex1 ] let us consider the class eukaryotic cell .",
    "the description of this class contains 88 statements of the form  that involve 167 classes and 150 equality specifications . a first - level answer computed using  contains 9 atoms of the form @xmath132 which indicate that a eukaryotic cell is also a cell , a living entity , a physical object , etc .",
    "in addition , there are 643 atoms of the form @xmath130 which contains inverse , composition , sub - relation , and the relation value defined in statements of the form  and those that are obtained by the rules .",
    "the example highlights two challenges in computing the description of an individual .",
    "first , since the grounding of the kb is infinite , it raises the question of what counts as an adequate grounding that returns a sufficient description of an individuals ?",
    "second , for practical query answering applications that use , one must post - process the results to deciding which subset of the answers should be preesnted to the user .",
    "it should be noted that because of the infiniteness of the grounded kb , current asp solvers can be used to approximate the answers , by setting depth bounds . whether this will result in acceptable performance ,",
    "both in terms of the quality of the answers and the efficiency , is a topic open for future research .",
    "a better answer would be to present only the _ most specific answer _ to the users . to accomplish this",
    ", we will need to define the notion of a _ most specific superclass _ ( @xmath133 ) of a class and the notion of _ most specific value _",
    "( @xmath134 ) of an individual at a class",
    ". they can be then used as follows .",
    "@xmath135 different implementations of the two predicates @xmath133 and @xmath134 are possible .",
    "for this reason , we present the definition of these two predicates :    * @xmath136 iff @xmath115 and there exists no class @xmath137 such that @xmath138 and @xmath139 . * @xmath140 iff @xmath141 is specifically introduced for the class @xmath7 , i.e. , @xmath91 is the head of a ground rule of the form - and whose body is @xmath142 .",
    "a more detailed specification of this predicate could be found in @xcite .",
    "a possible implementation of @xmath133 is as follows : @xmath143 one way to implement @xmath134 is to disable the set of @xmath144 that is not obtained from the application of . under this restriction and with  , the answer for the same query on eukaryotic cell contains only an atom @xmath145 ( a eukaryotic cell is also a cell ) and 128 atoms of the form @xmath130 .",
    "a comparison query takes the general form of `` what are the differences / similarities between @xmath106 and @xmath107 ? ''",
    "( e.g. , `` what are the differences between _ chromosome _ and _ ribosome _ ? '' ) .",
    "more specific versions of the query may ask for specific kinds of differences , e.g. , structural differences .    the query can be represented and answered by ( _ i _ ) introducing two new constants @xmath147 and @xmath148 which are instances of @xmath106 and @xmath107 , respectively ; and ( _ ii _ ) identifying the differences and similarities presented in the descriptions of @xmath147 and @xmath148 .",
    "we therefore encode @xmath149 using the following program : @xmath150 let us first discuss the features that can be used in comparing individuals of two classes .",
    "individuals from two classes can be distinguished from each other using different dimensions , either by their superclass relationship or by the relations defined for each class . more specifically , they can be differentiated from each other by the generalitation and/or specialitation between classes ; or the properties of instances belonging to them .",
    "we will refer to these two dimensions as _ class - dimension _ and _ instance - dimension _",
    ", respectively .",
    "we therefore define the following notions , given an answer set @xmath81 of @xmath151 :    @xmath0    _ the set of similar classes between @xmath106 and @xmath107 _ : is the intersection between the set of superclasses of @xmath106 and of @xmath107 @xmath152 .",
    "_ the set of different classes between @xmath106 and @xmath107 _ : is the set difference between the set of superclasses of @xmath106 and of @xmath107 @xmath153 .    where @xmath154 denotes the set of superclasses of @xmath7 .",
    "we next discuss the question of what should be considered as a similar and/or different property between individuals of two different classes .",
    "our formalization is motivated from the typical answers to this type of question such as an answer `` a chromosome has a part as protein but a ribosome does not '' to the query `` what is the different between a chromosome and a ribosome ? ''",
    "this answer indicates that for each chromosome @xmath155 there exists a part of @xmath155 , say @xmath156 , which is a protein , i.e. , @xmath157 and @xmath158 hold ; furthermore , no part of a ribosome , say @xmath159 , is a protein , i.e. , there exists no @xmath50 such that @xmath160 and @xmath161 hold .    for a set of literals @xmath81 of @xmath151 and a class @xmath7 with @xmath162 , let @xmath163 be the set of triples @xmath164 such that @xmath165 , @xmath166 , and @xmath167 .",
    "@xmath41 ( @xmath42 ) is called the domain ( range ) of @xmath19 if @xmath168 .",
    "we define    @xmath0    _ the set of similar relations between @xmath106 and @xmath107 _ : is the set @xmath169 of relations @xmath170 such that ( _ i _ ) @xmath106 and @xmath107 are domain of @xmath170 ; ( _ ii _ ) @xmath106 and @xmath107 are range of @xmath170 ; or ( _ iii _ ) there exist @xmath171 such that @xmath172 .",
    "_ the set of different relations between @xmath106 and @xmath107 _ : is the set @xmath173 of relations @xmath170 such that ( _ i _ ) @xmath106 is and @xmath107 is not a domain of @xmath170 or vice versa ; ( _ ii _ ) @xmath106 is and @xmath107 is not a range of @xmath170 vice versa ; or ( _ iii _ ) there exist @xmath171 such that @xmath174 .",
    "an answer to @xmath175 must contain information from @xmath176 , @xmath177 , @xmath169 , and @xmath173 .",
    "computing @xmath176 and @xmath177 rely on the rules for determining the most specific classes among a group of classes which can easily be implemented using the naf - operator .",
    "we now describe the set of rules @xmath178 , dividing it into different groups .",
    "first , the set of rules for computing @xmath179 is as follows : @xmath180 the rule identifies the classes that are superclass of both @xmath106 and @xmath107 .",
    "we can show that @xmath181 iff @xmath182 .",
    "the next set of rules is for computing @xmath177 . @xmath183",
    "the two rules identify the classes that are superclass of @xmath106 but not @xmath107 and vice versa .",
    "again , we can show that @xmath184 iff @xmath185 .    for computing @xmath169 and @xmath173 ,",
    "we need to compute the sets @xmath186 and @xmath187 . for this purpose",
    ", we define two predicates @xmath65 and @xmath66 such that for every answer set @xmath81 of @xmath151 , @xmath188 iff @xmath189 for @xmath190 . before we present the rules ,",
    "let us denote a predicate @xmath191 , called the _ most specific class of an individual _ , by the following rules .",
    "@xmath192 these rules state that the class @xmath41 is the most specific class of an individual @xmath155 if @xmath155 is a member of @xmath41 and @xmath155 is not an instance of any subclass @xmath42 of @xmath41 .",
    "this will allow us to define the set @xmath186 and @xmath187 as follows .",
    "@xmath193 the following rules identify relations that are similar between @xmath106 and @xmath107 : @xmath194 the rules say that individuals @xmath147 and @xmath148 from class @xmath106 and @xmath107 respectively share a relation @xmath19 .",
    "the first rule says that @xmath195 ( @xmath190 ) is a source in the relation @xmath19 ( i.e. , there exists some @xmath196 such that @xmath197 ) ; the second rule says that @xmath195 is a destination in the relation @xmath19 ( i.e. , the first rule : there exists some @xmath196 such that @xmath198 ) .",
    "the third rule says that there exist some pair @xmath199 such that @xmath200 and @xmath201 are instances of the same class and @xmath202 .",
    "the set of rules for computing @xmath173 is similar to the above set of rules .",
    "it is omitted here for space reason .",
    "finally , the next set of rules detemines the set @xmath173 : @xmath203    @xmath204 the three predicates @xmath205 , @xmath206 , and @xmath207 record the differences in the use of instances of @xmath106 and @xmath107 with respect to a relation @xmath19 as its domain , range , or a property , similar to the three cases of similarities .    the key challenge in computing the differences / similarities between classes in  are the same as for @xmath208 .",
    "first , since the grounded program is infinite , one has to determine what is an adequate description that should be used for the purposes of comparsion .",
    "second , even though the computation will return all differences and similarties , the users are frequently interested in knowing about salient differences .",
    "the current aura system uses a complex set of heuristics to post process the results to group and rank the results to draw out the salience .",
    "the description of such heuristics is outside the scope of the present paper .",
    "a relationship query takes the general form of `` what is the relationship between individual @xmath147 and individual @xmath148 ? '' , e.g. , `` what is the relationship between a biomembrane and a carbohydrate '' ?",
    "since this type of query refers to a path between two individuals , it can involve significant search in the kb making it especially suitable for solution by asp solvers . in more specific forms of this query",
    ", the choice of relationships can be limited to a specific subset of relationships in the kb .",
    "for example , `` what is the structural or functional relationship between individual @xmath147 and individual @xmath148 ? '' we can formulate this query as follows .",
    "given a set of literals @xmath81 of an ookb and a set of relations @xmath28 , a sequence of classes alternated with relation @xmath210 is called a _ path between @xmath211 and @xmath212 _ with restrictive relations @xmath28 in @xmath81 if there exists @xmath213 and skolem functions @xmath214 such that @xmath215 for @xmath216 and @xmath217 for @xmath218 and @xmath219 for @xmath220 .",
    "a query of type @xmath209 asks for a path between @xmath106 and @xmath107 with restrictive relations in @xmath28 and is encoded by the program @xmath221 : @xmath222 the answer to the query should indicate paths between @xmath106 and @xmath107 with restrictive relations in @xmath28 .",
    "observe that an answer can be generated by ( _ i _ ) selecting some atoms of the form @xmath223 such that @xmath224 ; and ( _ ii _ ) checking whether these atoms create a path from @xmath106 to @xmath107 .",
    "we next present the set of rules @xmath225 , dividing them into two groups that implement the steps ( _ i _ ) and ( _ ii _ ) as follows .",
    "@xmath226 the first rule defines possible segments of the path .",
    "the second rule , a choice rule , picks some arbitrary segments to create the path .",
    "a segment is represented by the atom @xmath227 that encodes a relation @xmath170 between @xmath228 ( an instance of class @xmath7 ) and @xmath229 ( an instance of class @xmath230 ) .",
    "the rest of the rules eliminate combinations that do not create a path from @xmath106 to @xmath107 .",
    "for example , the first two constraints make sure that there must be exactly one segment starting from @xmath106 ; the next two ensure that there must be exactly one segment that ends at @xmath107 .",
    "the next four constraints make sure that the segments create a path . @xmath231",
    "even if one could define a suitable finite grounding of , computing @xmath232 can be exponential in the worst case .",
    "the implementation of this query in aura relies on a set of heuristics and depth - bound incomplete reasoning .",
    "e.g. , one heuristic involves first performing the search on the subclass relationships .",
    "the existing implementation is unsatisfactory as it misses out important relationships . in an ideal implementation",
    ", one would first compute all candidate paths , and then rank them based on user provided critieria . computing all such paths especially at the runtime",
    "has been infeasible in aura so far .",
    "we hope that asp could provide a solution for an efficient path computation .",
    "we observe that there was no use of default negation in the axioms  - that specify ookb .",
    "the default negation is used in the domain independent axioms , for example , in axiom   and in axioms  - . in principle , default negation could be used in axioms   or axiom  , but in our practical experience in developing such usage has not been necessary .",
    "that is primarily because while formalizing the textbook knowledge , one typically requires classical negation .",
    "it is only for query answering that the usage of negation becomes critical .",
    "if one generalizes ookb to other domains , it may well be necessary to use default negation in the domain specification axioms  - , but we have not considered such usage in our work so far . since default negation is necessary to specify query answering for ookb , asp provides a compelling paradigm for declarative specification of such reasoning .",
    "let us also consider comparison between using asp vs dls for ookb queries presented here .",
    "there are two key features of ookbs that are not directly expressible in description logics : graph - structured objects and ( in)equality statements . using axioms   and",
    ", it is possible to define a graph structure .",
    "it is well known that graph structured descriptions usually lead to undecidability in reasoning  @xcite .",
    "in(equality ) statements as in axiom   and  , allow us to relate skolem functions that have been introduced as part of two different class descriptions .",
    "such modeling paradigm is not supported by dls . of course ,",
    "the reasoning with ookbs in full generality is undecidable , and it is an open question whether there exist decidable fragments of ookb for which the reasoning is decidable  @xcite .",
    "another important difference between a dl and asp is in handling of constraints . to illustrate this difference ,",
    "consider a kb that has a statement : every person has exactly two parents , and further individuals @xmath233 , @xmath234 , @xmath235 and @xmath236 , such that @xmath234 , @xmath235 and @xmath236 are the parents of @xmath233 .",
    "with axioms  - , such a kb will be inconsistent .",
    "in contrast , most dl system will infer that either @xmath234 must be equal to @xmath235 , or @xmath235 must be equal to @xmath236 , or @xmath236 must be equal to @xmath234 .",
    "the semantics of constraints in aura conform to the semantics captured in axioms  - .",
    "our work on formalizing the ookb queries in asp has been only theoretical , and an experimental evaluation is open for future work .",
    "some example answers of the queries considered in section  [ sec : queries ] which are produced by the inquire system can be seen at  @xcite .",
    "we described the contents of an ookb knowledge base , and formulated asp programs for answering four classes of practically interesting queries .",
    "we also presented a practical ookb , , whose size and necessary features make the computation of the answers to these queries almost impossible using contemporary asp solvers .",
    "the specific challenges include developing suitable grounding strategies and dealing with potential undecidability in reasoning with an ookb . given the large overlap in features supported by ookb and dls , the  also presents a unique dataset which could be used to explore relative tradeoffs in reasoning efficiency across these two different paradigms .",
    "being a concrete ookb ,  presents a real challenge for the development of asp - solvers .",
    "this also calls for the development of novel query answering methods with huge programs in asp .",
    "we welcome engaging with both the asp and dl research communities so that  could be used as a driver for advancing the state of the art in efficient and scalable reasoning .",
    "p. clark . and v. chaudhri and s. mishra and j. thomere and k. barker and b. porter .",
    "enabling domain experts to convey questions to machine : a modified , template - based approach in _ proc .",
    "2nd int conf on knowledge capture _ , 2003 ."
  ],
  "abstract_text": [
    "<S> research on developing efficient and scalable asp solvers can substantially benefit by the availability of data sets to experiment with .  </S>",
    "<S> contains knowledge from a biology textbook , has been developed as part of project halo , and has recently become available for research use .  </S>",
    "<S> is one of the largest kbs available in asp and the reasoning with it is undecidable in general . </S>",
    "<S> we give a description of this kb and asp programs for a suite of queries that have been of practical interest . </S>",
    "<S> we explain why these queries pose significant practical challenges for the current asp solvers . </S>"
  ]
}
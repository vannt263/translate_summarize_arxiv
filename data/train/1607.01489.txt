{
  "article_text": [
    "one fundamental aim of molecular simulations is the computation of macroscopic quantities , typically through averages of functions of the variables of the system with respect to a given probability measure  @xmath0 , mostly distributed according to the boltzmann - gibbs density .",
    "this corresponds to a model of a conservative system in contact with a heat bath at a fixed temperature .",
    "numerically , the high - dimensional averages with respect to  @xmath0 are often approximated as ergodic averages over realizations of appropriate stochastic differential equations ( sdes ) ( see @xcite ) .    in many applications ,",
    "the dynamics is metastable , _",
    "i.e. _ the system remains trapped for a very long time in some region of the configuration space .",
    "an acceleration of the sampling can be achieved by improving the exploration of the phase space ( with variance reduction techniques such as importance sampling , see for instance @xcite ) , increasing the time step by stabilizing the dynamics ( see for instance @xcite ) , by changing the model as for example dissipative particle dynamics ( see for instance @xcite ) , or the implementation ( parallelization , reduction of the computational complexity ( see for instance @xcite ) ) .",
    "many methods are based on a modification of the dynamics . since",
    ", very often , the interest lies in computing of average properties , sampling can be unbiased to retrieve averages with respect to the canonical distribution . in order to increase the time step size used in the simulation , some methods consider modifying the kinetic energy based on changing the mass matrix  ( @xcite ) .",
    "another example is the shadow - hamiltonian metropolis - hastings method introduced by @xcite , which consists in integrating the hamiltonian dynamics according to the shadow - hamiltonian , which is preserved by the numerical scheme .    in order to propose a fair comparison of sampling methods ,",
    "three factors should be taken into account : the asymptotic variance of time averages , the maximal admissible time step size in the discretization and the computational effort .    in this work",
    ", we analyze the efficiency of a method based on a modified version of langevin dynamics called `` adaptively restrained particles simulations '' ( arps ) , first proposed in @xcite .",
    "the main idea is to modify the kinetic energy function in order to freeze a number of particles at each time step and reduce the computational cost of updating inter - particles forces . in @xcite",
    ", the kinetic energy is set to  0 when momenta are smaller than the restraining parameter @xmath1 , and is set to the standard , quadratic kinetic energy for momenta larger that the full - dynamics parameter @xmath2 , with @xmath3 .",
    "thanks to this formulation , the computational complexity of the force update is reduced , because some particles do not move and hence , forces need not be updated .",
    "the associated gain can be quantified by an algorithmic speed - up factor  @xmath4 . on the other hand ,",
    "since the dynamics is modified , the asymptotic variance of time averages  @xmath5 given by the central limit theorem , differs from the asymptotic variance  @xmath6 of the standard langevin dynamics .",
    "intuitively , iterates are a priori more correlated , which may translate into an increase of the statistical error .",
    "the actual speed - up of the method in terms of wall - clock time is therefore an interplay between the algorithmic speed - up and the variances .",
    "a rigorous mathematical analysis of the ergodicity properties of this method was provided in @xcite .",
    "moreover , a perturbative regime study of the asymptotic variance suggests a linear behavior of the variance with respect to the parameters of the dynamics in some limiting regime .",
    "since the method is parameterized by two constants , it is not obvious how to choose these parameters in order to achieve an optimal speed - up .",
    "of course , the algorithmic speed - up depends on the percentage of restrained particles .",
    "the percentage of restrained particles is a non - linear function of the parameters , hence it is not trivial how to best choose their values .",
    "our aim in this paper is to propose a strategy for choosing the parameters of the ar method .",
    "the article is organized as follows : in section [ computation of macroscopic properties using md simulations ] we make a brief overview of sampling using langevin dynamics and we recall common strategies for its discretization . in section [ section ar - langevin dynamics ] we recall the definition of ar - langevin dynamics proposed in @xcite and the alternative definition of the ar - kinetic energy with better stability properties from @xcite . in section [ section 2.3 ]",
    "we give a definition of speed - up and we introduce a formula for the total speed - up with the ar approach . in the next two sections we analyze how this formula depends on the parametrization : in section [ section algorithmic speed - up ] we analyze the computational complexity of the method and we express the corresponding algorithmic speed - up .",
    "this part is followed by section [ section total speed - up ] , in which we give a relation between the restraining parameters and the percentage of restrained particles , as well as an approach for obtaining the linear approximation of the variance with respect to the restraining parameters . by combining all the necessary parts ,",
    "we propose a practical strategy for the parametrization of the method and we illustrate the theoretical results by numerical simulations in section [ section numerical examples ] .",
    "in this section we recall the langevin dynamics and the modified langevin dynamics .",
    "we consider a system of @xmath7 particles in a simulation box of the space dimension @xmath8 with periodic boundary conditions .",
    "the total dimension of the system is @xmath9 .",
    "we denote by @xmath10 momenta of the particles and by @xmath11 their positions in the box @xmath12 , where @xmath13 is the one - dimensional unit torus .",
    "we denote @xmath14 .",
    "the hamiltonian of the system , which is the sum of the kinetic ( @xmath15 ) and the potential energy ( @xmath16 ) , reads @xmath17 let us emphasize that we restrain ourselves to separable hamiltonians .",
    "the langevin equations read : @xmath18 where @xmath19 is a standard @xmath20-dimensional wiener process , @xmath21 is the friction constant and @xmath22 is proportional to the inverse temperature .",
    "we refer the reader to @xcite for an overview of mathematical properties of this dynamics . the invariant distribution ( the boltzmann distribution ) is simply obtained as @xmath23 where @xmath24 is the normalization constant or the partition function .",
    "we use the notation @xmath25 for the case of the standard kinetic energy function , and @xmath26 for a general kinetic energy function .",
    "langevin dynamics generate samples @xmath27 from the boltzmann distribution @xmath0 which are used in computation of macroscopic properties .",
    "these correspond to expected values with respect to @xmath0 and can be approximated by ergodic averages of the trajectories @xmath27 : @xmath28 note that for _ any _ well - defined belongs to @xmath29 , and @xmath30 grows sufficiently fast at infinity in order to ensure that @xmath31 . ]",
    "@xmath15 , due to the separability of the hamiltonian , the marginal distributions in the position variable remain unchanged , since only the momenta marginals of the distribution are influenced by the modification of the kinetic energy , _",
    "i.e. _ @xmath32={\\mathbb{e}}_{\\mu_{u}}\\left[{\\varphi}(q)\\right]\\,.\\ ] ]    since the dynamics can not be integrated exactly its solutions are approximated by numerical integration ( @xcite ) . basically , there are two kinds of errors occurring in the estimation of @xmath33 $ ] by @xmath34 from the numerical integration of equations : a statistical error , due to the finiteness of the time interval during which the sampling is performed ; and a systematical error ( bias ) on the measure .    the statistical error for ergodic averages is quantified by the central limit theorem .",
    "the asymptotic variance associated with the estimator @xmath34 reads @xmath35=2\\int_0^{\\infty}{\\mathbb{e}}\\left[\\pi{\\varphi}(p_s , q_s)\\pi{\\varphi}(p_0,q_0)\\right]ds , \\quad \\pi { \\varphi}:={\\varphi}-\\int_{{\\mathcal{e}}}{\\varphi}d\\mu\\,.\\ ] ] similarly , for the discretized dynamics , with time step size @xmath36 , we denote the estimator @xmath37 if the discretized dynamics is geometrically ergodic with an invariant measure @xmath38 , a central limit theorem holds true and the variance of the discretized process is given by ( see @xcite ) @xmath39 ^ 2\\right)+2\\sum_{n=1}^{\\infty}{\\mathbb{e}}_{\\mu_{{\\delta}t}}\\left[\\pi_{{\\delta}t}{\\varphi}(q^n , p^n)\\pi_{{\\delta}t}{\\varphi}(q^0,p^0)\\right ] \\\\ & = \\int_{{\\mathcal{e}}}\\pi_{{\\delta}t } { \\varphi}\\left[\\left(2\\left({\\rm id}-p_{{\\delta}t}\\right)^{-1}- { \\rm id}\\right ) \\pi_{{\\delta}t } { \\varphi}\\right ] \\",
    "d\\mu_{{\\delta}t}\\ , \\end{aligned } \\label{eq : discrete variance}\\ ] ] where @xmath40 in other words , for @xmath41 simulation steps , the statistical error is of order @xmath42 .",
    "the variance of the discretized process converges to the variance of the continuous process @xmath43 as @xmath44 tends to @xmath45 , i.e. @xmath46 as @xmath47 ( see @xcite ) .",
    "there are many possible ways to discretize ( [ modified langevin ] ) , see for instance @xcite for a precise analysis of the properties of discretization schemes of the langevin dynamics based on a splitting .",
    "a standard choice for the discretization of is a numerical scheme of second order on the averages with respect to the time step size .",
    "it is possible to design higher order schemes , however they include at least double evaluation of the forces , which is not favorable due to the system size .",
    "usually , the numerical schemes are constructed through a splitting of the generator of the langevin dynamics @xmath48 with @xmath49 for instance , the first order splitting ( lie - trotter ) gives the following scheme : @xmath50 where @xmath51 are independent and identically distributed ( i.i.d . ) standard @xmath20-dimensional gaussian random variables .",
    "this is the so - called bao scheme .",
    "the name is motivated by the fact that the transition kernel reads @xmath52 where @xmath53 ( respectively @xmath54 ) is the transition operator associated with the splitting step .",
    "we refer to @xcite for a construction of second order discretization schemes in the case of a general kinetic energy .    the lie - trotter and the strang splitting each give six possible numerical schemes according to the order of the operators a , b , o ( @xcite ) . due to the high dimensionality of the system , the bottleneck of the computational complexity is the computation of the interactions between the particles , which must be done after each update of the positions ( after action a ) .",
    "in addition , a non - negligible computational effort involves generation of random numbers in o. therefore , schemes which include as few actions of a and o as possible should be preferred for a lower computational complexity .      in the usual",
    "setting , the kinetic energy function of system of @xmath7 particles is a sum of kinetic energies of each particle , which are quadratic functions of momenta : @xmath55 where @xmath56 is the momentum vector of the particle @xmath57 with mass @xmath58 .",
    "ar - langevin dynamics , proposed in @xcite , is based on a modified kinetic energy function @xmath15 that is defined as the sum of the kinetic energies of the individual particles , which are parametrized by two constants @xmath59 . in @xcite , the ar - kinetic energy was designed such that it vanishes for values smaller than the restraining parameter @xmath1 , and are equal to the standard kinetic energy for values bigger than the full dynamics parameter @xmath60 .",
    "the transition between these two regions is performed with an interpolation spline , which ensures the regularity of the kinetic energy in @xcite . ] .",
    "still , the derivatives of @xmath61 have large values in the transition region , which might cause numerical instabilities . however , the necessary condition for the particle to remain at the same position between two time steps is that the first derivative of the kinetic energy function vanishes for some values of momenta in every space direction . in @xcite an alternative definition of the ar - kinetic energy function with this property",
    "was introduced , starting from an interpolation of its first derivative , such that it vanishes around zero and takes values of @xmath62 outside the restraining region .",
    "the order of the interpolation spline can be chosen as high as necessary .",
    "however in this article we use only linear interpolation .",
    "the modified kinetic energy is then obtained by piecewise integration : @xmath63,\\\\           \\frac{p_i^2}{2m_i}&\\quad   \\text { for } &   \\frac{\\left|{p_{i}}\\right|}{m_i}\\geq { v_{\\mathrm{max}}}\\ , ,              \\end{aligned }      \\right .",
    "\\end{aligned }      \\label{def new arps kinetic energy}\\ ] ] for @xmath64 , and where @xmath65 is the integrated interpolation spline and @xmath66 is an integration constant .",
    "note that the total kinetic energy is the sum of individual kinetic energies of each particle in every space direction .",
    "see figure [ fig : modifiedhamiltonian_parametrization ] for an illustration .     and",
    "@xmath2.,scaledwidth=80.0% ]    ar dynamics accelerate sampling by exploiting information about the kinetic energy of particles .",
    "more precisely , a particle is called _ restrained _ if it has the absolute value of each component of its momentum smaller than the restraining threshold @xmath1 .",
    "all other particles are defined as _ active _ particles .",
    "note that , during the simulation , particles are switching between these states . also , the average occupation of the active or restrained state only depends on the restraining parameters @xmath1 and @xmath2 .    since the momenta of individual particles are independent from each other under the canonical measure , the parameters @xmath1 and @xmath2 could in fact be different for each particle , to either focus calculations on a specific part of the particle system or to adjust the scaling of parameters according to the mass of the particle .",
    "in this section we introduce a framework for the complexity analysis of the ar dynamics in the case of pair - wise interactions , which are the most common interactions in numerous applications .",
    "note that the discussion below can be easily generalized to interactions present in classical force - fields .",
    "the force acting on each particle @xmath57 is a sum of interactions with all other particles .",
    "the information about the state of the particle allows us to lower the computational cost of the computation of pair - wise interactions between the particles .",
    "we consider the potential @xmath67 and the force acting on the particle @xmath57 which is given by @xmath68 the change of the force between two time steps only depends on active particles that have moved since the last time step with respect to this particle .",
    "this allows us to avoid the computation of pair - wise interactions between restrained particles , hence lower the computational complexity . in order to quantify the computational cost of the force update",
    ", we define the force function @xmath69 such that @xmath70 .",
    "then the _ computational cost of the  force update _ is defined as the number of times the force function @xmath71 is called .",
    "the speed - up of ar dynamics , due to the decreasing of the computational complexity in the force update , with respect to the non - adaptive method which updates all interactions , defines _ the algorithmic speed - up_. since the computational complexity depends on the ratio of restrained particles , which is a quantity that varies at each time step , we consider averages over the whole simulation .",
    "more precisely , we denote by @xmath72 the computational cost of the force update in the ar - method at time step @xmath73 and by @xmath74 the computational cost of a standard , non - adaptive method .",
    "we denote by @xmath75 the number of time steps in the simulation . then _ the algorithmic speed - up _",
    "@xmath76 is the ratio of the average computational cost @xmath77 $ ] in the standard method and the average computational cost @xmath78 $ ] in the ar method : @xmath79    note that the computational complexities in both cases are bounded functions of the number of particles and , due to the ergodicity of the dynamics , which was proved by @xcite , the averages in almost surely converge .    however , the important point is the reduction of the error for a given wall - clock duration .",
    "we focus here on the statistical error , which is often the dominant source of errors . in order to express the total speed - up with respect to the standard method",
    ", we need to consider not only the algorithmic speed - up , but also the modification of the asymptotic variance which depends on the concrete choice of the kinetic energy ( see expression ) .",
    "we define _ the total speed - up _ @xmath80 as a ratio of the wall - clock time , which is needed by using the ar - method in order to achieve some statistical precision , and the wall - clock time needed for reaching the same precision by the standard method : @xmath81 recall that , for an observable @xmath82 , we denoted by @xmath83 the asymptotic variance of the sampling from the discretized dynamics and by @xmath43 the asymptotic variance of the continuous dynamics . from the central limit theorem ,",
    "the statistical error at time @xmath84 is given by @xmath85 where @xmath86 is of order @xmath87 and @xmath88 .",
    "hence the number of time steps @xmath75 needed in order to have a statistical error of order @xmath86 is @xmath89 the corresponding wall - clock time is therefore obtained by considering the average cost @xmath90 as @xmath91 taking into account that @xmath92 ( for time steps small enough , recall section [ computation of macroscopic properties using md simulations ] ) , the total speed - up @xmath80 defined in can be expressed as @xmath93    the last two terms in become equal for small values of @xmath44 and it is therefore sufficient to study the variance of the continuous process @xmath94 and @xmath95 .",
    "as we have already mentioned , the choice of the modified kinetic energy should not change the stability properties of the standard dynamics",
    ". this would otherwise require us to choose a smaller time step size @xmath96 , which would lead to a smaller total speed - up @xmath80 .",
    "unfortunately , this is the case of the kinetic energy defined in @xcite .",
    "still , the stability can be significantly improved by using the kinetic energy given by instead . in this case , the stability properties become comparable to the ones of the standard dynamics ( @xcite ) .",
    "we therefore assume in this work @xmath97 .",
    "the computation in shows the trade - off between the algorithmic speed - up and the change in variance . both the algorithmic speed - up @xmath98 and the ar variance @xmath99",
    "depend on the parameters of the ar dynamics .",
    "as already showed in @xcite , in some applications , the restraining parameters can be chosen such that the total speed - up satisfies @xmath100 .",
    "therefore , there are systems for which this method can be efficient , even though this might be counter - intuitive since one could suggest that in order to accelerate the sampling , the system should move `` faster '' and not be restrained .",
    "note however that the wall - clock duration of the force update step depends on the implementation and on the complexity of the evaluation of @xmath71 .",
    "hence , the same physical model with variance @xmath43 , can have various algorithmic speed - ups @xmath76 .",
    "finally , an interesting observation is , that due to the separability of the hamiltonian , the algorithmic speed - up does not depend on the potential .",
    "the goal of this section is to propose a methodology to analyze the algorithmic speed - up @xmath76 ( defined in  ) of ar dynamics as a function of the percentage of restrained particles .",
    "we first describe the adaptive algorithm for computing forces , and we estimate the corresponding computational cost . in the last part , we also consider the effort for updating neighbor lists used for updating of short - ranged interactions and we obtain an estimation of the algorithmic speed - up per time step .      for simplicity ,",
    "we consider a system of @xmath7 particles where only pair - wise interactions take place . in",
    "ar dynamics , this sum can be split into three kinds of interactions depending on the state of the two interacting particles : active - active , active - restrained and restrained - restrained .",
    "we define the set of indices of active particles @xmath101 and restrained particles @xmath102",
    ". then , sum can be re - written as @xmath103 the force acting on particle @xmath57 in the next time step @xmath104 can be formally obtained using the old position @xmath105 : @xmath106 since , for the set of restrained particles , positions have not changed since the previous time step , one can easily see that @xmath107 the computation in is therefore reduced to subtracting the old and adding the new active - restrained and active - active interactions .",
    "this simple remark provides in fact a key point for the reduced complexity of the ar algorithm .    in a standard simulation ,",
    "when taking into account newton s third law @xmath108 , the computational cost of pair - wise interactions is @xmath109 .",
    "the resulting quadratic complexity in the number of particles is not favorable due to the system size , and therefore neighbor lists are usually introduced ( see @xcite ) . for a comparison of various approaches for neighbor list methods",
    "we refer the reader to @xcite .",
    "neighbor lists can be used in systems where forces vanish after a certain cut - off distance , so that each particle only interacts with a relatively limited number of neighbors .",
    "for simplicity , we consider a homogenous system where we assume that the number of neighbors @xmath110 of a particle is the same for each particle .",
    "taking into account that , for each pair @xmath111 , we may only compute the force @xmath112 and deduce @xmath113 thanks to newton s third law , the number of interactions reduces to @xmath114 .",
    "the bao discretization scheme can be formalized in the following way :    * input * : initial conditions @xmath115 + * output * : @xmath116 +    in ar dynamics , the information about which particles are going to move after the position update is already available after updating the momenta b , since the kinetic energy will not change anymore . the algorithm above may thus be modified in the following way :    * input * : initial conditions @xmath115 + * output * : @xmath116 + for each particle @xmath57 , initialize force @xmath117 ; + [ algo arps 1 ]    updating neighbor lists normally consists in re - assigning each particle to a specific grid cell ( in our implementation we used a combination of verlet lists and linked - cell lists ( @xcite ) ) . in",
    "ar dynamics , restrained particles do not have to be re - assigned , and neighbor lists may be updated more efficiently .",
    "more precisely , the complexity of updating the neighbor lists goes from @xmath118 the number of particles , to @xmath119 , where @xmath120 is the number of active particles .",
    "note that the force function @xmath71 is called in both ar force updates ( subtract and add steps ) , since we need to evaluate forces for positions at the previous time step .",
    "it would be possible to avoid updating forces twice by saving all pairwise forces , but this may result in a quadratic space complexity .",
    "we will not analyze this case , although it would result in a larger algorithmic speed - up and lead to less restrictive conditions on the efficiency of ar dynamics .",
    "note that there is a slight overhead due to computing the ar kinetic energy functions @xmath121 , which is more complicated than in the standard case .",
    "still , this involves @xmath118 additional operations , and can be neglected compared to the cost of the force update in practical applications .",
    "furthermore , the overhead mostly comes from the transition regime since @xmath121 vanishes for restrained particles and becomes @xmath122 for the full - dynamics state .",
    "note that a similar strategy for incremental force update may be applied to other splitting schemes of the modified langevin equations .",
    "however , the status of a particle ( active , in transition or restrained ) depends on the state of the momenta before the position update , and hence this status should not be destroyed by updating momenta between two position updates . using the same notation as in section  [ computation of macroscopic properties using md simulations ] and @xcite , this implies that the second order splittings baoab and oabao are not directly suited for a modification by the ar dynamics algorithm , since between the two position updates a , the momentum changes by either o or b step . on the other hand , aboba , boaob ,",
    "obabo and aoboa can be used , since the lists of active particles can be created before the position update a and hence active - active and active - restrained interactions can be subtracted and added after position update a.      at each time step , the computational cost of the force update depends on the percentage of restrained particles .",
    "let us denote the number of active particles by @xmath123 , where @xmath124 $ ] is the average ratio of active particles .",
    "the number of restrained particles is then @xmath125 .",
    "we are going to formalize the computational complexity of the force update as a function of the ratio of restrained particles , denoted by @xmath126 .",
    "we recall that we have considered the average computational cost over the whole trajectory in equation , since the instantaneous computational cost may vary at each time step . because , in the algorithm analyzed in this paper , we add and subtract pairwise forces , the computational complexity of the force update in an ar simulation is lower than a regular force update if and only if a sufficient number of particles is restrained .",
    "we are thus going to analyze which conditions on the number of restrained particles are sufficient to obtain a speed - up larger than one , when a standard simulation has a linear or quadratic complexity .",
    "this analysis can be extended to other force update algorithms .",
    "let us first consider a standard ( non - adaptive ) simulation with a quadratic - complexity force update algorithm , i.e. when no neighbor - lists are used . in this case , the number of interactions computed at every time step is @xmath127 . in",
    "ar dynamics , we do not need to recompute interactions between restrained particles , hence we only update interactions involving active particles , either with other active particles , or with restrained particles . as a result ,",
    "the computational cost for the ar force update is : @xmath128 and @xmath129 is satisfied for @xmath130 and @xmath131 .",
    "the inferior bound on the number of particles is not a restrictive condition for molecular dynamics , where the number of particles is usually much bigger .",
    "( for example , for @xmath132 , the number of particles @xmath7 must be larger than @xmath133 . )",
    "more importantly , this implies that at least @xmath134 of particles must be restrained in order for this force update algorithm to be beneficial , in which case the algorithmic speed - up is : @xmath135 when the number of particles tends to infinity , this becomes @xmath136 note that if the double computation of forces can be avoided ( for example by storing previous pairwise forces ) , the complexity becomes @xmath137 so that @xmath138 is achieved for any @xmath139 and @xmath140 , resulting in the following speed - up : @xmath141      let us now consider the ( much more frequent ) case where the complexity of the force update is linear , e.g. when forces become sufficiently small after a given cutoff distance @xmath142 , and neighbor lists may be used to efficiently determine which particles are interacting .",
    "the reference complexity is therefore @xmath143 , where @xmath110 is the ( average ) number of neighbors .",
    "the algorithm for the adaptive force update is as follows : for all active particles compute interactions with their neighbors , and between the active neighbors use @xmath108 .",
    "the total number of interactions to be updated in the ar dynamics algorithm is then : @xmath144 where the set @xmath145 contains the indices of the active neighbors of the particle @xmath57 , @xmath146 contains the indices of the restrained neighbors , @xmath147 and @xmath148 .",
    "the necessary condition for @xmath149 is then @xmath150 note that this condition does not depend on @xmath7 , nor on @xmath110 .",
    "the ar dynamics algorithm is more efficient in number of operations for forces update if and only if the percentage of restrained particles is bigger than @xmath151 .",
    "the algorithmic speed - up is hence @xmath152 again , avoiding the double re - computation of force components from the old positions for the active particles , removes a factor of 2 from @xmath153 and the computational cost becomes @xmath154 , which implies an unconditional algorithmic speed - up @xmath155 .",
    "an important conclusion is that an incremental force update is computationally beneficial if the percentage of restrained particles is larger than a threshold @xmath156",
    ". we may thus modify algorithm [ algo arps 1 ] as follows :    * input * : initial conditions @xmath115 . *",
    "output * : @xmath116 + for each particle @xmath57 , initialize the force @xmath117 ; +    finally , we consider the case where the neighbor lists are updated at each time step . ] .",
    "this is not usually done in practical applications , where neighbor lists are updated only after a certain time period which can be computed from the maximal velocity of the particles .",
    "the cost per time step then extends in re - assigning @xmath7 particles into the grid , which gives order of @xmath157 operations . in the ar simulation ,",
    "only active particles need to be re - assigned into the grid .",
    "therefore , the cost per time step computed in becomes @xmath158 assuming that there are @xmath110 neighbors in average , the resulting speed - up is : @xmath159",
    "as explained above , the total speed - up reachable by ar dynamics when estimating observables depends on both the computational complexity of the force update , and the variance of the ar dynamics .    in this section , we first analyze how the percentage of restrained particles depends on the restraining parameters @xmath1 and @xmath2 .",
    "then , we approximate the variance of the ar dynamics by a linear function . combining both",
    ", we finally express the total speed - up as a function of @xmath1 and @xmath2 .",
    "the percentage of restrained particles can be computed from the average occupation of the restrained state of each particle . in other words , it is the probability that the momenta of one particle belong to the restrained region of phase space . for the ar kinetic energy function ,",
    "the average occupation of the restrained state @xmath160 of particle @xmath57 with parameters @xmath1 and @xmath2 is the expected value of the indicator function of the absolute values of all momenta components of one particle being smaller than the restraining parameter @xmath1 .",
    "we denote by @xmath161 the invariant measure which corresponds to the ar kinetic energy function with parameters @xmath1 and @xmath2 and we compute @xmath162 where the momenta normalization constant of the particle @xmath57 is simply @xmath163 , with @xmath164\\right\\}}{\\rm e}^{-\\beta s(p_i)}dp\\\\ & = \\left(2{v_{\\mathrm{min}}}m_i\\right){\\rm e}^{{-\\beta s_{{v_{\\mathrm{min}}},{v_{\\mathrm{max}}}}}}+\\sqrt{2\\pi m_i\\beta^{-1 } } - 2 \\int_{0}^ { m_i   { v_{\\mathrm{max } } } } { \\rm{e}}^{-\\beta\\frac{p^2}{2m_i } } dp \\\\ & \\qquad + \\int_{{m_i{v_{\\mathrm{min}}}}}^{{m_i{v_{\\mathrm{max } } } } } { \\rm{e}}^{-\\beta s\\left(p_i\\right ) } dp+ \\int_{{-m_i{v_{\\mathrm{max}}}}}^{{-m_i{v_{\\mathrm{min } } } } } { \\rm{e}}^{-\\beta s\\left(p_i\\right ) } dp\\ , . \\end{aligned } \\label{z_p er ef}\\ ] ] note that in the standard dynamics @xmath165 .    finally , considering a system consisting of particles with various restraining parameters @xmath166 and @xmath167 , the total average percentage of restrained particles",
    "can be computed as an average over the individual values @xmath168 of each particle . denoting by @xmath169 the number of particles with parameters @xmath1 and @xmath2 and by @xmath170 the set of all chosen pairs @xmath171 , the total average percentage of restrained particles in section [ section algorithmic speed - up ] . ]",
    "@xmath172 $ ] is given by @xmath173 for example , the percentage of restrained particles for a system consisting of a dimer that follows standard dynamics and that is surrounded by solvent particles following ar dynamics with non - zero parameters @xmath1 and @xmath2 is : @xmath174 since , in standard dynamics , the average occupation of the restrained state is zero and @xmath175 .    in conclusion ,",
    "the algorithmic speed - up @xmath76 can be estimated using the computational complexity of the algorithm ( see section [ section algorithmic speed - up ] ) with the speed - up being a function of @xmath176",
    ".    figure [ fig : percrestroverkmaxforvariousdelta3d ] shows , for @xmath15 defined in , the average occupation of the restrained state @xmath160 as a function of @xmath2 for various @xmath177 $ ] such that @xmath178 in dimension three .",
    "we depicted also the value @xmath179 of restrained particles which corresponds to the necessary condition for @xmath180 ( given by or ) .",
    "we observe on this figure that the bigger @xmath181 , the bigger average occupation of the restrained state .",
    "figure [ fig : percentage_restr_part_wrt_temperature ] shows the dependence of @xmath160 on the temperature .",
    "this suggests that the restraining parameters should be scaled with respect to the temperature @xmath182 .",
    "finally , figure [ fig : percrestrpart ] shows @xmath183 as a function of both parameters .",
    "note that the highest value of percentage of restrained particles is located close to the diagonal , _",
    "i.e. _ when the gap between the parameters @xmath1 and @xmath2 is small .     for one particle in 3d",
    "according to for various @xmath2 and various values of the parameter ratio @xmath184 $ ] ( black to orange or bottom to top lines ) such that @xmath185 .",
    "the blue line is the value @xmath179 of restrained particles which corresponds to the necessary condition for @xmath180.,scaledwidth=80.0% ]     of a particle in 3d according to for @xmath2 and @xmath186 and for various temperatures @xmath187 $ ] ( black to orange or top to bottom lines).,scaledwidth=80.0% ]     and @xmath2 .",
    "_ we considered the system described in section [ section numerical examples ] with the ar kinetic energy function chosen according to .",
    "we computed the percentage of restrained particles for various values @xmath188 .",
    ", scaledwidth=80.0% ]      in @xcite , it was proved that there exists a regime in which the variance from the ar dynamics simulations can be approximated by a linear function of the restraining parameters ( see ( * ? ? ?",
    "* proposition 4.3 ) ) : there exists @xmath189 small enough such that for @xmath190 there exist constants @xmath191 such that for @xmath192 $ ] @xmath193    the total speed - up of the wall - clock time needed to reach a certain statistical precision can hence be expressed in terms of the restraining parameters using as @xmath194 the gap between the restraining parameters @xmath1 and @xmath2 should be big enough to ensure a smooth transition between the full and the restrained dynamics and prevent numerical instabilities .",
    "note , however , that in the numerical experiments performed in ( * ? ? ?",
    "* section 5.1 ) , where the variance was computed for a simple 1d system , it was shown that the relative increase of the variance with respect to the full - dynamics parameter @xmath2 is more significant than with respect to the restraining parameter @xmath1 .",
    "this result is not surprising , since the gap between the parameters smooths out the dynamics , which translates into an increase of correlations .",
    "this implies that the optimal strategy is to choose the gap between the parameters as small as possible while still maintaining the numerical stability and keeping the systematical error sufficiently low ( i.e. the error on the computed averages , arising from the fact that @xmath195 ( @xcite ) ) . at the same time",
    ", the restraining parameters should give the desired percentage of restrained particles @xmath196 .",
    "for example , in the case when @xmath197 , the relative derivative of the restrained energy of one particle @xmath160 with respect to @xmath2 , almost vanishes after the value @xmath198 .",
    "hence this is a critical value after which the growth of function @xmath160 slows down ( see again figure [ fig : percrestroverkmaxforvariousdelta3d ] ) . having in mind that the variance locally increases with respect to @xmath2 , this implies that , in this region , the efficiency of the algorithmic speed - up does not grow fast enough with increasing @xmath2 , while the variance might be still growing . in this case , either the gap @xmath181 should be chosen smaller , or one must ensure that the variance does not grow too fast , in order to compensate the variance growth with the algorithmic speed - up .",
    "it is easy to estimate the algorithmic speed - up @xmath98 .",
    "the problematic part is to estimate the sensitivity of the variance of a given observable with respect to the modification by the restrained dynamics , i.e. the estimation of @xmath199 and @xmath200 in .",
    "this can be done by a linear interpolation in the pre - processing part , which should involve at least three ar dynamics simulations in order to estimate the constants @xmath199 and @xmath200 .",
    "finally , allows to have a complete expression for the total speed - up as a function of the parameters @xmath1 and @xmath2 . choosing @xmath201 as small as possible",
    ", one can find the optimal @xmath2 which produces the highest total speed - up ( see section [ section numerical examples ] for a numerical example ) .",
    "we thus propose the following guidelines to estimate the total speed - up @xmath80 with respect to the parameters @xmath1 and @xmath2 :    1 .",
    "choose the order ( scale ) of the restraining parameters @xmath1 and @xmath2 for each particle according to its mass , its role in the system and the temperature @xmath182 .",
    "2 .   choose the minimal gap @xmath181 between @xmath1 and @xmath2 with respect to the numerical stability .",
    "3 .   compute the percentage of restrained particles @xmath196 according to , and .",
    "4 .   compute the algorithmic speed - up @xmath98 according to the implementation algorithm according to section [ section algorithmic speed - up ] .",
    "5 .   estimate the linear approximation of the variance @xmath202 for the observable  @xmath203 .",
    "6 .   find the optimal value of @xmath2 ( with @xmath204 ) by maximizing @xmath205 .",
    "in order to illustrate the theoretical results from the previous section , we consider a system of @xmath206 particles consisting of a dimer ( @xmath207 ) surrounded by 62 solvent particles ( @xmath208 ) in space dimension @xmath209 . this model is representative of many applications in biology , chemistry or physics , where the macroscopic property only depends on a small part of the simulated system .",
    "for example , in simulation of a protein in solvent the interest lies in computation macroscopic properties of the protein ( see for instance @xcite ) .",
    "we use periodic boundary conditions with box - length such that the density is @xmath210 .",
    "we consider reduced units such that particles have identical masses @xmath211 and the temperature is chosen so that @xmath212 .",
    "the friction constant in the langevin equations is @xmath213 .",
    "solvent particles interact with each other and with the dimer particles by a truncated lennard - jones potential with parameter @xmath214 with a cut - off distance @xmath215 .",
    "dimer particles interact with each - other with a double - well potential ( with width @xmath216 and height @xmath217 ) . for a more precise formulation ,",
    "see section 5.2 in @xcite or @xcite . we discretize the modified langevin equations by a second - order scheme ( obabo ) with time step size @xmath218 and perform @xmath219 time steps .",
    "we use neighbor - lists based on the cut - off distance of the lennard - jones potential @xmath220 , according to algorithm [ algo arps 2 ] .",
    "the average number of neighbors is estimated as @xmath221 .",
    "we run one reference simulation in the standard dynamics .    in the ar simulations",
    ", we consider non - zero restraining parameters on the solvent only , and we let dimer particles follow the standard dynamics . in order to demonstrate the dependence of the total speed - up @xmath80 on the restraining parameters @xmath1 and @xmath2 , we consider the following observables : the dimer distance @xmath222 , the dimer potential @xmath223 and the kinetic temperature @xmath224 .",
    "the first two observables only depend on the positions of the dimer particles , hence we expect that the variance will not be much modified even for large restraining parameters .",
    "the function @xmath225 depends on the momenta of all particles @xmath226 and satisfies  @xmath227 .",
    "the knowledge of the exact average allows us to verify that the time step size @xmath44 is chosen sufficiently small in order to make the systematic error on the averages smaller than @xmath228 even for @xmath229 . the asymptotic variance @xmath43 of a time average for a given observable a is estimated by approximating the integrated auto - correlation function by a trapezoidal rule ( see section 5.2 in @xcite ) .",
    "first , we confirm theoretical predictions for the algorithmic speed - up @xmath76 . in our simulations",
    ", we measure the time per force update , as well as the time per time step .",
    "we compare the measured speed - up , which is a ratio of the measured time in the standard dynamics and the ar dynamics , with the estimated speed - up in the force update and for the overall time step .",
    "figure [ fig : comparisonspeeduptimepertimestepandforceupdatenice ] shows that the predicted algorithmic speed - up corresponds to the measured algorithmic speed - up in our simulation .",
    "figure [ fig : varianceallbig ] plots the estimated relative variation of the variance of three observables as a function of the parameters @xmath2 for @xmath185 with @xmath230 .",
    "we confirm the results showed in @xcite : the variance of @xmath231 is modified more drastically than the variance of observables measured on the dimer with growing @xmath2 .",
    "finally , combining the algorithmic speed - up @xmath232 with the variance @xmath233 , we estimate the total speed - up according to .",
    "this is depicted on figure [ fig : total_speedupbig ] .",
    "we again consider @xmath234 in order to demonstrate the impact of the gap between the parameters @xmath201 on the total speed - up @xmath80 : the smaller the gap , the larger @xmath80 becomes . also , it holds that @xmath100 for the dimer observables only ( up to @xmath235 ) , and not for the global observable @xmath236 .",
    "this supports the idea that we can speed - up the computation of macroscopic properties that depend on unrestrained degrees of freedom , i.e. those of the dimer in this example .    .",
    "we measured the algorithmic speed - up @xmath76 of the forces update function and the total time step , with respect to the parameters @xmath2 and @xmath237 .",
    "the computed speed up in forces update corresponds to the measured one , as well as the algorithmic speed - up per time step .",
    "note that the measured @xmath76 of the forces update is equal to one for small values of @xmath2 , which is due to the implementation of the condition on the adaptive forces update as proposed in algorithm  [ algo arps 2 ] which assures @xmath238.,scaledwidth=80.0% ]    .",
    "we measured the variance of the dimer distance @xmath239 ( green ) , the dimer potential @xmath240 ( black ) and the temperature @xmath236 ( blue ) in various parametrization of the ar dynamics .",
    "we plotted the relative deviation of the variance from the variance in the standard dynamics for parameters @xmath2 with @xmath241 .",
    "note that the variance is more perturbed for @xmath236 than for the other two observables , which depend only on the dimer particles.,scaledwidth=80.0% ]     given by for system described in section [ section numerical examples ] .",
    "the algorithmic speed - up as well as the variance ( see figure [ fig : varianceallbig ] ) were obtained directly from the measurements in the simulation , _",
    "i.e. _ not from the analytical formula . on the plot",
    "the results are showed for three observables ( various color and line styles ) .",
    "the various markers correspond to different value of @xmath181 : the marker `` open circles '' corresponds to @xmath242 , the marker `` star '' corresponds to @xmath241 and the marker `` plus sign '' corresponds to @xmath243 , such that @xmath201 .",
    "the bigger is @xmath181 , the more particles are restrained and hence the bigger is the algorithmic speed - up . ,",
    "scaledwidth=80.0% ]    it is easy to compute the algorithmic speed - up @xmath76 .",
    "the problematic part is the determination of the sensitivity of the observable on the restraining parameters ( see again figure [ fig : varianceallbig ] ) .",
    "since the variance can be approximated by a linear function of the restraining parameters at least locally , we can compute the slopes @xmath244 such that such that @xmath204 . ]",
    "@xmath245 from three ar simulations with parameters @xmath246 .",
    "more precisely , this allows us to approximate the total speed - up as @xmath247 we choose @xmath248 and we estimate the slope @xmath244 .",
    "table [ table variance three points ] shows the comparison with the slope directly obtained from simulations with fixed @xmath243 and @xmath241 for @xmath249 $ ] ( see figure [ fig : varianceallbig ] ) .",
    ".comparison of the relative deviation of the variance , obtained from linear interpolation of three points and the interpolation of values obtained from many simulations . [ cols=\"<,<,<\",options=\"header \" , ]     this confirms that it is possible to capture the quantitative behavior of the relative slope @xmath250 from only three ar simulations .",
    "note that the same approach could be used to determine the behavior of the variance as a function of different temperatures by measuring the variance only at a few points .",
    "we have obtained an estimation of the variance @xmath233 .",
    "this allows us to express the total speed - up @xmath80 as a function of @xmath1 and @xmath2 , which is depicted on figure [ fig : total_speedup_analytical ] for @xmath239",
    ".    it would be possible to push the parameters in figure [ fig : total_speedup_analytical ] in order to achieve a higher speed - up , up to the moment when the variance increase would start countering the algorithmic speed - up . since the total speed - up depends on the simulated system and a concrete observable function , it does not make much sense to try and find the limit for our toy model . moreover , for large parameters values , it is difficult to converge the quadratures in and computationally too expensive to obtain the estimates numerically in the sense of figure [ fig : total_speedup_analytical ]",
    ". nevertheless , we believe figure [ fig : total_speedup_analytical ] provides a good understanding of the qualitative behavior of the total speed - up .     for the observable dimer distance @xmath239 with respect to parameters @xmath1 and @xmath2 ( @xmath251 ) .",
    "the variance was estimated from three points as a linear function of @xmath1 and @xmath2 and we used the analytical estimation of @xmath76 according to .",
    "only @xmath100 is plotted.,scaledwidth=80.0% ]",
    "we have analyzed the speed - up achievable by ar langevin dynamics in the estimation of thermodynamics properties by time averages , in particular as a function of the restraining parameters @xmath1 and @xmath2 .",
    "the final formula consists of two parts : the algorithmic speed - up and the modification of variance .",
    "the approach proposed in this work allows us to choose the parameters of the method .",
    "the theoretical results are confirmed by numerical experiments .",
    "we expect that even higher total speed - ups can be achieved when the complexity of the incremental force update algorithm is improved , for instance by avoiding the double calculation of inter - particle forces ( in the add and subtract steps )",
    ".    the stability of the ar dynamics can be rigorously analyzed and improved by introducing a metropolis - hasting step , which is the purpose of future work ( see @xcite ) .",
    "furthermore , the ar dynamics can be extended to simulations under different temperatures , and hence combined with other methods , such as parallel replica exchange ( @xcite ) .",
    "another natural extension is to explore the dynamical properties of the modified dynamics , which is not obvious at first sight .",
    "stephane redon and zofia trstanova gratefully acknowledge funding from the european research council through the erc starting grant n. 307629 .",
    "we also thank gabriel stoltz and svetlana artemova for helpful advice ."
  ],
  "abstract_text": [
    "<S> we consider adaptively restrained langevin dynamics , in which the kinetic energy function vanishes for small velocities . </S>",
    "<S> properly parameterized , this dynamics makes it possible to reduce the computational complexity of updating inter - particle forces , and to accelerate the computation of ergodic averages of molecular simulations . in this paper , we analyze the influence of the method parameters on the total achievable speed - up . </S>",
    "<S> in particular , we estimate both the algorithmic speed - up , resulting from incremental force updates , and the influence of the change of the dynamics on the asymptotic variance . </S>",
    "<S> this allows us to propose a practical strategy for the parametrization of the method . </S>",
    "<S> we validate these theoretical results by representative numerical experiments .    </S>",
    "<S> langevin dynamics , ergodic averages , variance , adaptive methods , computational complexity , sampling efficiency </S>"
  ]
}
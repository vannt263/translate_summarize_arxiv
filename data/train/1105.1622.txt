{
  "article_text": [
    "we are given a bin containing @xmath0 balls colored with two colors , e.g. , ek red and blue . at any stage , we can choose any @xmath1 of the balls and ask the question `` do these balls have the same color ? '' .",
    "the aim is to produce a ball of the _ majority color _ ( meaning that the number of balls with that color is strictly greater than that of the other color ) , or to state that there is no majority ( i.e. there is the same number of red and blue balls ) using as few questions as possible .",
    "we are considering the worst case problem , that is our aim is to find the number of questions the fastest algorithm uses in the worst case",
    ".      in computing the majority there are two participants : a _ questioner _ ( denoted by @xmath3 ) and an _ oracle _ ( or _ adversary _ ) denoted by @xmath4    ) , an oracle ( or adversary ) ( @xmath4 ) and a @xmath1-query input.,height=94 ]    ( see figure  [ fig : oracle ] ) .",
    "the questioner asks questions on the status of the color of the balls by providing the oracle with @xmath1 balls and the oracle provides a reply which , depending on the type of the oracle , is related to the distribution of colors of the balls concerned .    although the answer of the oracle depends on the @xmath1-tuple provided by the questioner , it is otherwise _ permutation - independent _ , i.e. , the answer is independent of the order of the balls .",
    "moreover , the balls are endowed with distinct identities ( say , integers @xmath5 ) .",
    "notice that in the course of querying the questioner is never allowed to see the color of any ball but merely relies on the answer provided by the oracle .",
    "[ [ majority - problem . ] ] majority problem .",
    "+ + + + + + + + + + + + + + + + +    given @xmath0 balls of two colors , for a solution to the majority problem we are interested to determine    1 .   whether or not there is a color occurring in the majority ( i.e. , more than half ) of the balls , and 2 .",
    "if indeed there is majority , to output a ball having the majority color .",
    "in addition , we would like to minimize the number of queries required .",
    "[ [ query - models . ] ] query models .",
    "+ + + + + + + + + + + + +    next we define two query models which will be considered in the sequel . in each model",
    "the input to the oracle is a set @xmath6 of @xmath1 balls .    1",
    ".   * y / n model : * the answer is either yes   or no .",
    "yes   means that all balls have the same color , no   means that the balls in the @xmath1-tuple do not have the same color .",
    "* pairing model : * the answer to a query is either yes   or no .",
    "yes   means that all balls have the same color .",
    "no   means that not all the balls have the same color and to show this , ( any ) two balls of different color are also provided .",
    "let @xmath7 denote the minimum number of queries which are sufficient to solve the majority problem for @xmath0 balls colored with two colors using @xmath1-queries in the _ y / n _ and _ pairing _ models , respectively .",
    "it is obvious that @xmath8 ( assuming that these numbers exist ) .",
    "our study is a natural generalization of the well - known _ majority problem _",
    "@xcite where at any stage _ two _ balls @xmath9 and @xmath10 are chosen and the question is `` do @xmath9 and @xmath10 have the same color ? '' .",
    "it is obvious that @xmath11 and saks and werman @xcite showed that @xmath12 , where @xmath13 denotes the number of 1 s in the binary representation of @xmath0 .",
    "later alonso , reingold , and schott @xcite also gave the solution for the average case .",
    "aigner @xcite introduced several variants and generalizations of the majority problem .",
    "in particular , in the @xmath14-majority game one has to show a @xmath1-majority ball @xmath15 ( that is , there are at least @xmath1 balls colored like @xmath15 ) , or declare there is no @xmath1-majority .",
    "other variations of the majority problem include the case where more than two colors are available .",
    "fisher and salzberg @xcite studied the majority problem when the number of colors is any integer up to @xmath0 . in this case",
    "the majority color is the color such that there are at least @xmath16 balls of that color .",
    "they solved the problem by showing that @xmath17 comparisons are necessary and sufficient .",
    "another natural generalization is the plurality problem where the goal is to identify a ball of the dominant color ( i.e. , the one occurring more often than any other ) . in @xcite linear upper and lower bounds were given for 3 colors .",
    "the currently best result for any number of colors was given in @xcite .",
    "the authors of @xcite studied also the oblivious versions both for the majority and the plurality problem .",
    "in oblivious strategies the questioner has to ask all questions in advance before getting any answer from the oracle .",
    "finally , bounds for randomized algorithms can be found in @xcite .",
    "section  [ existsec ] discusses the problem of existence of a solution to the majority problem in the models proposed . in section  [ yn ]",
    "we are considering the y / n model for @xmath18 and give lower and upper bounds for @xmath19 whose difference is between 1 and 3 , depending on the residue of @xmath0 modulo 4 .",
    "section  [ pairing ] investigates the pairing model .",
    "here we give a general lower bound for @xmath20 and compute the precise value of @xmath21 , namely @xmath22",
    "before trying to compute @xmath20 and @xmath23 we should discuss whether these numbers exist at all , since it may happen that asking all possible queries is not enough for * q * to solve the problem .",
    "it is clear that @xmath0 should be at least @xmath1 and if @xmath24 , then the only possible query is enough in both games for @xmath25 and in the y / n model for @xmath18 , but not in the other cases .",
    "for @xmath26 we prove that @xmath23 and @xmath20 exist if and only if @xmath27 and @xmath28 , respectively .",
    "[ szeptetel ] let @xmath26 .    1 .",
    "the number @xmath23 exists if and only if @xmath27 .",
    "the number @xmath20 exists if and only if @xmath28 .    the proof can be found in the appendix .",
    "it might be worth observing that in the y / n model while a no  answer on a pair of balls tells us that these balls have different colors and consequently they can be discarded by the questioner , when the number of balls is greater than two then a no  answer only tells us that there are ( at least ) two balls of different color .",
    "therefore , if on the one hand it seems more advantageous comparing more balls at a time , on the other hand it is more challenging for the questioner to exploit a less informative no  answer .",
    "first we give upper bounds and next we discuss lower bounds on the number of queries .",
    "we conclude with some examples .",
    "in this section we give an algorithm for solving the majority problem .",
    "we start with a straightforward extension of a result of saks and werman .",
    "[ oddlm ] for all @xmath0 odd we have @xmath29 .",
    "the proof is basically the same as the proof of saks and werman for @xmath25 ; we include it in the appendix for completeness .",
    "let us now describe our algorithm .",
    "[ [ algorithm - majority_3 . ] ] * algorithm majority@xmath30 .",
    "* + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath31 . consider an arbitrary partition of the @xmath0 balls in @xmath32 groups @xmath33 of size @xmath34 each and let @xmath35 be the group of the @xmath36 remaining balls .",
    "for @xmath37 , we make all @xmath38 possible triple queries on the four balls of @xmath39 till we get a yes  answer .",
    "there are two cases :    * \\(a ) for some @xmath40",
    "we get a yes  answer on at least one of the @xmath34 triple queries involving balls of @xmath41 ; * \\(b ) we get always no  answers on all the @xmath42 comparisons .    in case ( a )",
    ", we can discard all balls contained in @xmath43 as they have no effect for determining the majority .",
    "let @xmath44 , and @xmath45 the three balls in @xmath41 that have the same color .",
    "notice that we also know whether or not the color of the fourth ball @xmath46 in @xmath41 is the same as the color of the other three balls .",
    "the number of queries required up to this point is @xmath47 . from now on ,",
    "all the remaining @xmath48 balls are compared , one at a time , with two balls of identical color , e.g. @xmath9 and @xmath10 .",
    "it is clear that this way we can count the number of balls colored like @xmath9 and @xmath10 and the number of balls colored like a different ball @xmath49 , if it exists .",
    "this will allow us to solve the problem by using a total number of at most @xmath50 queries .    in case",
    "( b ) , we have found that there is an equal number of red and blue balls among the @xmath42 balls in @xmath51 .",
    "therefore , in this case , the majority is determined by the remaining @xmath52 balls in set @xmath35 .",
    "hence , we have to determine , for every @xmath53 , the number @xmath54 .",
    "we limit our analysis to @xmath55 and @xmath56 as , in view of lemma  [ oddlm ] , we have @xmath57 and @xmath58 . if @xmath59 , the algorithm can already state that there is no majority . if @xmath60 , the problem reduces to ascertain whether these two remaining balls have the same color ( in which case any of them is in the majority ) or not ( which implies that there is no majority ) . in order to do so , we compare the 2 remaining balls ( call them @xmath61 and @xmath62 ) with three arbitrary balls @xmath63 ( one at a time ) from @xmath64 .",
    "namely , we perform the following queries : @xmath65 , @xmath66 and @xmath67 . if @xmath61 and @xmath62 are identically colored , we obtain a yes  ( recall that , since we are in case ( b ) , there must be two different balls among @xmath44 , and @xmath45 ) ; otherwise we always obtain no  answers .",
    "therefore , in both cases we can solve the ptoblem using at most 3 additional queries .    in conclusion",
    ", we have proved the following .",
    "[ ub ] let @xmath68 for some @xmath69 and @xmath70 .",
    "* @xmath71 ; * @xmath72 ; * @xmath73 ; * @xmath74",
    ".    the next lemma will be useful in the proof of the lower bound .",
    "[ inumber ] with at most one additional comparison , algorithm majority@xmath30 is able to output a number @xmath75 such that there are @xmath75 balls of one color and @xmath76 of the other color .",
    "the proof of lemma  [ inumber ] can be found in the appendix .      in the sequel ,",
    "a _ coloring _ is a partition @xmath77 of the set of balls into two sets @xmath35 and @xmath78 , where @xmath35 is the set of red balls and @xmath78 the set of blue balls .    in this section",
    "we will give a lower bound on the number of queries needed to determine the majority .",
    "our aim will be to construct a worst case input coloring for any unknown correct algorithm that solves the majority problem .",
    "we use the usual adversary lower bound technique .",
    "we say that an adversary s strategy _ admits a coloring _ if such a coloring is consistent with all the answers provided by the adversary .",
    "as long as the strategy devised by the adversary admits alternative possible colorings that are consistent with at least two different possible solutions for the majority problem , the algorithm can not correctly give its output .",
    "the goal of the adversary is to maximize , with its strategy of answers , the number of rounds until the algorithm can correctly give its output .",
    "we will first consider the case of an even number @xmath0 of balls . given a sequence of queries @xmath79 and a positive integer @xmath80 ,",
    "let us define the following property :    @xmath81 for all @xmath82 $ ] , with @xmath83 , there exists @xmath84 such that one of the following conditions hold :    @xmath85 @xmath86 ;    @xmath87 @xmath88 .",
    "* the adversary s strategy . *",
    "the strategy followed by the adversary is defined as follows .",
    "to every query @xmath89 , the adversary replies no as far as @xmath90 does not hold .",
    "let @xmath75 be the first index for which @xmath91 holds , if it exists .",
    "then there exists a set @xmath82 $ ] , with @xmath83 , such that @xmath92 and @xmath93-x$ ] for @xmath94 ( this is because @xmath75 is the smallest index such that @xmath91 holds ) , and either @xmath95 or @xmath96 ( these are conditions @xmath85 and @xmath87 on @xmath91 ) . from this point forth , the adversary replies yes  to @xmath97 and all subsequent queries @xmath98 if all three elements @xmath63 belong to the same set @xmath99 or @xmath100 , and replies no  to all the other queries .    [ even ]",
    "let @xmath101 for some @xmath102 .",
    "any algorithm that solves the majority problem on @xmath0 balls uses at least @xmath103 queries .",
    "assume that @xmath104 is the sequence of queries that the algorithm produces before giving its output .",
    "we distinguish two main cases : either @xmath105 does not hold or @xmath105 holds .    * case 1 : * _ @xmath105 does not hold_. in this case there exists @xmath82 $ ] , with @xmath83 , such that for all queries @xmath104 neither @xmath85 , nor @xmath87 holds . according to its strategy , the adversary replies always noin this case .    if the algorithm states that there is a majority , the algorithm actually has to show a ball in @xmath99 or in @xmath106 \\setminus x$ ] .",
    "the adversary s strategy admits the following coloring : color red all the balls in @xmath99 and blue all the remaining balls .",
    "indeed , such a coloring is consistent with all the no  answers provided by the adversary , as since property @xmath105 does not hold , there is no query entirely contained in @xmath99 or in @xmath100 .",
    "this means that there is no majority , which contradicts the algorithm .",
    "let us assume the algorithm states that there is no majority .",
    "suppose that there exists a ball @xmath61 in @xmath99 such that @xmath107 for every @xmath108 . in this case , the adversary s strategy allows us to produce the following coloring : color red all the balls in @xmath109 and blue the others .",
    "indeed , it is easy to observe that , since @xmath107 for every @xmath108 , such a coloring is consistent with the no  answers provided by the adversary to each @xmath97 for @xmath108 .",
    "this implies that there is a majority : once again the claim of the algorithm is contradicted .",
    "the case in which there exists a ball @xmath61 in @xmath100 such that @xmath110 for every @xmath108 , is similar .",
    "it remains to analyze the case when both the following conditions hold :    \\(1 ) for every @xmath111 there exists a query @xmath97 for some @xmath112 , such that @xmath113 ;    \\(2 ) for every @xmath114 there exists a query @xmath97 for some @xmath112 , such that @xmath115",
    ".    condition ( 1 ) implies that the sequence of queries @xmath116 must contain a query @xmath117 for every @xmath111 and for some @xmath118 .",
    "analogously , condition ( 2 ) implies that there must be a query @xmath119 for every @xmath120 and for some @xmath121 . since all these queries are clearly distinct , @xmath122 .",
    "* case 2 : * _ @xmath105 holds_. in this case , the adversary replies no  to all the queries @xmath89 , as far as @xmath90 does not hold , and replies yes  to the first query @xmath97 for which @xmath91 holds . since @xmath91 holds , while for @xmath123 @xmath90 does not hold , there exists @xmath124 $ ] , @xmath125 , such that either @xmath126 or @xmath127 , and @xmath128    in the following , we assume without loss of generality that @xmath126 .",
    "notice that this time the adversary s strategy admits any coloring consistent with all the no  answers given to @xmath129 and the yes  answer to @xmath97 .",
    "if the algorithm concludes that there is a majority , it can be easily contradicted by observing that the adversary s strategy admits a coloring that colors red all the balls in @xmath99 and blue all the others .",
    "therefore , suppose the algorithm states that there is no majority . if there exists a ball @xmath130 ( resp .",
    "@xmath131 ) such that for every @xmath132 , @xmath133 ( resp .",
    "@xmath134 ) , the adversary s strategy admits the following coloring .",
    "color red all the balls in @xmath135 ( resp .",
    "@xmath136 ) and blue the balls in @xmath109 ( resp .",
    "@xmath137 ) , so to have a majority in the latter set .",
    "this contradicts the algorithm s claim .",
    "it remains to analyze only the case when both the following conditions hold :    ( 1 * ) for every @xmath130 there is a query @xmath89 for some @xmath138 , such that @xmath139 ;    ( 2 * ) for every @xmath131 there is a query @xmath89 for some @xmath138 , such that @xmath140 .",
    "let @xmath141 and @xmath142 be the set of queries necessary for ( 1 * ) and ( 2 * ) to be satisfied , respectively .",
    "condition ( 1 * ) implies that the sequence of queries @xmath143 must contain at least a query @xmath144 for every @xmath130 and for some @xmath145 .",
    "condition ( 2 * ) implies that there must be also at least a query @xmath146 for every @xmath120 and for some @xmath147 .",
    "therefore , @xmath148 of queries that involve balls in @xmath149 and are not considered in @xmath141 and @xmath142 .",
    "the query @xmath97 clearly belongs to @xmath150 , so @xmath151 , such that @xmath152 and @xmath153 .",
    "in this case , @xmath150 must contain at least another query @xmath154 that contains some element from @xmath98 and two elements from @xmath100 , otherwise the adversary s strategy would admit a coloring where all the balls in @xmath155 are red , which would imply the existence of a majority in this set .",
    "hence , @xmath156 and by ( [ first ] ) the total number of queries is @xmath157 .",
    "* case ( ii ) * : there exists a query @xmath158 such that @xmath152 and @xmath153 .",
    "let @xmath159 be the number of queries involving one ball from @xmath97 and two balls from @xmath100 .",
    "we may assume that @xmath160 , otherwise @xmath161 and the proof would be complete .",
    "if @xmath160 , we must have that    ( * ) there exist two balls @xmath9 and @xmath10 in @xmath97 such that there is no query involving @xmath9 or @xmath10 with two balls from @xmath100 .",
    "let us consider @xmath162 and recall that @xmath152 and @xmath153 . by ( * )",
    "we have that    ( * * ) there exists a ball @xmath163 such that there is no query @xmath164 with @xmath165 .    moreover , since we are assuming that @xmath166 , condition ( 2 * ) implies that    ( * * * ) for every @xmath114 there is _ exactly one _ query @xmath167 that includes @xmath61 and some @xmath168 .",
    "let @xmath169 .",
    "we will show that there is no query among @xmath170 that is entirely contained in @xmath171 or @xmath172 , which contradicts the hypothesis that @xmath105 holds with @xmath75 being the smallest index such that for all @xmath82 $ ] , with @xmath83 , there exists @xmath84 such that either @xmath86 or @xmath173 .    since now @xmath174 and @xmath175",
    ", we can easily verify that @xmath176 and @xmath177 .",
    "it remains to show that no query among @xmath178 is entirely contained in @xmath171 or @xmath172 .    as a consequence of ( *",
    "* ) , there is no query involving @xmath179 entirely contained in @xmath172 .",
    "moreover , by ( * * * ) @xmath180 must be the only query involving @xmath152 and two balls in @xmath99 .",
    "hence , there is no query involving @xmath61 entirely contained in @xmath171 .",
    "let @xmath181 be the set of remaining queries to analyze , i.e. the queries not involving @xmath179 nor @xmath61 . by the definition of @xmath171 and @xmath181",
    ", it is straightforward to observe that for all @xmath182 , @xmath183 ( resp .",
    "@xmath184 ) if and only if @xmath185 ( resp .",
    "@xmath186 ) . therefore ,",
    "since @xmath75 is the smallest index such that @xmath91 holds , there is no query in @xmath181 entirely included in @xmath171 or in @xmath172 .",
    "this is a contradiction and the proof is now complete .",
    "[ odd ] for all @xmath0 odd we have @xmath187 .",
    "the proof is based on lemmas [ inumber ] and [ even ] and can be found in the appendix .",
    "now we can state the main result in the following theorem .",
    "[ mainthm ] let @xmath68 for some @xmath69 and @xmath70 .",
    "we have :    * @xmath188 ; * @xmath189 ; * @xmath190 ; * @xmath191 .",
    "the proof follows immediately by combining lemma  [ ub ] with lemmas  [ even ] and [ odd ] .",
    "tightening the bounds of theorem  [ mainthm ] so as to compute the exact value of @xmath19 does not seem to be easy , but we provide the exact values of @xmath192 for @xmath193 in the appendix .",
    "in this section we focus on the pairing model .",
    "first we prove a lower bound on @xmath1-tuples that does not depend on @xmath1 and then show that the bound is tight for @xmath194 .",
    "first we prove a lemma .",
    "[ lemma1 ] let @xmath195 .",
    "then @xmath196    first we describe a strategy for the adversary which guarantees that the number of queries the questioner should use is at least @xmath197 if @xmath0 is odd .",
    "the strategy is quite simple , * a * always answers no   whenever it is possible , that is , if it is not known before the query that all @xmath1 balls asked have the same color ( in which case the answer is yes , of course , but such a question will never be asked ) . *",
    "a * also has to show two balls of different color ; these can be any pair of balls that may have different color before the query .    to see that * q * has to use at least @xmath197 queries even against this simple strategy , we use graphs to describe the knowledge of * q * ( this is the same graph we use in the proof of theorem [ szeptetel ] ) . in ths pairing model to every negative answer of * a * there corresponds a pair of balls having different colors .",
    "let these pairs be the edges of a graph @xmath198 , whose vertices are the balls .    by the strategy of * a",
    "* there exists a coloring of the balls ( with colors blue and red ) such that there is no edge between two balls of the same color ; therefore the graph @xmath198 is bipartite .",
    "suppose now that * q * can show a ball of majority color .",
    "this is possible if and only if there is a vertex @xmath61 of @xmath198 that always appears in the greater part in every bipartition of @xmath198 .",
    "( notice that now there is a majority color , since @xmath0 is odd . )",
    "now it is easy to see that @xmath198 has at least @xmath199 edges ( for completeness this appears in the appendix as lemma  [ belsolemma1 ] ) , thus the number of queries is also at least @xmath199 .",
    "now we slightly modify the above strategy to obtain the lower bound for @xmath0 even .",
    "* q * can declare that there is no majority if and only if in every bipartition of @xmath198 the two parts have the same size , which is impossible if there is an isolated vertex in @xmath198 .",
    "suppose that * a * answers the first @xmath200 questions the same way as above .",
    "we consider two cases .",
    "[ [ case-1 . ] ] * case 1 . * + + + + + + + + +    the edges of @xmath198 after the @xmath200 queries are not independent .",
    "now the answer to the next query is also answered the same way as above .",
    "since there is an isolated vertex in @xmath198 ( we have @xmath201 edges that are not independent ) , * q * can not declare that there is no majority .",
    "moreover , no vertex @xmath61 can always appear in the greater part in every bipartition of @xmath198 , because there are only @xmath201 edges in @xmath198 ( in the part where such an @xmath61 would appear , there would be at least @xmath16 non - isolated vertices ) .",
    "this completes the proof in case 1 .",
    "[ [ case-2 . ] ] * case 2 .",
    "* + + + + + + + + +    the edges of @xmath198 after the @xmath200 queries are independent .",
    "now * a * has to be careful , since an edge between the two remaining isolated vertices would guarantee that there is no majority .",
    "so the edge is drawn somewhere else , which is possible , because @xmath26 and there is no cycle in @xmath198 ( that is , * a * may draw the edge between any two of the @xmath1 vertices of the query ) .",
    "now the situation is the same as in case 1 .",
    "this completes the proof .",
    "now we prove that the bound we have just proved in lemma  [ lemma1 ] is tight for @xmath18 .",
    "this is interesting because of several reasons .",
    "the strategy of * a * that gave the lower bound is quite simple and the lower bound is much smaller than the value of @xmath202 ( as well as @xmath19 ) .",
    "however , the most surprising is that the function @xmath203 is not increasing , since @xmath204 and @xmath205 .",
    "actually , we have seen that @xmath206 is not strictly increasing and the same proof shows that the same is true for @xmath207 : @xmath208 and @xmath209 .",
    "nevertheless , a complexity function that is not even increasing is quite unusual in search theory .",
    "the main theorem of this section is the following .",
    "[ pairthm ] let @xmath210 .",
    "then @xmath22    we just have to show that the bounds in lemma [ lemma1 ] are tight , that is , give an algorithm for the questioner * q * that uses @xmath211 queries if @xmath0 is even and @xmath197 queries if @xmath0 is odd .",
    "the algorithm consists of two main parts of which the first is the formation of bins with balls and is similar to the one in @xcite .",
    "initially place all the @xmath0 balls in @xmath0 different bins and at each step do the following .    1 .",
    "select any @xmath2 equal size bins and pick one representative from each of them and query these @xmath2 balls . 2 .",
    "if the answer is yes , then merge the bins into one new bin .",
    "3 .   if the answer is no , then * a * specifies two balls of different colors .",
    "remove the two corresponding bins .",
    "4 .   iterate the process until there are no @xmath2 bins of equal size .",
    "it is obvious that all remaining bins have size a power of @xmath2 .",
    "the process stops because we can no longer find @xmath2 bins of equal size , that is , each bin size occurs at most twice .",
    "it is easy to check that to build a bin of size @xmath212 the questioner * q * needs @xmath213 queries , while to remove two bins of size @xmath212 each , the questioner * q * needs exactly @xmath212 queries . thus if the total number of removed balls is @xmath214 , then * q * used @xmath215 queries in order to get rid of them .",
    "this means that after the first main step of the algorithm , * q * has @xmath216 balls in bins whose sizes are powers of @xmath2 , bin sizes occur at most twice and * q * used @xmath215 queries to remove the @xmath214 balls and @xmath213 queries to build a bin of size @xmath212 .",
    "in other words , if the bin size @xmath217 occurs @xmath218 times ( @xmath219 ) then the sequence @xmath220 is the ternary expansion of @xmath216 ( where @xmath221 ) and * q * used @xmath222 queries altogether .",
    "it is obvious that if @xmath223 ( which occurs iff @xmath224 ) , then there is no majority , if @xmath225 , then the corresponding bin contains majority type balls , while if @xmath226 , then * q * can not show a majority type ball , neither can prove that there is no majority at the moment , so we may suppose that @xmath227 ( otherwise we are done , since @xmath228 , so for the number of queries we have that @xmath229 )",
    ".    now starts the second part of the algorithm , where * q * tries to eliminate the remaining bins .",
    "if @xmath230 , then * q * chooses one ball from both bins of size @xmath231 and a third ball from one of these bins and queries this triple . given the answer , * q * learns if the two biggest bins have balls of the same color or not .",
    "if the answer is yes , then all balls in these two bins are clearly in majority , if the answer is no , then * q * removes the two bins .",
    "iterate this process if necessary ( if the greatest bin size occurs twice ) , until it is possible , that is , while @xmath230 . to remove two bins of size @xmath212 each ,",
    "* q * still needs exactly @xmath212 queries , therefore it is clear that at the end of the second part * q * can either solve the problem ( that is , find a majority ball or show that there is no majority ) using at most @xmath201 queries or * q * has just two bins of size @xmath232 and used exactly @xmath233 queries to reach this position ( which is possible only if @xmath0 is even ) . now to finish the algorithm and the whole proof let the two remaining balls be @xmath9 and @xmath10 and let @xmath45 and @xmath234 be two balls of different color ( such balls exist and are known to * q * , since @xmath210 and @xmath0 is even ) .",
    "now * q * queries the balls @xmath63 .",
    "if the answer is yesor the answer is noand the two differently colored balls shown by * a * is @xmath9 and @xmath10 , then * q * can solve the problem using @xmath201 queries altogether . if the answer is noand the two different balls shown by * a * are not @xmath9 and @xmath10 , then * q * queries the balls @xmath235 , thus solving the problem using @xmath211 queries altogether .",
    "this completes the proof of theorem  [ pairthm ] .",
    "in this paper we studied the minimum number of triple queries needed to determine the majority color in a set of @xmath0 colored balls ( colored with two colors ) under two models a ) y / n , and b ) pairing , which depend on the type of queries being allowed .",
    "in addition to tightening the bounds for the majority problem in the y / n model , several interesting questions remain open for further investigation , including computing majority on a ) @xmath1-tuple queries , for some fixed @xmath1 , b ) bins with balls colored with more than two colors , as well as c ) other natural computation models .    00    m. aigner , combinatorial search .",
    "wiley 1988 .",
    "m. aigner , two colors and more , in : entropy , search , complexity bolyai society mathematical studies , 2007 , volume 16 , 9 - 26 .",
    "m. aigner , variants of the majority problem , discrete applied mathematics 137 ( 1 ) 2004 , 3 - 26 .",
    "m. aigner , g. de marco and m. montangero , the plurality problem with three colors , proc .",
    "21st annual symposium on theoretical aspects of computer science , stacs 2004 , montpellier , france , lncs 2996 , 513 - 521 .",
    "l. alonso , e. m. reingold , and r. schott , determining the majority , information processing letters 47 ( 1993 ) , 253 - 255 .",
    "l. alonso , e. m. reingold , and r. schott , the average - case complexity of determining the majority , siam journal on computing 26 ( 1997 ) , 1 - 14 .",
    "l. alonso , p. chassaing , e. m. reingold , and r. schott , the chip problem , preprint .",
    "( available at http://emr.cs.uiuc.edu/@xmath236reingold/chips.ps . )",
    "chung , r.l .",
    "graham , j. mao and a.c .",
    "yao , oblivious and adaptive strategies for the majority and plurality problems ( cocoon 2005 , 329 - 338 ) , algorithmica 48 ( 2007 ) , pp .",
    "147 - 157 .",
    "g. de marco and a. pelc , randomized algorithms for determining the majority on graphs , proc .",
    "symposium on mathematical foundations of computer science , mfcs 2003 , bratislava , slovak republic , lncs 2747 , 368 - 377 .",
    "z. dvok , v. jelnek , d. krl , j. kynl , m. saks , probabilistic strategies for the partition and plurality problems , random structures and algorithms 30 ( 2007 ) , 63 - 77 .",
    "m. fisher and s. salzberg , finding a majority among @xmath0 votes , journal of algorithms 3 ( 1982 ) , 375 - 379 .",
    "d. knig , graphen und matrizen , math .",
    "lapok 38 ( 1931 ) 116 - 119 .",
    "d. krl , j. sgall , t. tichy , randomized strategies for the plurality problem , discrete applied mathematics 156 ( 2008 ) , 3305 - 3311 .",
    "preparata , g. metze and r.t .",
    "chien , on the connection assignment problem of diagnosable systems , ieee trans . on electronic computers 16 ( 1967 ) ,",
    "848 - 854 .",
    "m. e. saks and m. werman , on computing majority by comparisons , combinatorica 11 ( 1991 ) , 383 - 387 .",
    "g. wiener , search for a majority element , journal of statistical planning and inference , 100 ( 2002 ) , 313 - 318 .",
    "consider @xmath1-tuple inputs . we have to show that * q * can solve the majority problem by asking all possible queries if and only if @xmath27 in the y / n model and if and only if @xmath28 in the pairing model .",
    "it is easy to see for both problems that if * a * gives a positive answer ( i.e. , declares that balls in a set @xmath237 of size @xmath1 have the same color ) , then * q * can learn which balls have the same color as the balls in @xmath237 , thus solving the problem .",
    "the questioner * q * just has to ask every query containing the balls of @xmath238 , where @xmath238 is an arbitrary subset of @xmath237 having size @xmath239 .",
    "thus we may assume that * a * never gives a positive answer .",
    "now the first part of the theorem is easy to prove . if @xmath240 , then * a * must give a positive answer some time , since there are @xmath1 balls having the same color , while if @xmath241 and there are no @xmath1 balls of the same color , then there can not be majority ( both colors appear @xmath239 times ) . on the other hand ,",
    "if @xmath242 then it is possible that there are exactly @xmath239 red balls and @xmath243 blue balls , in which case the answer is always negative and the problem can not be solved , since there is a majority but no ball can be named as one in majority .    since in the pairing model",
    "* q * is given more information , it is obvious that it can be solved if @xmath244 . to show that in the case @xmath245 , * q * can also solve the problem , but in the cases @xmath246 can",
    "not , we use graphs to describe the knowledge of * q * . in this approach to every negative answer of * a * there corresponds a pair of balls having different colors .",
    "let these pairs be the edges of a graph @xmath198 , whose vertices are the balls .",
    "it is straightforward that there always exists a coloring of the balls ( with colors blue and red ) such that there is no edge between two balls of the same color ; therefore the previously defined graph @xmath198 is bipartite .",
    "it is also obvious that * q * can show a ball of majority color if and only if there is a vertex @xmath61 of @xmath198 that always appears in the greater part in every bipartition of @xmath198 and * q * can declare that there is no majority if and only if in every bipartition of @xmath198 the two parts have the same size .",
    "let us consider now the case @xmath246 .",
    "let @xmath198 be a graph on @xmath247 vertices with an edge set consisting of @xmath248 independent edges .",
    "it is easy to see that any set of @xmath1 vertices spans at least one edge , so the answers of * a * are all negative and to every answer * a * can show a pair of balls that are neighbours in @xmath198 .",
    "assume now to the contrary that * q * can solve the problem , that is in every bipartition of @xmath198 the two parts have the same size or there exists a vertex @xmath61 of @xmath198 that always appears in the greater part in every bipartition of @xmath198 .",
    "[ belsolemma1 ] let @xmath198 be a bipartite graph on @xmath0 vertices .",
    "if there exists a vertex @xmath61 of @xmath198 that always appears in the greater part in every bipartition of @xmath198 , then @xmath198 has at least @xmath199 edges .    _",
    "( of lemma [ belsolemma1])_. let @xmath249 be the part of a bipartition of @xmath198 that contains @xmath61 .",
    "it is easy to see that @xmath250 contains at least @xmath199 non - isolated vertices , otherwise moving the isolated vertices of @xmath250 to the other part of the bipartition would leave @xmath61 in the smaller part , which is impossible .",
    "notice that @xmath61 itself may be an isolated vertex .",
    "since there is no edge between two vertices of @xmath249 , there must be at least @xmath199 edges in @xmath198 .",
    "this completes the proof of lemma [ belsolemma1 ] .",
    "now let us turn our attention to the only remaining case , @xmath251 .",
    "since * a * must always answer no , every set of @xmath1 vertices of @xmath198 spans at least one edge , in other words @xmath252 , the maximum size of an independent vertex set of @xmath198 is at most @xmath239 .",
    "it is well - known that @xmath253 , where @xmath254 is the minimum size of a vertex cover of @xmath198 , thus @xmath255 .",
    "@xmath198 is a bipartite graph , so by the theorem of knig @xcite @xmath256 , where @xmath257 is the maximum size of an independent edge set of @xmath198 .",
    "thus there exists an independent edge set @xmath99 of size @xmath258 in @xmath198 .",
    "now the ball corresponding to the only vertex that is not covered by @xmath99 must be in majority , thus finishing the proof of theorem  [ szeptetel ] .",
    "let @xmath237 be the set of balls .",
    "let us remove a ball @xmath61 from @xmath237 . by definition we can solve the majority problem on @xmath259 using @xmath260 queries .",
    "now there are two cases to consider .",
    "if @xmath259 has no majority , then the number of blue and red balls in the set @xmath259 is the same and therefore @xmath61 has the majority color in the set @xmath237 . on the other hand",
    "if @xmath259 has majority , then since @xmath103 is even the number of balls of the majority color is at least @xmath261 and therefore the majority color of @xmath237 must be the same as the majority color for @xmath259 , proving @xmath262 for @xmath0 odd .      in case ( a ) of the proof of lemma  [ ub ] ,",
    "the statement of the lemma is straightforward even without the additional question . the same holds for case ( b ) if @xmath263 .",
    "let us consider now @xmath264 .",
    "let @xmath265 be the set of remaining balls .",
    "the algorithm chooses any two among them and executes the same comparisons as for the case @xmath60 in order to ascertain whether these two balls are identically colored or not .",
    "if they have different colors , the gap ( difference between majority amd minority ) is 1 ; if they have the same color , one additional comparison among @xmath266 , and @xmath15 will ascertain whether the gap is 1 or 3 , finishing the proof .",
    "let us consider a set @xmath237 of @xmath32 balls with @xmath32 even .",
    "take 3 arbitrary balls @xmath44 , and @xmath45 from @xmath237 and solve the majority problem on the remaining @xmath267 balls by using @xmath268 queries . in view of lemma  [ inumber ] , using @xmath269 questions we also know a number @xmath75 , such that there are @xmath75 balls of the majority and @xmath270 of the minority color .",
    "it is obvious that @xmath271 .",
    "let @xmath61 be the majority ball provided by the algorithm on the @xmath267 balls .",
    "notice that @xmath61 exists as @xmath267 is odd .",
    "we first show that with at most @xmath34 more queries we can solve the majority problem on the whole set @xmath237 of @xmath32 balls .",
    "first we perform the query @xmath98 .",
    "assume first that we got a yes  answer on @xmath98 .",
    "now we perform query @xmath272 .",
    "if we get a yes  on @xmath272 we infer that @xmath61 is a majority ball for @xmath237 .",
    "if @xmath272 gives a no  answer , then three cases are possible :      if on the other hand we got a no  answer on @xmath98 , we can solve the majority problem by using the following three additional queries : @xmath272 , @xmath276 and @xmath277 .",
    "if at least one of the three answers is yes  then we can infer that @xmath61 is a majority ball .",
    "if we get no  on all three queries , then we infer that there is no majority among @xmath63 and @xmath61 .",
    "two cases are possible :      this proves that with a total of @xmath280 queries we can solve the majority problem on the whole set @xmath237 .",
    "therefore , recalling that on @xmath32 even , we know by lemma  [ even ] that @xmath281 , we have : @xmath282 , which implies @xmath283 .",
    "the lemma follows by letting @xmath284 .",
    "this completes the proof of lemma  [ odd ] .",
    "there are @xmath287 triples . by querying all four of them",
    "we can decide whether or not there is majority : if all four answers are no   there is no majority otherwise a yes   answer on a triple yields a ball of majority color .",
    "observe that by lemma  [ oddlm ] , we have that @xmath289 .",
    "assume to the contrary that @xmath290 and let the balls be numbered @xmath291 .",
    "we show that the majority problem can not be solved with three queries .",
    "consider the three triples @xmath292 that are being queried .",
    "if @xmath293 , for some ball @xmath61 , then the three queries apply only to four of the five balls @xmath294 ; therefore an `` adversary '' flipping the color of @xmath61 can change the outcome which shows that the majority problem can not be solved .",
    "therefore it remains to consider the case @xmath295 .",
    "it is easy to see that there are two triples , say @xmath296 , such that @xmath297 .",
    "assume @xmath298 and @xmath299 .",
    "clearly , @xmath300 ( otherwise we are in the previous case and the majority problem can not be solved ) .",
    "there are ( essentially ) three cases to consider depending on the other two balls in @xmath301 : 1 ) @xmath302 , 2 ) @xmath303 , and 3 ) @xmath304 , again , a simple `` adversary argument '' shows that the majority problem can not be solved in any of these cases .",
    "@xmath309 queries are not enough for @xmath309 balls .",
    "suppose the contrary .",
    "since not all 10 pairs of complementary triples are asked , the @xmath2 red , @xmath2 blue situation is always possible if all the answers are no .",
    "we show that if the triples are not in a special setting ( described later ) , then the @xmath34 blue , @xmath310 red situation is also possible if all the answers are no .",
    "if the @xmath34-@xmath310 situation is not possible with just no   answers , then every @xmath34-tuple contains a triple we asked . in other words ,",
    "the complements of our triples contain every possible pair of balls .",
    "so we would like to cover the edges of the complete graph on @xmath309 vertices with @xmath309 ( or less ) triangles .",
    "since a triangle covers @xmath310 edges of the same end - vertex ( i.e. triangle @xmath311 covers @xmath312 and @xmath313 ) and every vertex has degree @xmath314 in @xmath315 ( which is odd ) , this is possible if and only if three edges forming a perfect matching are double covered and all the others are simple covered ( @xmath309 triangles have @xmath316 edges and we have @xmath317 edges ( to see that @xmath314 triangle is not enough is even easier ) ) .",
    "let these edges be @xmath318 .",
    "now we give an adversary strategy : the first five questions are answered no , the sixth is no , if the above setting is not satisfied , otherwise it is yes . in the first case both the @xmath2-@xmath2 and the @xmath34-@xmath310 situations are possible .",
    "we show the same for the second case . now all triples contain either @xmath319 , or @xmath320 ( since we have six triples and these edges are double covered )",
    ", so we may suppose that the last triple was @xmath321 ( that is , the last question was @xmath311 ) . we know that @xmath322 , and @xmath2 are of the same color , but the other balls may all have the other color , since the only question ( answered no )   that is not consistent with this is the question @xmath321 and it is easy to see that this can not be a question , because in this case we have the triples @xmath311 and @xmath321 and all other four triples have just one ball in common with one of them , so there are four double covered edges , which is impossible .",
    "it remains to show that the @xmath34-@xmath310 situation is also possible .",
    "we know that @xmath311 is a question , let the other question whose complement covers @xmath320 be @xmath323 , where @xmath61 is @xmath324 , or @xmath2 .",
    "let @xmath62 be an element from @xmath325 different from @xmath61 .",
    "then the answers are consistent with the situation that @xmath325 , and @xmath62 are blue , the others are red .",
    "this finishes the proof ."
  ],
  "abstract_text": [
    "<S> consider a bin containing @xmath0 balls colored with two colors . in a @xmath1-query , </S>",
    "<S> @xmath1 balls are selected by a questioner and the oracle s reply is related ( depending on the computation model being considered ) to the distribution of colors of the balls in this @xmath1-tuple ; however , the oracle never reveals the colors of the individual balls . following a number of queries the questioner is said to determine the majority color if it can output a ball of the majority color if it exists , and </S>",
    "<S> can prove that there is no majority if it does not exist . </S>",
    "<S> we investigate two computation models ( depending on the type of replies being allowed ) . </S>",
    "<S> we give algorithms to compute the minimum number of @xmath2-queries which are needed so that the questioner can determine the majority color and provide tight and almost tight upper and lower bounds on the number of queries needed in each case .    * </S>",
    "<S> key words and phrases . </S>",
    "<S> * search , balls , colors , computation models , queries , pairing model , y / n model .    </S>",
    "<S> [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] </S>"
  ]
}
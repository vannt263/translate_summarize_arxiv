{
  "article_text": [
    "in recent work we have studied recursive markov decision processes ( rmdps ) and turn - based recursive simple stochastic games ( rssgs ) ( @xcite ) , providing a number of strong upper and lower bounds for their analysis .",
    "these define infinite - state ( perfect information ) stochastic games that extend recursive markov chains ( rmcs ) ( @xcite ) with non - probabilistic actions controlled by players . here",
    "we extend our study to recursive concurrent stochastic games ( rcsgs ) , where the two players choose moves simultaneously and independently at each state , unlike rssgs where only one player can move at each state .",
    "rcsgs define a class of infinite - state zero - sum ( imperfect information ) stochastic games that can naturally model probabilistic procedural programs and other systems involving both recursive and probabilistic behavior , as well as concurrent interactions between the system and the environment .",
    "informally , all such recursive models consist of a finite collection of finite state component models ( of the same type ) that can call each other in a potentially recursive manner . for rmdps and rssgs with multiple exits",
    "( terminating states ) , our earlier work already showed that basic questions such as almost sure termination ( i.e. does player 1 have a strategy that ensures termination with probability 1 ) are already undecidable ; on the other hand , we gave strong upper bounds for the important special case of _ single - exit _ rmdps and rssgs ( called 1-rmdps and 1-rssgs ) .",
    "our focus in this paper is thus on single - exit recursive concurrent stochastic games ( 1-rcsgs for short ) .",
    "these models correspond to a concurrent game version of multi - type _ branching processes _ and _ stochastic context - free grammars _ , both of which are important and extensively studied stochastic processes with many applications including in population genetics , nuclear chain reactions , computational biology , and natural language processing ( see , e.g. , @xcite and other references in @xcite ) .",
    "it is very natural to consider game extensions to these stochastic models .",
    "branching processes model the growth of a population of entities of distinct types . in each generation",
    "each entity of a given type gives rise , according to a probability distribution , to a multi - set of entities of distinct types .",
    "a branching process can be mapped to a 1-exit recursive markov chain ( 1-rmc ) such that the probability of eventual extinction of a species is equal to the probability of termination in the 1-rmc . modeling",
    "the process in a context where external agents can influence the evolution to bias it towards extinction or towards survival leads naturally to a game .",
    "a 1-rcsg models the process where the evolution of some types is affected by the concurrent actions of external favorable and unfavorable agents ( forces ) .    in @xcite",
    ", we showed that for the turned - based 1-rssg termination game , where the goal of player 1 ( respectively , player 2 ) is to maximize ( resp .",
    "minimize ) the probability of termination starting at a given vertex ( in the empty calling context ) , we can decide in pspace whether the value of the game is @xmath2 for a given probability @xmath3 , and we can approximate this value ( which can be irrational ) to within given precision with the same complexity .",
    "we also showed that both players have optimal _ deterministic _ _ stackless and memoryless _ ( sm )",
    "strategies in the 1-rssg termination game ; these are strategies that depend neither on the history of the game nor on the call stack at the current state .",
    "thus from each vertex belonging to the player , such a strategy deterministically picks one of the outgoing transitions .",
    "already for finite - state concurrent stochastic games ( csgs ) , even under the simple termination objective , the situation is rather different .",
    "memoryless strategies do suffice for both players , but randomization of strategies is necessary , meaning we ca nt hope for deterministic @xmath0-optimal strategies for either player .",
    "moreover , player 1 ( the maximizer ) can only attain @xmath0-optimal strategies , for @xmath1 , whereas player 2 ( the minimizer ) does have optimal randomized memoryless strategies ( see , e.g. , @xcite ) .",
    "another important result for finite csgs is the classic hoffman - karp @xcite strategy improvement method , which provides , via simple local improvements , a sequence of randomized memoryless strategies which yield payoffs that converge to the value of the game .",
    "here we generalize all these results to the infinite - state setting of 1-rcsg termination games .",
    "we first characterize values of the 1-rcsg termination game as the least fixed point solution of a system of nonlinear minimax functional equations .",
    "we use this to show pspace decidability for the _ qualitative termination problem _ ( is the value of the game @xmath4 ? ) and the _ quantitative termination problem _ ( is the value of the game @xmath5 ( or @xmath6 , etc . ) , for given rational @xmath7 ) , as well as pspace algorithms for approximating the termination probabilities of 1-rcsgs to within a given number of bits of precision , via results for the existential theory of reals .",
    "( the simpler `` qualitative problem '' of deciding whether the game value is @xmath8 only depends on the transition structure of the 1-rcsg and not on the specific probabilities . for this problem",
    "we give a polynomial time algorithm . )",
    "we then proceed to our technically most involved result , a strategy improvement technique for 1-rcsg termination games .",
    "we use this to show that in these games player 1 ( maximizer ) has @xmath0-optimal randomized - stackless & memoryless ( r - sm for short ) strategies , whereas player 2 ( minimizer ) has optimal r - sm strategies . thus ,",
    "such games are r - sm - determined .",
    "these results mirror and generalize in a very strong sense the randomized memoryless determinacy results known for finite stochastic games .",
    "our technique extends hoffman - karp s strategy improvement method for finite csgs to an infinite state setting .",
    "however , the proofs in our infinite - state setting are very different .",
    "we rely on subtle analytic properties of certain power series that arise from studying 1-rcsgs .",
    "note that our pspace upper bounds for the quantitative termination problem for 1-rcsgs can not be improved to np without a major breakthrough , since already for 1-rmcs we showed in @xcite that the quantitative termination problem is at least as hard as the square - root sum problem ( see @xcite ) .",
    "in fact , here we show that even the _ qualitative termination problem _ for 1-rcsgs , where the problem is to decide whether the value of the game is exactly 1 , is already as hard as the square - root sum problem , and moreover , so is the quantitative termination decision problem for _ finite _ csgs .",
    "we do this via two reductions : we give a p - time reduction from the square - root sum problem to the quantitative termination decision problem for _ finite _ csgs , and a p - time reduction from the quantitative finite csg termination problem to the qualitative 1-rcsg termination problem .",
    "it is known ( @xcite ) that for finite concurrent games , probabilistic nodes do not add any power to these games , because the stochastic nature of the games can in fact be simulated by concurrency alone .",
    "the same is true for 1-rcsgs .",
    "specifically , given a finite csg ( or 1-rcsg ) , @xmath9 , there is a p - time reduction to a finite concurrent game ( or 1-rcg , respectively ) @xmath10 , without any probabilistic vertices , such that the value of the game @xmath9 is exactly the same as the value of the game @xmath10 .",
    "we will provide a proof of this in section [ sec : basics ] for completeness",
    ".    * related work .",
    "* stochastic games go back to shapley @xcite , who considered finite concurrent stochastic games with ( discounted ) rewards .",
    "see , e.g. , @xcite for a recent book on stochastic games .",
    "turn - based `` simple '' finite stochastic games were studied by condon @xcite . as mentioned , we studied rmdps and ( turn - based ) rssgs and their quantitative and qualitative termination problems in @xcite .",
    "in @xcite we showed that the qualitative termination problem for both maximizing and minimizing 1-rmdps is in p , and for 1-rssgs is in np@xmath11conp .",
    "our earlier work @xcite developed theory and algorithms for recursive markov chains ( rmcs ) , and @xcite have studied probabilistic pushdown systems which are essentially equivalent to rmcs .",
    "finite - state concurrent stochastic games have been studied extensively in recent cs literature ( see , e.g. , @xcite ) . in particular , the papers @xcite and @xcite have studied , for finite csgs , the _ approximate _ reachability problem and _ approximate _ parity game problem , respectively . in those papers , it was claimed that these approximation problems are in np@xmath11conp .",
    "actually there was a minor problem with the way the results on approximation were phrased in @xcite , as pointed out in the conference version of this paper @xcite , but this is a relatively unimportant point compared to the flaw we shall now discuss .",
    "there is in fact a serious flaw in a key proof of @xcite .",
    "the flaw relates to the use of a result from @xcite which shows that for discounted stochastic games the value function is lipschitz continuous with respect to the coefficients that define the game as well as the discount @xmath12 .",
    "importantly , the lipschitz constant in this result from @xcite depends on the discount @xmath12 ( it is inversely proportional to @xmath13 ) .",
    "this fact was unfortunately overlooked in @xcite and , at a crucial point in their proofs , the lipschitz constant was assumed to be a fixed constant that does not depend on @xmath12 .",
    "this flaw unfortunately affects several results in @xcite .",
    "it also affects the results of @xcite , since the later paper uses the reachability results of @xcite . as",
    "a consequence of this error , the best upper bound which currently follows from the results in @xcite is a pspace upper bound for the decision and approximation problems for the value of finite - state concurrent stochastic reachability games as well as for finite - state concurrent stochastic parity games .",
    "( see the erratum note for @xcite on k. chatterjee s web page @xcite , as well as his ph.d . thesis . )",
    "it is entirely plausible that these results can be repaired and that approximating the value of finite - state concurrent reachability games to within a given additive error @xmath1 can in the future be shown to be in np @xmath11 conp , but the flaw in the proof given in @xcite is fundamental and does not appear to be easy to fix .    on the other hand , for the quantitative decision problem for finite csgs ( as opposed to the approximation problem ) , and even the qualitative decision problem for 1-rcsgs , the situation is different .",
    "we show here that the quantitative decision problem for finite csgs , as well as the qualitative decision problem for 1-rcsgs , are both as hard as the square - root sum problem , for which containment even in np is a long standing open problem .",
    "thus our pspace upper bounds here , even for the qualitative termination problem for 1-rcsgs , can not be improved to np without a major breakthrough .",
    "unlike for 1-rcsgs , the qualitative termination problem for finite csgs is known to be decidable in p - time ( @xcite ) .",
    "we note that in recent work allender et .",
    "al . @xcite",
    "have shown that the square - root sum problem is in ( the 4th level of ) the `` counting hierarchy '' ch , which is inside pspace , but it remains a major open problem to bring this complexity down to np .",
    "the rest of the paper is organized as follows . in section 2",
    "we present the rcsg model , define the problems that we will study , and give some basic properties . in section 3",
    "we give a system of equations that characterizes the desired probabilities , and use them to show that the problems are in pspace . in section 4 we prove the existence of optimal randomized stackless and memoryless strategies , and we present a strategy improvement method . finally in section 5",
    "we present reductions from the square root sum problem to the quantitative termination problem for finite csgs , and from the latter to the qualitative problem for recursive csgs .",
    "we have two players , player 1 and player 2 .",
    "let @xmath14 and @xmath15 be finite sets constituting the _ move alphabet _ of players 1 and 2 , respectively .",
    "formally , a _ recursive concurrent stochastic game ( rcsg ) _ is a tuple @xmath16 , where each _ component _ @xmath17 consists of :    1 .   a finite set @xmath18 of _ nodes _ , with a distinguished subset @xmath19 of _ entry _ nodes and a ( disjoint ) subset @xmath20 of _ exit _ nodes .",
    "2 .   a finite set @xmath21 of _ boxes _ , and a mapping @xmath22 that assigns to every box ( the index of ) a component . to each box @xmath23 , we associate a set of _ call ports _ , @xmath24 , and a set of _ return ports _ , @xmath25",
    "let @xmath26 , @xmath27 , and let @xmath28 be the set of all nodes , call ports and return ports ; we refer to these as the _ vertices _ of component @xmath29 .",
    "3 .   a mapping @xmath30 that assigns to every vertex @xmath31 a type describing how the next transition is chosen : if @xmath32 @xmath33 @xmath34 it is chosen probabilistically and if @xmath32 @xmath33 @xmath35 it is determined by moves of the two players .",
    "vertices @xmath36 have no outgoing transitions ; for them we let @xmath37 .",
    "4 .   a transition relation @xmath38 , where for each tuple @xmath39 , the source @xmath40 , the destination @xmath41 , where if @xmath42 then @xmath43 is a real number @xmath44 $ ] ( the transition probability ) , and if @xmath45 then @xmath46 . we assume that each vertex @xmath47 has associated with it a set @xmath48 and a set @xmath49 , which constitute player 1 and 2 s _ legal moves _ at vertex @xmath31 . thus ,",
    "if @xmath39 and @xmath50 then @xmath51 . additionally , for each vertex @xmath31 and each @xmath52 , we assume there is exactly one transition of the form @xmath53 in @xmath54 . furthermore they must satisfy the consistency property : for every @xmath55 , @xmath56 , unless @xmath31 is a call port or exit node , neither of which have outgoing transitions , in which case by default @xmath57 .",
    "we use the symbols ( @xmath58 etc . ) without a subscript , to denote the union over all components .",
    "thus , eg . @xmath59 is the set of all nodes of @xmath60 , @xmath61 the set of all transitions , @xmath62 the set of all vertices , etc .",
    "the set @xmath63 of vertices is partitioned into the sets @xmath64 and @xmath65 of play and probabilistic vertices respectively .    for computational purposes",
    "we assume that the transition probabilities @xmath66 are rational , given in the input as the ratio of two integers written in binary .",
    "the _ size _ of a rcsg is the space ( in number of bits ) needed to specify it fully , i.e. , the nodes , boxes , and transitions of all components , including the probabilities of all the transitions .",
    "an example picture of a ( 1-exit ) rcsg is depicted in figure [ fig : example_1rcsg ] .",
    "this rcsg has one component , @xmath67 , which has nodes @xmath68 .",
    "it has one entry node , @xmath69 , and one exit node , @xmath70 .",
    "it also has two boxes , @xmath71 , both of which map to the only component , @xmath72 .",
    "all nodes in this rcsg are probabilistic ( black nodes ) except for nodes @xmath73 and @xmath74 which are player nodes ( white nodes ) .",
    "the move alphabet for both players is @xmath75 ( for , say , `` left '' and `` right '' ) . at node @xmath73",
    "both players have both moves enabled . at node @xmath74 ,",
    "player 1 has only @xmath76 enabled , and player 2 has both @xmath76 and @xmath77 enabled .",
    "[ example : rcsg ]    an rcsg @xmath60 defines a global denumerable stochastic game @xmath78 as follows . the global _ states _",
    "@xmath79 of @xmath80 are pairs of the form @xmath81 , where @xmath82 is a ( possibly empty ) sequence of boxes and @xmath83 is a _ vertex _ of @xmath60 .",
    "more precisely , the states @xmath84 and transitions @xmath85 are defined inductively as follows :    1 .",
    "@xmath86 , for @xmath83 ( @xmath0 denotes the empty string . ) 2 .   if @xmath87 and @xmath88 , then @xmath89 and @xmath90 .",
    "3 .   if @xmath91 , with @xmath92 , then @xmath93 and @xmath94 .",
    "4 .   if @xmath95 , and @xmath96 , then @xmath97 and @xmath98 .",
    "item 1 corresponds to the possible initial states , item 2 corresponds to control staying within a component , item 3 is when a new component is entered via a box , item 4 is when control exits a box and returns to the calling component .",
    "the mapping @xmath99 is given by @xmath100 .",
    "the set of vertices @xmath101 is partitioned into @xmath102 , @xmath103 , where @xmath104 and @xmath105 .",
    "we consider @xmath80 with various _ initial states _ of the form @xmath106 , denoting this by @xmath107 .",
    "some states of @xmath80 are _ terminating states _ and have no outgoing transitions .",
    "these are states @xmath108 , where @xmath109 is an exit node .",
    "if we wish to view @xmath80 as a non - terminating csg , we can consider the terminating states as absorbing states of @xmath80 , with a self - loop of probability 1 .",
    "an rcsg where @xmath110 ( i.e. , where player 2 has only one action ) is called a maximizing _ recursive markov decision process _ (",
    "rmdp ) ; likewise , when @xmath111 the rcsg is a minimizing rmdp .",
    "an rssg where @xmath112 is essentially a _ recursive markov chain _ ( @xcite ) .    our goal is to answer termination questions for rcsgs of the form : _",
    "`` does player 1 have a strategy to force the game to terminate ( i.e. , reach node @xmath113 ) , starting at @xmath106 , with probability @xmath2 , regardless of how player 2 plays?''_.    first , some definitions : a _ strategy _",
    "@xmath114 for player @xmath115 , @xmath116 , is a function @xmath117 , where @xmath118 denotes the set of probability distributions on the finite set of moves @xmath119 . in other words ,",
    "given a history @xmath120 , and a strategy @xmath114 for , say , player 1 , @xmath121 defines the probability with which player 1 will play move @xmath122 .",
    "moreover , we require that the function @xmath114 has the property that for any global state @xmath123 , with @xmath45 , @xmath124 . in other words ,",
    "the distribution has support only over eligible moves at vertex @xmath31 .",
    "let @xmath125 denote the set of all strategies for player @xmath115 . given a history @xmath120 of play so far , and given a strategy @xmath126 for player @xmath127 , and a strategy @xmath128 for player @xmath129 ,",
    "the strategies determine a distribution on the next move of play to a new global state , namely , the transition @xmath130 has probability @xmath131 . this way , given a start node @xmath31 , a strategy @xmath126 , and a strategy @xmath128",
    ", we define a new markov chain ( with initial state @xmath31 ) @xmath132 .",
    "the states @xmath133 of @xmath134 are non - empty sequences of states of @xmath80 , which must begin with @xmath106 .",
    "inductively , if @xmath135 , then : ( 0 ) if @xmath136 and @xmath137 then @xmath138 and @xmath139 ; ( 1 ) if @xmath140 , where @xmath130 , then if @xmath141 and @xmath142 then @xmath138 and @xmath143 , where @xmath144 .    given initial vertex @xmath31 , and final exit @xmath109 in the same component , and given strategies @xmath126 and @xmath128 , for @xmath145 , let @xmath146 be the probability that , in @xmath134 , starting at initial state @xmath147 , we will reach a state @xmath148 in at most @xmath149 `` steps '' ( i.e. , where @xmath150 ) .",
    "let @xmath151 be the probability of ever terminating at @xmath109 , i.e. , reaching @xmath152 .",
    "( note , the limit exists : it is a monotonically non - decreasing sequence bounded by @xmath127 ) .",
    "let @xmath153 and let @xmath154 . for a strategy @xmath126 , let @xmath155 , and let @xmath156 .",
    "lastly , given a strategy @xmath128 , let @xmath157 , and let @xmath158 .    from , general determinacy results ( e.g. ,",
    "`` blackwell determinacy '' @xcite which applies to all borel two - player zero - sum stochastic games with countable state spaces ; see also @xcite ) it follows that the games @xmath80 are _ determined _ , meaning : + @xmath159 .",
    "we call a strategy @xmath114 for either player a ( randomized ) _ stackless and memoryless _ ( _ r - sm _ ) strategy if it neither depends on the history of the game , nor on the current call stack . in other words , a r - sm strategy @xmath114 for player @xmath115",
    "is given by a function @xmath160 , which maps each play vertex @xmath31 of the rcsg to a probability distribution @xmath161 on the moves available to player @xmath115 at vertex @xmath31 .",
    "we are interested in the following computational problems .    1 .",
    "the _ qualitative _ termination problem : is @xmath162 ?",
    "the _ quantitative _ termination ( decision ) problem : + given @xmath163 $ ] , is @xmath164 ?",
    "is @xmath165 ? + the _ approximate _ version : approximate @xmath166 to within desired precision .",
    "obviously , the qualitative termination problem is a special case of the quantitative problem , setting @xmath167 .",
    "as mentioned , for multi - exit rcsgs these are all undecidable .",
    "thus we focus on _ single - exit _ rcsgs ( _ 1-rcsgs _ ) , where every component has one exit .",
    "since for 1-rcsgs it is always clear which exit we wish to terminate at starting at vertex @xmath31 ( there is only one exit in @xmath31 s component ) , we abbreviate @xmath168 , etc . , as @xmath169 , etc . , and we likewise abbreviate other subscripts .    a different `` qualitative '' problem is to ask whether @xmath170 ? as we will show in proposition [ prop : zeros ] , this is an easy problem : deciding whether @xmath170 for a vertex @xmath31 in a 1-rcsg can be done in polynomial time , and only depends on the transition structure of the 1-rcsg , not on the specific probabilities .",
    "as mentioned in the introduction , it is known that for concurrent stochastic games , probabilistic nodes do not add any power , and can in effect be `` simulated '' by concurrent nodes alone ( this fact was communicated to us by k. chatterjee @xcite ) . the same fact is true for 1-rcsgs .",
    "specifically , the following holds :    there is a p - time reduction @xmath171 , which , given a finite csg ( or a 1-rcsg ) , @xmath9 , computes a finite concurrent game ( or 1-rcg , respectively ) @xmath10 , without any probabilistic vertices , such that the value of the game @xmath9 is exactly the same as the value of the game @xmath10 .",
    "first , suppose for now that in @xmath9 all probabilistic transitions have probability @xmath172 .",
    "in other words , suppose that for a probabilistic vertex @xmath173 ( which is not an exit or a call port ) in an 1-rcsg , we have two transitions @xmath174 and @xmath175 . in the new game @xmath10 , change @xmath176 to a play vertex , i.e. , let @xmath177 , and let @xmath178 , and replace the probabilistic transitions out of @xmath176 with the following 4 transitions : @xmath179 , @xmath180 , @xmath181 and @xmath182 .",
    "do this for all probabilistic vertices in @xmath9 , thus obtaining @xmath10 which contains no probabilistic vertices .",
    "now , consider any strategy @xmath114 for player 1 in the original game @xmath9 , and a strategy @xmath183 in the new game @xmath10 that is consistent with @xmath114 , i.e. for each history ending at an original play vertex @xmath183 has the same distribution as @xmath114 ( and for the other histories ending at probabilistic vertices it has an arbitrary distribution ) .",
    "for any strategy @xmath184 for player 2 in the game @xmath9 , consider the strategy , @xmath185 , for player 2 in @xmath10 , which is defined as follows : whenever the play reaches a probabilistic vertex @xmath176 of @xmath9 ( in any context and with any history ) @xmath185 plays @xmath186 and @xmath187 with 1/2 probability each .",
    "at all non - probabilistic vertices of @xmath9 , @xmath185 plays exactly as @xmath184 ( and it may use the history , etc . ) . this way , no matter what player 1 does , whenever play reaches the vertex @xmath176 ( in any context ) the play will move from @xmath176 to @xmath188 and to @xmath189 with probability @xmath172 each .",
    "thus for any vertex @xmath31 , the value @xmath190 in the game @xmath9 is the same as the value @xmath191 in the game @xmath10 .",
    "so the optimal payoff value for player 1 in the game starting at any vertex @xmath31 is not greater in @xmath10 than in @xmath9 .",
    "a completely symmetric argument shows that for player 2 the optimal payoff value starting at @xmath31 is not greater in @xmath10 than in @xmath9 .",
    "thus , the value of the game starting at @xmath31 is the same in both games .",
    "we can now generalize this to arbitrary rational probabilities on transitions , instead of just probability @xmath172 , by using a basic trick to encode arbitrary finite probability distributions using a polynomial - sized finite markov chain all of whose transitions have probability @xmath172 .",
    "namely , suppose @xmath31 goes to @xmath192 with probability @xmath193 and to @xmath194 with probability @xmath195 , where @xmath3,@xmath196 are integers with @xmath149 bits ( we can write both as @xmath149-bit numbers , by adding leading 0 s to @xmath3 if necessary so that it has length exactly @xmath149 , same as @xmath196 ) . flip ( at most ) @xmath149 coins .",
    "view this as generating a @xmath149 bit binary number .",
    "if the number that comes out is @xmath197 ( i.e. @xmath198 ) , then go to @xmath192 , if between @xmath3 and @xmath196 ( i.e. , @xmath199 ) then go to @xmath194 , if @xmath200 go back to the start , @xmath31 . a naive way to do this would require exponentially many states in @xmath149 .",
    "but we only need at most @xmath201 states to encode this if we do nt necessarily flip all @xmath149 coins but rather do the transition to @xmath202 or @xmath31 , as soon as the outcome is clear from the coin flips .",
    "that is , if the sequence @xmath203 formed by the initial sequence of coin flips so far differs from both the prefixes @xmath204 of @xmath3 and @xmath196 of the same length , then we do the transition : if @xmath205 transition to @xmath192 , if @xmath206 transition to @xmath194 , and if @xmath207 then transition to @xmath31 .",
    "thus , we only need to remember the number @xmath208 of coins flipped so far , and if @xmath208 is greater than the length of the common prefix of @xmath3 and @xmath196 then we need to remember also whether the coin flips so far agree with @xmath3 or with @xmath196 .    clearly , a simple generalization of this argument works for generating arbitrary finite rational probability distributions @xmath209 , such that @xmath210 .",
    "if @xmath196 is a @xmath149-bit integer , then the number of new states needed is at most @xmath211 , i.e. linear in the encoding length of the rationals @xmath212 .",
    "in ( @xcite ) we defined a monotone system @xmath213 of nonlinear min- & -max equations for 1-rssgs ( i.e. the case of simple games ) , and showed that its _ least fixed point _",
    "solution yields the desired probabilities @xmath214 . here",
    "we generalize these to nonlinear minimax systems for concurrent games , 1-rcsgs .",
    "let us use a variable @xmath215 for each unknown @xmath214 , and let @xmath43 be the vector of all @xmath216 , @xmath217 .",
    "the system @xmath213 has one equation of the form @xmath218 for each vertex @xmath31 .",
    "suppose that @xmath31 is in component @xmath29 with ( unique ) exit @xmath109 .",
    "there are 4 cases based on the `` _ type _ '' of @xmath31 .",
    "1 .   @xmath219 : @xmath220 . in this case : @xmath221 .",
    "@xmath222 : @xmath223 and @xmath224 .",
    "then the equation is @xmath225 ( if @xmath31 has no outgoing transitions , this equation is by definition @xmath226 . )",
    "@xmath227 : @xmath228 is a call port . the equation is @xmath229 , where @xmath230 is the unique exit of @xmath231 .",
    "4 .   @xmath232 .",
    "then the equation is @xmath233 , where the right - hand side is defined as follows . given a value vector @xmath43 , and a play vertex @xmath31 ,",
    "consider the zero - sum matrix game given by matrix @xmath234 , whose rows are indexed by player 1 s moves @xmath235 from node @xmath31 , and whose columns are indexed by player 2 s moves @xmath236 .",
    "the payoff to player 1 under the pair of deterministic moves @xmath237 , and @xmath238 , is given by @xmath239 , where @xmath240 .",
    "let @xmath241 be the value of this zero - sum matrix game .",
    "by von neumann s minimax theorem , the value and optimal mixed strategies exist , and they can be obtained by solving a linear program with coefficients given by the @xmath242 s .    in vector notation , we denote the system @xmath213 by @xmath243",
    ". given 1-exit rcsg @xmath60 , we can easily construct this system .",
    "note that the operator @xmath244 is _ monotone _ : for @xmath245 , if @xmath246 then @xmath247 .",
    "this follows because for two game matrices @xmath60 and @xmath248 of the same dimensions , if @xmath249 ( i.e. , @xmath250 for all @xmath115 and @xmath208 ) , then @xmath251 .",
    "note that by definition of @xmath234 , for @xmath246 , @xmath252 .",
    "we now construct the system of nonlinear minimax functional equations , @xmath253 , associated with the 1-rcsg we encountered in figure [ fig : example_1rcsg ] ( see example [ example : rcsg ] ) .",
    "we shall need one variable for every _ vertex _ of that 1-rcsg , to represent the value of the termination game starting at that vertex , and we will need one equation for each such variable .",
    "thus , the variables we need are @xmath254 , @xmath255 , @xmath256 , @xmath257 .",
    "the equations are as follows : @xmath258 \\right)\\cr x_{u_4 }     & =   { \\mbox{val}}\\left (   \\left [ \\begin{array}{cc }                                 x_{(b_2,s ) } & x_t                                \\end{array } \\right ] \\right ) } \\ ] ]    we now identify a particular solution to @xmath243 , called the _ least fixed point _",
    "( @xmath259 ) solution , which gives precisely the termination game values .",
    "define @xmath260 , and define @xmath261 , for @xmath262 .",
    "let @xmath263 denote the @xmath264-vector @xmath265 ( using the same indexing as used for @xmath43 ) .",
    "for @xmath145 , let @xmath266 denote , similarly , the @xmath264-vector @xmath267 .",
    "[ lfp - char - thm ] let @xmath243 be the system @xmath213 associated with 1-rcsg @xmath60 .",
    "then @xmath268 , and for all @xmath269 , if @xmath270 , then @xmath271 ( i.e. , @xmath272 is the _ least fixed point _ , of @xmath244 ) . moreover , @xmath273 , i.e. , the `` value iteration '' sequence @xmath274 converges monotonically to the lfp , @xmath272 .",
    "we first prove that @xmath275 .",
    "suppose @xmath276 . the equations for vertices @xmath31 of types @xmath277 , and @xmath278 can be used to define precisely the values @xmath279 in terms of other values @xmath280 .",
    "thus , the only possibility is that @xmath281 for some vertex @xmath31 of @xmath282 . in other words , @xmath283 .",
    "suppose @xmath284 . to see that this ca nt happen",
    ", we construct a strategy @xmath114 for player 1 that achieves better . at node @xmath31 ,",
    "let player 1 s strategy @xmath114 play in one step its optimal randomized minimax strategy in the game @xmath285 ( which exists according to the minimax theorem ) .",
    "choose @xmath286 such that @xmath287 .",
    "after the first step , at any vertex @xmath288 player 1 s strategy @xmath114 will play in such a way that achieves a value @xmath289 ( i.e , an @xmath0-optimal strategy in the rest of the game , which must exist because the game is determined ) .",
    "let @xmath290 be an @xmath264-vector every entry of which is @xmath0 .",
    "now , the matrix game @xmath291 is just an additive translation of the matrix game @xmath285 , and thus it has precisely the same @xmath0-optimal strategies as the matrix game @xmath285 , and moreover @xmath292 .",
    "thus , by playing strategy @xmath114 , player 1 guarantees a value which is @xmath293 , which is a contradiction .",
    "thus @xmath294 .",
    "a completely analogous argument works for player 2 , and shows that @xmath295 .",
    "thus @xmath296 , and hence @xmath275 .",
    "next , we prove that if @xmath297 is any vector such that @xmath270 , then @xmath298 .",
    "let @xmath299 be the randomized stackless and memoryless strategy for player 2 that always picks , at any state @xmath81 , for play vertex @xmath300 , a mixed 1-step strategy which is an optimal strategy in the matrix game @xmath301 .",
    "( again , the existence of such a strategy is guaranteed by the minimax theorem . )    for all strategies @xmath126 of player 1 , and for all @xmath145 , @xmath302 .    by induction .",
    "the base case @xmath303 is trivial",
    ".    1 .   @xmath304 .",
    "if @xmath220 is an exit , then for all @xmath305 , clearly @xmath306 .",
    "2 .   @xmath307 .",
    "let @xmath308 be the strategy defined by @xmath309 for all @xmath310 .",
    "then , @xmath311 3 .",
    "@xmath278 . in this case ,",
    "@xmath312 , and @xmath313 , where @xmath230 is the unique exit node of @xmath231 .",
    "now , by the inductive assumption , @xmath314 for all @xmath315 . moreover , since @xmath270 , @xmath316 .",
    "hence , using these inequalities and substituting , we get @xmath317 4 .",
    "@xmath318 : in this case , starting at @xmath147 , whatever player 1 s strategy @xmath114 is , it has the property that @xmath319 . by the inductive hypothesis @xmath320 , so we are done by induction and by the monotonicity of @xmath241 .",
    "now , by the lemma , @xmath321 .",
    "this holds for any strategy @xmath126 .",
    "therefore , @xmath322 , for every vertex @xmath31 .",
    "thus , by the determinacy of rcsg games , we have established that @xmath323 , for all vertices @xmath31 . in other words , @xmath298 .",
    "the fact that @xmath324 follows from a simple tarski - knaster argument .    for the system of equations",
    "@xmath253 given in example [ example : equations ] , associated with the 1-rcsg given in example [ example : rcsg ] , fairly easy calculations using the equations show that the least fixed point of the system ( and thus the game values , starting at the different vertices ) is as follows : @xmath325 ; @xmath326 ; @xmath327 ; @xmath328 ; and @xmath329 .",
    "in this case the values turn out to be rational and are simple to compute , but in general the values may be irrational and difficult to compute , and even if they are rational they may require exponentially many bits to represent ( in standard notation , e.g. , via reduced numerator and denominator given in binary ) in terms of the size of the input 1-rcsg or equation system",
    ".    furthermore , in this game there are pure optimal ( stackless and memoryless ) strategies for both players .",
    "specifically , the strategy for player 1 ( maximizer ) that always plays l from nodes @xmath330 is optimal , and the strategy for player 2 that always player l from nodes @xmath330 and @xmath331 is optimal . in general for 1-rcsgs , we show randomized stackless and memoryless @xmath0-optimal and optimal strategies do exist for players 1 and 2 , respectively .",
    "however , for player 1 only @xmath0-optimal strategies may exist , and although optimal strategies do exist for player 2 they may require randomization using irrational probabilities .",
    "this is the case even for finite - state concurrent games .",
    "we can use the system of equations to establish the following upper bound for computing the value of a 1-rcsg termination game :    the qualitative and quantitative termination problems for 1-exit rcsgs can be solved in pspace .",
    "that is , given a 1-exit rcsg @xmath60 , vertex @xmath31 and a rational probability @xmath3 , there is a pspace algorithm to decide whether @xmath332 ( or @xmath333 , or @xmath334 , etc . ) .",
    "the running time is @xmath335 where @xmath264 is the number of variables in @xmath336 .",
    "we can also approximate the vector @xmath337 of values to within a specified number of bits @xmath115 of precision ( @xmath115 given in unary ) , in pspace and in time @xmath338 .",
    "[ thm : complexity ]    using the system @xmath253 , we can express the condition @xmath339 by a sentence in the existential theory of the reals as follows :    @xmath340    note that the sentence is true , i.e. there exists a vector @xmath43 that satisfies the constraints of the above sentence if and only if the least fixed point @xmath337 satisfies them .",
    "the constraints @xmath341 for vertices @xmath115 of type 1 , 2 , and 3 ( exit , probabilistic vertex and call port ) are clearly polynomial equations , as they should be in a sentence of the existential theory of the reals .",
    "we only need to show how to express equations of the form @xmath342 in the existential theory of reals .",
    "we can then appeal to well known results for deciding that theory ( @xcite ) .",
    "but this is a standard fact in game theory ( see , e.g. , @xcite where it is used for finite csgs ) .",
    "the minimax theorem and its lp encoding allow the predicate `` @xmath343 '' to be expressed as an existential formula @xmath344 in the theory of reals with free variables @xmath345 and @xmath346 , such that for every @xmath347 , there exists a unique @xmath345 ( the game value ) satisfying @xmath348 .",
    "specifically , the formula includes , besides the free variables @xmath349 , existentially quantified variables @xmath350 , and @xmath351 for the probabilities of the moves of the two players , and the conjunction of the following constraints ( recall that each entry @xmath352 of the matrix @xmath353 is a variable @xmath354 where @xmath288 is the vertex such that @xmath240 )    1 .",
    "@xmath355 for all @xmath356 ; @xmath357 ; 2 .",
    "@xmath358 for all @xmath359 ; @xmath360 ; 3 .",
    "@xmath361 for all @xmath362 ; 4 .",
    "@xmath363 for all @xmath364 .    to approximate the vector of game values within given precision we can do binary search using queries of the form @xmath365 for all vertices @xmath31 .",
    "determining the vertices @xmath31 for which the value @xmath366 is 0 , is easier and can be done in polynomial time , as in the case of the turn - based 1-rssgs @xcite .    given a 1-rcsg we can compute in polynomial time the set @xmath367 of vertices @xmath31 such that @xmath368 .",
    "this set @xmath367 depends only on the structure of the given 1-rcsg and not on the actual values of the transition probabilities .",
    "[ prop : zeros ]    from the system of fixed point equations we have the following : ( 1 ) all exit nodes are not in @xmath367 ; ( 2 ) a probabilistic node @xmath31 is in @xmath367 if and only if all its ( immediate ) successors @xmath288 are in @xmath367 ; ( 3 ) the call port @xmath369 of a box @xmath187 is in @xmath367 if and only if the entry node @xmath370 of the corresponding component @xmath371 is in @xmath367 or the return port @xmath372 is in @xmath367 ; ( 4 ) a play node @xmath31 is in @xmath367 if and only if player 2 has a move @xmath238 such that for all moves @xmath237 of player 1 , the next node @xmath288 , i.e. the ( unique ) node @xmath288 such that @xmath240 , is in @xmath367 .",
    "only the last case of a play node @xmath31 needs an explanation .",
    "if player 2 has such a move @xmath373 , then clearly the corresponding column of the game matrix @xmath374 has all the entries 0 , and the value of the game ( i.e. , @xmath366 ) is 0 .",
    "conversely , if every column of @xmath374 has a nonzero entry , then the value of the game with this matrix is positive because for example player 1 can give equal probability to all his moves .",
    "thus , in effect , as far as computing the vertices with zero value is concerned , we can fix the strategy of player 1 at each play vertex to play at all times all legal moves with equal probability to get a 1-rmdp ; a vertex has nonzero value in the given 1-rcsg iff it has nonzero value in the 1-rmdp .    the algorithm to compute the set @xmath367 of vertices with 0",
    "value is similar to the case of 1-rssgs @xcite .",
    "initialize @xmath367 to @xmath375 , the set of non - exit vertices .",
    "repeat the following until there is no change :    1 .",
    "if there is a probabilistic node @xmath376 that has a successor not in @xmath367 , then remove @xmath31 from @xmath367 .",
    "2 .   if there is a call port @xmath377 such that both the entry node @xmath370 of the corresponding component @xmath371 and the return port @xmath372 of the box are not in @xmath367 , then remove @xmath31 from @xmath367 .",
    "3 .   if there is a play node @xmath376 such that for every move @xmath238 of player 2 there is a move @xmath237 of player 1 such that the next node @xmath288 from @xmath31 under @xmath378 is not in @xmath367 , then remove @xmath31 from @xmath367 .",
    "there are at most @xmath264 iterations and at the end @xmath367 is the set of vertices @xmath31 such that @xmath368 .",
    "the proof of theorem 1 implies the following :    [ cor - min - player ] in every 1-rcsg termination game , player 2 ( the minimizer ) has an optimal r - sm strategy .",
    "consider the strategy @xmath299 in the proof of theorem [ lfp - char - thm ] , chosen not for just any fixed point @xmath379 , but for @xmath337 itself .",
    "that strategy is r - sm and is optimal .",
    "player 1 does not have optimal r - sm strategies , not even in finite concurrent stochastic games ( see , e.g. , @xcite ) .",
    "we next establish that it does have finite r - sm _",
    "@xmath0-optimal strategies _ , meaning that it has , for every @xmath1 , a r - sm strategy that guarantees a value of at least @xmath380 , starting from every vertex @xmath31 in the termination game .",
    "we say that a game is _ r - sm - determined _ if , letting @xmath381 and @xmath382 denote the set of r - sm strategies for players 1 and 2 , respectively , we have @xmath383 .    1 .   ( strategy improvement )",
    "starting at any r - sm strategy @xmath384 for player 1 , via local strategy improvement steps at individual vertices , we can derive a series of r - sm strategies @xmath385 , such that for all @xmath1 , there exists @xmath386 such that for all @xmath387 , @xmath388 is an @xmath0-optimal strategy for player 1 starting at any vertex , i.e. , @xmath389 for all vertices @xmath31 .",
    "+ each strategy improvement step involves solving the quantitative termination problem for a corresponding 1-rmdp .",
    "thus , for classes where this problem is known to be in p - time ( such as linearly - recursive 1-rmdps , @xcite ) , strategy improvement steps can be carried out in polynomial time .",
    "player 1 has @xmath0-optimal r - sm strategies , for all @xmath1 , in 1-rcsg termination games",
    "1-rcsg termination games are r - sm - determined .",
    "note that ( 2 . ) follows immediately from ( 1 . ) , and ( 3 . )",
    "follows because by corollary [ cor - min - player ] , player 2 has an optimal r - sm strategy and thus + @xmath383 .",
    "let @xmath114 be any r - sm strategy for player 1 .",
    "consider @xmath390 .",
    "first , let us note that if @xmath391 then @xmath392 .",
    "this is so because , by theorem [ lfp - char - thm ] , @xmath393 , and on the other hand , @xmath114 is just one strategy for player 1 , and for every vertex @xmath31 , @xmath394 .",
    "next we claim that , for all vertices @xmath395 , @xmath396 satisfies its equation in @xmath243 . in other words , @xmath397 . to see this",
    ", note that for vertices @xmath395 , no choice of either player is involved , thus the equation holds by definition of @xmath390 .",
    "thus , the only equations that may fail are those for @xmath398 , of the form @xmath233 .",
    "we need the following .    for any r - sm strategy @xmath114 for player 1 , and for any @xmath398 , @xmath399 .",
    "we are claiming that @xmath400 .",
    "the inequality follows because a strategy for player 2 can in the first step starting at vertex @xmath31 play its optimal strategy in the matrix game @xmath401 , and thereafter , depending on which vertex @xmath288 is the immediate successor of @xmath31 in the play , the strategy can play `` optimally '' to force at most the value @xmath402 .    now , suppose that for some @xmath398 , @xmath403 . thus by the lemma @xmath404 .",
    "consider a revised r - sm strategy for player 1 , @xmath308 , which is identical to @xmath114 , except that locally at vertex @xmath31 the strategy is changed so that @xmath405 , where @xmath406 is an optimal mixed minimax strategy for player 1 in the matrix game @xmath401 .",
    "we will show that switching from @xmath114 to @xmath308 will improve player 1 s payoff at vertex @xmath31 , and will not reduce its payoff at any other vertex .",
    "consider a parameterized 1-rcsg , @xmath407 , which is identical to @xmath60 , except that @xmath31 is a randomizing vertex , all edges out of vertex @xmath31 are removed , and replaced by a single edge labeled by probability variable @xmath188 to the exit of the same component , and an edge with remaining probability @xmath408 to a dead vertex . fixing",
    "the value @xmath188 determines an 1-rcsg , @xmath407 .",
    "note that if we restrict the r - sm strategies @xmath114 or @xmath308 to all vertices other than @xmath31 , then they both define the same r - sm strategy for the 1-rcsg @xmath407 . for each vertex @xmath409 and strategy @xmath184 of player 2 , define @xmath410 to be the probability of eventually terminating starting from @xmath411 in the markov chain @xmath412 .",
    "let @xmath413 . recall that @xmath414 defines a probability distribution on the actions available to player 1 at vertex @xmath31 .",
    "thus @xmath415 is the probability of action @xmath416 .",
    "let @xmath417 be any action of player 2 for the 1-step zero - sum game with game matrix @xmath401 .",
    "let @xmath418 denote the vertex such that @xmath419 .",
    "let @xmath420 .",
    "[ lem : pow - series ] fix the vertex @xmath31 .",
    "let @xmath421 be any function @xmath422 .",
    "the following properties hold :    1 .",
    "if @xmath423 at some point @xmath424 $ ] , then @xmath425 for all @xmath426 .",
    "if @xmath427 at some point @xmath424 $ ] , then @xmath428 for all @xmath429 .",
    "first , we prove this for @xmath430 , for some vertex @xmath409 .",
    "note that , once player 1 picks a r - sm strategy , a 1-rcsg becomes a 1-rmdp . by a result of @xcite ,",
    "player 2 has an optimal deterministic sm response strategy .",
    "furthermore , there is such a strategy that is optimal regardless of the starting vertex .",
    "thus , for any value of @xmath188 , player 2 has an optimal deterministic sm strategy @xmath431 , such that for any start vertex @xmath409 , we have @xmath432 .",
    "let @xmath433 , and let @xmath434 be the ( finite ) set of deterministic sm strategies of player 2 .",
    "then @xmath435 .",
    "now , note that the function @xmath436 is the probability of reaching an exit in an rmc starting from a particular vertex .",
    "thus , by @xcite , @xmath437 for a polynomial system @xmath438 with non - negative coefficients , but with the additional feature that the variable @xmath188 appears as one of the coefficients . since this limit can be described by a power series in the variable @xmath188 with non - negative coefficients , @xmath436 has the following properties : it is a continuous , differentiable , and non - decreasing function of @xmath424 $ ] , with continuous and non - decreasing derivative , @xmath439 , and since the limit defines probabilities we also know that for @xmath424 $ ] , @xmath440 $ ] .",
    "thus @xmath441 and @xmath442 .",
    "hence , since @xmath439 is non - decreasing , if for some @xmath424 $ ] , @xmath443 , then for all @xmath444 , @xmath445 . to see this , note that if @xmath443 and @xmath446 , then for all @xmath447 , @xmath448 , which contradicts the fact that @xmath449 .",
    "thus @xmath450 , and since @xmath451 is non - decreasing , it follows that @xmath452 for all @xmath453 . since @xmath443 , we also have @xmath445 for all @xmath454 .",
    "similarly , if @xmath455 for some @xmath188 , then @xmath456 for all @xmath457 . to see this , note that if for some @xmath447 , @xmath458 , @xmath459 , then since @xmath451 is non - decreasing and @xmath455 , it must be the case that @xmath460 .",
    "but then @xmath461 , which is a contradiction .",
    "it follows that @xmath462 has the same properties , namely : if @xmath463 at some point @xmath424 $ ] then @xmath464 for all @xmath184 , and hence for all @xmath454 and for all @xmath465 , @xmath445 , and thus @xmath466 for all @xmath467 $ ] . on the other hand ,",
    "if @xmath468 at @xmath424 $ ] , then there must be some @xmath469 such that @xmath470 .",
    "hence @xmath471 , for all @xmath457 , and hence @xmath472 for all @xmath457 .",
    "next we prove the lemma for every @xmath473 , where @xmath474 .",
    "for every value of @xmath188 , there is one sm strategy @xmath475 of player 2 ( depending only on @xmath188 ) that minimizes simultaneously @xmath436 for all nodes @xmath409 .",
    "so @xmath476 , where @xmath477 is a convex combination ( i.e. , a `` weighted average '' ) of some @xmath478 functions at the same point @xmath188 .",
    "the function @xmath479 ( for any subscript ) inherits the same properties as the @xmath478 s : continuous , differentiable , non - decreasing , with continuous non - decreasing derivatives , and @xmath479 takes value between @xmath34 and @xmath127 . as we argued for the @xmath478 functions , in the same way it follows that @xmath479 has properties 1 and 2 .",
    "also , as we argued for @xmath67 s based on the @xmath478 s , it follows that @xmath480 s also have the same properties , based on the @xmath7 s .",
    "now let @xmath481 , and let @xmath482 . by assumption , @xmath483 .",
    "observe that @xmath484 for every vertex @xmath409 .",
    "thus , @xmath485 .",
    "but since , by definition , @xmath486 is an optimal strategy for player 1 in the matrix game @xmath401 , it must be the case that for every @xmath238 , @xmath487 , for otherwise player 2 could play a strategy against @xmath486 which would force a payoff lower than the value of the game .",
    "thus @xmath488 , for all @xmath373 .",
    "this implies that @xmath489 for all @xmath490 by lemma 2 , and for all @xmath491 , because @xmath492 is non - decreasing .",
    "thus , @xmath489 for all @xmath493 .",
    "let @xmath494 .",
    "let @xmath299 be an optimal global strategy for player 2 against @xmath308 ; by @xcite , we may assume @xmath299 is a deterministic sm strategy .",
    "let @xmath495 be player 2 s action in @xmath299 at node @xmath31 .",
    "then the value of any node @xmath409 under the pair of strategies @xmath308 and @xmath299 is @xmath496 , and thus since @xmath497 is a weighted average of @xmath496 s for some set of @xmath409 s , we have @xmath498 .",
    "thus , by the previous paragraph , it must be that @xmath499 , and we know @xmath483 .",
    "thus , @xmath500 . we have shown :    [ lem : improv - to - val ] @xmath501 .",
    "note that since @xmath502 , and @xmath503 is non - decreasing , we have @xmath504 for all vertices @xmath409 . but then @xmath505 for all @xmath409 .",
    "thus , @xmath506 , with strict inequality at @xmath31 , i.e. , @xmath507 .",
    "thus , we have established that such a `` strategy improvement '' step does yield a strictly better payoff for player 1 .",
    "suppose we conduct this `` strategy improvement '' step repeatedly , starting at an arbitrary initial r - sm strategy @xmath384 , as long as we can .",
    "this leads to a ( possibly infinite ) sequence of r - sm strategies @xmath508 .",
    "suppose moreover , that during these improvement steps we always `` prioritize '' among vertices at which to improve so that , among all those vertices @xmath398 which can be improved , i.e. , such that @xmath509 , we choose the vertex which has not been improved for the longest number of steps ( or one that has never been improved yet ) .",
    "this insures that , infinitely often , at every vertex at which the local strategy can be improved , it eventually is improved .    under this strategy improvement regime , we show that @xmath510 , and thus , for all @xmath1 , there exists a sufficiently large @xmath386 such that @xmath511 is an @xmath0-optimal r - sm strategy for player 1 .",
    "note that after every strategy improvement step , @xmath115 , which improves at a vertex @xmath31 , by lemma [ lem : improv - to - val ] we will have @xmath512 . since our prioritization assures that every vertex that can be improved at any step @xmath115 will be improved eventually , for all @xmath386 there exists @xmath145 such that @xmath513 .",
    "in fact , there is a uniform bound on @xmath149 , namely @xmath514 , the number of vertices .",
    "this `` sandwiching '' property allows us to conclude that , in the limit , this sequence reaches a fixed point of @xmath253 .",
    "note that since @xmath515 for all @xmath115 , and since @xmath516 , we know that the limit @xmath517 exists . letting this limit",
    "be @xmath297 , we have @xmath518 . finally , we have @xmath270 , because letting @xmath115 go to infinity in all three parts of the `` sandwiching '' inequalities above , we get @xmath519 . but note that @xmath520 , because the mapping @xmath521 is continuous on @xmath522 . thus @xmath297 is a fixed point of @xmath243 , and @xmath518 .",
    "but since @xmath272 is the _",
    "least _ fixed point of @xmath523 , we have @xmath524 .",
    "we have so far not addressed the complexity of computing or approximating the ( @xmath0- ) optimal strategies for the two players in 1-rcsg termination games .",
    "of course , in general , player 1 ( maximizer ) need not have any optimal strategies , so it only makes sense to speak about computing @xmath0-optimal strategies for it .",
    "moreover , the optimal strategies for player 2 may require randomization that is given by irrational probability distributions over moves , and thus we can not compute them exactly , so again we must be content to approximate them or answer decision questions about them .",
    "it is not hard to see however , by examining the proofs of our theorems , that such decision questions can be answered using queries to the existential theory of reals , and are thus also in pspace .",
    "recall the _ square - root sum problem _ ( e.g. , from @xcite ) : given @xmath525 and @xmath526 , decide whether @xmath527 .",
    "[ thm : sqrt - csg - reduction ] there is a p - time reduction from the square - root sum problem to the quantitative termination ( decision ) problem for finite csgs .",
    "given positive integers @xmath525 , and @xmath528 , we would like to check whether @xmath527 .",
    "we can clearly assume that @xmath529 for all @xmath115 .",
    "we will reduce this problem to the problem of deciding whether for a given finite csg , starting at a given node , the value of the termination game is greater than a given rational value .    given a positive integer @xmath530 , we will construct a finite csg , call it gadget @xmath531 , with the property that for a certain node @xmath31 in @xmath531 the value of the termination game starting at @xmath31 is @xmath532 , where @xmath533 and @xmath534 are rationals that depend on @xmath186 , with @xmath535 , and such that we can compute @xmath533 and @xmath534 efficiently , in polynomial time , given @xmath186 .    if we can construct such gadgets , then we can do the reduction as follows .",
    "given @xmath536 , with @xmath529 for all @xmath115 , and given @xmath528 , make copies of the gadgets @xmath537 , ",
    ", @xmath538 . in each gadget",
    "@xmath539 we have a node @xmath540 whose termination value is @xmath541 , where @xmath542 and @xmath543 are rationals that depend on @xmath544 and can be computed efficiently from @xmath544 . create a new node @xmath176 and add transitions from @xmath176 to the nodes @xmath540 , @xmath545 , with probabilities @xmath546 , respectively , where @xmath547 .",
    "it is easy to check that the value of termination starting at @xmath176 is @xmath548 , where @xmath549 .",
    "note that @xmath550 and @xmath551 are rational values that we can compute efficiently given the @xmath544 s , so to solve the square root sum problem , i.e. , decide whether @xmath527 , we can ask whether the value of the termination game starting at node @xmath176 is @xmath552 .",
    "now we show how to construct the gadget @xmath531 given a positive integer @xmath186 .",
    "@xmath531 has a play node @xmath31 , the target node @xmath188 , dead node @xmath409 , and probabilistic nodes @xmath192 , @xmath194 . nodes",
    "@xmath409 and @xmath188 are absorbing . at @xmath31",
    "each player has two moves @xmath553 .",
    "if they play @xmath554 then @xmath31 goes to @xmath192 , if they play @xmath555 then @xmath31 goes to @xmath194 , if they play @xmath556 or @xmath557 then @xmath31 goes to @xmath409 .",
    "note that we can write @xmath186 as @xmath558 where @xmath559 is a small - size rational ( @xmath559 is approximately @xmath560 ) and @xmath561 is also a small - size rational , and such that we can compute both @xmath559 and @xmath562 efficiently given @xmath186 . to see this note that , first , given @xmath186 we can easily approximate @xmath560 from above to within an additive error at most @xmath563 in polynomial time , using standard methods for approximating square roots .",
    "in other words , given integer @xmath564 , we can efficiently compute a rational number @xmath559 such that @xmath565 .",
    "we then have @xmath566 since @xmath567 , we can let @xmath568 .",
    "having computed @xmath559 and @xmath562 , let @xmath569 , @xmath570 , and @xmath571 , where @xmath572 is a small - sized rational value such that @xmath573 .",
    "from node @xmath192 we move with probability @xmath574 to @xmath188 , with probability @xmath575 to @xmath31 , and with the remaining probability to @xmath409 . from node",
    "@xmath194 we go with probability @xmath576 to @xmath188 and @xmath577 to @xmath409 .",
    "it is not hard to check that these are legitimate probabilities .",
    "let @xmath43 be the value at @xmath31 .",
    "we have @xmath578 , where the @xmath579 matrix @xmath60 for the one - shot zero - sum matrix game at @xmath31 has @xmath580 , @xmath581 , and @xmath582 .",
    "note that @xmath583 and @xmath584 . if the optimal strategy of player 1 at @xmath31 is to play @xmath127 with probability @xmath3 and @xmath129 with probability @xmath585 , then by basic facts about zero - sum matrix games we must have @xmath586 and @xmath587 .",
    "so @xmath588 , and substituting this expression for @xmath3 in the equality @xmath589 , we have : @xmath590",
    "so , @xmath591 note that we must choose the root with @xmath592 sign to get a positive value .",
    "the discriminant can be written as @xmath593 $ ] .",
    "the term @xmath594 will come out from under the square root , as @xmath576 , so we care only about the expression in the brackets , which is @xmath595 so @xmath596 , where @xmath597 and @xmath598 .",
    "[ thm : csg - reduction ] there is a p - time reduction from the quantitative termination ( decision ) problem for finite csgs to the qualitative termination problem for 1-rcsgs .",
    "consider the 1-rmc depicted in figure [ fig : example_rmc_param ] .",
    "we assume @xmath599 . as shown in ( @xcite , theorem 3 ) , in this 1-rmc the probability of termination starting at @xmath600 is @xmath601 if and only if @xmath602 .",
    "now , given a finite csg , @xmath9 , and a vertex @xmath31 of @xmath9 , do the following : first `` clean up '' @xmath9 by removing all nodes where the min player ( player 2 ) has a strategy to achieve probability 0 .",
    "we can do this in polynomial time as follows .",
    "note that the only way player 2 can force a probability 0 of termination is if it has a strategy @xmath184 such that , for all strategies @xmath114 of player 1 , there is no path in the resulting markov chain from the start vertex @xmath31 to the terminal node . but",
    "this can only happen if , ignoring probabilities , player 2 can play in such a way as to avoid the terminal vertex .",
    "this can be checked easily in polynomial time .",
    "the revised csg will have two designated terminal nodes , the old terminal node , labeled `` 1 '' , and another terminal node labeled `` 0 '' . from every node @xmath288 of @xmath307 in the revised csg which does not carry full probability on its outedges , we direct all the `` residual '' probability to `` 0 '' , i.e. , we add an edge from @xmath288 to `` 0 '' with probability @xmath603 , where the sum is over all remaining nodes @xmath604 is the csg .",
    "let @xmath1 be a value that is strictly less than the least probability , over all vertices , under any strategy for player 2 , of reaching the terminal node .",
    "obviously such an @xmath1 exists in the revised csg , because by corollary [ cor - min - player ] ( specialized to the case of finite csgs ) player 2 has an optimal randomized s&m strategy .",
    "fixing that strategy @xmath184 , player 1 can force termination from vertex @xmath31 with positive probability @xmath605 .",
    "we take @xmath606 .",
    "( we do not need to compute @xmath0 ; we only need its existence for the correctness proof of the reduction . )    in the resulting finite csg , we know that if player 1 plays @xmath0-optimally ( which it can do with randomized s&m strategies ) , and player 2 plays arbitrarily , there is no bottom scc in the resulting finite markov chain other than the two designated terminating nodes `` 0 '' and `` 1 '' . in other words , all the probability exits the system , as long as the maximizing player plays @xmath0-optimally .",
    "now , take the remaining finite csg , call it @xmath607 .",
    "just put a copy of @xmath607 at the entry of the component @xmath608 of the 1-rmc in figure [ fig : example_rmc_param ] , identifying the entry @xmath370 with the initial node , @xmath31 , of @xmath607 .",
    "take every transition that is directed into the terminal node `` 1 '' of g , and instead direct it to the exit @xmath109 of the component @xmath608 .",
    "next , take every edge that is directed into the terminal `` 0 '' node and direct it to the first call port , @xmath609 of the left box @xmath610 .",
    "both boxes map to the unique component @xmath608 . call this 1-rcsg @xmath60 .",
    "we now claim that the value @xmath611 in the finite csg @xmath607 for terminating at the terminal `` 1 '' iff the value @xmath612 for terminating in the resulting 1-rcsg , @xmath60 .",
    "the reason is clear : after cleaning up the csg , we know that under an @xmath0-optimal strategy for the maximizer for reaching `` 1 '' , all the probability exits @xmath607 either at `` 1 '' or at `` 0 '' .",
    "we also know that the supremum value that the maximizing player can attain will have value 1 iff the supremum probability it can attain for going directly to the exit of the component in @xmath60 is @xmath613 , but this is precisely the supremum probability that maximizer can attain for going to `` 1 '' in @xmath607 .",
    "lastly , note that the fact that the quantitative probability was taken to be @xmath172 for the finite csg is without loss of generality .",
    "given a finite csg @xmath9 and a rational probability @xmath3 , @xmath586 , it is easy to efficiently construct another finite csg @xmath607 such that the termination probability for @xmath9 is @xmath2 iff the termination probability for @xmath607 is @xmath613 .",
    "we have studied recursive concurrent stochastic games ( rcsgs ) , and we have shown that for 1-exit rcsgs with the termination objective we can decide both quantitative and qualitative problems associated with computing their values in pspace , using decision procedures for the existential theory of reals , whereas any substantial improvement ( even to np ) of this complexity , even for their qualitative problem , would resolve a long standing open problem in exact numerical computation , namely the square - root sum problem .",
    "furthermore , we have shown that the quantitative decision problem for finite - state concurrent stochastic games is also at least as hard as the square - root sum problem .",
    "an important open question is whether approximation of the game values , to within a desired additive error @xmath1 , for both finite - state concurrent games and for 1-rcsgs , can be done more efficiently . our lower bounds ( with respect to square - root sum ) do not address the approximation question , and it still remains open whether ( a suitably formulated gap decision problem associated with ) approximating the value of even finite - state csgs , to within a given additive error @xmath1 , is in np .    in @xcite",
    ", we showed that model checking linear - time ( @xmath614-regular or ltl ) properties for 1-rmdps ( and thus also for 1-rssgs ) is undecidable , and that even the qualitative or approximate versions of such linear - time model checking questions remains undecidable .",
    "specifically , for any @xmath1 , given as input a 1-rmdp and an ltl property , @xmath615 , it is undecidable to determine whether the optimal probability with which the controller can force ( using its strategy ) the executions of the 1-rmdp to satisfy @xmath615 , is probability @xmath127 , or is at most probability @xmath0 , even when we are guaranteed that the input satisfies one of these two cases . of",
    "course these undecidability results extend to the more general 1-rcsgs .    on the other hand , building on our polynomial time algorithms for the qualitative termination problem for 1-rmdps in @xcite , brzdil et .",
    "@xcite showed decidability ( in p - time ) for the qualitative problem of deciding whether there exists a strategy under which a given target vertex ( which may not be an exit ) of a 1-rmdp is reached in _ any _ calling context ( i.e. , under any call stack ) almost surely ( i.e. , with probability 1 ) .",
    "they then used this decidability result to show that the qualititive model checking problem for 1-rmdps against a qualitative fragment of the branching time probabilistic temporal logic pctl is decidable .    in the setting of 1-rcsgs",
    "( and even 1-rssgs ) , it remains an open problem whether the qualitative problem of reachability of a vertex ( in any calling context ) is decidable .",
    "moreover , it should be noted that even for 1-rmdps , the problem of deciding whether the _ value _ of the reachability game is 1 is not known to be decidable . this is",
    "because although the result of @xcite shows that it is decidable whether there exists a strategy that achieves probability 1 for reaching a desired vertex , there may not exist any optimal strategy for this reachability problem , in other words the value may be 1 but it may only be attained as the supremum value achieved over all strategies .    * acknowledgement * we thank krishnendu chatterjee for helpful discussions clarifying several results about finite csgs obtained by himself and others .",
    "this work was partially supported by nsf grants ccf-04 - 30946 and ccf-0728736 ."
  ],
  "abstract_text": [
    "<S> we study recursive concurrent stochastic games ( rcsgs ) , extending our recent analysis of recursive simple stochastic games to a concurrent setting where the two players choose moves simultaneously and independently at each state . for multi - exit games , </S>",
    "<S> our earlier work already showed undecidability for basic questions like termination , thus we focus on the important case of single - exit rcsgs ( 1-rcsgs ) .    </S>",
    "<S> we first characterize the value of a 1-rcsg termination game as the least fixed point solution of a system of nonlinear minimax functional equations , and use it to show pspace decidability for the quantitative termination problem . </S>",
    "<S> we then give a strategy improvement technique , which we use to show that player 1 ( maximizer ) has @xmath0-optimal randomized stackless & memoryless ( r - sm ) strategies for all @xmath1 , while player 2 ( minimizer ) has optimal r - sm strategies . </S>",
    "<S> thus , such games are r - sm - determined . </S>",
    "<S> these results mirror and generalize in a strong sense the randomized memoryless determinacy results for finite stochastic games , and extend the classic hoffman - karp strategy improvement approach from the finite to an infinite state setting . </S>",
    "<S> the proofs in our infinite - state setting are very different however , relying on subtle analytic properties of certain power series that arise from studying 1-rcsgs .    </S>",
    "<S> we show that our upper bounds , even for qualitative ( probability 1 ) termination , can not be improved , even to np , without a major breakthrough , by giving two reductions : first a p - time reduction from the long - standing square - root sum problem to the quantitative termination decision problem for _ finite _ concurrent stochastic games , and then a p - time reduction from the latter problem to the qualitative termination problem for 1-rcsgs . </S>"
  ]
}
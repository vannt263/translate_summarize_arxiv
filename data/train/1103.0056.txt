{
  "article_text": [
    "spreading mechanisms playing out on generalized random networks constitute a rich and compelling class of tractable contagion models  @xcite .",
    "first , while real world complex networks are rarely , if ever , pure erds - rnyi  networks , they often possess a strong , describable measure of randomness  @xcite , once the dominant aspect of degree distribution is acknowledged  @xcite .",
    "second , simple models of network - based spreading have yielded important insights into spreading phenomena such as the spread of infectious diseases  @xcite , cascading failures in power grids  @xcite , and social contagion processes  @xcite . finally , many random network models are amenable to analytic investigations and researchers have naturally built on areas of statistical mechanics  with its great tradition of exactly solvable models  such as the study of percolation on lattices  @xcite .    here",
    ", we examine contagion processes acting on mixed directed and undirected degree - assortative random networks . specifically , for the case of a single seed , we derive and verify by simulations analytic expressions for three key aspects of these systems : ( 1 ) the _ possibility _ of a global spreading event ; ( 2 ) the _ probability _ of a global spreading event ; and ( 3 ) the _ expected final size _ of a successful global spreading event .",
    "we make the distinction between possibility and probability , the former referring to the potential for spreading ( i.e. , whether or not the system is in a phase where spreading may occur ) , and the latter to the quantified chance that a macroscopic spreading event may arise given the nature of the initial seed ( e.g. , random or targeted ) . to put it another way ,",
    "possibility is a categorical yes / no criterion and probability is a quantitative one ; they ask different kinds of questions , and elicit different kinds of analyses for their determination .",
    "thus , while we could simply derive the probability of global spreading only and thereby immediately know if global spreading was possible or not ( corresponding to non - zero or zero probabilities ) , obtaining the possibility of global spreading alone is important as it directly reveals phase transitions , and further involves a transparent , physically argued calculation  @xcite .",
    "we base our work most strongly on two groups of authors findings : bogu and serrano  @xcite , who provided a general formulation for such networks ; and gleeson and cahalane  @xcite , who derived the final size of global spreading events for general contagion models on a wide array of network structures , including the social - like threshold model on random networks  @xcite .",
    "our work is related to that of meyers _ et al . _",
    "@xcite who examined disease - spreading models on mixed directed and undirected uncorrelated networks ; our analytic methods are essentially disjoint and we treat more general spreading mechanisms ( e.g. , social - like ones ) , while meyers _ et al .",
    "_  explored various real - world applications .",
    "we structure our paper as follows . in sec .  [",
    "sec : ccdnw.modeldescription ] , we define the family of random networks and contagion processes we investigate here ; in sec .",
    "[ sec : ccdnw.contagioncondition ] we provide physically - motivated expressions for the possibility and probability of global spreading events starting from a single seed ; and in sec .",
    "[ sec : ccdnw.finalsize ] , we derive coupled evolution equations that describe the growth of a global spreading event , as well as yield the expected final size . in the appropriate limits , our equations collapse to those for various network subclasses involving",
    "purely directed or undirected links , and correlated or uncorrelated nodes . in sec .",
    "[ sec : ccdnw.toymodel ] , we obtain exact results regarding spreading on a specific family of random networks .",
    "we close with a few remarks in sec .",
    "[ sec : ccdnw.conclusion ] .",
    "we consider random networks containing undirected and directed links along with arbitrary correlations between nodes based on degrees . following bogu and serrano  @xcite",
    ", we allow each node to have @xmath0 undirected edges , @xmath1 incoming directed edges , and @xmath2 outgoing directed edges .",
    "we assume all edges are unweighted .",
    "we represent a node by the generalized degree vector @xmath3^{\\rm t}$ ] , which we will refer to simply as a node s degree , and we write @xmath4 for the degree distribution .    to account for correlations ,",
    "three conditional probabilities are needed : @xmath5 , @xmath6 , and @xmath7 ; these quantities give the chances that an edge starting at a degree @xmath8 node ends at a degree @xmath9 node and is respectively undirected , incoming , or outgoing relative to the destination degree @xmath9 node ( note that this convention for directed edges is opposite that used in  @xcite ) .    for networks to be well defined ( i.e. , realizable ) ,",
    "these probabilities must be constrained by two detailed balance equations . in determining the probability that an edge of a certain type runs between nodes of degree @xmath9 and @xmath8",
    ", we must obtain the same result whether we start at the former or latter node .",
    "we write the probability that a randomly chosen edge is undirected and connects a degree @xmath9 and degree @xmath8 node as @xmath10 . noting that the probability that a random end of a randomly selected undirected edge emanates from a degree @xmath9 node is given by @xmath11",
    ", we first have that @xmath12 for directed edges , we define @xmath13 as the probability that a randomly chosen edge is directed and leads from a degree @xmath8 node to a degree @xmath9 node .",
    "similar to the balance equation for undirected edges , we use the quantities @xmath14 and @xmath15 which give the probabilities that in starting at a random end of a randomly selected edge , we begin at a degree @xmath9 node and then find ourselves travelling ( 1 ) along an outgoing edge or ( 2 ) against the direction of an incoming edge .",
    "we therefore have @xmath16 note that since @xmath17 and @xmath18 , the denominators in eqs .",
    "( [ eq : ccdnw.detailedbalance1 ] ) and  ( [ eq : ccdnw.detailedbalance2 ] ) are equal and may be omitted  @xcite .",
    "further , our alternate definitions of @xmath19 and @xmath20 mean that eq .  ( [ eq : ccdnw.detailedbalance2 ] )",
    "has a form different to that given in  @xcite .    for the class of random networks given above , bogu and serrano",
    "determine a number of structural results regarding percolation , including the sizes of the giant in - component , out - component , and strongly connected component  @xcite .",
    "our goal here is to examine the behavior of generalized spreading processes on such networks , and we describe these next .",
    "we consider synchronous discrete time contagion processes , though our results can at least in part be extended to asynchronous discrete and continuous time processes  @xcite .",
    "we assume that once nodes are infected , they remain so permanently , an aspect that is needed for computing the final size of a global spreading event .",
    "we write the probability of node @xmath21 becoming infected in time step @xmath22 as @xmath23 given that @xmath24 of node @xmath21 s total of @xmath25 undirected and incoming edges emanate from infected nodes at time @xmath26 . here",
    ", @xmath27 is an arbitrary , node - specific ` response function ' mapping to the unit interval .",
    "now , for the general class of contagion models we consider here on infinite random networks , we need to know only the average response function for each node subclass . taking all nodes of degree @xmath9 , having indices in the set @xmath28 , we compute this average response function as @xmath29 the quantity @xmath30 is then the probability that a randomly chosen node of degree @xmath9 is infected at time @xmath22 given that at time @xmath26 , it has @xmath24 infected incoming and undirected edges .",
    "in  @xcite , we derived a global spreading condition for discrete and continuous time contagion processes with the possibility of recovery acting on generalized random networks . defining @xmath31 to represent a pairing of a type @xmath32 node and type @xmath33 edge",
    ", we argued that the number of infected node - edge pairs @xmath34 grows as a function of network distance @xmath35 from a seed as @xmath36 where @xmath37 depends simply on network structure and the spreading process  @xcite .",
    "as a special but still broad case , we showed that for the networks we consider here , the growth rate equation for the number of infected edges emanating from degree @xmath9 nodes a distance @xmath35 from an initiating node obeys the following : @xmath38    =    \\sum_{k ' }    \\textbf{r}_{{\\vec{k}}{\\vec{k } } ' }    \\left [      \\begin{array}{c }        f_{{\\vec{k}}'}^{\\rm ( { \\rm u})}(d ) \\\\",
    "f_{{\\vec{k}}'}^{\\rm ( { \\rm o})}(d )      \\end{array }    \\right ] ,    \\label{eq : ccdnw.r}\\ ] ] where @xmath39      \\bullet      { b}_{1,{\\vec{k}}}.      \\nonumber    \\label{eq : ccdnw.rkkdef}\\end{aligned}\\ ] ] here , the quantities @xmath40 and @xmath41 are the number of ` infected ' undirected and outgoing edges leaving an infected degree @xmath9 node a distance @xmath35 steps from the seed .",
    "we have expressed the form of @xmath42 so as to make clear the three components making up general spreading conditions : ( 1 ) probability of connection [ @xmath43 and @xmath44 ; ( 2 ) resultant newly infected edges [ @xmath45 , @xmath0 and @xmath2 factors ] ; and ( 3 ) the probability of infection ( @xmath46 )  @xcite .",
    "the above agrees with the contagion condition found earlier by bogu and serrano for the emergence of the giant out - component using a generating function approach .",
    "note that these calculations depend on the local pure branching structure of random networks with zero clustering ; for recent advances for the non - zero clustering case , see  @xcite .",
    "the full gain matrix @xmath47 and edge infection counts @xmath48 can be laid out as follows : @xmath49    \\mbox{\\ and\\ }    \\vec{f}(d ) =    \\left [    \\begin{array}{c }      f_{{\\vec{k}}_1}^{\\rm ( { \\rm u})}(d ) \\\\",
    "f_{{\\vec{k}}_1}^{\\rm ( { \\rm o})}(d ) \\\\      f_{{\\vec{k}}_2}^{\\rm ( { \\rm u})}(d )",
    "\\\\      f_{{\\vec{k}}_2}^{\\rm ( { \\rm o})}(d )",
    "\\\\      \\vdots \\\\",
    "\\end{array }    \\right ] .",
    "\\label{eq : ccdn.rmatrix}\\ ] ]    the condition for the possibility of global spreading events is therefore that the maximum eigenvalue of @xmath50 $ ] exceeds 1 : @xmath51      \\right )    \\right\\ }    >    1      \\label{eq : ccdnw.maxeig}\\ ] ] where @xmath52 indicates spectrum .",
    "next , we determine the probability of a global spreading event given the initial seed is of degree @xmath9 and hence the overall probability given a randomly selected seed ; we refer to these quantities as ` triggering ' probabilities .",
    "while in determining the probability of a global spreading event we must also determine the possibility , the direct calculation we have just presented for the latter is needed to demonstrate a physically - motivated clarity .",
    "we define @xmath53 to be the probability that an infected undirected edge leaving a degree @xmath9 node will lead to a giant component of infected nodes .",
    "similarly , we define @xmath54 to be the probability that an infected outgoing edge from a degree @xmath9 node will generate a global spreading event . using the markov nature of random networks ,",
    "we can write down recursive , closed - form relationships for these two probabilities : @xmath55    { b}_{1,{\\vec{k } } ' } , \\nonumber\\end{aligned}\\ ] ] and @xmath56    { b}_{1,{\\vec{k}}'}.     \\nonumber\\end{aligned}\\ ] ] in these equations , we have encoded the understanding that if an infected edge generates a global spreading event , then it must infect its target node which in turn must be successful in infecting its other neighbors . in  eq .",
    "( [ eq : ccdnw.qo ] ) , for example , @xmath57 is the probability that the undirected edge leads from an infected degree @xmath9 node to a degree @xmath8 node which it infects with probability @xmath58 .",
    "the quantity @xmath59 is the probability that none of the infected node s other undirected or outgoing edges successfully spread the infection , and hence @xmath60 $ ] is the probability that at least one does .",
    "both @xmath53 and @xmath54 can be determined from eqs .",
    "( [ eq : ccdnw.qu ] ) and  ( [ eq : ccdnw.qo ] ) either numerically or exactly ( as per our example later in sec  [ sec : ccdnw.toymodel ] ) .",
    "having done so , we can then compute the probability that infecting a single degree @xmath9 node triggers a global spreading event : @xmath61,\\ ] ] which is the complement of @xmath62 , the probability of failure to trigger . the probability that infecting a randomly chosen node triggers a global spreading event",
    "is then simply @xmath63 , or @xmath64.\\ ] ] in similar fashion , the triggering probability for non - random , strategic selections of the initial seed can readily be obtained .",
    "appropriate limits of  eq .",
    "( [ eq : ccdnw.ptrigrandom ] ) also recover triggering probabilities for simpler families of random networks such as undirected , uncorrelated networks with prescribed degree distributions .",
    "finally , considering the limit of @xmath65 retrieves the condition for global spreading found above .",
    "we complete our main analysis by determining the final size of a global spreading event building on the work of gleeson and cahalane  @xcite and later gleeson  @xcite .",
    "we shift our focus from spreading away from a seed ( expansion ) to spreading reaching a node ( contraction ) .",
    "we consider an arbitrary fixed node in the network and compute the probability that incoming edges ( directed or undirected ) are infected and sufficient in number that the node itself becomes infected at a certain time .",
    "to do so , we need to first determine the probabilities that undirected and incoming edges arriving at a degree @xmath9 node are infected at time @xmath26 , @xmath66 and @xmath67 . as with the possibility and probability of spreading ,",
    "edge - edge transitions are the best framing for this calculation .",
    "edges will be infected at time @xmath22 if the node from which they emanate becomes infected in that time step , and this in turn depends on the infection levels of the incoming edges . assuming a fraction @xmath68 of initially infected seeds in the network , we obtain the following expression for the fraction of infected directed and incoming edges in the network at time @xmath22 : @xmath69^{{j_{{\\rm u } } } }    \\left [      1-\\theta_{{\\vec{k}}',t}^{({\\rm u } ) }    \\right]^{({k_{{\\rm u}}}'-1-{j_{{\\rm u } } } ) }     \\left [      \\theta_{{\\vec{k}}',t}^{({\\rm i } ) }    \\right]^{{j_{{\\rm i } } } }    \\left [      1-\\theta_{{\\vec{k}}',t}^{({\\rm i } ) }    \\right]^{({k_{{\\rm i}}}'-{j_{{\\rm i } } } ) }     \\\\    \\times    { b}_{{j_{{\\rm u}}}+{j_{{\\rm i}}},{k_{{\\rm u}}}'+{k_{{\\rm i } } } ' } ,    \\label{eq : ccdnw.edgeevu}\\end{gathered}\\ ] ] and @xmath70^{{j_{{\\rm u } } } }    \\left [      1-\\theta_{{\\vec{k}}',t}^{({\\rm u } ) }    \\right]^{({k_{{\\rm u}}}'-{j_{{\\rm u } } } ) }     \\left [      \\theta_{{\\vec{k}}',t}^{({\\rm i } ) }    \\right]^{{j_{{\\rm i } } } }    \\left [      1-\\theta_{{\\vec{k}}',t}^{({\\rm i } ) }    \\right]^{({k_{{\\rm i}}}'-{j_{{\\rm i } } } ) }     \\\\    \\times    { b}_{{j_{{\\rm u}}}+{j_{{\\rm i}}},{k_{{\\rm u}}}'+{k_{{\\rm i}}}'}.    \\label{eq : ccdnw.edgeevi}\\end{gathered}\\ ] ] since we are now considering contraction rather than expansion , more than one edge may contribute to the infection of a node , hence the sum over nearly the full range of infection probabilities , the @xmath71 .    the overall fraction of infected nodes at time @xmath26 , equivalently the probability that a randomly chosen node becomes infected at time @xmath26 , depends on @xmath72 and @xmath73 as @xmath74^{{j_{{\\rm u } } } }    \\left [      1-\\theta_{{\\vec{k}},t}^{({\\rm u } ) }    \\right]^{({k_{{\\rm u}}}-{j_{{\\rm u } } } ) }     \\left [      \\theta_{{\\vec{k}},t}^{({\\rm i } ) }    \\right]^{{j_{{\\rm i } } } }    \\left [      1-\\theta_{{\\vec{k}},t}^{({\\rm i } ) }    \\right]^{({k_{{\\rm i}}}-{j_{{\\rm i } } } ) }     \\\\    \\times    { b}_{{j_{{\\rm u}}}+{j_{{\\rm i}}},{k_{{\\rm u}}}+{k_{{\\rm i}}}}.    \\label{eq : ccdnw.phifinalsize}\\end{gathered}\\ ] ] to determine the final size , we set @xmath75 and @xmath76 in eqs .",
    "( [ eq : ccdnw.edgeevu ] ) and ( [ eq : ccdnw.edgeevi ] ) and solve for the steady - state solutions @xmath77 and @xmath78 . substituting these values into  eq .  ( [ eq : ccdnw.phifinalsize ] ) gives us the expected final size @xmath79 which is , among other things , a function of @xmath80 , the fraction of nodes initially infected .",
    "for the single seed case we consider in this present work , the final step therefore is to take the limit @xmath81 .",
    "note that as for the triggering probability , the condition for global spreading , eq .",
    "( [ eq : ccdnw.maxeig ] ) , can be recovered by linearizing eqs .",
    "( [ eq : ccdnw.edgeevu ] ) , ( [ eq : ccdnw.edgeevi ] ) , and  ( [ eq : ccdnw.phifinalsize ] ) ( see ref .",
    "to test our analytic expressions for the possibility , probability , and expected final size of a global spreading event , we consider a family of general random networks for which our equations are exactly solvable . as shown schematically in the margins of fig .",
    "[ fig : ccdnw.schematic ] , we allow four types of nodes with the following degree vectors , which , again , have the form @xmath82^{\\rm t}$ ] : @xmath83 ,    { \\vec{k}}_{2 } =     \\left [      \\begin{array}{c }        0 \\\\        0 \\\\        1 \\\\      \\end{array }    \\right ] ,    { \\vec{k}}_{3 } =     \\left [      \\begin{array}{c }        0 \\\\        1 \\\\        0 \\\\      \\end{array }    \\right ] ,    \\ \\mbox{and } \\    { \\vec{k}}_{4 } =     \\left [      \\begin{array}{c }        1 \\\\        0 \\\\        0 \\\\      \\end{array }    \\right],\\ ] ] and which occur with abundances @xmath84 we define the degree - degree conditional probabilities as dependent on two tunable parameters , @xmath85 and @xmath86 : @xmath87    =     \\begin{bmatrix }      { \\tau_{{\\rm und } } } & 0 & 0 & ( 1-{\\tau_{{\\rm und } } } ) \\\\      0 & 0 & 0 & 0 \\\\      0 & 0 & 0 & 0 \\\\      ( 1-{\\tau_{{\\rm und } } } ) & 0 & 0 & { \\tau_{{\\rm und}}}\\end{bmatrix},\\ ] ] and @xmath88    =    \\left [      p^{({\\rm o})}({{\\vec{k}}\\ , |\\ , { \\vec{k } } ' } )    \\right]^{\\rm t }    =    \\nonumber \\\\",
    "\\begin{bmatrix }      { \\tau_{{\\rm dir } } } & ( 1-{\\tau_{{\\rm dir } } } ) & 0 & 0 \\\\      0 & 0 & 0 & 0   \\\\",
    "( 1-{\\tau_{{\\rm dir } } } ) & { \\tau_{{\\rm dir } } } & 0 & 0 \\\\      0 & 0 & 0 & 0   \\\\    \\end{bmatrix}.\\end{gathered}\\ ] ] where @xmath89 , and @xmath9 and @xmath8 correspond to rows and columns .",
    "we have chosen @xmath86 and @xmath85 so that increasing them will tend to increase global connectivity , with @xmath85 controlling correlations between nodes through undirected edges , and @xmath86 through directed ones .",
    "there are four clear limiting cases , as shown in the corners of fig .",
    "[ fig : ccdnw.schematic ] . for example",
    ", when @xmath90 ( upper right corner of fig .",
    "[ fig : ccdnw.schematic ] ) , type 1 nodes are connected only to other type 1 nodes creating a giant component , while the other three types combine to form isolated pairs with either directed or undirected connections . at the other extreme when @xmath91 , ( lower left corner of fig .  [ fig : ccdnw.schematic ] ) , each of the four edges from type 1 nodes connect only to type 2 , 3 , and 4 nodes , meaning the network is composed of discrete , five - node components .",
    "the six other example networks in fig .",
    "[ fig : ccdnw.schematic ] give a sense of the other possible configurations contained within this simple network family we have constructed .",
    "we obtain results for general response functions , while for comparison with simulations , we consider a test contagion process with the following single - parameter threshold transmission probabilities : @xmath92 where @xmath93 .",
    "the choice @xmath94 means no nodes spontaneously become infected ( as might model the action of an exogenous source of infection ) . in the case",
    "that @xmath95 , then this set of responses means that if a node finds at least one neighbor at the end of an undirected or incoming edge that is infected , then the node itself becomes infected in the next time step . for @xmath96 , a random fraction @xmath97 of degree",
    "@xmath98 nodes become infected in the time step following the infection of a single neighbor whereas @xmath99 remain uninfected . as discussed in sec .",
    "[ subsec : ccdnw.contagionprocesses ] , individual response functions need only give this average response function ; for example , a fraction @xmath97 of degree @xmath98 nodes might have a deterministic threshold of 1 with the remaining fraction of @xmath99 having a deterministic threshold of 2 .",
    "returning to fig .",
    "[ fig : ccdnw.schematic ] , the gray - scale plot shows the fractional size of successful global spreading events as a function of @xmath85 and @xmath86 for the specific spreading mechanism described above with @xmath100 .",
    "we see a clear phase transition indicated by the dashed curve and our next task is to find its analytic form .      using the spreading conditions contained in eqs .",
    "( [ eq : ccdnw.r ] ) , ( [ eq : ccdnw.rkkdef ] ) , and ( [ eq : ccdnw.maxeig ] ) , and the model s definition , we find that global spreading may occur when the maximum eigenvalue of the following gain matrix exceeds unity :    @xmath101    =    \\left [      \\begin{array}{cccccccc }        { \\tau_{{\\rm und}}}{b}_{1,{\\vec{k}}_1 }         &         2{\\tau_{{\\rm dir}}}{b}_{1,{\\vec{k}}_1 }         &         0         &         2(1-{\\tau_{{\\rm dir } } } ) { b}_{1,{\\vec{k}}_2 }         &        0         &         0         &         ( 1-{\\tau_{{\\rm und } } } ) { b}_{1,{\\vec{k}}_4 }         &         0         \\\\",
    "{ \\tau_{{\\rm und}}}{b}_{1,{\\vec{k}}_1 }        &         { \\tau_{{\\rm dir}}}{b}_{1,{\\vec{k}}_1 }        &         0         &         ( 1-{\\tau_{{\\rm dir } } } ) { b}_{1,{\\vec{k}}_2 }         &         0         &         0         &         ( 1-{\\tau_{{\\rm und } } } ) { b}_{1,{\\vec{k}}_4 }        &         0         \\\\                    0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\        \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots \\\\         0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\      \\end{array }    \\right].\\ ] ]    clearly ,",
    "only the top left hand corner of this gain matrix matters as global spreading , if possible , must occur on a giant component .",
    "upon substitution of the model s response functions given in  eq .",
    "( [ eq : ccdn.toyresponse ] ) , we find the largest eigenvalue is @xmath102 and we find that global spreading events therefore occur in the region described by @xmath103 for the case @xmath100 , this equation is indeed represented by the dashed curve shown in fig .",
    "[ fig : ccdnw.schematic ] , perfectly matching the phase transition demonstrated by our simulations .",
    "we can also now readily determine that spreading may occur for some values of @xmath85 and @xmath86 providing @xmath104 .      in computing the probability that a degree @xmath9 node initiates a global spreading event ,",
    "we observe that because only type 1 nodes can transmit an infection , we need only solve the recursion equations given in  ( [ eq : ccdnw.qu ] ) and  ( [ eq : ccdnw.qo ] ) for @xmath105 and @xmath106 . nodes of type 2 and 4 , possessing one outgoing and one undirected edge respectively , may trigger global spreading but obviously can not be involved in transmission , and nodes of type 3 can neither start nor help spread an outbreak .",
    "( [ eq : ccdnw.qu ] ) and  ( [ eq : ccdnw.qo ] ) reduce to the nonlinear coupled equations : @xmath107    { \\beta } ,    \\label{eq : ccdnw.qutoy}\\ ] ] and @xmath108    { \\beta}.    \\label{eq : ccdnw.qotoy}\\ ] ] the equations are solvable and we find @xmath109 with @xmath110 for @xmath111 , @xmath112 . in turn",
    ", @xmath113 and @xmath114 can be expressed in terms of @xmath115 and @xmath116 : @xmath117    { \\beta } ,    \\label{eq : ccdnw.toyqo2}\\ ] ] and @xmath118    { \\beta}.    \\label{eq : ccdnw.toyqu4}\\ ] ]    a first check on these triggering probability expressions is that they are in agreement with the phase transition recorded in eq .",
    "( [ eq : ccdnw.mulambdacurve ] ) ; in other words , @xmath115 and @xmath116 should vanish along the phase transition .",
    "we see that upon setting the right hand side of  eq .",
    "( [ eq : ccdnw.qutoysoln ] ) to zero , rearrangement indeed leads to the condition @xmath119 .",
    "we compute the triggering probability given a randomly chosen seed using  eq .",
    "( [ eq : ccdnw.ptrigrandom ] ) : @xmath120    \\nonumber \\\\    & &     +    \\frac{1}{5 }     { q}^{\\rm ( o)}_{{\\vec{k}}_2 }    +    \\frac{2}{5 }    { q}^{\\rm ( u)}_{{\\vec{k}}_4}.    \\label{eq : ccdnw.toyptrigk}\\end{aligned}\\ ] ] we compare our theoretical computation of @xmath121 with simulations in fig .  [ fig : ccdnw.muslicequ ] for one transect in @xmath122 parameter space ( @xmath123 , @xmath85 varying ) , and some example values of @xmath97 .    note that for @xmath95 , all nodes are vulnerable providing they can be reached along an edge , and the contagion model s behavior exhibits an inherent symmetry in the network s giant in - component and out - component , implying that @xmath124 . for the infection probability @xmath121 , the initial node must be part of the giant in - component which is made up of type 1 , 2 , and 4 nodes .",
    "the final infected component will match the giant out - component which is turn made up of type 1 , 3 , and 4 nodes .",
    "the giant strongly connected component is found in the intersection : type 1 and 4 nodes .    , the probability that infecting a randomly chosen node leads to a global spreading event , @xmath121 , as a function of undirected edge assortativity @xmath85 , a fixed value of directed edge assortativity , @xmath123 , and varying values of @xmath125 .",
    "the curves correspond to output from simulations [ squares ] and theory [ solid line , eq .",
    "( [ eq : ccdnw.toyptrigk ] ) ] . for the simulation results",
    ", we recorded a successful global spreading event if the final size exceeded 2.5% of the network .",
    "this cut off is arbitrary but nearby values do not appreciably change the resulting picture because above the phase transition the final size is bimodal : either spreading takes off and reaches a characteristic fraction of the network , or it fails .",
    "the network size is @xmath126 and the resolution in @xmath85 is 0.01 . see caption of fig .",
    "[ fig : ccdnw.schematic ] for further details . ]       with @xmath95 .",
    "symbols indicate sample output from simulations with @xmath126 and solid curves follow from eqs.([eq : ccdnw.phifinalsize ] ) , ( [ eq : ccdnw.y - sol1 ] ) , ( [ eq : ccdnw.x ] ) , ( [ eq : ccdnw.u ] ) , and ( [ eq : ccdnw.v ] ) . for each value of @xmath85 and @xmath86 in the plots",
    "a and b , we show a maximum of 10 values of @xmath79 randomly chosen from @xmath127 individual simulations for which the final size exceeds @xmath128 ( or 0.05% ) .",
    "the overall fit between theory and simulation is excellent .",
    "see the captions of fig .  [",
    "fig : ccdnw.schematic ] and fig .",
    "[ fig : ccdnw.muslicequ ] for further simulation details .",
    ", scaledwidth=49.0% ]    we use the evolution equations given in sec .",
    "[ sec : ccdnw.finalsize ] to describe the growth of the spreading process on our example networks , with the main goal of determining the final size .",
    "we start with the equations for edge infection probabilities , @xmath129 and @xmath130 , eqs .",
    "( [ eq : ccdnw.edgeevu ] ) and  ( [ eq : ccdnw.edgeevi ] ) , and we present their full model - specific forms in the appendix . we let @xmath131 in these equations and solve for fixed points , @xmath132 and @xmath133 .",
    "only two of the eight possible equations are coupled , those for @xmath134 and @xmath135 ( eqs .",
    "[ eq : ccdnw.theta1u ] and  [ eq : ccdnw.theta1i ] ) , and thus they alone determine the final probabilities .",
    "as per our previous calculations , this collapse in equation number is because @xmath98 nodes are the only type capable of receiving and transmitting an infection . with these observations , and in setting @xmath95 for simplicity , we obtain the coupled equations @xmath136,\\ ] ] and @xmath137      \\left [        1-{\\theta_{{\\vec{k}}_{1},\\infty}^{({\\rm i})}}\\right ]      + { \\theta_{{\\vec{k}}_{1},\\infty}^{({\\rm i})}}\\right).\\ ] ] solving both equations for @xmath138 and equating the results leads to a cubic polynomial in @xmath139 .",
    "one root is @xmath140 and the others are solutions to @xmath141 we look for solutions for which @xmath142 .",
    "if @xmath143 , we find the only feasible solution is @xmath144 .",
    "when @xmath145 we find @xmath146 again but now also a non - trivial solution : @xmath147 .",
    "\\label{eq : ccdnw.y - sol1}\\ ] ] as expected , the probability of an infected edge @xmath139 becomes nonzero as we move away from the phase transition curve in @xmath148-space , in agreement with our global spreading condition analysis , eq .",
    "( [ eq : ccdnw.mulambdacurve ] ) . using our expression for @xmath139 ,",
    "we obtain expressions for the other non - zero edge infected probabilities : @xmath149 @xmath150 , \\nonumber \\end{aligned}\\ ] ] and @xmath151 our last step is to use the above edge infection probabilities to compute the eventual fractional extent of a global spreading event @xmath79 using  eq .",
    "( [ eq : ccdnw.phifinalsize ] ) ( with @xmath81 ) . in fig .",
    "[ fig : ccdnw.muslice ] , we compare output of our simulations with the model s version of  eq .",
    "( [ eq : ccdnw.phifinalsize ] ) , once again showing excellent agreement .",
    "we have provided an extensive treatment of spreading on generalized random networks , accommodating a wide range of contagion processes from biological to social in nature .",
    "our analysis is straightforward in that physical intuition is always at hand , and in no place have we resorted to more mathematical , less transparent approaches , such as those employing generating functions .    in closing",
    ", we note that if nodes are capable of recovery and reinfection , general calculations become considerably more difficult , particularly regarding the final extent of a spreading event , and this remains an open area of investigation .",
    "jlp was supported by nih grant # k25-ca134286 ; kdh was supported by vt - nasa epscor ; psd was supported by nsf career award # 0846668 .",
    "the authors are grateful for the computational resources provided by the vermont advanced computing center which is supported by nasa ( nnx 08a096 g ) .",
    "for the model described in sec .",
    "[ sec : ccdnw.toymodel ] , we provide the specific forms below for eqs .",
    "( [ eq : ccdnw.edgeevu ] ) and  ( [ eq : ccdnw.edgeevi ] ) as used for the calculations in sec .",
    "[ subsec : ccdnw.toymodel - finalsize ] regarding the final size of spreading events ."
  ],
  "abstract_text": [
    "<S> we derive analytic expressions for the possibility , probability , and expected size of global spreading events starting from a single infected seed for a broad collection of contagion processes acting on random networks with both directed and undirected edges and arbitrary degree - degree correlations . </S>",
    "<S> our work extends previous theoretical developments for the undirected case , and we provide numerical support for our findings by investigating an example class of networks for which we are able to obtain closed - form expressions . </S>"
  ]
}
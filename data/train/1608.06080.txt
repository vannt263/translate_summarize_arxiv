{
  "article_text": [
    "with the advance of quantum computing , efficient algorithms against number theory based cryptosystems @xcite have become a threat that can not be neglected .",
    "there is a need to develop post - quantum cryptosystems , that is cryptosystems which remain secure against an adversary equipped with a quantum computer .    among all possible techniques for post - quantum cryptosystems we found code - based cryptography and in particular the mceliece public - key encryption scheme @xcite .",
    "the original mceliece scheme uses ( randomly permuted ) binary goppa codes and so far has resisted all cryptanalytic attempts even from quantum adversaries .",
    "the security is twofold and relies on two assumptions , the hardness of generic decoding , the _ message security _ , and the pseudorandomness of goppa codes , the _ key security_. generic decoding is np - complete @xcite and is also believed to be hard on average . though the pseudorandomness of goppa codes has not been studied as thoroughly as generic decoding , no efficient algorithm is known to distinguish a random matrix from a generator matrix of a goppa code , except when the code rate is close to one @xcite , a case which is not a threat against the mceliece encryption scheme .",
    "one of the drawback of code - based public - key schemes is that they require large public keys ( a generator matrix of the code ) .",
    "gaborit proposed to use quasi - cyclic codes @xcite to solve that problem .",
    "as demonstrated in @xcite , the use of quasi - cyclic codes does not significantly change the security reduction .",
    "however , the key security , which essentially requires that the public key ( a generator matrix ) does not leak information on the algebraic structure , is more problematic , and quasi - cyclic codes with algebraic structure may sometimes have vulnerabilities @xcite .    in 2013 ,",
    "the use of quasi - cyclic mdpc ( moderate density parity check ) codes was suggested to instantiate the mceliece scheme in @xcite .",
    "this version of mceliece enjoys relatively small key sizes ( a few thousand bits ) and its security provably reduces to the hardness of deciding whether a given quasi - cyclic code contains a word of small weight or not .",
    "moreover , the decryption essentially consists in decoding and can be achieved with the same iterative algorithms as for ldpc codes . in particular , a low cost implementation , suitable for embedded systems , can be achieved using a hard decision bit flipping iterative algorithm , as demonstrated in @xcite .    _ our contributions .",
    "_ in this paper we will further examine the decoding of mdpc codes .",
    "the bit flipping decoding algorithm involves a threshold which can be chosen in many different ways and which may change along the iterations of a given decoding instance .",
    "a series of paper @xcite are focused on how to choose the threshold in order to reduce the average number of iterations to successfully decode a given number of errors . however ,",
    "if an adversary is able to measure , through a _ side - channel _ , the number of iterations of the decoder , he might be able to deduce some information on the secret key ( the sparse parity check matrix ) .",
    "that is to say , for instance , by submitting properly chosen noisy codewords to the decoder and observing the decoder behavior for each of them .",
    "such an attack can be countered by designing a constant time decoder . in the present case",
    "this means adding fake iterations until we reach a prescribed number of iterations .",
    "this number will be chosen such that stopping the decoding process at this point ensures a negligible probability of failure .",
    "in other words , we wish to optimize the decoder behavior in the worst case rather than in the average case in order to minimize the decoding cost .",
    "the main observation of this paper is that minimizing the average cost leads to significantly different algorithms than minimizing the worst case . using a heuristic approach we have determined a variant of the bit flipping algorithm which favors the worst case for a particular set of parameters .",
    "combined with intensive simulation , it allows us to provide some guidelines for the engineering of qc - mdpc - mceliece decryption aiming to resist to above mentioned timing attacks .",
    "it also allows us to understand how to choose the parameters of both the system and the decoding algorithm such that the probability of decoding failure remains negligible .",
    "@xmath0 denotes the field with two elements , @xmath1 denotes the hamming weight .      the moderate density parity check ( mdpc ) code construction is very similar to the ldpc code s one .",
    "they both are binary linear codes defined by a sparse parity check matrix @xmath2 and only differ on the sparseness of this matrix . for mdpc codes ,",
    "the parity check matrix row weight @xmath3 is much larger than for ldpc codes , typically @xmath4 .",
    "we denote @xmath5-mdpc , a mdpc code of length @xmath6 , codimension @xmath7 whose sparse parity check matrix has a row weight @xmath3 .",
    "a square matrix is said _ circulant _ if its rows are the successive cyclic shifts of its first one .",
    "a linear code is _ quasi - cyclic _ ( qc ) if its generator or parity check matrix is composed of circulant blocks .",
    "though the parameters are flexible , all instances of qc - mdpc - mceliece proposed in @xcite use codes of rate @xmath8 . for the sake of simplicity , we will do the same in the rest of this paper and consider qc - mdpc codes with two ( circulant ) blocks , @xmath9 \\in { \\ensuremath{\\mathbb{f}_2^{r\\times n}}}$ ] .",
    "let @xmath10 denotes the number of errors which can be corrected by a bit flipping iterative decoder of an @xmath11-mdpc code with @xmath12 .",
    "typically , we expect that @xmath13 and thus as @xmath4 , we obtain @xmath14 .",
    "the mceliece cryptosystem instantiated with ( qc-)mdpc codes works as follow .    1 .   _ key generation . _",
    "generate a ( two ) block circulant parity check matrix @xmath15\\in { \\ensuremath{\\mathbb{f}_2^{r\\times n}}}$ ] with rows of weight @xmath3 and such that @xmath16 is invertible .",
    "compute its associated generator matrix @xmath17 \\in { \\ensuremath{\\mathbb{f}_2^{(n - r)\\times n}}}$ ] in systematic form .",
    "the _ public key _ is @xmath18 and the _ private key _ is @xmath2 .",
    "_ let @xmath19 be the plaintext .",
    "generate a random vector @xmath20 such that @xmath21 .",
    "the _ ciphertext _ is @xmath22 .",
    "_ decryption .",
    "_ decode the ciphertext @xmath23 to get a codeword @xmath24 .",
    "the _ plaintext _ is obtained by truncating the first @xmath25 bits of that codeword .",
    "note that using ldpc codes for the mceliece scheme is deemed to be unsafe @xcite .",
    "however increasing the parity check matrix density appears to have a positive effect in that respect .",
    "one of the strong feature of qc - mdpc - mceliece is its security reduction .",
    "following @xcite , the system remains secure as long as :    a.   decoding @xmath10 errors in a qc @xmath26 $ ] binary linear code is hard .",
    "b.   deciding whether the code spanned by some block circulant @xmath27 matrix ( orthogonal to the public key ) has minimum distance @xmath28 is hard .    both of these problems are np - hard in the non cyclic case @xcite .",
    "their exact status is unknown in the circulant case , however there is a consensus to say that cyclicity alone will not make the problem easy .",
    "note that the situation is very similar to lattice - based cryptography : nobody believes that the cyclic or `` ring '' versions of the generic lattice problems are easy , even though there is no completeness results .      in practice , the best known attacks",
    "are all based on information set decoding and its variants @xcite , either for decoding @xmath10 errors in the code spanned by the public key or for finding words of weight @xmath3 in its dual .",
    "details can be found in @xcite , but typical sizes are :    * @xmath29 for @xmath30 bits of security * @xmath31 for @xmath32 bits of security    using a @xmath11-qc - mdpc code correcting @xmath10 errors ( @xmath33 bits of security means that all known attacks cost @xmath34 elementary operations ) .",
    "it is proposed in @xcite to use a hard decision decoder derived from the bit flipping algorithm introduced by gallager @xcite ( originally used as a ldpc decoder ) to decode qc - mdpc when used to instantiate the mceliece cryptosystem .",
    "in fact , any ldpc decoding algorithms from @xcite can be used as mdpc decoder as long as the error correction capability matches with the chosen parameters . note that the solution proposed in @xcite has a slightly lower capability compared to the original algorithm from @xcite .",
    "however , the error rates used in practice to instantiate the mceliece cryptosystem are lower than those required in information theory . for instance , to obtain @xmath30-bits of security , the parameters from @xcite ensures an error rate around @xmath35 .",
    "this algorithm seems well dedicated when implementing the cryptosystem in a constraint environment because it uses simple and fast operations .",
    "actually , it already exists several embedded implementations of the cryptosystem . in @xcite , von maurich and",
    "gneysu achieved a very lightweight implementation of the mceliece scheme using qc - mdpc codes and a very high speed implementation of several decoding algorithms for qc - mdpc codes are proposed in @xcite .",
    "the bit flipping algorithm is sketched in figure  [ fig : bitflip ] .",
    "when @xmath2 is sparse enough and @xmath36 is close enough to the code of parity check matrix @xmath2 , the algorithm returns the closest codeword to @xmath36 .",
    "the algorithm performance depends on the choice of @xmath37 s value .    in gallager s",
    "original bit flipping algorithm , one threshold value per iteration is precomputed .",
    "the formulas used to compute these thresholds guarantee some probability of decoding failure . this solution can be used to decode qc - mdpc codes but there is no certainty regarding the probability of a decoding failure .",
    "another solution proposed in @xcite is to flip only bits that violate the maximum number of parity check equations , up to a few units .    in @xcite several other tunings were proposed in order to speed up the average running time of the algorithm . instead of using the same syndrome @xmath38 for all positions while an iteration , they proposed to update the syndrome after each bit flip .",
    "this algorithm is iterative and probabilistic , so we have to consider two problems . first , the fact that the number of iterations of the algorithm depends on both the error pattern and the parity check matrix , may leak some information about the secret key and thus may lead to a successful timing attack . for the moment ,",
    "such attack is unknown , but to avoid it we suggest to set the number of iterations of the algorithm regardless of the instance .",
    "this number has to be large enough to ensure a negligible decoding failure probability .",
    "these decoding failures are the second problem to investigate .",
    "somehow , a non zero probability of decoding failure may also reveal information about the secret key .",
    "obviously , considering a decoding failure as a decoding instance which require more iteration or an infinite number of iteration , goes back to the first problem .",
    "that is to say , protecting the cryptosystem against timing attack .    in practice ,",
    "the average number of iterations to decode most of the errors is very low , typically around 3 for a @xmath39-mdpc code correcting 84 errors .",
    "however , a few error patterns require much more iterations to be fully corrected",
    ". we will refer to these patterns as _ worst cases _ for the decoding algorithm . by abuse of language",
    ", we will refer to the _ maximum number of iterations _ instead of the number of iterations observed in these worst cases .",
    "thus , our goal is to tune the algorithm to minimize the maximum number of iteration rather than the average number of iterations and to find the better trade - off between overall running time and security .",
    "we wish to find the best rules to tune the decoder , that is to say the best rules for computing the threshold .",
    "moreover , we want to keep a low cost decoding procedure . therefore the threshold computation may only involve data which is easily obtained in the regular execution of the bit flipping algorithm : the counter ( number of unsatisfied parity check equations ) for each position , the syndrome ( and also its weight ) , the number of flipped bits at each iteration ,     in the next section ,",
    "we describe our approach to optimize the threshold choice .",
    "as explained in the previous section , we want to minimize the maximum number of iterations of the decoding algorithm in order to set this value for each decoding instance . in section [ sec : decode ] , we have highlighted that this algorithm relies on the counter values for each position of the error vector , to decide whether the position is considered as correct or wrong .",
    "therefore , the threshold used to make a decision is of main importance . obviously , it has a direct impact on the number of iterations needed : if the threshold is too high , just a few errors will be corrected at each iterations , and if the threshold is too low , the risk is to flip more correct bits ( but whose neighbors are false ) than wrong bits . in order to minimize the maximal number of iterations",
    ", we propose to benefit from information available while decoding in order to avoid extra operations .",
    "as shown above , only few values are computed during any of the iteration : the syndrome ( and its weight ) , the number of unsatisfied parity check equations for each position and the number of flipped bits .",
    "the syndrome weight appears to be a more relevant information about how well the decoding is processed , because it only depends on the error vector and the parity check matrix .",
    "furthermore , one can note that the sum of the number of unsatisfied parity check equations is proportional to the syndrome weight .",
    "thus , our idea was to take advantage of this information to adjust the threshold value for each iteration and each instance , and decrease the maximum number of iteration required .",
    "our approach was to investigate a large amount of decoding traces ( for each iteration , we stored the value of : the error weight , the syndrome weight , the number of flipped bit ,  ) and to analyze instances requiring the highest number of iterations .",
    "then , we tried to decrease this number for these worst cases by adapting the value of thresholds .",
    "our task was to obtain a global optimization , which was in fact much more challenging than trying to minimize the error weight one iteration at a time .",
    "it appears that the best solution was not necessarily the obvious one : it can happen that decreasing the number of corrected bits in the first iterations , also decrease the error weight at the last iteration .",
    "furthermore , it reveals that the behavior of the worst cases can not be well predicted using the weight of the syndrome , the number of unsatisfied parity check equation for each position or the number of flipped bits .",
    "still , these information helped us to analyze the decoding process .",
    "the result of these investigations is that computing the thresholds as a function of the syndrome weight , regardless to the current iteration , seems to be the better solution to achieve the lowest maximum number of iterations .",
    "the figure  [ fig : thrs ] shows the step function used to compute the threshold according to the syndrome weight that appears to be the best choice in order to decrease the maximum number of iterations .",
    "-qc - mdpc codes in order to correct up to @xmath40 errors . ]    as mentioned in @xcite , the minimal average number of iteration is achieved by updating the syndrome after each bit flip and by using precomputed thresholds .",
    "however , it is also noticed that the higher performance decoding algorithm can diverge for some particular instances .",
    "that is to say , some error patterns can not be decoded at all , and a second decoding attempt has to be done , using different threshold values .",
    "this does not affect much the average running time of decoding but does not permit the design of a ( reasonable ) constant time decoder .",
    "we compare in table  [ tab : comp ] the behavior of our worst case decoder and the most efficient ( on average ) algorithm from @xcite .",
    ".proportion of errors patterns which are decoded in a fixed number of iterations .",
    "we are comparing the result of our work and the new algorithm from @xcite which used precomputed thresholds and abort iteration when the syndrome becomes zero .",
    "we used @xmath41-qc - mdpc codes and errors of weight @xmath40 .",
    "the simulations were made over @xmath42 codes with @xmath43 error patterns per code for our work and @xmath44 codes with @xmath43 error patterns per code for the algorithm from @xcite [ cols=\"^,<,<\",options=\"header \" , ]     note that , we do not find cases of divergence using our decoding technique .",
    "these results suggest that the adjustment of the threshold improves the worst case decoding but decreases the efficiency of the algorithm for average cases . however , our goal was to minimize the maximum number of iterations , which is @xmath45 for these parameters and not to speed up the average running time of the decoder .",
    "although we did not find instances which are not decoded after the @xmath46 iterations , we can not guarantee the decoding failure probability to be zero .",
    "hence , it is probably safer to fix the number of iterations to @xmath47 or @xmath48 on practice",
    ". an other viable solution could be to slightly increase the length and the dimension of the code , keeping the same code rate and the same values for @xmath3 and @xmath10 .",
    "this would improve the overall efficiency of the decoder .",
    "obtaining a constant time decoder for qc - mdpc is a safeguard against timing attacks on the qc - mdpc - mceliece scheme .",
    "we show here that the best constant - time decoder requires a specific tuning of the bit flipping algorithm which relies on the syndrome weight .",
    "a limitation of our approach is that a significant effort is needed to find the optimal threshold rule for every set of code parameters .",
    "we think however our work gives a serious hint on how to find the thresholds for others code parameters .",
    "finding theoretical bounds or estimates of the decoding failure probability seems to be a challenging task , but for cryptographic purpose , it could be of interest to reduce that probability to a very small amount , say @xmath49 , with some kind of guarantee .",
    "we hope that our preliminary work could open the way to such an achievement .",
    "faugre , v.  gauthier , a.  otmani , l.  perret , and j .-",
    "tillich , `` a distinguisher for high rate mceliece cryptosystems , '' in _ proc .",
    "ieee inf . theory workshop-",
    "itw  2011 _ , paraty , brasil , oct .",
    "2011 , pp . 282286 .",
    "n.  sendrier , `` on the use of structured codes in code based cryptography , '' in _ coding theory and cryptography iii _ ,",
    "l.  s. s.  nikova , b.  preneel , ed.1em plus 0.5em minus 0.4emthe royal flemish academy of belgium for science and the arts , 2010 , pp . 5968 .",
    "faugre , a.  otmani , l.  perret , and j .-",
    "tillich , `` algebraic cryptanalysis of mceliece variants with compact keys , '' in _ advances in cryptology - eurocrypt  2010 _ , ser .",
    "lecture notes in comput .",
    "6110 , 2010 , pp",
    ". 279298 .",
    "r.  misoczki , j .-",
    "tillich , n.  sendrier , and p.  s. l.  m. barreto , `` mdpc - mceliece : new mceliece variants from moderate density parity - check codes , '' in _ proc .",
    "symposium inf .",
    "theory - isit _ , 2013 , pp .",
    "20692073 .",
    "s.  heyse , i.  von maurich , and t.  gneysu , `` smaller keys for code - based cryptography : qc - mdpc mceliece implementations on embedded devices , '' in _ cryptographic hardware and embedded systems - ches 2013 _ , ser .",
    "lecture notes in comput .",
    ", g.  bertoni and j.  coron , eds . ,",
    "8086.1em plus 0.5em minus 0.4emspringer , 2013 , pp",
    ". 273292 .",
    "i.  von maurich and t.  gneysu , `` lightweight code - based cryptography : qc - mdpc mceliece encryption on reconfigurable devices , '' in _ design , automation & test in europe conference & exhibition , date 2014 , dresden , germany , march 24 - 28 , 2014 _ , 2014 , pp . 16 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.7873/date.2014.051    i.  v. maurich , t.  oder , and t.  gneysu , `` implementing qc - mdpc mceliece encryption , '' _ acm trans .",
    "_ , vol .",
    "14 , no .  3 , pp .",
    "44:144:27 , apr . 2015 .",
    "[ online ] .",
    "available : http://doi.acm.org/10.1145/2700102        e.  prange , `` the use of information sets in decoding cyclic codes , '' _ ire transactions on information theory _",
    ", vol .  8 , no .  5 , pp . 59 , 1962 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1109/tit.1962.1057777    j.  stern , `` a method for finding codewords of small weight , '' in _ coding theory and applications _",
    "lecture notes in comput .",
    ", g.  d. cohen and j.  wolfmann , eds . ,",
    "388.1em plus 0.5em minus 0.4emspringer , 1988 , pp",
    ". 106113 .",
    "a.  may , a.  meurer , and e.  thomae , `` decoding random linear codes in @xmath50 , '' in _ advances in cryptology - asiacrypt  2011 _ , ser .",
    "lncs , d.  h. lee and x.  wang , eds .",
    "7073.1em plus 0.5em minus 0.4emspringer , 2011 , pp .",
    "107124 .",
    "a.  becker , a.  joux , a.  may , and a.  meurer , `` decoding random binary linear codes in @xmath51 : how @xmath52 improves information set decoding , '' in _ advances in cryptology - eurocrypt  2012 _ , ser .",
    "lecture notes in comput .",
    "sci.1em plus 0.5em minus 0.4emspringer , 2012 .",
    "may and i.  ozerov , `` on computing nearest neighbors with applications to decoding of binary linear codes , '' in _ advances in cryptology - eurocrypt  2015 _ , ser . lncs , e.  oswald and m.  fischlin , eds . , vol .",
    "1em plus 0.5em minus 0.4emspringer , 2015 , pp .",
    "203228 .",
    "r.  misoczki , j .- p .",
    "tillich , n.  sendrier , and p.  s. l.  m. barreto , `` mdpc - mceliece : new mceliece variants from moderate density parity - check codes , '' _ iacr cryptology eprint archive , report2012/409 _ , vol .",
    "2012 , 2012 ."
  ],
  "abstract_text": [
    "<S> qc - mdpc - mceliece is a recent variant of the mceliece encryption scheme which enjoys relatively small key sizes as well as a security reduction to hard problems of coding theory . </S>",
    "<S> furthermore , it remains secure against a quantum adversary and is very well suited to low cost implementations on embedded devices .    </S>",
    "<S> decoding mdpc codes is achieved with the ( iterative ) bit flipping algorithm , as for ldpc codes . </S>",
    "<S> variable time decoders might leak some information on the code structure ( that is on the sparse parity check equations ) and must be avoided . </S>",
    "<S> a constant time decoder is easy to emulate , but its running time depends on the worst case rather than on the average case . </S>",
    "<S> so far implementations were focused on minimizing the average cost . </S>",
    "<S> we show that the tuning of the algorithm is not the same to reduce the maximal number of iterations as for reducing the average cost . </S>",
    "<S> this provides some indications on how to engineer the qc - mdpc - mceliece scheme to resist a timing side - channel attack . </S>"
  ]
}